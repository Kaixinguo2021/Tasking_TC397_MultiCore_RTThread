	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\.IfxPsi5s_Psi5s.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include\\libc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.src ..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c'

	
$TC162
	.sdecl	'.zrodata.IfxPsi5s_Psi5s..3.cnt',data,rom
	.sect	'.zrodata.IfxPsi5s_Psi5s..3.cnt'
	.align	2
.3.cnt:	.type	object
	.size	.3.cnt,4
	.word	1562500
	.sdecl	'.zrodata.IfxPsi5s_Psi5s..4.cnt',data,rom
	.sect	'.zrodata.IfxPsi5s_Psi5s..4.cnt'
	.align	2
.4.cnt:	.type	object
	.size	.4.cnt,4
	.word	1065345024
	
	.sdecl	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_deInitModule',code,cluster('IfxPsi5s_Psi5s_deInitModule')
	.sect	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_deInitModule'
	.align	2
	
	.global	IfxPsi5s_Psi5s_deInitModule

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	     1  /**
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	     2   * \file IfxPsi5s_Psi5s.c
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	     3   * \brief PSI5S PSI5S details
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	     4   *
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	     6   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	     7   *
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	     8   *
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	     9   *
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    11   *
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    13   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    15   * of use are agreed, use of this file is subject to following:
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    16   *
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    18   *
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    19   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    20   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    21   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    22   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    23   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    24   * do so, all subject to the following:
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    25   *
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    26   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    27   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    28   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    29   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    30   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    31   * language processor.
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    32   *
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    39   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    40   *
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    41   *
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    42   */
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    43  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    44  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    45  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    46  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    47  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    48  #include "IfxPsi5s_Psi5s.h"
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    49  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    50  /** \addtogroup IfxLld_Psi5s_Psi5s_Utility
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    51   * \{ */
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    52  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    53  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    54  /*-----------------------Private Function Prototypes--------------------------*/
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    55  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    56  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    57  /** \brief get the fracDiv clock frequency
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    58   * \param psi5s Pointer to the base of PSI5S register space
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    59   * \return Returns the configured fracDiv psi5s clock frequency in Hz.
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    60   */
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    61  IFX_STATIC uint32 IfxPsi5s_Psi5s_getFracDivClock(Ifx_PSI5S *psi5s);
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    62  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    63  /** \brief Configure the fracDiv clock.
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    64   * \param psi5s Pointer to the base of PSI5S register space
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    65   * \param clock Specifies the required clock frequency in Hz.
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    66   * \return Returns the configured clock frequency in Hz.
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    67   */
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    68  IFX_STATIC uint32 IfxPsi5s_Psi5s_initializeClock(Ifx_PSI5S *psi5s, const IfxPsi5s_Psi5s_Clock *clock);
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    69  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    70  /** \brief Configure the baudrate at the ASC interface.
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    71   * \param psi5s Pointer to the base of PSI5S register space
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    72   * \param baudrate Frequency Specifies the required baudrate frequency in Hz.
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    73   * \param ascConfig pointer to the configuration structure for ASC
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    74   * \return Returns the configured baudrate frequency in Hz.
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    75   */
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    76  IFX_STATIC uint32 IfxPsi5s_Psi5s_setBaudrate(Ifx_PSI5S *psi5s, uint32 baudrate, IfxPsi5s_Psi5s_AscConfig *ascConfig);
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    77  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    78  /** \} */
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    79  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    80  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    81  /*-------------------------Function Implementations---------------------------*/
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    82  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    83  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    84  void IfxPsi5s_Psi5s_deInitModule(IfxPsi5s_Psi5s *psi5s)
; Function IfxPsi5s_Psi5s_deInitModule
.L63:
IfxPsi5s_Psi5s_deInitModule:	.type	func

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    85  {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    86      Ifx_PSI5S *psi5sSFR = psi5s->psi5s;
	ld.a	a4,[a4]
.L383:
	j	IfxPsi5s_Psi5s_resetModule
.L184:
	
__IfxPsi5s_Psi5s_deInitModule_function_end:
	.size	IfxPsi5s_Psi5s_deInitModule,__IfxPsi5s_Psi5s_deInitModule_function_end-IfxPsi5s_Psi5s_deInitModule
.L103:
	; End of function
	
	.sdecl	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_enableModule',code,cluster('IfxPsi5s_Psi5s_enableModule')
	.sect	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_enableModule'
	.align	2
	
	.global	IfxPsi5s_Psi5s_enableModule

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    87      IfxPsi5s_Psi5s_resetModule(psi5sSFR);
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    88  }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    89  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    90  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    91  void IfxPsi5s_Psi5s_enableModule(Ifx_PSI5S *psi5s)
; Function IfxPsi5s_Psi5s_enableModule
.L65:
IfxPsi5s_Psi5s_enableModule:	.type	func

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    92  {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    93      psi5s->CLC.U = 0x00000000;
	mov	d15,#0
	st.w	[a4],d15
.L692:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    94  }
	ret
.L341:
	
__IfxPsi5s_Psi5s_enableModule_function_end:
	.size	IfxPsi5s_Psi5s_enableModule,__IfxPsi5s_Psi5s_enableModule_function_end-IfxPsi5s_Psi5s_enableModule
.L138:
	; End of function
	
	.sdecl	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_getBaudrate',code,cluster('IfxPsi5s_Psi5s_getBaudrate')
	.sect	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_getBaudrate'
	.align	2
	
	.global	IfxPsi5s_Psi5s_getBaudrate

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    95  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    96  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    97  void IfxPsi5s_Psi5s_getBaudrate(Ifx_PSI5S *psi5s, IfxPsi5s_Psi5s_AscConfig *ascConfig)
; Function IfxPsi5s_Psi5s_getBaudrate
.L67:
IfxPsi5s_Psi5s_getBaudrate:	.type	func

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    98  {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	    99      boolean synchMode = (ascConfig->receiveMode == IfxPsi5s_AscMode_sync) || (ascConfig->transmitMode == IfxPsi5s_AscMode_sync);
	ld.bu	d15,[a5]11
.L697:
	mov	d4,#0
.L698:
	jeq	d15,#0,.L2
.L699:
	ld.bu	d15,[a5]13
.L700:
	jne	d15,#0,.L3
.L2:
	mov	d4,#1
.L3:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   100      boolean divMode   = (ascConfig->fractionalDividerEnabled == FALSE);
	ld.bu	d15,[a5]3
.L701:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   101      IfxPsi5s_getBaudrate(psi5s, synchMode, divMode, ascConfig->baudrateSelection);
	ld.bu	d6,[a5]12
.L702:
	eq	d5,d15,#0
.L703:
	j	IfxPsi5s_getBaudrate
.L343:
	
__IfxPsi5s_Psi5s_getBaudrate_function_end:
	.size	IfxPsi5s_Psi5s_getBaudrate,__IfxPsi5s_Psi5s_getBaudrate_function_end-IfxPsi5s_Psi5s_getBaudrate
.L143:
	; End of function
	
	.sdecl	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_getFracDivClock',code,cluster('IfxPsi5s_Psi5s_getFracDivClock')
	.sect	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_getFracDivClock'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   102  }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   103  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   104  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   105  IFX_STATIC uint32 IfxPsi5s_Psi5s_getFracDivClock(Ifx_PSI5S *psi5s)
; Function IfxPsi5s_Psi5s_getFracDivClock
.L69:
IfxPsi5s_Psi5s_getFracDivClock:	.type	func
	mov.aa	a15,a4
.L385:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   106  {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   107      uint32 result;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   108      uint32 fPsi5s = IfxScuCcu_getSpbFrequency();
	call	IfxScuCcu_getSpbFrequency
.L384:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   109  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   110      switch (psi5s->FDR.B.DM)
	ld.bu	d15,[a15]13
.L719:
	ftouz	d2,d2
.L386:
	extr.u	d15,d15,#6,#2
.L720:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   111      {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   112      case IfxPsi5s_DividerMode_spb:
	jeq	d15,#0,.L8
.L721:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   113          result = fPsi5s;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   114          break;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   115      case IfxPsi5s_DividerMode_normal:
	jeq	d15,#1,.L5
.L722:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   116          result = fPsi5s / (IFXPSI5S_STEP_RANGE - psi5s->FDR.B.STEP);
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   117          break;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   118      case IfxPsi5s_DividerMode_fractional:
	jeq	d15,#2,.L6
.L723:
	j	.L7
.L5:
	ld.hu	d0,[a15]12
.L724:
	mov	d15,#1024
.L725:
	extr.u	d0,d0,#0,#10
.L726:
	sub	d15,d0
.L727:
	div.u	e2,d2,d15

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   119          result = (fPsi5s * IFXPSI5S_STEP_RANGE) / psi5s->FDR.B.STEP;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   120          break;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   121      case IfxPsi5s_DividerMode_off:
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   122          result = 0;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   123          break;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   124      default:
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   125          result = 0;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   126      }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   127  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   128      return result;
.L8:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   129  }
	ret
.L6:
	ld.hu	d0,[a15]12
.L728:
	sh	d15,d2,#10
.L729:
	extr.u	d0,d0,#0,#10
.L730:
	div.u	e2,d15,d0
	ret
.L7:
	mov	d2,#0
	ret
.L350:
	
__IfxPsi5s_Psi5s_getFracDivClock_function_end:
	.size	IfxPsi5s_Psi5s_getFracDivClock,__IfxPsi5s_Psi5s_getFracDivClock_function_end-IfxPsi5s_Psi5s_getFracDivClock
.L153:
	; End of function
	
	.sdecl	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_initChannel',code,cluster('IfxPsi5s_Psi5s_initChannel')
	.sect	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_initChannel'
	.align	2
	
	.global	IfxPsi5s_Psi5s_initChannel

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   130  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   131  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   132  boolean IfxPsi5s_Psi5s_initChannel(IfxPsi5s_Psi5s_Channel *channel, const IfxPsi5s_Psi5s_ChannelConfig *config)
; Function IfxPsi5s_Psi5s_initChannel
.L71:
IfxPsi5s_Psi5s_initChannel:	.type	func
	mov.aa	a12,a4
.L388:
	mov.aa	a15,a5
.L390:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   133  {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   134      boolean       status = TRUE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   135  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   136      uint16        passwd = IfxScuWdt_getCpuWatchdogPassword();
	call	IfxScuWdt_getCpuWatchdogPassword
.L387:
	mov	d8,d2
.L391:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   137      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L310:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   138  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   139      Ifx_PSI5S    *psi5s = config->module->psi5s;
	ld.a	a2,[a15]
.L599:
	ld.a	a4,[a2]
.L392:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   140      channel->module    = (IfxPsi5s_Psi5s *)config->module;
	st.a	[a12],a2
.L600:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   141      channel->channelId = config->channelId;
	ld.bu	d15,[a15]8
.L601:
	st.b	[a12]4,d15
.L313:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   142  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   143      Ifx_PSI5S_PGC tempPGC;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   144      tempPGC.U        = psi5s->PGC[config->channelId].U;
	fcall	.cocofun_6
.L602:
	ld.w	d0,[a2]240
.L393:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   145      tempPGC.B.TXCMD  = config->pulseGeneration.codeforZero;
	ld.w	d15,[a15]12
.L603:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   146      tempPGC.B.ATXCMD = config->pulseGeneration.codeforOne;
	insert	d0,d0,d15,#0,#5
	ld.w	d15,[a15]16
.L604:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   147      tempPGC.B.TBS    = config->pulseGeneration.timeBaseSelect;
	insert	d0,d0,d15,#8,#5
	ld.bu	d15,[a15]20
.L605:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   148      tempPGC.B.ETB    = config->pulseGeneration.externalTimeBaseSelect;
	insert	d0,d0,d15,#15,#1
	ld.bu	d15,[a15]21
.L606:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   149      tempPGC.B.ETS    = config->pulseGeneration.externalTriggerSelect;
	insert	d0,d0,d15,#16,#3
	ld.bu	d15,[a15]23
.L607:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   150  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   151      switch (config->pulseGeneration.periodicOrExternal)
	insert	d0,d0,d15,#20,#3
	ld.bu	d15,[a15]22
.L608:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   152      {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   153      case IfxPsi5s_TriggerType_periodic:
	jeq	d15,#0,.L12
.L609:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   154          tempPGC.B.PTE = TRUE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   155          tempPGC.B.ETE = FALSE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   156          break;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   157  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   158      case IfxPsi5s_TriggerType_external:
	jeq	d15,#1,.L13
.L610:
	j	.L14
.L12:
	extr.u	d15,d0,#16,#8
.L611:
	or	d15,#8
.L612:
	insert	d15,d15,#0,#7,#1
	j	.L15
.L13:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   159          tempPGC.B.PTE = FALSE;
	extr.u	d15,d0,#16,#8
.L613:
	insert	d15,d15,#0,#3,#1
.L614:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   160          tempPGC.B.ETE = TRUE;
	or	d15,#128

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   161          break;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   162      }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   163  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   164      psi5s->PGC[config->channelId].U = tempPGC.U;
.L15:
	insert	d0,d0,d15,#16,#8
.L14:
	fcall	.cocofun_6
.L615:
	st.w	[a2]240,d0
.L316:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   165  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   166      Ifx_PSI5S_CTV tempCTV;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   167      tempCTV.U                       = psi5s->CTV[config->channelId].U;
	fcall	.cocofun_6
.L616:
	ld.w	d0,[a2]272
.L394:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   168      tempCTV.B.CTV                   = config->channelTrigger.channelTriggerValue;
	ld.w	d15,[a15]24
.L617:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   169      tempCTV.B.CTC                   = config->channelTrigger.channelTriggerCounter;
	insert	d0,d0,d15,#0,#16
	ld.w	d15,[a15]28
	extr.u	d15,d15,#0,#16
.L618:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   170      psi5s->CTV[config->channelId].U = tempCTV.U;
	insert	d0,d0,d15,#16,#16
	st.w	[a2]272,d0
.L389:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   171  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   172      psi5s->WDT[config->channelId].U = config->watchdogTimerLimit;
	fcall	.cocofun_6
.L395:
	ld.w	d15,[a15]4
.L619:
	st.w	[a2]112,d15
.L319:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   173  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   174      Ifx_PSI5S_RCRA tempRCRA;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   175      tempRCRA.U                       = psi5s->RCRA[config->channelId].U;
	fcall	.cocofun_6
.L620:
	ld.w	d15,[a2]48
.L397:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   176      tempRCRA.B.CRC0                  = config->receiveControl.crcOrParity[0];
	ld.bu	d0,[a15]58
.L396:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   177      tempRCRA.B.CRC1                  = config->receiveControl.crcOrParity[1];
	insert	d15,d15,d0,#0,#1
	ld.bu	d0,[a15]59
.L621:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   178      tempRCRA.B.CRC2                  = config->receiveControl.crcOrParity[2];
	insert	d15,d15,d0,#1,#1
	ld.bu	d0,[a15]60
.L622:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   179      tempRCRA.B.CRC3                  = config->receiveControl.crcOrParity[3];
	insert	d15,d15,d0,#2,#1
	ld.bu	d0,[a15]61
.L623:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   180      tempRCRA.B.CRC4                  = config->receiveControl.crcOrParity[4];
	insert	d15,d15,d0,#3,#1
	ld.bu	d0,[a15]62
.L624:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   181      tempRCRA.B.CRC5                  = config->receiveControl.crcOrParity[5];
	insert	d15,d15,d0,#4,#1
	ld.bu	d0,[a15]63
.L625:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   182      tempRCRA.B.TSEN                  = config->receiveControl.timestampEnabled;
	insert	d15,d15,d0,#5,#1
	ld.bu	d0,[a15]32
.L626:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   183      tempRCRA.B.TSP                   = config->receiveControl.timestampSelect;
	insert	d15,d15,d0,#6,#1
	ld.bu	d0,[a15]64
.L627:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   184      tempRCRA.B.TSTS                  = config->receiveControl.timestampTriggerSelect;
	insert	d15,d15,d0,#7,#1
	ld.bu	d0,[a15]65
.L628:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   185      tempRCRA.B.FIDS                  = config->receiveControl.frameIdSelect;
	insert	d15,d15,d0,#8,#1
	ld.bu	d0,[a15]66
.L629:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   186      tempRCRA.B.WDMS                  = config->receiveControl.watchdogTimerModeSelect;
	insert	d15,d15,d0,#9,#1
	ld.bu	d0,[a15]67
.L630:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   187      tempRCRA.B.UFC0                  = config->receiveControl.uartFrameCount[0];
	insert	d15,d15,d0,#10,#1
	ld.bu	d0,[a15]68
.L631:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   188      tempRCRA.B.UFC1                  = config->receiveControl.uartFrameCount[1];
	insert	d15,d15,d0,#16,#2
	ld.bu	d0,[a15]69
.L632:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   189      tempRCRA.B.UFC2                  = config->receiveControl.uartFrameCount[2];
	insert	d15,d15,d0,#18,#2
	ld.bu	d0,[a15]70
.L633:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   190      tempRCRA.B.UFC3                  = config->receiveControl.uartFrameCount[3];
	insert	d15,d15,d0,#20,#2
	ld.bu	d0,[a15]71
.L634:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   191      tempRCRA.B.UFC4                  = config->receiveControl.uartFrameCount[4];
	insert	d15,d15,d0,#22,#2
	ld.bu	d0,[a15]72
.L635:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   192      tempRCRA.B.UFC5                  = config->receiveControl.uartFrameCount[5];
	insert	d15,d15,d0,#24,#2
	ld.bu	d0,[a15]73
.L636:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   193      psi5s->RCRA[config->channelId].U = tempRCRA.U;
	insert	d15,d15,d0,#26,#2
	st.w	[a2]48,d15
.L322:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   194  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   195      Ifx_PSI5S_RCRB tempRCRB;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   196      tempRCRB.U                       = psi5s->RCRB[config->channelId].U;
	fcall	.cocofun_6
.L399:
	ld.w	d15,[a2]80
.L400:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   197      tempRCRB.B.PDL0                  = config->receiveControl.payloadLength[0];
	ld.w	d0,[a15]34
.L637:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   198      tempRCRB.B.PDL1                  = config->receiveControl.payloadLength[1];
	insert	d15,d15,d0,#0,#5
	ld.w	d0,[a15]38
.L638:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   199      tempRCRB.B.PDL2                  = config->receiveControl.payloadLength[2];
	insert	d15,d15,d0,#5,#5
	ld.w	d0,[a15]42
.L639:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   200      tempRCRB.B.PDL3                  = config->receiveControl.payloadLength[3];
	insert	d15,d15,d0,#10,#5
	ld.w	d0,[a15]46
.L640:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   201      tempRCRB.B.PDL4                  = config->receiveControl.payloadLength[4];
	insert	d15,d15,d0,#15,#5
	ld.w	d0,[a15]50
.L641:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   202      tempRCRB.B.PDL5                  = config->receiveControl.payloadLength[5];
	insert	d15,d15,d0,#20,#5
	ld.w	d0,[a15]54
.L642:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   203      psi5s->RCRB[config->channelId].U = tempRCRB.U;
	insert	d15,d15,d0,#25,#5
	st.w	[a2]80,d15
.L643:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   204  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   205      psi5s->NFC.U                     = (config->receiveControl.numberOfFramesExpected << (config->channelId * 3));
	ld.b	d0,[a15]8
.L644:
	ld.bu	d15,[a15]74
.L401:
	mul	d0,d0,#3
.L645:
	sha	d15,d15,d0
	st.w	[a4]32,d15
.L325:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   206  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   207      Ifx_PSI5S_SCR tempSCR;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   208      tempSCR.U                       = psi5s->SCR[config->channelId].U;
	fcall	.cocofun_6
.L402:
	ld.w	d15,[a2]304
.L404:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   209      tempSCR.B.PLL                   = config->sendControl.payloadLength;
	ld.w	d0,[a15]80
.L646:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   210      tempSCR.B.EPS                   = config->sendControl.enhancedProtocolSelection;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   211      tempSCR.B.BSC                   = config->sendControl.bitStuffControl;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   212      tempSCR.B.CRC                   = config->sendControl.crcGenerationControl;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   213      tempSCR.B.STA                   = config->sendControl.startSequenceGenerationControl;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   214      psi5s->SCR[config->channelId].U = tempSCR.U;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   215  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   216      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d8
.L405:
	insert	d15,d15,d0,#0,#5
	ld.bu	d0,[a15]84
.L647:
	insert	d15,d15,d0,#6,#2
	ld.bu	d0,[a15]76
.L648:
	insert	d15,d15,d0,#8,#1
	ld.bu	d0,[a15]77
.L649:
	insert	d15,d15,d0,#22,#1
	ld.bu	d0,[a15]78
.L650:
	insert	d15,d15,d0,#23,#1
	st.w	[a2]304,d15
.L651:
	call	IfxScuWdt_setCpuEndinit
.L403:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   217  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   218      return status;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   219  }
	mov	d2,#1
	ret
.L304:
	
__IfxPsi5s_Psi5s_initChannel_function_end:
	.size	IfxPsi5s_Psi5s_initChannel,__IfxPsi5s_Psi5s_initChannel_function_end-IfxPsi5s_Psi5s_initChannel
.L118:
	; End of function
	
	.sdecl	'.text.IfxPsi5s_Psi5s..cocofun_6',code,cluster('.cocofun_6')
	.sect	'.text.IfxPsi5s_Psi5s..cocofun_6'
	.align	2
; Function .cocofun_6
.L73:
.cocofun_6:	.type	func
; Function body .cocofun_6, coco_iter:0
	ld.b	d15,[a15]8
.L398:
	addsc.a	a2,a4,d15,#2
.L813:
	fret
.L173:
	; End of function
	.sdecl	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_initChannelConfig',code,cluster('IfxPsi5s_Psi5s_initChannelConfig')
	.sect	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_initChannelConfig'
	.align	2
	
	.global	IfxPsi5s_Psi5s_initChannelConfig

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   220  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   221  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   222  void IfxPsi5s_Psi5s_initChannelConfig(IfxPsi5s_Psi5s_ChannelConfig *config, IfxPsi5s_Psi5s *psi5s)
; Function IfxPsi5s_Psi5s_initChannelConfig
.L75:
IfxPsi5s_Psi5s_initChannelConfig:	.type	func
	mov.aa	a15,a4
.L409:
	mov.aa	a6,a5
.L410:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   223  {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   224      IfxPsi5s_Psi5s_ChannelConfig IfxPsi5s_Psi5s_defaultChannelConfig = {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   225          .channelId       = IfxPsi5s_ChannelId_0,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   226          .module          = NULL_PTR,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   227          .pulseGeneration = {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   228              .codeforZero            = 0,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   229              .codeforOne             = 1,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   230              .timeBaseSelect         = IfxPsi5s_TimeBase_internal,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   231              .externalTimeBaseSelect = IfxPsi5s_Trigger_0,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   232              .periodicOrExternal     = IfxPsi5s_TriggerType_periodic,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   233              .externalTriggerSelect  = IfxPsi5s_Trigger_0,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   234          },
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   235          .channelTrigger                     = {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   236              .channelTriggerValue   = 0x20,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   237              .channelTriggerCounter = 0x0
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   238          },
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   239          .watchdogTimerLimit = 0x0,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   240          .receiveControl     = {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   241              .crcOrParity[0]          = IfxPsi5s_CrcOrParity_parity,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   242              .crcOrParity[1]          = IfxPsi5s_CrcOrParity_parity,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   243              .crcOrParity[2]          = IfxPsi5s_CrcOrParity_parity,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   244              .crcOrParity[3]          = IfxPsi5s_CrcOrParity_parity,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   245              .crcOrParity[4]          = IfxPsi5s_CrcOrParity_parity,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   246              .crcOrParity[5]          = IfxPsi5s_CrcOrParity_parity,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   247              .timestampEnabled        = FALSE,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   248              .timestampSelect         = IfxPsi5s_TimestampRegister_a,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   249              .timestampTriggerSelect  = IfxPsi5s_TimestampTrigger_syncPulse,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   250              .frameIdSelect           = IfxPsi5s_FrameId_frameHeader,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   251              .watchdogTimerModeSelect = IfxPsi5s_WatchdogTimerMode_frame,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   252              .uartFrameCount[0]       = IfxPsi5s_UartFrameCount_3,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   253              .uartFrameCount[1]       = IfxPsi5s_UartFrameCount_3,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   254              .uartFrameCount[2]       = IfxPsi5s_UartFrameCount_3,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   255              .uartFrameCount[3]       = IfxPsi5s_UartFrameCount_3,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   256              .uartFrameCount[4]       = IfxPsi5s_UartFrameCount_3,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   257              .uartFrameCount[5]       = IfxPsi5s_UartFrameCount_3,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   258              .payloadLength[0]        = 0,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   259              .payloadLength[1]        = 0,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   260              .payloadLength[2]        = 0,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   261              .payloadLength[3]        = 0,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   262              .payloadLength[4]        = 0,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   263              .payloadLength[5]        = 0,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   264              .numberOfFramesExpected  = IfxPsi5s_NumberExpectedFrames_1,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   265          },
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   266          .sendControl                        = {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   267              .payloadLength                  = 6,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   268              .enhancedProtocolSelection      = IfxPsi5s_EnhancedProtocol_toothGapMethod,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   269              .bitStuffControl                = FALSE,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   270              .crcGenerationControl           = FALSE,
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   271              .startSequenceGenerationControl = FALSE
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   272          }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   273      };
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   274      *config        = IfxPsi5s_Psi5s_defaultChannelConfig;
	mov	d15,#0
	st.w	[a15]4,d15
	st.b	[a15]8,d15
.L656:
	movh.a	a7,#@his(.2.ini)
	lea	a7,[a7]@los(.2.ini)
	lea	a2,[a7]12
.L657:
	lea	a4,[a15]12
.L406:
	mov.a	a5,#2
	fcall	.cocofun_8
.L407:
	ld.da	a2/a3,[a7]24
.L658:
	lea	a4,[a15]32
	mov.a	a5,#10
	st.da	[a15]24,a2/a3
.L659:
	lea	a2,[a7]32
.L660:
	fcall	.cocofun_8
.L661:
	lea	a2,[a7]76
.L662:
	lea	a4,[a15]76
	mov.a	a5,#2
	fcall	.cocofun_8
.L663:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   275      config->module = psi5s;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   276  }
	st.a	[a15],a6
	ret
.L328:
	
__IfxPsi5s_Psi5s_initChannelConfig_function_end:
	.size	IfxPsi5s_Psi5s_initChannelConfig,__IfxPsi5s_Psi5s_initChannelConfig_function_end-IfxPsi5s_Psi5s_initChannelConfig
.L123:
	; End of function
	
	.sdecl	'.text.IfxPsi5s_Psi5s..cocofun_8',code,cluster('.cocofun_8')
	.sect	'.text.IfxPsi5s_Psi5s..cocofun_8'
	.align	2
; Function .cocofun_8
.cocofun_8:	.type	func
; Function body .cocofun_8, coco_iter:0
.L17:
	ld.w	d15,[a2+]
	st.w	[a4+],d15
	loop	a5,.L17
.L408:
	fret
.L183:
	; End of function
	.sdecl	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_initModule',code,cluster('IfxPsi5s_Psi5s_initModule')
	.sect	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_initModule'
	.align	2
	
	.global	IfxPsi5s_Psi5s_initModule

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   277  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   278  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   279  boolean IfxPsi5s_Psi5s_initModule(IfxPsi5s_Psi5s *psi5s, const IfxPsi5s_Psi5s_Config *config)
; Function IfxPsi5s_Psi5s_initModule
.L78:
IfxPsi5s_Psi5s_initModule:	.type	func
	mov.aa	a12,a5
.L412:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   280  {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   281      boolean    status   = TRUE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   282  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   283      Ifx_PSI5S *psi5sSFR = config->module;
	mov	d8,#1
	ld.a	a15,[a12]
.L414:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   284      psi5s->psi5s = psi5sSFR;
	st.a	[a4],a15
.L195:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   285  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   286      uint16     passwd = IfxScuWdt_getCpuWatchdogPassword();
	call	IfxScuWdt_getCpuWatchdogPassword
.L411:
	mov	d9,d2
.L417:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   287      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d9
	call	IfxScuWdt_clearCpuEndinit
.L416:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   288      IfxPsi5s_Psi5s_enableModule(psi5sSFR);
	mov.aa	a4,a15
.L418:
	call	IfxPsi5s_Psi5s_enableModule
.L419:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   289  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   290      if (IfxPsi5s_Psi5s_initializeClock(psi5sSFR, &config->fracDiv) == 0)
	lea	a5,[a12]4
	mov.aa	a4,a15
.L420:
	call	IfxPsi5s_Psi5s_initializeClock
.L421:
	jeq	d2,#0,.L20
.L507:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   291      {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   292          status = FALSE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   293          return status;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   294      }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   295      else
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   296      {}
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   297  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   298      if (IfxPsi5s_Psi5s_initializeClock(psi5sSFR, &config->timestampClock) == 0)
	lea	a5,[a12]10
	mov.aa	a4,a15
.L422:
	call	IfxPsi5s_Psi5s_initializeClock
.L423:
	jeq	d2,#0,.L21
.L198:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   299      {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   300          status = FALSE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   301          return status;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   302      }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   303      else
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   304      {}
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   305  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   306      Ifx_PSI5S_CON tempCON;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   307      tempCON.U       = psi5sSFR->CON.U;
	ld.w	d15,[a15]528
.L424:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   308      tempCON.B.M     = config->ascConfig.receiveMode;
	ld.bu	d0,[a12]31
.L508:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   309      tempCON.B.STP   = config->ascConfig.stopBits;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   310      tempCON.B.PEN   = config->ascConfig.parityCheckEnabled;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   311      tempCON.B.FEN   = config->ascConfig.framingCheckEnabled;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   312      tempCON.B.OEN   = config->ascConfig.overrunCheckEnabled;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   313      tempCON.B.FDE   = config->ascConfig.fractionalDividerEnabled;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   314      tempCON.B.ODD   = config->ascConfig.receiverOddParityEnabled;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   315      tempCON.B.BRS   = config->ascConfig.baudrateSelection;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   316      tempCON.B.MTX   = config->ascConfig.transmitMode;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   317      tempCON.B.ODDTX = config->ascConfig.transmitterOddParityEnabled;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   318      psi5sSFR->CON.U = tempCON.U;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   319      IfxPsi5s_setLoopBackMode(psi5sSFR, config->ascConfig.loopbackEnabled);
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   320  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   321      if (IfxPsi5s_Psi5s_setBaudrate(psi5sSFR, config->ascConfig.baudrateFrequency, (IfxPsi5s_Psi5s_AscConfig *)&(config->ascConfig))
	lea	a5,[a12]20
.L509:
	insert	d15,d15,d0,#0,#3
	ld.bu	d0,[a12]30
.L510:
	mov.aa	a4,a15
.L425:
	insert	d15,d15,d0,#3,#1
	ld.bu	d0,[a12]20
.L511:
	insert	d15,d15,d0,#5,#1
	ld.bu	d0,[a12]21
.L512:
	insert	d15,d15,d0,#6,#1
	ld.bu	d0,[a12]22
.L513:
	insert	d15,d15,d0,#7,#1
	ld.bu	d0,[a12]23
.L514:
	insert	d15,d15,d0,#11,#1
	ld.bu	d0,[a12]24
.L515:
	insert	d15,d15,d0,#12,#1
	ld.bu	d0,[a12]32
.L516:
	insert	d15,d15,d0,#13,#1
	ld.bu	d0,[a12]33
.L517:
	insert	d15,d15,d0,#16,#3
	ld.bu	d0,[a12]25
.L518:
	insert	d15,d15,d0,#28,#1
	st.w	[a15]528,d15
.L519:
	ld.bu	d15,[a12]40
.L202:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     2   * \file IfxPsi5s.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     3   * \brief PSI5S  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     4   * \ingroup IfxLld_Psi5s
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    10   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    11   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    14   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    16   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    19   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    20   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    21   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    22   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    23   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    24   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    25   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    27   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    28   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    29   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    30   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    31   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    32   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    33   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    40   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    43   * \defgroup IfxLld_Psi5s_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    44   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    45   * \defgroup IfxLld_Psi5s_Std_Channel Channel Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    46   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    47   * \defgroup IfxLld_Psi5s_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    48   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    49   * \defgroup IfxLld_Psi5s_Std_Interrupt Interrupt configuration functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    50   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    51   * \defgroup IfxLld_Psi5s_Std_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    52   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    53   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    54  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    55  #ifndef IFXPSI5S_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    56  #define IFXPSI5S_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    57  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    59  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    60  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    61  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    62  #include "_Impl/IfxPsi5s_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    63  #include "_PinMap/IfxPsi5s_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    64  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    65  #include "IfxPsi5s_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    66  #include "IfxPsi5s_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    67  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    68  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    69  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    70  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    71  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    72  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    73  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    74  /** \addtogroup IfxLld_Psi5s_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    75   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    76  /** \brief MODULE_PSI5S.IOCR.ALTI:Alternate input
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    77   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    78  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    79  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    80      IfxPsi5s_AlternateInput_0 = 0,      /**< \brief Alternate Input 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    81      IfxPsi5s_AlternateInput_1,          /**< \brief Alternate Input 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    82      IfxPsi5s_AlternateInput_2,          /**< \brief Alternate Input 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    83      IfxPsi5s_AlternateInput_3           /**< \brief Alternate Input 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    84  } IfxPsi5s_AlternateInput;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    86  /** \brief MODULE_PSI5S.BG.BR_VALUE:Baudrate prescalar select
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    87   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    88  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    89  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    90      IfxPsi5s_AscBaudratePrescalar_divideBy2 = 0,  /**< \brief Divide by 2 is selected for baudrate timer prescalar */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    91      IfxPsi5s_AscBaudratePrescalar_divideBy3 = 1   /**< \brief Divide by 3 is selected for baudrate timer prescalar */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    92  } IfxPsi5s_AscBaudratePrescalar;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    94  /** \brief MODULE_PSI5S.CON.M:ASC mode of operation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    95   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    96  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    97  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    98      IfxPsi5s_AscMode_sync                     = 0,  /**< \brief Synchronous mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    99      IfxPsi5s_AscMode_async_8bitData           = 1,  /**< \brief Asynchronous mode with 8 bit data */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   100      IfxPsi5s_AscMode_async_7bitDataWithParity = 3,  /**< \brief Asynchronous mode with 7 bit data with parity */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   101      IfxPsi5s_AscMode_async_9bitData           = 4,  /**< \brief Asynchronous mode with 9 bit data */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   102      IfxPsi5s_AscMode_async_8bitDataWithWakeup = 5,  /**< \brief Asynchronous mode with 8 bit data with wakeup */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   103      IfxPsi5s_AscMode_async_8bitDataWithParity = 7   /**< \brief Asynchronous mode with 8 bit data with parity */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   104  } IfxPsi5s_AscMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   106  /** \brief MODULE_PSI5S.CON.STP: Number of stop bits
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   110      IfxPsi5s_AscStopBits_1 = 0,      /**< \brief 1 stop bit  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   111      IfxPsi5s_AscStopBits_2           /**< \brief 2 stop bit  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   112  } IfxPsi5s_AscStopBits;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   113  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   114  /** \brief PSI5S Channel Id defined in MODULE_PSI5S.RDS.B.CID.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   115   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   116  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   117  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   118      IfxPsi5s_ChannelId_0 = 0,     /**< \brief Ifx_PSI5S Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   119      IfxPsi5s_ChannelId_1,         /**< \brief Ifx_PSI5S Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   120      IfxPsi5s_ChannelId_2,         /**< \brief Ifx_PSI5S Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   121      IfxPsi5s_ChannelId_3,         /**< \brief Ifx_PSI5S Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   122      IfxPsi5s_ChannelId_4,         /**< \brief Ifx_PSI5S Channel 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   123      IfxPsi5s_ChannelId_5,         /**< \brief Ifx_PSI5S Channel 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   124      IfxPsi5s_ChannelId_6,         /**< \brief Ifx_PSI5S Channel 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   125      IfxPsi5s_ChannelId_7,         /**< \brief Ifx_PSI5S Channel 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   126      IfxPsi5s_ChannelId_none = -1  /**< \brief None of the Ifx_PSI5S Channels */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   127  } IfxPsi5s_ChannelId;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   129  /** \brief Clock Selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   131  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   132  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   133      IfxPsi5s_ClockType_fracDiv    = 0,  /**< \brief Fractional Divide clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   134      IfxPsi5s_ClockType_timeStamp  = 1,  /**< \brief Timestamp clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   135      IfxPsi5s_ClockType_ascFracDiv = 2,  /**< \brief Asc Fractional divider clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   136      IfxPsi5s_ClockType_ascOutput  = 3   /**< \brief Asc output clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   137  } IfxPsi5s_ClockType;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   139  /** \brief MODULE_PSI5S.RCRAx.CRCy(x= 0,1,..7:y=0,1,..,5),MODULE_PSI5S.RCRBx.CRCy(x= 0,1,..7:y=0,1,..,5)CRC or parity
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   140   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   141  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   142  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   143      IfxPsi5s_CrcOrParity_parity = 0,  /**< \brief parity selection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   144      IfxPsi5s_CrcOrParity_crc    = 1   /**< \brief CRC selection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   145  } IfxPsi5s_CrcOrParity;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   147  /** \brief MODULE_PSI5S.FDR.DM;MODULE_PSI5S.FDRT.B.DM:Divider mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   148   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   149  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   150  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   151      IfxPsi5s_DividerMode_spb        = 0,  /**< \brief divider mode is off */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   152      IfxPsi5s_DividerMode_normal     = 1,  /**< \brief divider mode is normal */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   153      IfxPsi5s_DividerMode_fractional = 2,  /**< \brief divider mode is fractional */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   154      IfxPsi5s_DividerMode_off        = 3   /**< \brief divider mode is off */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   155  } IfxPsi5s_DividerMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   156  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   157  /** \brief MODULE_PSI5S.SCRx.EPS(x=0,1,...,7):Enhanced protocol types
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   158   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   159  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   160  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   161      IfxPsi5s_EnhancedProtocol_toothGapMethod              = 0,  /**< \brief toothGapMethod Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   162      IfxPsi5s_EnhancedProtocol_pulseWidth_frameFormat_1to3 = 1,  /**< \brief pulseWidth_frameFormat_1to3 Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   163      IfxPsi5s_EnhancedProtocol_pulseWidth_frameFormat_4    = 3   /**< \brief pulseWidth_frameFormat_4 Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   164  } IfxPsi5s_EnhancedProtocol;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   166  /** \brief MODULE_PSI5S.RCRAx.FIDS(x=0,1,....,7):.Frame ID updation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   167   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   168  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   169  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   170      IfxPsi5s_FrameId_frameHeader   = 0, /**< \brief Frame ID is updated from packet frame header (Sync mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   171      IfxPsi5s_FrameId_rollingNumber = 1  /**< \brief Frame ID is a rolling number 0 .. 5 copied from FCNT */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   172  } IfxPsi5s_FrameId;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   173  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   174  /** \brief MODULE_PSI5S.GCR.IDT:Idle time bit count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   178      IfxPsi5s_IdleTime_1 = 0,      /**< \brief 1 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   179      IfxPsi5s_IdleTime_2,          /**< \brief 2 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   180      IfxPsi5s_IdleTime_3,          /**< \brief 3 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   181      IfxPsi5s_IdleTime_4,          /**< \brief 4 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   182      IfxPsi5s_IdleTime_5,          /**< \brief 5 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   183      IfxPsi5s_IdleTime_6,          /**< \brief 6 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   184      IfxPsi5s_IdleTime_7,          /**< \brief 7 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   185      IfxPsi5s_IdleTime_8,          /**< \brief 8 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   186      IfxPsi5s_IdleTime_9,          /**< \brief 9 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   187      IfxPsi5s_IdleTime_10,         /**< \brief 10 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   188      IfxPsi5s_IdleTime_11,         /**< \brief 11 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   189      IfxPsi5s_IdleTime_12,         /**< \brief 12 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   190      IfxPsi5s_IdleTime_13,         /**< \brief 13 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   191      IfxPsi5s_IdleTime_14,         /**< \brief 14 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   192      IfxPsi5s_IdleTime_15,         /**< \brief 15 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   193      IfxPsi5s_IdleTime_16          /**< \brief 16 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   194  } IfxPsi5s_IdleTime;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   195  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   196  /** \brief Enable/Disable interrupt request .defined in MODULE_PSI5S.INTEN[x]
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   198  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   199  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   200      IfxPsi5s_InterruptRequest_disabled = 0,  /**< \brief no interrupt request can be generated for this source */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   201      IfxPsi5s_InterruptRequest_enabled  = 1   /**< \brief An Interrupt request can be generated for source */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   202  } IfxPsi5s_InterruptRequest;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   203  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   204  /** \brief Enable/Disable the interrupt and  select interrupt source pointer defined in MODULE_PSI5S.INTEN[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   205   * and MODULE_PSI5S.INP[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   206   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   207  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   208  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   209      IfxPsi5s_InterruptSource_rsi  = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   210      IfxPsi5s_InterruptSource_rdi  = 1,  /**< \brief Enable Interrupt Request RDI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   211      IfxPsi5s_InterruptSource_rbi  = 2,  /**< \brief Enable Interrupt Request RBI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   212      IfxPsi5s_InterruptSource_tei  = 3,  /**< \brief Enable Interrupt Request TEI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   213      IfxPsi5s_InterruptSource_chci = 4,  /**< \brief Enable Interrupt Request CHCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   214      IfxPsi5s_InterruptSource_crci = 5,  /**< \brief Enable Interrupt Request CRCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   215      IfxPsi5s_InterruptSource_tpi  = 6,  /**< \brief Enable Interrupt Request TPI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   216      IfxPsi5s_InterruptSource_tpoi = 7,  /**< \brief Enable Interrupt Request TPOI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   217      IfxPsi5s_InterruptSource_hdi  = 8   /**< \brief Enable Interrupt Request HDI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   218  } IfxPsi5s_InterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   219  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   220  /** \brief Enable/Disable Loop back Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   221   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   222  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   223  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   224      IfxPsi5s_LoopBackMode_disable = 0,  /**< \brief loop-back mode disabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   225      IfxPsi5s_LoopBackMode_enable  = 1   /**< \brief loop-back mode enabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   226  } IfxPsi5s_LoopBackMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   228  /** \brief Messaging bits presence
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   229   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   230  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   231  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   232      IfxPsi5s_MessagingBits_absent  = 0, /**< \brief No messaging bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   233      IfxPsi5s_MessagingBits_present = 1  /**< \brief 2 messaging bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   234  } IfxPsi5s_MessagingBits;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   235  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   236  /** \brief MODULE_PSI5S.NFC.NFx:Expected Psi5s frames
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   238  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   239  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   240      IfxPsi5s_NumberExpectedFrames_1 = 1,      /**< \brief 1 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   241      IfxPsi5s_NumberExpectedFrames_2,          /**< \brief 2 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   242      IfxPsi5s_NumberExpectedFrames_3,          /**< \brief 3 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   243      IfxPsi5s_NumberExpectedFrames_4,          /**< \brief 4 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   244      IfxPsi5s_NumberExpectedFrames_5,          /**< \brief 5 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   245      IfxPsi5s_NumberExpectedFrames_6           /**< \brief 6 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   246  } IfxPsi5s_NumberExpectedFrames;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   247  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   248  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   249   * Definition in Ifx_PSI5S.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   250   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   251  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   252  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   253      IfxPsi5s_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   254      IfxPsi5s_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   255  } IfxPsi5s_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   257  /** \brief OCDS Suspend Control (OCDS.SUS)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   258   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   259  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   261      IfxPsi5s_SuspendMode_none = 0,  /**< \brief No suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   262      IfxPsi5s_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   263      IfxPsi5s_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   264  } IfxPsi5s_SuspendMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   265  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   266  /** \brief MODULE_PSI5S.TSCNTA.B.TBS;MODULE_PSI5S.TSCNTB.B.TBS:Time base
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   267   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   268  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   269  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   270      IfxPsi5s_TimeBase_internal = 0,  /**< \brief Internal time stamp clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   271      IfxPsi5s_TimeBase_external = 1   /**< \brief External GTM inputs */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   272  } IfxPsi5s_TimeBase;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   274  /** \brief Start/stop Current time stamp count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   275   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   276  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   277  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   278      IfxPsi5s_TimeStampCount_stopped = 0,  /**< \brief CTS stopped */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   279      IfxPsi5s_TimeStampCount_started = 1   /**< \brief CTS Started */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   280  } IfxPsi5s_TimeStampCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   281  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   282  /** \brief MODULE_PSI5S.TSCNTx(x= A,B):Timestamp register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   283   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   284  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   285  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   286      IfxPsi5s_TimestampRegister_a = 0,  /**< \brief Timestamp register A */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   287      IfxPsi5s_TimestampRegister_b = 1   /**< \brief Timestamp register B */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   288  } IfxPsi5s_TimestampRegister;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   289  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   290  /** \brief MODULE_PSI5S.RCRAx.TSTS:Timestamp trigger
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   291   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   292  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   293  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   294      IfxPsi5s_TimestampTrigger_syncPulse = 0,  /**< \brief Timestamp trigger on sync pulse */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   295      IfxPsi5s_TimestampTrigger_frame     = 1   /**< \brief Timestamp trigger on any frame */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   296  } IfxPsi5s_TimestampTrigger;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   297  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   298  /** \brief MODULE_PSI5S.TSCNTA.B.ETB;MODULE_PSI5S.TSCNTB.B.ETB:Trigger Id
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   300  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   301  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   302      IfxPsi5s_Trigger_0 = 0,      /**< \brief Trigger 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   303      IfxPsi5s_Trigger_1,          /**< \brief Trigger 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   304      IfxPsi5s_Trigger_2,          /**< \brief Trigger 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   305      IfxPsi5s_Trigger_3,          /**< \brief Trigger 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   306      IfxPsi5s_Trigger_4,          /**< \brief Trigger 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   307      IfxPsi5s_Trigger_5,          /**< \brief Trigger 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   308      IfxPsi5s_Trigger_6,          /**< \brief Trigger 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   309      IfxPsi5s_Trigger_7           /**< \brief Trigger 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   310  } IfxPsi5s_Trigger;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   312  /** \brief specifies service request line defined in MODULE_PSI5S.INP[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   313   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   314  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   315  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   316      IfxPsi5s_TriggerOutput_0 = 0,      /**< \brief Triggered output line is TRIGO_0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   317      IfxPsi5s_TriggerOutput_1,          /**< \brief Triggered output line is TRIGO_1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   318      IfxPsi5s_TriggerOutput_2,          /**< \brief Triggered output line is TRIGO_2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   319      IfxPsi5s_TriggerOutput_3,          /**< \brief Triggered output line is TRIGO_3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   320      IfxPsi5s_TriggerOutput_4,          /**< \brief Triggered output line is TRIGO_4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   321      IfxPsi5s_TriggerOutput_5,          /**< \brief Triggered output line is TRIGO_5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   322      IfxPsi5s_TriggerOutput_6,          /**< \brief Triggered output line is TRIGO_6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   323      IfxPsi5s_TriggerOutput_7           /**< \brief Triggered output line is TRIGO_7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   324  } IfxPsi5s_TriggerOutput;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   325  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   326  /** \brief Trigger type defined in
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   327   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   328  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   329  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   330      IfxPsi5s_TriggerType_periodic = 0,  /**< \brief Periodic trigger */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   331      IfxPsi5s_TriggerType_external = 1   /**< \brief External trigger */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   332  } IfxPsi5s_TriggerType;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   333  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   334  /** \brief MODULE_PSI5S.RCRAx.UFCY(x=0,1,...7;y=0,1...5):UART frame count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   336  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   337  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   338      IfxPsi5s_UartFrameCount_3 = 0,      /**< \brief 3 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   339      IfxPsi5s_UartFrameCount_4,          /**< \brief 4 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   340      IfxPsi5s_UartFrameCount_5,          /**< \brief 5 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   341      IfxPsi5s_UartFrameCount_6           /**< \brief 6 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   342  } IfxPsi5s_UartFrameCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   344  /** \brief MODULE_PSI5S.RCRAx.WDMS:Watchdog timer mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   346  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   347  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   348      IfxPsi5s_WatchdogTimerMode_frame     = 0, /**< \brief Watch Dog Timer is restarted on reception of each recoverable frame (async mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   349      IfxPsi5s_WatchdogTimerMode_syncPulse = 1  /**< \brief Watch Dog Timer is restarted on Sync Pulse and stopped at reception of the last frame configured in NFC.NFx.(sync mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   350  } IfxPsi5s_WatchdogTimerMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   352  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   353  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   354  /** \brief List of Global interrupt sources or registers INTxG
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   355   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   356  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   357  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   358      IfxPsi5s_GlobalInterruptSource_tir   = 0,  /**< \brief Enable Interrupt Request TIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   359      IfxPsi5s_GlobalInterruptSource_rir   = 1,  /**< \brief Enable Interrupt Request RIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   360      IfxPsi5s_GlobalInterruptSource_eir   = 2,  /**< \brief Enable Interrupt Request EIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   361      IfxPsi5s_GlobalInterruptSource_tbir  = 3,  /**< \brief Enable Interrupt Request TBIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   362      IfxPsi5s_GlobalInterruptSource_xcrci = 4,  /**< \brief Enable Interrupt Request XCRCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   363      IfxPsi5s_GlobalInterruptSource_foi   = 5   /**< \brief Enable Interrupt Request FOI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   364  } IfxPsi5s_GlobalInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   366  /** \addtogroup IfxLld_Psi5s_Std_Channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   367   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   368  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   369  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   370  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   371  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   372  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   373  /** \brief fill data into tx buffer for direct transmission(in ASC mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   374   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   375   * \param data Pointer to data
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   376   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   377   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   378  IFX_INLINE void IfxPsi5s_fillAscTransmitBuffer(Ifx_PSI5S *psi5s, uint32 *data);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   380  /** \brief received buffer in ASC mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   381   * \param psi5s Pointer to PSI5s register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   382   * \return recieved buffer value in asc mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   383   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   384  IFX_INLINE uint32 IfxPsi5s_getReceiveBuffer(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   385  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   386  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   387  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   388  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   389  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   390  /** \brief Asc receiver is disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   391   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   392   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   394  IFX_EXTERN void IfxPsi5s_disableAscReceiver(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   396  /** \brief Enable ASC receiver
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   397   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   400  IFX_EXTERN void IfxPsi5s_enableAscReceiver(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   402  /** \brief Enable/disable any combination of channel trigger counters selected by mask parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   403   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   404   * \param channels specifies the channel trigger counters which should be enabled/disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   405   * \param mask specifies the channel trigger counters which should be modified
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   406   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   407   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   408  IFX_EXTERN void IfxPsi5s_enableDisableChannelTriggerCounters(Ifx_PSI5S *psi5s, uint32 channels, uint32 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   410  /** \brief Enable/disable any combination of channels selected by mask parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   411   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   412   * \param channels specifies the channels which should be enabled/disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   413   * \param mask specifies the channels which should be modified
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   414   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   416  IFX_EXTERN void IfxPsi5s_enableDisableChannels(Ifx_PSI5S *psi5s, uint32 channels, uint32 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   417  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   418  /** \brief Baudrate frequency in HZ
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   419   * \param psi5s Pointer to PSI5s Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   420   * \param synchMode Pointer to the configuration structure of ASC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   421   * \param divMode specifies fractional/normal divider mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   422   * \param baudrateSelection select sbaudrate prescaler
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   423   * \return baudrate in HZ
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   424   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   425  IFX_EXTERN float32 IfxPsi5s_getBaudrate(Ifx_PSI5S *psi5s, boolean synchMode, boolean divMode, IfxPsi5s_AscBaudratePrescalar baudrateSelection);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   426  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   427  /** \brief Start ASC transactions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   428   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   429   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   430   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   431  IFX_EXTERN void IfxPsi5s_startAscTransactions(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   432  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   433  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   434   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   435   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   436   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   437  IFX_EXTERN void IfxPsi5s_stopAscTransactions(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   438  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   439  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   441  /** \addtogroup IfxLld_Psi5s_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   442   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   444  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   445  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   446  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   448  /** \brief Initializes a CLK output
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   449   * \param clk the CLK Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   450   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   451   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   452   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   454  IFX_INLINE void IfxPsi5s_initClkPin(const IfxPsi5s_Clk_Out *clk, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   456  /** \brief Initializes a RX input
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   457   * \param rx the RX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   458   * \param inputMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   459   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   460   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   462  IFX_INLINE void IfxPsi5s_initRxPin(const IfxPsi5s_Rx_In *rx, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   464  /** \brief Initializes a TX output
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   465   * \param tx the TX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   466   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   467   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   468   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   469   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   470  IFX_INLINE void IfxPsi5s_initTxPin(const IfxPsi5s_Tx_Out *tx, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   471  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   472  /** \brief Selects the alternate input for Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   473   * \param psi5s pointer to PSI5S registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   474   * \param alti alternate input selection of Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   475   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   476   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   477  IFX_INLINE void IfxPsi5s_setRxInput(Ifx_PSI5S *psi5s, IfxPsi5s_AlternateInput alti);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   479  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   481  /** \addtogroup IfxLld_Psi5s_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   482   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   483  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   484  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   485  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   486  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   487  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   488  /** \brief Enable /Disable Global Interrupt Source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   489   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   490   * \param interruptSource specifies Global Interrupt Source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   491   * \param enabled enable /disable Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   494  IFX_INLINE void IfxPsi5s_enableGlobalInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   496  /** \brief enable / disable interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   497   * \param psi5s pointer to psi5s register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   498   * \param channel specifies channel number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   499   * \param interruptSource specifies interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   500   * \param enabled Enable / Disable the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   501   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   502   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   503  IFX_INLINE void IfxPsi5s_enableInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   504  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   505  /** \brief Get  Receive Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   506   * \param psi5s Pointer to PSI5S Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   507   * \return Receive Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   508   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   509  IFX_INLINE boolean IfxPsi5s_getReceiveInterruptStatus(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   510  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   511  /** \brief get Transmit Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   512   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   513   * \return Transmit Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   514   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   515  IFX_INLINE boolean IfxPsi5s_getTransmitInterruptStatus(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   516  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   517  /** \brief Sets the node pointers of PSI5-S ASC and for XCRCI and FOI
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   518   * \param psi5s Pointer to PSI5S Register Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   519   * \param nodePointer specifies node pointer source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   520   * \param triggerOutputLine select trigger Output Line
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   521   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   522   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   523  IFX_INLINE void IfxPsi5s_setGlobalInterruptNodePointer(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource nodePointer, IfxPsi5s_Trigger triggerOutputLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   525  /** \brief set interrupt node pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   526   * \param psi5s specifies the pointer to PSI5S Module register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   527   * \param channel specifies channel number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   528   * \param nodePointer specifies node pointer source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   529   * \param triggerOutputLine select service request line
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   530   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   531   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   532  IFX_INLINE void IfxPsi5s_setInterruptNodePointer(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource nodePointer, IfxPsi5s_Trigger triggerOutputLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   533  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   534  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   536  /** \addtogroup IfxLld_Psi5s_Std_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   537   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   539  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   540  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   541  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   542  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   543  /** \brief clear time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   544   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   545   * \param clearTimeStampCounter clear time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   546   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   548  IFX_INLINE void IfxPsi5s_clearTimeStampCounterA(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   550  /** \brief Clear Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   551   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   552   * \param clearTimeStampCounter clear Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   553   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   554   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   555  IFX_INLINE void IfxPsi5s_clearTimeStampCounterB(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   556  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   557  /** \brief Returns the module's suspend state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   558   * TRUE :if module is suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   559   * FALSE:if module is not yet suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   560   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   561   * \return Suspend status (TRUE / FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   562   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   563  IFX_INLINE boolean IfxPsi5s_isModuleSuspended(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   565  /** \brief enable /disable loop back mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   566   * \param psi5s pointer to PSI5S Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   567   * \param enabled enable/disable loop back mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   568   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   570  IFX_INLINE void IfxPsi5s_setLoopBackMode(Ifx_PSI5S *psi5s, IfxPsi5s_LoopBackMode enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   572  /** \brief enable / disable sleep mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   573   * \param psi5s Pointer to PSI5S register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   574   * \param mode sleep mode (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   575   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   576   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   577  IFX_INLINE void IfxPsi5s_setSleepMode(Ifx_PSI5S *psi5s, IfxPsi5s_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   578  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   579  /** \brief Configure the Module to Hard/Soft suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   580   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   581   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   582   * \param mode Module suspend mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   583   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   584   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   585  IFX_INLINE void IfxPsi5s_setSuspendMode(Ifx_PSI5S *psi5s, IfxPsi5s_SuspendMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   587  /** \brief start time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   588   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   589   * \param startTimeStamp Start/stop current time stamp count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   590   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   591   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   592  IFX_INLINE void IfxPsi5s_setTimeStampCounterA(Ifx_PSI5S *psi5s, IfxPsi5s_TimeStampCount startTimeStamp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   593  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   594  /** \brief Start Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   595   * \param psi5s Pointer to PSI5S Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   596   * \param startTimeStamp start time stamp
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   597   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   598   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   599  IFX_INLINE void IfxPsi5s_setTimeStampCounterB(Ifx_PSI5S *psi5s, IfxPsi5s_TimeStampCount startTimeStamp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   601  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   602  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   603  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   605  /** \brief Disable PSI5S kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   606   * \param psi5s pointer to the base of PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   607   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   608   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   609  IFX_EXTERN void IfxPsi5s_disableModule(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   610  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   611  /** \brief Get the received psi5s frame for the channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   612   * \param psi5s Pointer to PSI5S Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   613   * \param channelId channel ID
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   614   * \return Frame Status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   615   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   616  IFX_EXTERN boolean IfxPsi5s_getReadFrameStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   617  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   618  /** \brief Indicates the successful reception of a frame.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   619   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   620   * \param channelId Channel Number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   621   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   622  IFX_EXTERN boolean IfxPsi5s_getSuccessfullyReceivedFrameStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   623  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   624  /** \brief resets PSI5S kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   625   * \param psi5s pointer to PSI5S registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   626   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   627   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   628  IFX_EXTERN void IfxPsi5s_resetModule(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   629  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   630  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   632  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   633  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   634  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   635  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   636  /** \brief Shows status of any interrupt in any channell in PSI5S.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   637   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   638   * \param channel Channel ID of channel whose interrupt status is required
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   639   * \param interruptSource Interrupt Source to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   640   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   641  IFX_INLINE boolean IfxPsi5s_getInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   643  /** \brief Clears the status of any interrupt of any  PSI5-S channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   644   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   645   * \param channel Channel ID of channel whose interrupt needs to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   646   * \param interruptSource Interrupt Source to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   647   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   648   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   649  IFX_INLINE void IfxPsi5s_clearInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   650  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   651  /** \brief Show the status of any global interrupt, i.e. of the ASC inside PSI5-S and XCRCI indicating a non recoverable message is received.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   652   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   653   * \param interruptSource Interrupt source under consideration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   654   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   655  IFX_INLINE boolean IfxPsi5s_getGlobalInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   657  /** \brief Clears the status of any interrupt of the ASC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   658   * integrated in PSI5-S and for XCRCI and FOI
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   659   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   660   * \param interruptSource Interrupt source under consideration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   661   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   662   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   663  IFX_INLINE void IfxPsi5s_clearGlobalInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   664  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   665  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   666  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   667  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   669  /** \brief Get address of the SRC register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   670   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   671   * \param channel Channel ID of the channel to get the corresponding SRC pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   672   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   673  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxPsi5s_getSrcAddress(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   675  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   676  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   677  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   678  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   679  IFX_INLINE void IfxPsi5s_clearTimeStampCounterA(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   680  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   681      psi5s->TSCNTA.B.CLRA = clearTimeStampCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   682  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   683  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   684  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   685  IFX_INLINE void IfxPsi5s_clearTimeStampCounterB(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   686  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   687      psi5s->TSCNTA.B.CLRB = clearTimeStampCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   688  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   689  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   690  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   691  IFX_INLINE void IfxPsi5s_enableGlobalInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   692  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   693      psi5s->INTENG.U |= (enabled << interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   694  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   695  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   696  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   697  IFX_INLINE void IfxPsi5s_enableInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   698  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   699      psi5s->INTEN[channel].U |= (enabled << interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   700  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   701  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   702  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   703  IFX_INLINE void IfxPsi5s_fillAscTransmitBuffer(Ifx_PSI5S *psi5s, uint32 *data)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   704  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   705      psi5s->TBUF.U = *data;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   706  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   707  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   708  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   709  IFX_INLINE uint32 IfxPsi5s_getReceiveBuffer(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   710  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   711      return psi5s->RBUF.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   712  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   713  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   714  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   715  IFX_INLINE boolean IfxPsi5s_getReceiveInterruptStatus(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   716  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   717      return (boolean)psi5s->INTSTATG.B.RIR;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   718  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   719  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   720  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   721  IFX_INLINE boolean IfxPsi5s_getTransmitInterruptStatus(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   722  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   723      return (boolean)psi5s->INTSTATG.B.TIR;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   724  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   725  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   726  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   727  IFX_INLINE void IfxPsi5s_initClkPin(const IfxPsi5s_Clk_Out *clk, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   728  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   729      if (clk->pin.port != NULL_PTR)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   730      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   731          IfxPort_setPinModeOutput(clk->pin.port, clk->pin.pinIndex, outputMode, clk->select);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   732          IfxPort_setPinPadDriver(clk->pin.port, clk->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   733      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   734  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   735  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   737  IFX_INLINE void IfxPsi5s_initRxPin(const IfxPsi5s_Rx_In *rx, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   738  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   739      if (rx->pin.port != NULL_PTR)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   740      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   741          IfxPort_setPinModeInput(rx->pin.port, rx->pin.pinIndex, inputMode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   742          IfxPort_setPinPadDriver(rx->pin.port, rx->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   743          IfxPsi5s_setRxInput(rx->module, (IfxPsi5s_AlternateInput)rx->select);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   744      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   745  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   746  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   747  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   748  IFX_INLINE void IfxPsi5s_initTxPin(const IfxPsi5s_Tx_Out *tx, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   749  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   750      if (tx->pin.port != NULL_PTR)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   751      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   752          IfxPort_setPinModeOutput(tx->pin.port, tx->pin.pinIndex, outputMode, tx->select);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   753          IfxPort_setPinPadDriver(tx->pin.port, tx->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   754      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   755  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   756  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   757  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   758  IFX_INLINE boolean IfxPsi5s_isModuleSuspended(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   759  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   760      Ifx_PSI5S_OCS ocs;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   761  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   762      // read the status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   763      ocs.U = psi5s->OCS.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   764  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   765      // return the status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   766      return ocs.B.SUSSTA;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   767  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   768  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   769  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   770  IFX_INLINE void IfxPsi5s_setGlobalInterruptNodePointer(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource nodePointer, IfxPsi5s_Trigger triggerOutputLine)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   771  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   772      psi5s->INPG.U |= (triggerOutputLine << (nodePointer * 3));
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   773  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   774  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   775  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   776  IFX_INLINE void IfxPsi5s_setInterruptNodePointer(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource nodePointer, IfxPsi5s_Trigger triggerOutputLine)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   777  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   778      psi5s->INP[channel].U |= (triggerOutputLine << (nodePointer * 3));
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   779  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   780  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   781  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   782  IFX_INLINE void IfxPsi5s_setLoopBackMode(Ifx_PSI5S *psi5s, IfxPsi5s_LoopBackMode enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   783  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   784      psi5s->CON.B.LB = enabled;
	ld.bu	d0,[a15]529
.L520:
	insert	d15,d0,d15,#6,#1
	st.b	[a15]529,d15
.L203:
	ld.w	d4,[a12]26
.L521:
	call	IfxPsi5s_Psi5s_setBaudrate
.L426:
	jeq	d2,#0,.L22
.L522:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   322          == 0)
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   323      {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   324          status = FALSE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   325          return status;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   326      }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   327      else
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   328      {}
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   329  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   330      if (IfxPsi5s_Psi5s_initializeClock(psi5sSFR, &config->ascConfig.clockOutput) == 0)
	lea	a5,[a12]34
.L523:
	mov.aa	a4,a15
.L427:
	call	IfxPsi5s_Psi5s_initializeClock
.L428:
	jne	d2,#0,.L23

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   331      {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   332          status = FALSE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   333          return status;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   334      }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   335      else
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   336      {}
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   337  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   338      Ifx_PSI5S_TSCNTA tempTSCNTA;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   339      tempTSCNTA.U       = psi5sSFR->TSCNTA.U;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   340      tempTSCNTA.B.ETB   = config->timestampCounterA.externalTimeBaseSelect;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   341      tempTSCNTA.B.TBS   = config->timestampCounterA.timeBaseSelect;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   342      psi5sSFR->TSCNTA.U = tempTSCNTA.U;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   343  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   344      Ifx_PSI5S_TSCNTB tempTSCNTB;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   345      tempTSCNTB.U       = psi5sSFR->TSCNTB.U;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   346      tempTSCNTB.B.ETB   = config->timestampCounterB.externalTimeBaseSelect;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   347      tempTSCNTB.B.TBS   = config->timestampCounterB.timeBaseSelect;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   348      psi5sSFR->TSCNTB.U = tempTSCNTB.U;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   349  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   350      Ifx_PSI5S_GCR tempGCR;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   351      tempGCR.U       = psi5sSFR->GCR.U;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   352      tempGCR.B.CRCI  = config->globalControlConfig.crcErrorConsideredForRSI;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   353      tempGCR.B.XCRCI = config->globalControlConfig.xcrcErrorConsideredForRSI;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   354      tempGCR.B.TEI   = config->globalControlConfig.transmitErrorConsideredForRSI;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   355      tempGCR.B.PE    = config->globalControlConfig.parityErrorConsideredForRSI;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   356      tempGCR.B.FE    = config->globalControlConfig.framingErrorConsideredForRSI;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   357      tempGCR.B.OE    = config->globalControlConfig.overrunErrorConsideredForRSI;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   358      tempGCR.B.RBI   = config->globalControlConfig.receiveBufferErrorConsideredForRSI;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   359      tempGCR.B.HDI   = config->globalControlConfig.headerErrorConsideredForRSI;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   360      tempGCR.B.IDT   = config->globalControlConfig.idleTime;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   361      tempGCR.B.ASC   = config->globalControlConfig.ascOnlyMode;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   362      psi5sSFR->GCR.U = tempGCR.U;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   363  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   364      IfxScuWdt_setCpuEndinit(passwd);
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   365  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   366      // Pin mapping //
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   367      const IfxPsi5s_Psi5s_Pins *pins = config->pins;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   368  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   369      if (pins != NULL_PTR)
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   370      {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   371          const IfxPsi5s_Rx_In *rx = pins->rx;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   372  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   373          if (rx != NULL_PTR)
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   374          {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   375              IfxPsi5s_initRxPin(rx, pins->rxMode, pins->pinDriver);
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   376          }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   377  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   378          const IfxPsi5s_Tx_Out *tx = pins->tx;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   379  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   380          if (tx != NULL_PTR)
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   381          {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   382              IfxPsi5s_initTxPin(tx, pins->txMode, pins->pinDriver);
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   383          }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   384  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   385          const IfxPsi5s_Clk_Out *clk = pins->clk;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   386  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   387          if (clk != NULL_PTR)
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   388          {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   389              IfxPsi5s_initClkPin(clk, pins->clkMode, pins->pinDriver);
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   390          }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   391      }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   392  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   393      return status;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   394  }
.L22:
.L21:
.L20:
	mov	d8,#0
	j	.L24
.L23:
	ld.w	d15,[a15]20
.L429:
	ld.bu	d0,[a12]16
.L212:
	mov	d4,d9
.L213:
	insert	d15,d15,d0,#24,#3
	ld.bu	d0,[a12]17
.L524:
	insert	d15,d15,d0,#27,#1
	st.w	[a15]20,d15
.L214:
	ld.w	d15,[a15]24
.L430:
	ld.bu	d0,[a12]18
.L525:
	insert	d15,d15,d0,#24,#3
	ld.bu	d0,[a12]19
.L526:
	insert	d15,d15,d0,#27,#1
	st.w	[a15]24,d15
.L218:
	ld.w	d15,[a15]28
.L431:
	ld.bu	d0,[a12]45
.L527:
	insert	d15,d15,d0,#0,#1
	ld.bu	d0,[a12]46
.L528:
	insert	d15,d15,d0,#1,#1
	ld.bu	d0,[a12]47
.L529:
	insert	d15,d15,d0,#2,#1
	ld.bu	d0,[a12]48
.L530:
	insert	d15,d15,d0,#3,#1
	ld.bu	d0,[a12]49
.L531:
	insert	d15,d15,d0,#4,#1
	ld.bu	d0,[a12]50
.L532:
	insert	d15,d15,d0,#5,#1
	ld.bu	d0,[a12]51
.L533:
	insert	d15,d15,d0,#6,#1
	ld.bu	d0,[a12]52
.L534:
	insert	d15,d15,d0,#7,#1
	ld.w	d0,[a12]54
.L535:
	insert	d15,d15,d0,#24,#4
	ld.bu	d0,[a12]44
.L536:
	insert	d15,d15,d0,#31,#1
	st.w	[a15]28,d15
.L537:
	call	IfxScuWdt_setCpuEndinit
.L221:
	ld.a	a12,[a12]60
.L413:
	jz.a	a12,.L25
.L224:
	ld.a	a15,[a12]
.L415:
	jz.a	a15,.L26
.L228:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     2   * \file IfxPsi5s.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     3   * \brief PSI5S  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     4   * \ingroup IfxLld_Psi5s
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    10   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    11   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    14   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    16   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    19   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    20   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    21   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    22   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    23   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    24   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    25   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    27   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    28   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    29   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    30   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    31   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    32   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    33   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    40   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    43   * \defgroup IfxLld_Psi5s_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    44   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    45   * \defgroup IfxLld_Psi5s_Std_Channel Channel Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    46   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    47   * \defgroup IfxLld_Psi5s_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    48   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    49   * \defgroup IfxLld_Psi5s_Std_Interrupt Interrupt configuration functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    50   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    51   * \defgroup IfxLld_Psi5s_Std_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    52   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    53   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    54  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    55  #ifndef IFXPSI5S_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    56  #define IFXPSI5S_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    57  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    59  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    60  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    61  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    62  #include "_Impl/IfxPsi5s_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    63  #include "_PinMap/IfxPsi5s_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    64  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    65  #include "IfxPsi5s_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    66  #include "IfxPsi5s_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    67  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    68  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    69  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    70  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    71  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    72  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    73  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    74  /** \addtogroup IfxLld_Psi5s_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    75   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    76  /** \brief MODULE_PSI5S.IOCR.ALTI:Alternate input
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    77   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    78  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    79  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    80      IfxPsi5s_AlternateInput_0 = 0,      /**< \brief Alternate Input 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    81      IfxPsi5s_AlternateInput_1,          /**< \brief Alternate Input 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    82      IfxPsi5s_AlternateInput_2,          /**< \brief Alternate Input 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    83      IfxPsi5s_AlternateInput_3           /**< \brief Alternate Input 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    84  } IfxPsi5s_AlternateInput;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    86  /** \brief MODULE_PSI5S.BG.BR_VALUE:Baudrate prescalar select
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    87   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    88  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    89  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    90      IfxPsi5s_AscBaudratePrescalar_divideBy2 = 0,  /**< \brief Divide by 2 is selected for baudrate timer prescalar */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    91      IfxPsi5s_AscBaudratePrescalar_divideBy3 = 1   /**< \brief Divide by 3 is selected for baudrate timer prescalar */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    92  } IfxPsi5s_AscBaudratePrescalar;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    94  /** \brief MODULE_PSI5S.CON.M:ASC mode of operation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    95   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    96  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    97  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    98      IfxPsi5s_AscMode_sync                     = 0,  /**< \brief Synchronous mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    99      IfxPsi5s_AscMode_async_8bitData           = 1,  /**< \brief Asynchronous mode with 8 bit data */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   100      IfxPsi5s_AscMode_async_7bitDataWithParity = 3,  /**< \brief Asynchronous mode with 7 bit data with parity */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   101      IfxPsi5s_AscMode_async_9bitData           = 4,  /**< \brief Asynchronous mode with 9 bit data */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   102      IfxPsi5s_AscMode_async_8bitDataWithWakeup = 5,  /**< \brief Asynchronous mode with 8 bit data with wakeup */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   103      IfxPsi5s_AscMode_async_8bitDataWithParity = 7   /**< \brief Asynchronous mode with 8 bit data with parity */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   104  } IfxPsi5s_AscMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   106  /** \brief MODULE_PSI5S.CON.STP: Number of stop bits
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   110      IfxPsi5s_AscStopBits_1 = 0,      /**< \brief 1 stop bit  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   111      IfxPsi5s_AscStopBits_2           /**< \brief 2 stop bit  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   112  } IfxPsi5s_AscStopBits;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   113  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   114  /** \brief PSI5S Channel Id defined in MODULE_PSI5S.RDS.B.CID.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   115   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   116  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   117  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   118      IfxPsi5s_ChannelId_0 = 0,     /**< \brief Ifx_PSI5S Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   119      IfxPsi5s_ChannelId_1,         /**< \brief Ifx_PSI5S Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   120      IfxPsi5s_ChannelId_2,         /**< \brief Ifx_PSI5S Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   121      IfxPsi5s_ChannelId_3,         /**< \brief Ifx_PSI5S Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   122      IfxPsi5s_ChannelId_4,         /**< \brief Ifx_PSI5S Channel 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   123      IfxPsi5s_ChannelId_5,         /**< \brief Ifx_PSI5S Channel 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   124      IfxPsi5s_ChannelId_6,         /**< \brief Ifx_PSI5S Channel 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   125      IfxPsi5s_ChannelId_7,         /**< \brief Ifx_PSI5S Channel 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   126      IfxPsi5s_ChannelId_none = -1  /**< \brief None of the Ifx_PSI5S Channels */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   127  } IfxPsi5s_ChannelId;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   129  /** \brief Clock Selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   131  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   132  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   133      IfxPsi5s_ClockType_fracDiv    = 0,  /**< \brief Fractional Divide clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   134      IfxPsi5s_ClockType_timeStamp  = 1,  /**< \brief Timestamp clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   135      IfxPsi5s_ClockType_ascFracDiv = 2,  /**< \brief Asc Fractional divider clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   136      IfxPsi5s_ClockType_ascOutput  = 3   /**< \brief Asc output clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   137  } IfxPsi5s_ClockType;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   139  /** \brief MODULE_PSI5S.RCRAx.CRCy(x= 0,1,..7:y=0,1,..,5),MODULE_PSI5S.RCRBx.CRCy(x= 0,1,..7:y=0,1,..,5)CRC or parity
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   140   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   141  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   142  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   143      IfxPsi5s_CrcOrParity_parity = 0,  /**< \brief parity selection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   144      IfxPsi5s_CrcOrParity_crc    = 1   /**< \brief CRC selection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   145  } IfxPsi5s_CrcOrParity;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   147  /** \brief MODULE_PSI5S.FDR.DM;MODULE_PSI5S.FDRT.B.DM:Divider mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   148   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   149  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   150  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   151      IfxPsi5s_DividerMode_spb        = 0,  /**< \brief divider mode is off */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   152      IfxPsi5s_DividerMode_normal     = 1,  /**< \brief divider mode is normal */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   153      IfxPsi5s_DividerMode_fractional = 2,  /**< \brief divider mode is fractional */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   154      IfxPsi5s_DividerMode_off        = 3   /**< \brief divider mode is off */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   155  } IfxPsi5s_DividerMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   156  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   157  /** \brief MODULE_PSI5S.SCRx.EPS(x=0,1,...,7):Enhanced protocol types
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   158   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   159  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   160  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   161      IfxPsi5s_EnhancedProtocol_toothGapMethod              = 0,  /**< \brief toothGapMethod Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   162      IfxPsi5s_EnhancedProtocol_pulseWidth_frameFormat_1to3 = 1,  /**< \brief pulseWidth_frameFormat_1to3 Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   163      IfxPsi5s_EnhancedProtocol_pulseWidth_frameFormat_4    = 3   /**< \brief pulseWidth_frameFormat_4 Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   164  } IfxPsi5s_EnhancedProtocol;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   166  /** \brief MODULE_PSI5S.RCRAx.FIDS(x=0,1,....,7):.Frame ID updation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   167   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   168  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   169  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   170      IfxPsi5s_FrameId_frameHeader   = 0, /**< \brief Frame ID is updated from packet frame header (Sync mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   171      IfxPsi5s_FrameId_rollingNumber = 1  /**< \brief Frame ID is a rolling number 0 .. 5 copied from FCNT */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   172  } IfxPsi5s_FrameId;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   173  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   174  /** \brief MODULE_PSI5S.GCR.IDT:Idle time bit count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   178      IfxPsi5s_IdleTime_1 = 0,      /**< \brief 1 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   179      IfxPsi5s_IdleTime_2,          /**< \brief 2 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   180      IfxPsi5s_IdleTime_3,          /**< \brief 3 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   181      IfxPsi5s_IdleTime_4,          /**< \brief 4 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   182      IfxPsi5s_IdleTime_5,          /**< \brief 5 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   183      IfxPsi5s_IdleTime_6,          /**< \brief 6 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   184      IfxPsi5s_IdleTime_7,          /**< \brief 7 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   185      IfxPsi5s_IdleTime_8,          /**< \brief 8 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   186      IfxPsi5s_IdleTime_9,          /**< \brief 9 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   187      IfxPsi5s_IdleTime_10,         /**< \brief 10 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   188      IfxPsi5s_IdleTime_11,         /**< \brief 11 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   189      IfxPsi5s_IdleTime_12,         /**< \brief 12 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   190      IfxPsi5s_IdleTime_13,         /**< \brief 13 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   191      IfxPsi5s_IdleTime_14,         /**< \brief 14 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   192      IfxPsi5s_IdleTime_15,         /**< \brief 15 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   193      IfxPsi5s_IdleTime_16          /**< \brief 16 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   194  } IfxPsi5s_IdleTime;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   195  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   196  /** \brief Enable/Disable interrupt request .defined in MODULE_PSI5S.INTEN[x]
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   198  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   199  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   200      IfxPsi5s_InterruptRequest_disabled = 0,  /**< \brief no interrupt request can be generated for this source */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   201      IfxPsi5s_InterruptRequest_enabled  = 1   /**< \brief An Interrupt request can be generated for source */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   202  } IfxPsi5s_InterruptRequest;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   203  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   204  /** \brief Enable/Disable the interrupt and  select interrupt source pointer defined in MODULE_PSI5S.INTEN[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   205   * and MODULE_PSI5S.INP[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   206   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   207  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   208  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   209      IfxPsi5s_InterruptSource_rsi  = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   210      IfxPsi5s_InterruptSource_rdi  = 1,  /**< \brief Enable Interrupt Request RDI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   211      IfxPsi5s_InterruptSource_rbi  = 2,  /**< \brief Enable Interrupt Request RBI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   212      IfxPsi5s_InterruptSource_tei  = 3,  /**< \brief Enable Interrupt Request TEI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   213      IfxPsi5s_InterruptSource_chci = 4,  /**< \brief Enable Interrupt Request CHCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   214      IfxPsi5s_InterruptSource_crci = 5,  /**< \brief Enable Interrupt Request CRCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   215      IfxPsi5s_InterruptSource_tpi  = 6,  /**< \brief Enable Interrupt Request TPI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   216      IfxPsi5s_InterruptSource_tpoi = 7,  /**< \brief Enable Interrupt Request TPOI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   217      IfxPsi5s_InterruptSource_hdi  = 8   /**< \brief Enable Interrupt Request HDI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   218  } IfxPsi5s_InterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   219  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   220  /** \brief Enable/Disable Loop back Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   221   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   222  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   223  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   224      IfxPsi5s_LoopBackMode_disable = 0,  /**< \brief loop-back mode disabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   225      IfxPsi5s_LoopBackMode_enable  = 1   /**< \brief loop-back mode enabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   226  } IfxPsi5s_LoopBackMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   228  /** \brief Messaging bits presence
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   229   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   230  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   231  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   232      IfxPsi5s_MessagingBits_absent  = 0, /**< \brief No messaging bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   233      IfxPsi5s_MessagingBits_present = 1  /**< \brief 2 messaging bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   234  } IfxPsi5s_MessagingBits;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   235  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   236  /** \brief MODULE_PSI5S.NFC.NFx:Expected Psi5s frames
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   238  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   239  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   240      IfxPsi5s_NumberExpectedFrames_1 = 1,      /**< \brief 1 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   241      IfxPsi5s_NumberExpectedFrames_2,          /**< \brief 2 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   242      IfxPsi5s_NumberExpectedFrames_3,          /**< \brief 3 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   243      IfxPsi5s_NumberExpectedFrames_4,          /**< \brief 4 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   244      IfxPsi5s_NumberExpectedFrames_5,          /**< \brief 5 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   245      IfxPsi5s_NumberExpectedFrames_6           /**< \brief 6 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   246  } IfxPsi5s_NumberExpectedFrames;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   247  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   248  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   249   * Definition in Ifx_PSI5S.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   250   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   251  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   252  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   253      IfxPsi5s_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   254      IfxPsi5s_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   255  } IfxPsi5s_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   257  /** \brief OCDS Suspend Control (OCDS.SUS)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   258   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   259  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   261      IfxPsi5s_SuspendMode_none = 0,  /**< \brief No suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   262      IfxPsi5s_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   263      IfxPsi5s_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   264  } IfxPsi5s_SuspendMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   265  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   266  /** \brief MODULE_PSI5S.TSCNTA.B.TBS;MODULE_PSI5S.TSCNTB.B.TBS:Time base
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   267   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   268  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   269  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   270      IfxPsi5s_TimeBase_internal = 0,  /**< \brief Internal time stamp clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   271      IfxPsi5s_TimeBase_external = 1   /**< \brief External GTM inputs */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   272  } IfxPsi5s_TimeBase;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   274  /** \brief Start/stop Current time stamp count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   275   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   276  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   277  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   278      IfxPsi5s_TimeStampCount_stopped = 0,  /**< \brief CTS stopped */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   279      IfxPsi5s_TimeStampCount_started = 1   /**< \brief CTS Started */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   280  } IfxPsi5s_TimeStampCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   281  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   282  /** \brief MODULE_PSI5S.TSCNTx(x= A,B):Timestamp register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   283   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   284  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   285  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   286      IfxPsi5s_TimestampRegister_a = 0,  /**< \brief Timestamp register A */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   287      IfxPsi5s_TimestampRegister_b = 1   /**< \brief Timestamp register B */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   288  } IfxPsi5s_TimestampRegister;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   289  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   290  /** \brief MODULE_PSI5S.RCRAx.TSTS:Timestamp trigger
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   291   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   292  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   293  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   294      IfxPsi5s_TimestampTrigger_syncPulse = 0,  /**< \brief Timestamp trigger on sync pulse */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   295      IfxPsi5s_TimestampTrigger_frame     = 1   /**< \brief Timestamp trigger on any frame */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   296  } IfxPsi5s_TimestampTrigger;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   297  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   298  /** \brief MODULE_PSI5S.TSCNTA.B.ETB;MODULE_PSI5S.TSCNTB.B.ETB:Trigger Id
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   300  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   301  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   302      IfxPsi5s_Trigger_0 = 0,      /**< \brief Trigger 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   303      IfxPsi5s_Trigger_1,          /**< \brief Trigger 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   304      IfxPsi5s_Trigger_2,          /**< \brief Trigger 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   305      IfxPsi5s_Trigger_3,          /**< \brief Trigger 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   306      IfxPsi5s_Trigger_4,          /**< \brief Trigger 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   307      IfxPsi5s_Trigger_5,          /**< \brief Trigger 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   308      IfxPsi5s_Trigger_6,          /**< \brief Trigger 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   309      IfxPsi5s_Trigger_7           /**< \brief Trigger 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   310  } IfxPsi5s_Trigger;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   312  /** \brief specifies service request line defined in MODULE_PSI5S.INP[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   313   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   314  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   315  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   316      IfxPsi5s_TriggerOutput_0 = 0,      /**< \brief Triggered output line is TRIGO_0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   317      IfxPsi5s_TriggerOutput_1,          /**< \brief Triggered output line is TRIGO_1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   318      IfxPsi5s_TriggerOutput_2,          /**< \brief Triggered output line is TRIGO_2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   319      IfxPsi5s_TriggerOutput_3,          /**< \brief Triggered output line is TRIGO_3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   320      IfxPsi5s_TriggerOutput_4,          /**< \brief Triggered output line is TRIGO_4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   321      IfxPsi5s_TriggerOutput_5,          /**< \brief Triggered output line is TRIGO_5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   322      IfxPsi5s_TriggerOutput_6,          /**< \brief Triggered output line is TRIGO_6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   323      IfxPsi5s_TriggerOutput_7           /**< \brief Triggered output line is TRIGO_7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   324  } IfxPsi5s_TriggerOutput;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   325  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   326  /** \brief Trigger type defined in
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   327   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   328  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   329  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   330      IfxPsi5s_TriggerType_periodic = 0,  /**< \brief Periodic trigger */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   331      IfxPsi5s_TriggerType_external = 1   /**< \brief External trigger */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   332  } IfxPsi5s_TriggerType;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   333  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   334  /** \brief MODULE_PSI5S.RCRAx.UFCY(x=0,1,...7;y=0,1...5):UART frame count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   336  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   337  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   338      IfxPsi5s_UartFrameCount_3 = 0,      /**< \brief 3 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   339      IfxPsi5s_UartFrameCount_4,          /**< \brief 4 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   340      IfxPsi5s_UartFrameCount_5,          /**< \brief 5 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   341      IfxPsi5s_UartFrameCount_6           /**< \brief 6 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   342  } IfxPsi5s_UartFrameCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   344  /** \brief MODULE_PSI5S.RCRAx.WDMS:Watchdog timer mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   346  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   347  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   348      IfxPsi5s_WatchdogTimerMode_frame     = 0, /**< \brief Watch Dog Timer is restarted on reception of each recoverable frame (async mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   349      IfxPsi5s_WatchdogTimerMode_syncPulse = 1  /**< \brief Watch Dog Timer is restarted on Sync Pulse and stopped at reception of the last frame configured in NFC.NFx.(sync mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   350  } IfxPsi5s_WatchdogTimerMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   352  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   353  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   354  /** \brief List of Global interrupt sources or registers INTxG
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   355   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   356  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   357  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   358      IfxPsi5s_GlobalInterruptSource_tir   = 0,  /**< \brief Enable Interrupt Request TIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   359      IfxPsi5s_GlobalInterruptSource_rir   = 1,  /**< \brief Enable Interrupt Request RIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   360      IfxPsi5s_GlobalInterruptSource_eir   = 2,  /**< \brief Enable Interrupt Request EIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   361      IfxPsi5s_GlobalInterruptSource_tbir  = 3,  /**< \brief Enable Interrupt Request TBIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   362      IfxPsi5s_GlobalInterruptSource_xcrci = 4,  /**< \brief Enable Interrupt Request XCRCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   363      IfxPsi5s_GlobalInterruptSource_foi   = 5   /**< \brief Enable Interrupt Request FOI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   364  } IfxPsi5s_GlobalInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   366  /** \addtogroup IfxLld_Psi5s_Std_Channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   367   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   368  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   369  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   370  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   371  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   372  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   373  /** \brief fill data into tx buffer for direct transmission(in ASC mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   374   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   375   * \param data Pointer to data
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   376   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   377   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   378  IFX_INLINE void IfxPsi5s_fillAscTransmitBuffer(Ifx_PSI5S *psi5s, uint32 *data);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   380  /** \brief received buffer in ASC mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   381   * \param psi5s Pointer to PSI5s register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   382   * \return recieved buffer value in asc mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   383   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   384  IFX_INLINE uint32 IfxPsi5s_getReceiveBuffer(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   385  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   386  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   387  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   388  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   389  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   390  /** \brief Asc receiver is disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   391   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   392   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   394  IFX_EXTERN void IfxPsi5s_disableAscReceiver(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   396  /** \brief Enable ASC receiver
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   397   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   400  IFX_EXTERN void IfxPsi5s_enableAscReceiver(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   402  /** \brief Enable/disable any combination of channel trigger counters selected by mask parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   403   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   404   * \param channels specifies the channel trigger counters which should be enabled/disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   405   * \param mask specifies the channel trigger counters which should be modified
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   406   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   407   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   408  IFX_EXTERN void IfxPsi5s_enableDisableChannelTriggerCounters(Ifx_PSI5S *psi5s, uint32 channels, uint32 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   410  /** \brief Enable/disable any combination of channels selected by mask parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   411   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   412   * \param channels specifies the channels which should be enabled/disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   413   * \param mask specifies the channels which should be modified
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   414   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   416  IFX_EXTERN void IfxPsi5s_enableDisableChannels(Ifx_PSI5S *psi5s, uint32 channels, uint32 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   417  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   418  /** \brief Baudrate frequency in HZ
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   419   * \param psi5s Pointer to PSI5s Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   420   * \param synchMode Pointer to the configuration structure of ASC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   421   * \param divMode specifies fractional/normal divider mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   422   * \param baudrateSelection select sbaudrate prescaler
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   423   * \return baudrate in HZ
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   424   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   425  IFX_EXTERN float32 IfxPsi5s_getBaudrate(Ifx_PSI5S *psi5s, boolean synchMode, boolean divMode, IfxPsi5s_AscBaudratePrescalar baudrateSelection);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   426  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   427  /** \brief Start ASC transactions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   428   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   429   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   430   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   431  IFX_EXTERN void IfxPsi5s_startAscTransactions(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   432  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   433  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   434   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   435   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   436   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   437  IFX_EXTERN void IfxPsi5s_stopAscTransactions(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   438  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   439  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   441  /** \addtogroup IfxLld_Psi5s_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   442   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   444  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   445  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   446  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   448  /** \brief Initializes a CLK output
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   449   * \param clk the CLK Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   450   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   451   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   452   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   454  IFX_INLINE void IfxPsi5s_initClkPin(const IfxPsi5s_Clk_Out *clk, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   456  /** \brief Initializes a RX input
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   457   * \param rx the RX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   458   * \param inputMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   459   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   460   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   462  IFX_INLINE void IfxPsi5s_initRxPin(const IfxPsi5s_Rx_In *rx, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   464  /** \brief Initializes a TX output
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   465   * \param tx the TX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   466   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   467   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   468   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   469   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   470  IFX_INLINE void IfxPsi5s_initTxPin(const IfxPsi5s_Tx_Out *tx, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   471  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   472  /** \brief Selects the alternate input for Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   473   * \param psi5s pointer to PSI5S registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   474   * \param alti alternate input selection of Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   475   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   476   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   477  IFX_INLINE void IfxPsi5s_setRxInput(Ifx_PSI5S *psi5s, IfxPsi5s_AlternateInput alti);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   479  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   481  /** \addtogroup IfxLld_Psi5s_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   482   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   483  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   484  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   485  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   486  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   487  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   488  /** \brief Enable /Disable Global Interrupt Source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   489   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   490   * \param interruptSource specifies Global Interrupt Source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   491   * \param enabled enable /disable Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   494  IFX_INLINE void IfxPsi5s_enableGlobalInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   496  /** \brief enable / disable interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   497   * \param psi5s pointer to psi5s register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   498   * \param channel specifies channel number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   499   * \param interruptSource specifies interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   500   * \param enabled Enable / Disable the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   501   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   502   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   503  IFX_INLINE void IfxPsi5s_enableInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   504  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   505  /** \brief Get  Receive Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   506   * \param psi5s Pointer to PSI5S Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   507   * \return Receive Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   508   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   509  IFX_INLINE boolean IfxPsi5s_getReceiveInterruptStatus(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   510  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   511  /** \brief get Transmit Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   512   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   513   * \return Transmit Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   514   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   515  IFX_INLINE boolean IfxPsi5s_getTransmitInterruptStatus(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   516  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   517  /** \brief Sets the node pointers of PSI5-S ASC and for XCRCI and FOI
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   518   * \param psi5s Pointer to PSI5S Register Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   519   * \param nodePointer specifies node pointer source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   520   * \param triggerOutputLine select trigger Output Line
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   521   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   522   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   523  IFX_INLINE void IfxPsi5s_setGlobalInterruptNodePointer(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource nodePointer, IfxPsi5s_Trigger triggerOutputLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   525  /** \brief set interrupt node pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   526   * \param psi5s specifies the pointer to PSI5S Module register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   527   * \param channel specifies channel number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   528   * \param nodePointer specifies node pointer source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   529   * \param triggerOutputLine select service request line
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   530   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   531   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   532  IFX_INLINE void IfxPsi5s_setInterruptNodePointer(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource nodePointer, IfxPsi5s_Trigger triggerOutputLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   533  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   534  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   536  /** \addtogroup IfxLld_Psi5s_Std_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   537   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   539  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   540  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   541  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   542  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   543  /** \brief clear time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   544   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   545   * \param clearTimeStampCounter clear time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   546   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   548  IFX_INLINE void IfxPsi5s_clearTimeStampCounterA(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   550  /** \brief Clear Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   551   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   552   * \param clearTimeStampCounter clear Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   553   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   554   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   555  IFX_INLINE void IfxPsi5s_clearTimeStampCounterB(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   556  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   557  /** \brief Returns the module's suspend state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   558   * TRUE :if module is suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   559   * FALSE:if module is not yet suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   560   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   561   * \return Suspend status (TRUE / FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   562   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   563  IFX_INLINE boolean IfxPsi5s_isModuleSuspended(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   565  /** \brief enable /disable loop back mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   566   * \param psi5s pointer to PSI5S Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   567   * \param enabled enable/disable loop back mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   568   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   570  IFX_INLINE void IfxPsi5s_setLoopBackMode(Ifx_PSI5S *psi5s, IfxPsi5s_LoopBackMode enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   572  /** \brief enable / disable sleep mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   573   * \param psi5s Pointer to PSI5S register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   574   * \param mode sleep mode (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   575   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   576   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   577  IFX_INLINE void IfxPsi5s_setSleepMode(Ifx_PSI5S *psi5s, IfxPsi5s_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   578  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   579  /** \brief Configure the Module to Hard/Soft suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   580   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   581   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   582   * \param mode Module suspend mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   583   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   584   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   585  IFX_INLINE void IfxPsi5s_setSuspendMode(Ifx_PSI5S *psi5s, IfxPsi5s_SuspendMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   587  /** \brief start time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   588   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   589   * \param startTimeStamp Start/stop current time stamp count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   590   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   591   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   592  IFX_INLINE void IfxPsi5s_setTimeStampCounterA(Ifx_PSI5S *psi5s, IfxPsi5s_TimeStampCount startTimeStamp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   593  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   594  /** \brief Start Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   595   * \param psi5s Pointer to PSI5S Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   596   * \param startTimeStamp start time stamp
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   597   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   598   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   599  IFX_INLINE void IfxPsi5s_setTimeStampCounterB(Ifx_PSI5S *psi5s, IfxPsi5s_TimeStampCount startTimeStamp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   601  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   602  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   603  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   605  /** \brief Disable PSI5S kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   606   * \param psi5s pointer to the base of PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   607   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   608   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   609  IFX_EXTERN void IfxPsi5s_disableModule(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   610  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   611  /** \brief Get the received psi5s frame for the channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   612   * \param psi5s Pointer to PSI5S Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   613   * \param channelId channel ID
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   614   * \return Frame Status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   615   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   616  IFX_EXTERN boolean IfxPsi5s_getReadFrameStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   617  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   618  /** \brief Indicates the successful reception of a frame.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   619   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   620   * \param channelId Channel Number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   621   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   622  IFX_EXTERN boolean IfxPsi5s_getSuccessfullyReceivedFrameStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   623  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   624  /** \brief resets PSI5S kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   625   * \param psi5s pointer to PSI5S registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   626   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   627   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   628  IFX_EXTERN void IfxPsi5s_resetModule(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   629  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   630  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   632  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   633  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   634  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   635  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   636  /** \brief Shows status of any interrupt in any channell in PSI5S.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   637   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   638   * \param channel Channel ID of channel whose interrupt status is required
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   639   * \param interruptSource Interrupt Source to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   640   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   641  IFX_INLINE boolean IfxPsi5s_getInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   643  /** \brief Clears the status of any interrupt of any  PSI5-S channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   644   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   645   * \param channel Channel ID of channel whose interrupt needs to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   646   * \param interruptSource Interrupt Source to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   647   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   648   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   649  IFX_INLINE void IfxPsi5s_clearInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   650  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   651  /** \brief Show the status of any global interrupt, i.e. of the ASC inside PSI5-S and XCRCI indicating a non recoverable message is received.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   652   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   653   * \param interruptSource Interrupt source under consideration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   654   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   655  IFX_INLINE boolean IfxPsi5s_getGlobalInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   657  /** \brief Clears the status of any interrupt of the ASC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   658   * integrated in PSI5-S and for XCRCI and FOI
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   659   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   660   * \param interruptSource Interrupt source under consideration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   661   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   662   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   663  IFX_INLINE void IfxPsi5s_clearGlobalInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   664  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   665  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   666  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   667  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   669  /** \brief Get address of the SRC register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   670   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   671   * \param channel Channel ID of the channel to get the corresponding SRC pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   672   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   673  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxPsi5s_getSrcAddress(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   675  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   676  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   677  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   678  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   679  IFX_INLINE void IfxPsi5s_clearTimeStampCounterA(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   680  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   681      psi5s->TSCNTA.B.CLRA = clearTimeStampCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   682  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   683  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   684  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   685  IFX_INLINE void IfxPsi5s_clearTimeStampCounterB(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   686  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   687      psi5s->TSCNTA.B.CLRB = clearTimeStampCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   688  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   689  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   690  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   691  IFX_INLINE void IfxPsi5s_enableGlobalInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   692  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   693      psi5s->INTENG.U |= (enabled << interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   694  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   695  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   696  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   697  IFX_INLINE void IfxPsi5s_enableInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   698  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   699      psi5s->INTEN[channel].U |= (enabled << interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   700  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   701  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   702  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   703  IFX_INLINE void IfxPsi5s_fillAscTransmitBuffer(Ifx_PSI5S *psi5s, uint32 *data)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   704  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   705      psi5s->TBUF.U = *data;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   706  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   707  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   708  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   709  IFX_INLINE uint32 IfxPsi5s_getReceiveBuffer(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   710  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   711      return psi5s->RBUF.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   712  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   713  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   714  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   715  IFX_INLINE boolean IfxPsi5s_getReceiveInterruptStatus(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   716  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   717      return (boolean)psi5s->INTSTATG.B.RIR;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   718  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   719  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   720  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   721  IFX_INLINE boolean IfxPsi5s_getTransmitInterruptStatus(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   722  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   723      return (boolean)psi5s->INTSTATG.B.TIR;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   724  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   725  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   726  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   727  IFX_INLINE void IfxPsi5s_initClkPin(const IfxPsi5s_Clk_Out *clk, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   728  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   729      if (clk->pin.port != NULL_PTR)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   730      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   731          IfxPort_setPinModeOutput(clk->pin.port, clk->pin.pinIndex, outputMode, clk->select);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   732          IfxPort_setPinPadDriver(clk->pin.port, clk->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   733      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   734  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   735  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   737  IFX_INLINE void IfxPsi5s_initRxPin(const IfxPsi5s_Rx_In *rx, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   738  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   739      if (rx->pin.port != NULL_PTR)
	ld.a	a4,[a15]4
.L229:
	ld.b	d15,[a12]4
.L432:
	ld.bu	d9,[a12]21
.L238:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   739      if (rx->pin.port != NULL_PTR)      (inlined)
	jz.a	a4,.L27
.L240:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     2   * \file IfxPsi5s.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     3   * \brief PSI5S  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     4   * \ingroup IfxLld_Psi5s
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    10   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    11   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    14   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    16   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    19   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    20   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    21   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    22   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    23   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    24   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    25   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    27   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    28   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    29   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    30   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    31   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    32   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    33   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    40   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    43   * \defgroup IfxLld_Psi5s_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    44   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    45   * \defgroup IfxLld_Psi5s_Std_Channel Channel Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    46   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    47   * \defgroup IfxLld_Psi5s_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    48   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    49   * \defgroup IfxLld_Psi5s_Std_Interrupt Interrupt configuration functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    50   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    51   * \defgroup IfxLld_Psi5s_Std_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    52   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    53   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    54  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    55  #ifndef IFXPSI5S_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    56  #define IFXPSI5S_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    57  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    59  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    60  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    61  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    62  #include "_Impl/IfxPsi5s_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    63  #include "_PinMap/IfxPsi5s_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    64  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    65  #include "IfxPsi5s_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    66  #include "IfxPsi5s_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    67  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    68  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    69  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    70  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    71  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    72  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    73  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    74  /** \addtogroup IfxLld_Psi5s_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    75   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    76  /** \brief MODULE_PSI5S.IOCR.ALTI:Alternate input
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    77   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    78  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    79  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    80      IfxPsi5s_AlternateInput_0 = 0,      /**< \brief Alternate Input 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    81      IfxPsi5s_AlternateInput_1,          /**< \brief Alternate Input 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    82      IfxPsi5s_AlternateInput_2,          /**< \brief Alternate Input 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    83      IfxPsi5s_AlternateInput_3           /**< \brief Alternate Input 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    84  } IfxPsi5s_AlternateInput;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    86  /** \brief MODULE_PSI5S.BG.BR_VALUE:Baudrate prescalar select
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    87   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    88  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    89  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    90      IfxPsi5s_AscBaudratePrescalar_divideBy2 = 0,  /**< \brief Divide by 2 is selected for baudrate timer prescalar */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    91      IfxPsi5s_AscBaudratePrescalar_divideBy3 = 1   /**< \brief Divide by 3 is selected for baudrate timer prescalar */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    92  } IfxPsi5s_AscBaudratePrescalar;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    94  /** \brief MODULE_PSI5S.CON.M:ASC mode of operation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    95   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    96  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    97  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    98      IfxPsi5s_AscMode_sync                     = 0,  /**< \brief Synchronous mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    99      IfxPsi5s_AscMode_async_8bitData           = 1,  /**< \brief Asynchronous mode with 8 bit data */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   100      IfxPsi5s_AscMode_async_7bitDataWithParity = 3,  /**< \brief Asynchronous mode with 7 bit data with parity */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   101      IfxPsi5s_AscMode_async_9bitData           = 4,  /**< \brief Asynchronous mode with 9 bit data */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   102      IfxPsi5s_AscMode_async_8bitDataWithWakeup = 5,  /**< \brief Asynchronous mode with 8 bit data with wakeup */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   103      IfxPsi5s_AscMode_async_8bitDataWithParity = 7   /**< \brief Asynchronous mode with 8 bit data with parity */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   104  } IfxPsi5s_AscMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   106  /** \brief MODULE_PSI5S.CON.STP: Number of stop bits
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   110      IfxPsi5s_AscStopBits_1 = 0,      /**< \brief 1 stop bit  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   111      IfxPsi5s_AscStopBits_2           /**< \brief 2 stop bit  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   112  } IfxPsi5s_AscStopBits;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   113  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   114  /** \brief PSI5S Channel Id defined in MODULE_PSI5S.RDS.B.CID.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   115   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   116  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   117  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   118      IfxPsi5s_ChannelId_0 = 0,     /**< \brief Ifx_PSI5S Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   119      IfxPsi5s_ChannelId_1,         /**< \brief Ifx_PSI5S Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   120      IfxPsi5s_ChannelId_2,         /**< \brief Ifx_PSI5S Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   121      IfxPsi5s_ChannelId_3,         /**< \brief Ifx_PSI5S Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   122      IfxPsi5s_ChannelId_4,         /**< \brief Ifx_PSI5S Channel 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   123      IfxPsi5s_ChannelId_5,         /**< \brief Ifx_PSI5S Channel 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   124      IfxPsi5s_ChannelId_6,         /**< \brief Ifx_PSI5S Channel 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   125      IfxPsi5s_ChannelId_7,         /**< \brief Ifx_PSI5S Channel 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   126      IfxPsi5s_ChannelId_none = -1  /**< \brief None of the Ifx_PSI5S Channels */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   127  } IfxPsi5s_ChannelId;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   129  /** \brief Clock Selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   131  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   132  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   133      IfxPsi5s_ClockType_fracDiv    = 0,  /**< \brief Fractional Divide clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   134      IfxPsi5s_ClockType_timeStamp  = 1,  /**< \brief Timestamp clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   135      IfxPsi5s_ClockType_ascFracDiv = 2,  /**< \brief Asc Fractional divider clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   136      IfxPsi5s_ClockType_ascOutput  = 3   /**< \brief Asc output clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   137  } IfxPsi5s_ClockType;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   139  /** \brief MODULE_PSI5S.RCRAx.CRCy(x= 0,1,..7:y=0,1,..,5),MODULE_PSI5S.RCRBx.CRCy(x= 0,1,..7:y=0,1,..,5)CRC or parity
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   140   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   141  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   142  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   143      IfxPsi5s_CrcOrParity_parity = 0,  /**< \brief parity selection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   144      IfxPsi5s_CrcOrParity_crc    = 1   /**< \brief CRC selection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   145  } IfxPsi5s_CrcOrParity;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   147  /** \brief MODULE_PSI5S.FDR.DM;MODULE_PSI5S.FDRT.B.DM:Divider mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   148   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   149  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   150  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   151      IfxPsi5s_DividerMode_spb        = 0,  /**< \brief divider mode is off */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   152      IfxPsi5s_DividerMode_normal     = 1,  /**< \brief divider mode is normal */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   153      IfxPsi5s_DividerMode_fractional = 2,  /**< \brief divider mode is fractional */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   154      IfxPsi5s_DividerMode_off        = 3   /**< \brief divider mode is off */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   155  } IfxPsi5s_DividerMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   156  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   157  /** \brief MODULE_PSI5S.SCRx.EPS(x=0,1,...,7):Enhanced protocol types
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   158   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   159  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   160  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   161      IfxPsi5s_EnhancedProtocol_toothGapMethod              = 0,  /**< \brief toothGapMethod Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   162      IfxPsi5s_EnhancedProtocol_pulseWidth_frameFormat_1to3 = 1,  /**< \brief pulseWidth_frameFormat_1to3 Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   163      IfxPsi5s_EnhancedProtocol_pulseWidth_frameFormat_4    = 3   /**< \brief pulseWidth_frameFormat_4 Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   164  } IfxPsi5s_EnhancedProtocol;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   166  /** \brief MODULE_PSI5S.RCRAx.FIDS(x=0,1,....,7):.Frame ID updation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   167   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   168  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   169  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   170      IfxPsi5s_FrameId_frameHeader   = 0, /**< \brief Frame ID is updated from packet frame header (Sync mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   171      IfxPsi5s_FrameId_rollingNumber = 1  /**< \brief Frame ID is a rolling number 0 .. 5 copied from FCNT */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   172  } IfxPsi5s_FrameId;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   173  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   174  /** \brief MODULE_PSI5S.GCR.IDT:Idle time bit count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   178      IfxPsi5s_IdleTime_1 = 0,      /**< \brief 1 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   179      IfxPsi5s_IdleTime_2,          /**< \brief 2 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   180      IfxPsi5s_IdleTime_3,          /**< \brief 3 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   181      IfxPsi5s_IdleTime_4,          /**< \brief 4 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   182      IfxPsi5s_IdleTime_5,          /**< \brief 5 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   183      IfxPsi5s_IdleTime_6,          /**< \brief 6 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   184      IfxPsi5s_IdleTime_7,          /**< \brief 7 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   185      IfxPsi5s_IdleTime_8,          /**< \brief 8 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   186      IfxPsi5s_IdleTime_9,          /**< \brief 9 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   187      IfxPsi5s_IdleTime_10,         /**< \brief 10 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   188      IfxPsi5s_IdleTime_11,         /**< \brief 11 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   189      IfxPsi5s_IdleTime_12,         /**< \brief 12 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   190      IfxPsi5s_IdleTime_13,         /**< \brief 13 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   191      IfxPsi5s_IdleTime_14,         /**< \brief 14 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   192      IfxPsi5s_IdleTime_15,         /**< \brief 15 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   193      IfxPsi5s_IdleTime_16          /**< \brief 16 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   194  } IfxPsi5s_IdleTime;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   195  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   196  /** \brief Enable/Disable interrupt request .defined in MODULE_PSI5S.INTEN[x]
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   198  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   199  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   200      IfxPsi5s_InterruptRequest_disabled = 0,  /**< \brief no interrupt request can be generated for this source */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   201      IfxPsi5s_InterruptRequest_enabled  = 1   /**< \brief An Interrupt request can be generated for source */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   202  } IfxPsi5s_InterruptRequest;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   203  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   204  /** \brief Enable/Disable the interrupt and  select interrupt source pointer defined in MODULE_PSI5S.INTEN[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   205   * and MODULE_PSI5S.INP[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   206   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   207  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   208  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   209      IfxPsi5s_InterruptSource_rsi  = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   210      IfxPsi5s_InterruptSource_rdi  = 1,  /**< \brief Enable Interrupt Request RDI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   211      IfxPsi5s_InterruptSource_rbi  = 2,  /**< \brief Enable Interrupt Request RBI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   212      IfxPsi5s_InterruptSource_tei  = 3,  /**< \brief Enable Interrupt Request TEI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   213      IfxPsi5s_InterruptSource_chci = 4,  /**< \brief Enable Interrupt Request CHCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   214      IfxPsi5s_InterruptSource_crci = 5,  /**< \brief Enable Interrupt Request CRCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   215      IfxPsi5s_InterruptSource_tpi  = 6,  /**< \brief Enable Interrupt Request TPI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   216      IfxPsi5s_InterruptSource_tpoi = 7,  /**< \brief Enable Interrupt Request TPOI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   217      IfxPsi5s_InterruptSource_hdi  = 8   /**< \brief Enable Interrupt Request HDI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   218  } IfxPsi5s_InterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   219  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   220  /** \brief Enable/Disable Loop back Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   221   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   222  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   223  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   224      IfxPsi5s_LoopBackMode_disable = 0,  /**< \brief loop-back mode disabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   225      IfxPsi5s_LoopBackMode_enable  = 1   /**< \brief loop-back mode enabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   226  } IfxPsi5s_LoopBackMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   228  /** \brief Messaging bits presence
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   229   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   230  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   231  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   232      IfxPsi5s_MessagingBits_absent  = 0, /**< \brief No messaging bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   233      IfxPsi5s_MessagingBits_present = 1  /**< \brief 2 messaging bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   234  } IfxPsi5s_MessagingBits;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   235  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   236  /** \brief MODULE_PSI5S.NFC.NFx:Expected Psi5s frames
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   238  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   239  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   240      IfxPsi5s_NumberExpectedFrames_1 = 1,      /**< \brief 1 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   241      IfxPsi5s_NumberExpectedFrames_2,          /**< \brief 2 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   242      IfxPsi5s_NumberExpectedFrames_3,          /**< \brief 3 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   243      IfxPsi5s_NumberExpectedFrames_4,          /**< \brief 4 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   244      IfxPsi5s_NumberExpectedFrames_5,          /**< \brief 5 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   245      IfxPsi5s_NumberExpectedFrames_6           /**< \brief 6 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   246  } IfxPsi5s_NumberExpectedFrames;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   247  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   248  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   249   * Definition in Ifx_PSI5S.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   250   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   251  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   252  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   253      IfxPsi5s_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   254      IfxPsi5s_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   255  } IfxPsi5s_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   257  /** \brief OCDS Suspend Control (OCDS.SUS)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   258   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   259  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   261      IfxPsi5s_SuspendMode_none = 0,  /**< \brief No suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   262      IfxPsi5s_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   263      IfxPsi5s_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   264  } IfxPsi5s_SuspendMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   265  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   266  /** \brief MODULE_PSI5S.TSCNTA.B.TBS;MODULE_PSI5S.TSCNTB.B.TBS:Time base
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   267   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   268  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   269  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   270      IfxPsi5s_TimeBase_internal = 0,  /**< \brief Internal time stamp clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   271      IfxPsi5s_TimeBase_external = 1   /**< \brief External GTM inputs */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   272  } IfxPsi5s_TimeBase;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   274  /** \brief Start/stop Current time stamp count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   275   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   276  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   277  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   278      IfxPsi5s_TimeStampCount_stopped = 0,  /**< \brief CTS stopped */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   279      IfxPsi5s_TimeStampCount_started = 1   /**< \brief CTS Started */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   280  } IfxPsi5s_TimeStampCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   281  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   282  /** \brief MODULE_PSI5S.TSCNTx(x= A,B):Timestamp register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   283   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   284  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   285  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   286      IfxPsi5s_TimestampRegister_a = 0,  /**< \brief Timestamp register A */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   287      IfxPsi5s_TimestampRegister_b = 1   /**< \brief Timestamp register B */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   288  } IfxPsi5s_TimestampRegister;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   289  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   290  /** \brief MODULE_PSI5S.RCRAx.TSTS:Timestamp trigger
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   291   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   292  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   293  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   294      IfxPsi5s_TimestampTrigger_syncPulse = 0,  /**< \brief Timestamp trigger on sync pulse */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   295      IfxPsi5s_TimestampTrigger_frame     = 1   /**< \brief Timestamp trigger on any frame */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   296  } IfxPsi5s_TimestampTrigger;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   297  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   298  /** \brief MODULE_PSI5S.TSCNTA.B.ETB;MODULE_PSI5S.TSCNTB.B.ETB:Trigger Id
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   300  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   301  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   302      IfxPsi5s_Trigger_0 = 0,      /**< \brief Trigger 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   303      IfxPsi5s_Trigger_1,          /**< \brief Trigger 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   304      IfxPsi5s_Trigger_2,          /**< \brief Trigger 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   305      IfxPsi5s_Trigger_3,          /**< \brief Trigger 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   306      IfxPsi5s_Trigger_4,          /**< \brief Trigger 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   307      IfxPsi5s_Trigger_5,          /**< \brief Trigger 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   308      IfxPsi5s_Trigger_6,          /**< \brief Trigger 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   309      IfxPsi5s_Trigger_7           /**< \brief Trigger 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   310  } IfxPsi5s_Trigger;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   312  /** \brief specifies service request line defined in MODULE_PSI5S.INP[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   313   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   314  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   315  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   316      IfxPsi5s_TriggerOutput_0 = 0,      /**< \brief Triggered output line is TRIGO_0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   317      IfxPsi5s_TriggerOutput_1,          /**< \brief Triggered output line is TRIGO_1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   318      IfxPsi5s_TriggerOutput_2,          /**< \brief Triggered output line is TRIGO_2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   319      IfxPsi5s_TriggerOutput_3,          /**< \brief Triggered output line is TRIGO_3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   320      IfxPsi5s_TriggerOutput_4,          /**< \brief Triggered output line is TRIGO_4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   321      IfxPsi5s_TriggerOutput_5,          /**< \brief Triggered output line is TRIGO_5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   322      IfxPsi5s_TriggerOutput_6,          /**< \brief Triggered output line is TRIGO_6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   323      IfxPsi5s_TriggerOutput_7           /**< \brief Triggered output line is TRIGO_7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   324  } IfxPsi5s_TriggerOutput;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   325  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   326  /** \brief Trigger type defined in
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   327   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   328  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   329  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   330      IfxPsi5s_TriggerType_periodic = 0,  /**< \brief Periodic trigger */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   331      IfxPsi5s_TriggerType_external = 1   /**< \brief External trigger */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   332  } IfxPsi5s_TriggerType;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   333  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   334  /** \brief MODULE_PSI5S.RCRAx.UFCY(x=0,1,...7;y=0,1...5):UART frame count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   336  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   337  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   338      IfxPsi5s_UartFrameCount_3 = 0,      /**< \brief 3 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   339      IfxPsi5s_UartFrameCount_4,          /**< \brief 4 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   340      IfxPsi5s_UartFrameCount_5,          /**< \brief 5 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   341      IfxPsi5s_UartFrameCount_6           /**< \brief 6 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   342  } IfxPsi5s_UartFrameCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   344  /** \brief MODULE_PSI5S.RCRAx.WDMS:Watchdog timer mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   346  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   347  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   348      IfxPsi5s_WatchdogTimerMode_frame     = 0, /**< \brief Watch Dog Timer is restarted on reception of each recoverable frame (async mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   349      IfxPsi5s_WatchdogTimerMode_syncPulse = 1  /**< \brief Watch Dog Timer is restarted on Sync Pulse and stopped at reception of the last frame configured in NFC.NFx.(sync mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   350  } IfxPsi5s_WatchdogTimerMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   352  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   353  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   354  /** \brief List of Global interrupt sources or registers INTxG
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   355   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   356  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   357  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   358      IfxPsi5s_GlobalInterruptSource_tir   = 0,  /**< \brief Enable Interrupt Request TIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   359      IfxPsi5s_GlobalInterruptSource_rir   = 1,  /**< \brief Enable Interrupt Request RIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   360      IfxPsi5s_GlobalInterruptSource_eir   = 2,  /**< \brief Enable Interrupt Request EIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   361      IfxPsi5s_GlobalInterruptSource_tbir  = 3,  /**< \brief Enable Interrupt Request TBIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   362      IfxPsi5s_GlobalInterruptSource_xcrci = 4,  /**< \brief Enable Interrupt Request XCRCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   363      IfxPsi5s_GlobalInterruptSource_foi   = 5   /**< \brief Enable Interrupt Request FOI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   364  } IfxPsi5s_GlobalInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   366  /** \addtogroup IfxLld_Psi5s_Std_Channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   367   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   368  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   369  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   370  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   371  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   372  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   373  /** \brief fill data into tx buffer for direct transmission(in ASC mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   374   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   375   * \param data Pointer to data
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   376   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   377   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   378  IFX_INLINE void IfxPsi5s_fillAscTransmitBuffer(Ifx_PSI5S *psi5s, uint32 *data);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   380  /** \brief received buffer in ASC mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   381   * \param psi5s Pointer to PSI5s register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   382   * \return recieved buffer value in asc mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   383   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   384  IFX_INLINE uint32 IfxPsi5s_getReceiveBuffer(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   385  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   386  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   387  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   388  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   389  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   390  /** \brief Asc receiver is disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   391   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   392   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   394  IFX_EXTERN void IfxPsi5s_disableAscReceiver(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   396  /** \brief Enable ASC receiver
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   397   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   400  IFX_EXTERN void IfxPsi5s_enableAscReceiver(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   402  /** \brief Enable/disable any combination of channel trigger counters selected by mask parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   403   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   404   * \param channels specifies the channel trigger counters which should be enabled/disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   405   * \param mask specifies the channel trigger counters which should be modified
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   406   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   407   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   408  IFX_EXTERN void IfxPsi5s_enableDisableChannelTriggerCounters(Ifx_PSI5S *psi5s, uint32 channels, uint32 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   410  /** \brief Enable/disable any combination of channels selected by mask parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   411   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   412   * \param channels specifies the channels which should be enabled/disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   413   * \param mask specifies the channels which should be modified
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   414   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   416  IFX_EXTERN void IfxPsi5s_enableDisableChannels(Ifx_PSI5S *psi5s, uint32 channels, uint32 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   417  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   418  /** \brief Baudrate frequency in HZ
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   419   * \param psi5s Pointer to PSI5s Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   420   * \param synchMode Pointer to the configuration structure of ASC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   421   * \param divMode specifies fractional/normal divider mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   422   * \param baudrateSelection select sbaudrate prescaler
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   423   * \return baudrate in HZ
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   424   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   425  IFX_EXTERN float32 IfxPsi5s_getBaudrate(Ifx_PSI5S *psi5s, boolean synchMode, boolean divMode, IfxPsi5s_AscBaudratePrescalar baudrateSelection);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   426  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   427  /** \brief Start ASC transactions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   428   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   429   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   430   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   431  IFX_EXTERN void IfxPsi5s_startAscTransactions(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   432  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   433  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   434   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   435   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   436   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   437  IFX_EXTERN void IfxPsi5s_stopAscTransactions(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   438  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   439  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   441  /** \addtogroup IfxLld_Psi5s_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   442   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   444  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   445  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   446  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   448  /** \brief Initializes a CLK output
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   449   * \param clk the CLK Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   450   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   451   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   452   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   454  IFX_INLINE void IfxPsi5s_initClkPin(const IfxPsi5s_Clk_Out *clk, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   456  /** \brief Initializes a RX input
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   457   * \param rx the RX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   458   * \param inputMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   459   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   460   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   462  IFX_INLINE void IfxPsi5s_initRxPin(const IfxPsi5s_Rx_In *rx, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   464  /** \brief Initializes a TX output
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   465   * \param tx the TX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   466   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   467   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   468   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   469   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   470  IFX_INLINE void IfxPsi5s_initTxPin(const IfxPsi5s_Tx_Out *tx, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   471  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   472  /** \brief Selects the alternate input for Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   473   * \param psi5s pointer to PSI5S registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   474   * \param alti alternate input selection of Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   475   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   476   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   477  IFX_INLINE void IfxPsi5s_setRxInput(Ifx_PSI5S *psi5s, IfxPsi5s_AlternateInput alti);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   479  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   481  /** \addtogroup IfxLld_Psi5s_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   482   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   483  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   484  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   485  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   486  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   487  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   488  /** \brief Enable /Disable Global Interrupt Source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   489   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   490   * \param interruptSource specifies Global Interrupt Source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   491   * \param enabled enable /disable Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   494  IFX_INLINE void IfxPsi5s_enableGlobalInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   496  /** \brief enable / disable interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   497   * \param psi5s pointer to psi5s register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   498   * \param channel specifies channel number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   499   * \param interruptSource specifies interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   500   * \param enabled Enable / Disable the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   501   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   502   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   503  IFX_INLINE void IfxPsi5s_enableInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   504  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   505  /** \brief Get  Receive Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   506   * \param psi5s Pointer to PSI5S Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   507   * \return Receive Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   508   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   509  IFX_INLINE boolean IfxPsi5s_getReceiveInterruptStatus(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   510  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   511  /** \brief get Transmit Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   512   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   513   * \return Transmit Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   514   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   515  IFX_INLINE boolean IfxPsi5s_getTransmitInterruptStatus(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   516  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   517  /** \brief Sets the node pointers of PSI5-S ASC and for XCRCI and FOI
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   518   * \param psi5s Pointer to PSI5S Register Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   519   * \param nodePointer specifies node pointer source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   520   * \param triggerOutputLine select trigger Output Line
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   521   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   522   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   523  IFX_INLINE void IfxPsi5s_setGlobalInterruptNodePointer(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource nodePointer, IfxPsi5s_Trigger triggerOutputLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   525  /** \brief set interrupt node pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   526   * \param psi5s specifies the pointer to PSI5S Module register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   527   * \param channel specifies channel number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   528   * \param nodePointer specifies node pointer source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   529   * \param triggerOutputLine select service request line
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   530   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   531   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   532  IFX_INLINE void IfxPsi5s_setInterruptNodePointer(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource nodePointer, IfxPsi5s_Trigger triggerOutputLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   533  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   534  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   536  /** \addtogroup IfxLld_Psi5s_Std_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   537   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   539  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   540  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   541  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   542  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   543  /** \brief clear time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   544   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   545   * \param clearTimeStampCounter clear time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   546   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   548  IFX_INLINE void IfxPsi5s_clearTimeStampCounterA(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   550  /** \brief Clear Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   551   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   552   * \param clearTimeStampCounter clear Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   553   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   554   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   555  IFX_INLINE void IfxPsi5s_clearTimeStampCounterB(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   556  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   557  /** \brief Returns the module's suspend state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   558   * TRUE :if module is suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   559   * FALSE:if module is not yet suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   560   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   561   * \return Suspend status (TRUE / FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   562   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   563  IFX_INLINE boolean IfxPsi5s_isModuleSuspended(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   565  /** \brief enable /disable loop back mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   566   * \param psi5s pointer to PSI5S Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   567   * \param enabled enable/disable loop back mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   568   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   570  IFX_INLINE void IfxPsi5s_setLoopBackMode(Ifx_PSI5S *psi5s, IfxPsi5s_LoopBackMode enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   572  /** \brief enable / disable sleep mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   573   * \param psi5s Pointer to PSI5S register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   574   * \param mode sleep mode (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   575   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   576   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   577  IFX_INLINE void IfxPsi5s_setSleepMode(Ifx_PSI5S *psi5s, IfxPsi5s_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   578  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   579  /** \brief Configure the Module to Hard/Soft suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   580   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   581   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   582   * \param mode Module suspend mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   583   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   584   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   585  IFX_INLINE void IfxPsi5s_setSuspendMode(Ifx_PSI5S *psi5s, IfxPsi5s_SuspendMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   587  /** \brief start time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   588   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   589   * \param startTimeStamp Start/stop current time stamp count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   590   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   591   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   592  IFX_INLINE void IfxPsi5s_setTimeStampCounterA(Ifx_PSI5S *psi5s, IfxPsi5s_TimeStampCount startTimeStamp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   593  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   594  /** \brief Start Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   595   * \param psi5s Pointer to PSI5S Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   596   * \param startTimeStamp start time stamp
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   597   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   598   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   599  IFX_INLINE void IfxPsi5s_setTimeStampCounterB(Ifx_PSI5S *psi5s, IfxPsi5s_TimeStampCount startTimeStamp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   601  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   602  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   603  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   605  /** \brief Disable PSI5S kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   606   * \param psi5s pointer to the base of PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   607   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   608   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   609  IFX_EXTERN void IfxPsi5s_disableModule(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   610  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   611  /** \brief Get the received psi5s frame for the channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   612   * \param psi5s Pointer to PSI5S Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   613   * \param channelId channel ID
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   614   * \return Frame Status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   615   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   616  IFX_EXTERN boolean IfxPsi5s_getReadFrameStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   617  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   618  /** \brief Indicates the successful reception of a frame.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   619   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   620   * \param channelId Channel Number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   621   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   622  IFX_EXTERN boolean IfxPsi5s_getSuccessfullyReceivedFrameStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   623  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   624  /** \brief resets PSI5S kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   625   * \param psi5s pointer to PSI5S registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   626   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   627   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   628  IFX_EXTERN void IfxPsi5s_resetModule(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   629  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   630  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   632  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   633  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   634  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   635  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   636  /** \brief Shows status of any interrupt in any channell in PSI5S.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   637   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   638   * \param channel Channel ID of channel whose interrupt status is required
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   639   * \param interruptSource Interrupt Source to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   640   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   641  IFX_INLINE boolean IfxPsi5s_getInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   643  /** \brief Clears the status of any interrupt of any  PSI5-S channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   644   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   645   * \param channel Channel ID of channel whose interrupt needs to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   646   * \param interruptSource Interrupt Source to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   647   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   648   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   649  IFX_INLINE void IfxPsi5s_clearInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   650  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   651  /** \brief Show the status of any global interrupt, i.e. of the ASC inside PSI5-S and XCRCI indicating a non recoverable message is received.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   652   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   653   * \param interruptSource Interrupt source under consideration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   654   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   655  IFX_INLINE boolean IfxPsi5s_getGlobalInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   657  /** \brief Clears the status of any interrupt of the ASC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   658   * integrated in PSI5-S and for XCRCI and FOI
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   659   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   660   * \param interruptSource Interrupt source under consideration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   661   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   662   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   663  IFX_INLINE void IfxPsi5s_clearGlobalInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   664  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   665  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   666  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   667  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   669  /** \brief Get address of the SRC register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   670   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   671   * \param channel Channel ID of the channel to get the corresponding SRC pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   672   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   673  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxPsi5s_getSrcAddress(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   675  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   676  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   677  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   678  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   679  IFX_INLINE void IfxPsi5s_clearTimeStampCounterA(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   680  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   681      psi5s->TSCNTA.B.CLRA = clearTimeStampCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   682  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   683  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   684  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   685  IFX_INLINE void IfxPsi5s_clearTimeStampCounterB(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   686  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   687      psi5s->TSCNTA.B.CLRB = clearTimeStampCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   688  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   689  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   690  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   691  IFX_INLINE void IfxPsi5s_enableGlobalInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   692  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   693      psi5s->INTENG.U |= (enabled << interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   694  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   695  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   696  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   697  IFX_INLINE void IfxPsi5s_enableInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   698  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   699      psi5s->INTEN[channel].U |= (enabled << interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   700  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   701  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   702  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   703  IFX_INLINE void IfxPsi5s_fillAscTransmitBuffer(Ifx_PSI5S *psi5s, uint32 *data)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   704  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   705      psi5s->TBUF.U = *data;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   706  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   707  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   708  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   709  IFX_INLINE uint32 IfxPsi5s_getReceiveBuffer(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   710  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   711      return psi5s->RBUF.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   712  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   713  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   714  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   715  IFX_INLINE boolean IfxPsi5s_getReceiveInterruptStatus(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   716  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   717      return (boolean)psi5s->INTSTATG.B.RIR;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   718  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   719  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   720  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   721  IFX_INLINE boolean IfxPsi5s_getTransmitInterruptStatus(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   722  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   723      return (boolean)psi5s->INTSTATG.B.TIR;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   724  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   725  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   726  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   727  IFX_INLINE void IfxPsi5s_initClkPin(const IfxPsi5s_Clk_Out *clk, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   728  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   729      if (clk->pin.port != NULL_PTR)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   730      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   731          IfxPort_setPinModeOutput(clk->pin.port, clk->pin.pinIndex, outputMode, clk->select);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   732          IfxPort_setPinPadDriver(clk->pin.port, clk->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   733      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   734  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   735  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   737  IFX_INLINE void IfxPsi5s_initRxPin(const IfxPsi5s_Rx_In *rx, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   738  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   739      if (rx->pin.port != NULL_PTR)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   740      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   741          IfxPort_setPinModeInput(rx->pin.port, rx->pin.pinIndex, inputMode);
	ld.bu	d4,[a15]8
.L538:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89  /** \brief specifies LVDS-M or LVDS-H mode as declare in Register MODULE_PORT.LPCRx.LVDSM
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_LvdsMode_high   = 0, /**< \brief LVDS-H Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_LvdsMode_medium = 1  /**< \brief LVDS-M Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95  } IfxPort_LvdsMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143          IfxPort_OutputMode_openDrain = 0x18U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144          IfxPort_OutputMode_none      = 0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160      IfxPort_PadDriver_ttlSpeed4            = 11, /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161      IfxPort_PadDriver_ttl3v3Speed1         = 12, /**< \brief 3.3v Pad supply speed1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162      IfxPort_PadDriver_ttl3v3Speed2         = 13, /**< \brief 3.3v Pad supply speed2 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163      IfxPort_PadDriver_ttl3v3Speed3         = 14, /**< \brief 3.3v Pad supply speed3 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadDriver_ttl3v3Speed4         = 15  /**< \brief 3.3v Pad supply speed4 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171      IfxPort_PadSupply_3v = 0,  /**< \brief select,3.3v */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      IfxPort_PadSupply_5v = 1   /**< \brief select,5V */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  /** \brief enable analog/digital mode for port pin, as Defined in MODULE_PORTx.PDISC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179      IfxPort_PinFunctionMode_digital = 0,  /**< \brief Pad Pn.x is enabled and can be selected for digital function */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      IfxPort_PinFunctionMode_analog  = 1   /**< \brief Pad Pn.x is enabled and can be selected for analog function */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181  } IfxPort_PinFunctionMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197  /** \brief Enable/DIsable LVDS direction TX or RX
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201      IfxPort_LvdsDirection_rx = 0,  /**< \brief LVDS direction RX */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202      IfxPort_LvdsDirection_tx = 1   /**< \brief LVDS direction TX */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203  } IfxPort_LvdsDirection;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205  /** \brief Enable/DIsable LVDS Path.declared in MODULE_PORTx.LPCRx.TX_EN and MODULE_PORTx.LPCRx.RX_EN
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209      IfxPort_LvdsPath_enable  = 0, /**< \brief LVDS enabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210      IfxPort_LvdsPath_disable = 1  /**< \brief LVDS disabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211  } IfxPort_LvdsPath;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213  /** \brief Specifies whether LVDS pull down resistor must be enabled/disabled as declared in Register MODULE_PORT.LPCRx.PWDPD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217      IfxPort_LvdsPullDown_disable = 0,  /**< \brief Disable Pull Down resistor */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218      IfxPort_LvdsPullDown_enable  = 1   /**< \brief Enable Pull Down resistor */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219  } IfxPort_LvdsPullDown;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221  /** \brief Specifies LVDS-Termination mode as declare in Register MODULE_PORT.LPCRx.TERM
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225      IfxPort_LvdsTerminationMode_external = 0,  /**< \brief Termination Mode External */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226      IfxPort_LvdsTerminationMode_internal = 1   /**< \brief Termination Mode Internal */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227  } IfxPort_LvdsTerminationMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235  /** \brief To Configure LVDS mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239      IfxPort_LvdsMode     lvdsMode;                   /**< \brief specifies LVDS-M or LVDS-H mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240      IfxPort_ControlledBy enablePortControlled;       /**< \brief specifies whether LVDS is controlled by PORT or HSCT */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241      IfxPort_PadSupply    padSupply;                  /**< \brief specify supply voltage */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242  } IfxPort_LvdsConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286  /** \brief set analog/digital mode for pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param port Pointer to Port register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \param pinIndex specifies the pin index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   * \param mode set analog/digital mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292  IFX_INLINE void IfxPort_setPinFunctionMode(Ifx_P *port, uint8 pinIndex, IfxPort_PinFunctionMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395   * /code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   *     {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   *     }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417   *     }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief set lvds mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port pointer to Port Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex specifies pin index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param pinMode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param lvds config LVDS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448  IFX_EXTERN void IfxPort_setPinModeLVDS(Ifx_P *port, uint8 pinIndex, IfxPort_Mode pinMode, IfxPort_LvdsConfig *lvds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465  /** \brief Enable the Pin Controller Selection.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * \param pinIndex Specifies the pin for which the mode has to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470  IFX_EXTERN void IfxPort_setPinControllerSelection(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  /** \brief Disable the Pin Controller Selection.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474   * \param pinIndex Specifies the pin for which the mode has to be cleared.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477  IFX_EXTERN void IfxPort_resetPinControllerSelection(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526  /** \brief Returns the module address of the selected Port module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527   * \param port Pointer to PORT module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528   * \return PORT module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   557   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   558   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   559   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   560   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   561   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   562   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   563   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   564   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   565   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   566   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   567   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   568   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   569  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   571  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   572   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   573   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   574   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   575   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   578   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   579   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   580   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   581   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   582   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   583   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   584   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   585  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   587  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   589  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   590  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   591  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   592  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   593  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   594   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   595   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   596   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   597   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   598   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   599   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   600   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   601   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   602  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   603  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   604  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   605   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   606   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   607   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   608   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   609   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   610   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   611   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   612   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   613  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   615  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   616   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   617   * \param pinIndex Specifies the pin for which the mode has to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   618   * \param mode Selects the controller for the port pin(Tricore,EVADC,GETH,SCR etc)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   619   * 0-> normal function
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   620   * 1-> Alternate functionality(SCR pin,EVADC PDD,GETH RGMII/MII etc)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   621   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   622   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   623  IFX_EXTERN void IfxPort_modifyPinControllerSelection(Ifx_P *port, uint8 pinIndex, boolean mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   625  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   626  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   627  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   628  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   629  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   630  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   631      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   632  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   634  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   635  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   636  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   637      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   638  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   640  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   641  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   642  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   643      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   644  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   646  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   647  IFX_INLINE void IfxPort_setPinFunctionMode(Ifx_P *port, uint8 pinIndex, IfxPort_PinFunctionMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   648  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   649      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   650  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   651      IfxScuWdt_clearCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   652      port->PDISC.U |= (mode << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   653      IfxScuWdt_setCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   654  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   657  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   658  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   659      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   660  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   661  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   663  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   664  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   665      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   669  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   671      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	extr.u	d5,d15,#0,#8
	call	IfxPort_setPinMode
.L241:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   742          IfxPort_setPinPadDriver(rx->pin.port, rx->pin.pinIndex, padDriver);
	ld.a	a4,[a15]4
.L539:
	ld.bu	d4,[a15]8
.L540:
	mov	d5,d9
	call	IfxPort_setPinPadDriver
.L541:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   743          IfxPsi5s_setRxInput(rx->module, (IfxPsi5s_AlternateInput)rx->select);
	ld.a	a2,[a15]
.L542:
	ld.bu	d15,[a15]12
.L250:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   744      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   745  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   746  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   747  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   748  IFX_INLINE void IfxPsi5s_initTxPin(const IfxPsi5s_Tx_Out *tx, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   749  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   750      if (tx->pin.port != NULL_PTR)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   751      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   752          IfxPort_setPinModeOutput(tx->pin.port, tx->pin.pinIndex, outputMode, tx->select);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   753          IfxPort_setPinPadDriver(tx->pin.port, tx->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   754      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   755  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   756  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   757  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   758  IFX_INLINE boolean IfxPsi5s_isModuleSuspended(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   759  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   760      Ifx_PSI5S_OCS ocs;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   761  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   762      // read the status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   763      ocs.U = psi5s->OCS.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   764  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   765      // return the status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   766      return ocs.B.SUSSTA;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   767  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   768  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   769  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   770  IFX_INLINE void IfxPsi5s_setGlobalInterruptNodePointer(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource nodePointer, IfxPsi5s_Trigger triggerOutputLine)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   771  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   772      psi5s->INPG.U |= (triggerOutputLine << (nodePointer * 3));
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   773  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   774  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   775  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   776  IFX_INLINE void IfxPsi5s_setInterruptNodePointer(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource nodePointer, IfxPsi5s_Trigger triggerOutputLine)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   777  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   778      psi5s->INP[channel].U |= (triggerOutputLine << (nodePointer * 3));
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   779  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   780  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   781  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   782  IFX_INLINE void IfxPsi5s_setLoopBackMode(Ifx_PSI5S *psi5s, IfxPsi5s_LoopBackMode enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   783  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   784      psi5s->CON.B.LB = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   785  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   786  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   787  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   788  IFX_INLINE void IfxPsi5s_setRxInput(Ifx_PSI5S *psi5s, IfxPsi5s_AlternateInput alti)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   789  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   790      psi5s->IOCR.B.ALTI = alti;
	ld.bu	d0,[a2]40
.L543:
	insert	d15,d0,d15,#0,#2
	st.b	[a2]40,d15

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   739      if (rx->pin.port != NULL_PTR)      (inlined)
.L27:
.L26:
	ld.a	a15,[a12]8
.L433:
	jz.a	a15,.L28
.L259:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     2   * \file IfxPsi5s.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     3   * \brief PSI5S  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     4   * \ingroup IfxLld_Psi5s
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    10   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    11   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    14   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    16   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    19   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    20   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    21   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    22   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    23   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    24   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    25   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    27   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    28   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    29   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    30   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    31   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    32   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    33   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    40   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    43   * \defgroup IfxLld_Psi5s_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    44   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    45   * \defgroup IfxLld_Psi5s_Std_Channel Channel Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    46   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    47   * \defgroup IfxLld_Psi5s_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    48   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    49   * \defgroup IfxLld_Psi5s_Std_Interrupt Interrupt configuration functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    50   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    51   * \defgroup IfxLld_Psi5s_Std_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    52   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    53   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    54  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    55  #ifndef IFXPSI5S_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    56  #define IFXPSI5S_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    57  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    59  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    60  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    61  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    62  #include "_Impl/IfxPsi5s_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    63  #include "_PinMap/IfxPsi5s_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    64  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    65  #include "IfxPsi5s_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    66  #include "IfxPsi5s_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    67  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    68  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    69  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    70  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    71  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    72  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    73  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    74  /** \addtogroup IfxLld_Psi5s_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    75   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    76  /** \brief MODULE_PSI5S.IOCR.ALTI:Alternate input
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    77   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    78  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    79  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    80      IfxPsi5s_AlternateInput_0 = 0,      /**< \brief Alternate Input 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    81      IfxPsi5s_AlternateInput_1,          /**< \brief Alternate Input 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    82      IfxPsi5s_AlternateInput_2,          /**< \brief Alternate Input 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    83      IfxPsi5s_AlternateInput_3           /**< \brief Alternate Input 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    84  } IfxPsi5s_AlternateInput;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    86  /** \brief MODULE_PSI5S.BG.BR_VALUE:Baudrate prescalar select
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    87   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    88  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    89  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    90      IfxPsi5s_AscBaudratePrescalar_divideBy2 = 0,  /**< \brief Divide by 2 is selected for baudrate timer prescalar */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    91      IfxPsi5s_AscBaudratePrescalar_divideBy3 = 1   /**< \brief Divide by 3 is selected for baudrate timer prescalar */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    92  } IfxPsi5s_AscBaudratePrescalar;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    94  /** \brief MODULE_PSI5S.CON.M:ASC mode of operation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    95   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    96  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    97  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    98      IfxPsi5s_AscMode_sync                     = 0,  /**< \brief Synchronous mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    99      IfxPsi5s_AscMode_async_8bitData           = 1,  /**< \brief Asynchronous mode with 8 bit data */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   100      IfxPsi5s_AscMode_async_7bitDataWithParity = 3,  /**< \brief Asynchronous mode with 7 bit data with parity */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   101      IfxPsi5s_AscMode_async_9bitData           = 4,  /**< \brief Asynchronous mode with 9 bit data */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   102      IfxPsi5s_AscMode_async_8bitDataWithWakeup = 5,  /**< \brief Asynchronous mode with 8 bit data with wakeup */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   103      IfxPsi5s_AscMode_async_8bitDataWithParity = 7   /**< \brief Asynchronous mode with 8 bit data with parity */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   104  } IfxPsi5s_AscMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   106  /** \brief MODULE_PSI5S.CON.STP: Number of stop bits
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   110      IfxPsi5s_AscStopBits_1 = 0,      /**< \brief 1 stop bit  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   111      IfxPsi5s_AscStopBits_2           /**< \brief 2 stop bit  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   112  } IfxPsi5s_AscStopBits;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   113  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   114  /** \brief PSI5S Channel Id defined in MODULE_PSI5S.RDS.B.CID.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   115   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   116  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   117  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   118      IfxPsi5s_ChannelId_0 = 0,     /**< \brief Ifx_PSI5S Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   119      IfxPsi5s_ChannelId_1,         /**< \brief Ifx_PSI5S Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   120      IfxPsi5s_ChannelId_2,         /**< \brief Ifx_PSI5S Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   121      IfxPsi5s_ChannelId_3,         /**< \brief Ifx_PSI5S Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   122      IfxPsi5s_ChannelId_4,         /**< \brief Ifx_PSI5S Channel 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   123      IfxPsi5s_ChannelId_5,         /**< \brief Ifx_PSI5S Channel 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   124      IfxPsi5s_ChannelId_6,         /**< \brief Ifx_PSI5S Channel 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   125      IfxPsi5s_ChannelId_7,         /**< \brief Ifx_PSI5S Channel 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   126      IfxPsi5s_ChannelId_none = -1  /**< \brief None of the Ifx_PSI5S Channels */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   127  } IfxPsi5s_ChannelId;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   129  /** \brief Clock Selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   131  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   132  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   133      IfxPsi5s_ClockType_fracDiv    = 0,  /**< \brief Fractional Divide clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   134      IfxPsi5s_ClockType_timeStamp  = 1,  /**< \brief Timestamp clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   135      IfxPsi5s_ClockType_ascFracDiv = 2,  /**< \brief Asc Fractional divider clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   136      IfxPsi5s_ClockType_ascOutput  = 3   /**< \brief Asc output clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   137  } IfxPsi5s_ClockType;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   139  /** \brief MODULE_PSI5S.RCRAx.CRCy(x= 0,1,..7:y=0,1,..,5),MODULE_PSI5S.RCRBx.CRCy(x= 0,1,..7:y=0,1,..,5)CRC or parity
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   140   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   141  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   142  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   143      IfxPsi5s_CrcOrParity_parity = 0,  /**< \brief parity selection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   144      IfxPsi5s_CrcOrParity_crc    = 1   /**< \brief CRC selection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   145  } IfxPsi5s_CrcOrParity;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   147  /** \brief MODULE_PSI5S.FDR.DM;MODULE_PSI5S.FDRT.B.DM:Divider mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   148   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   149  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   150  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   151      IfxPsi5s_DividerMode_spb        = 0,  /**< \brief divider mode is off */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   152      IfxPsi5s_DividerMode_normal     = 1,  /**< \brief divider mode is normal */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   153      IfxPsi5s_DividerMode_fractional = 2,  /**< \brief divider mode is fractional */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   154      IfxPsi5s_DividerMode_off        = 3   /**< \brief divider mode is off */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   155  } IfxPsi5s_DividerMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   156  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   157  /** \brief MODULE_PSI5S.SCRx.EPS(x=0,1,...,7):Enhanced protocol types
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   158   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   159  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   160  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   161      IfxPsi5s_EnhancedProtocol_toothGapMethod              = 0,  /**< \brief toothGapMethod Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   162      IfxPsi5s_EnhancedProtocol_pulseWidth_frameFormat_1to3 = 1,  /**< \brief pulseWidth_frameFormat_1to3 Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   163      IfxPsi5s_EnhancedProtocol_pulseWidth_frameFormat_4    = 3   /**< \brief pulseWidth_frameFormat_4 Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   164  } IfxPsi5s_EnhancedProtocol;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   166  /** \brief MODULE_PSI5S.RCRAx.FIDS(x=0,1,....,7):.Frame ID updation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   167   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   168  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   169  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   170      IfxPsi5s_FrameId_frameHeader   = 0, /**< \brief Frame ID is updated from packet frame header (Sync mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   171      IfxPsi5s_FrameId_rollingNumber = 1  /**< \brief Frame ID is a rolling number 0 .. 5 copied from FCNT */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   172  } IfxPsi5s_FrameId;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   173  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   174  /** \brief MODULE_PSI5S.GCR.IDT:Idle time bit count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   178      IfxPsi5s_IdleTime_1 = 0,      /**< \brief 1 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   179      IfxPsi5s_IdleTime_2,          /**< \brief 2 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   180      IfxPsi5s_IdleTime_3,          /**< \brief 3 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   181      IfxPsi5s_IdleTime_4,          /**< \brief 4 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   182      IfxPsi5s_IdleTime_5,          /**< \brief 5 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   183      IfxPsi5s_IdleTime_6,          /**< \brief 6 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   184      IfxPsi5s_IdleTime_7,          /**< \brief 7 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   185      IfxPsi5s_IdleTime_8,          /**< \brief 8 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   186      IfxPsi5s_IdleTime_9,          /**< \brief 9 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   187      IfxPsi5s_IdleTime_10,         /**< \brief 10 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   188      IfxPsi5s_IdleTime_11,         /**< \brief 11 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   189      IfxPsi5s_IdleTime_12,         /**< \brief 12 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   190      IfxPsi5s_IdleTime_13,         /**< \brief 13 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   191      IfxPsi5s_IdleTime_14,         /**< \brief 14 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   192      IfxPsi5s_IdleTime_15,         /**< \brief 15 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   193      IfxPsi5s_IdleTime_16          /**< \brief 16 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   194  } IfxPsi5s_IdleTime;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   195  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   196  /** \brief Enable/Disable interrupt request .defined in MODULE_PSI5S.INTEN[x]
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   198  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   199  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   200      IfxPsi5s_InterruptRequest_disabled = 0,  /**< \brief no interrupt request can be generated for this source */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   201      IfxPsi5s_InterruptRequest_enabled  = 1   /**< \brief An Interrupt request can be generated for source */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   202  } IfxPsi5s_InterruptRequest;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   203  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   204  /** \brief Enable/Disable the interrupt and  select interrupt source pointer defined in MODULE_PSI5S.INTEN[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   205   * and MODULE_PSI5S.INP[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   206   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   207  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   208  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   209      IfxPsi5s_InterruptSource_rsi  = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   210      IfxPsi5s_InterruptSource_rdi  = 1,  /**< \brief Enable Interrupt Request RDI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   211      IfxPsi5s_InterruptSource_rbi  = 2,  /**< \brief Enable Interrupt Request RBI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   212      IfxPsi5s_InterruptSource_tei  = 3,  /**< \brief Enable Interrupt Request TEI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   213      IfxPsi5s_InterruptSource_chci = 4,  /**< \brief Enable Interrupt Request CHCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   214      IfxPsi5s_InterruptSource_crci = 5,  /**< \brief Enable Interrupt Request CRCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   215      IfxPsi5s_InterruptSource_tpi  = 6,  /**< \brief Enable Interrupt Request TPI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   216      IfxPsi5s_InterruptSource_tpoi = 7,  /**< \brief Enable Interrupt Request TPOI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   217      IfxPsi5s_InterruptSource_hdi  = 8   /**< \brief Enable Interrupt Request HDI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   218  } IfxPsi5s_InterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   219  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   220  /** \brief Enable/Disable Loop back Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   221   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   222  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   223  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   224      IfxPsi5s_LoopBackMode_disable = 0,  /**< \brief loop-back mode disabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   225      IfxPsi5s_LoopBackMode_enable  = 1   /**< \brief loop-back mode enabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   226  } IfxPsi5s_LoopBackMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   228  /** \brief Messaging bits presence
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   229   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   230  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   231  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   232      IfxPsi5s_MessagingBits_absent  = 0, /**< \brief No messaging bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   233      IfxPsi5s_MessagingBits_present = 1  /**< \brief 2 messaging bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   234  } IfxPsi5s_MessagingBits;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   235  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   236  /** \brief MODULE_PSI5S.NFC.NFx:Expected Psi5s frames
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   238  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   239  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   240      IfxPsi5s_NumberExpectedFrames_1 = 1,      /**< \brief 1 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   241      IfxPsi5s_NumberExpectedFrames_2,          /**< \brief 2 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   242      IfxPsi5s_NumberExpectedFrames_3,          /**< \brief 3 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   243      IfxPsi5s_NumberExpectedFrames_4,          /**< \brief 4 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   244      IfxPsi5s_NumberExpectedFrames_5,          /**< \brief 5 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   245      IfxPsi5s_NumberExpectedFrames_6           /**< \brief 6 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   246  } IfxPsi5s_NumberExpectedFrames;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   247  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   248  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   249   * Definition in Ifx_PSI5S.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   250   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   251  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   252  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   253      IfxPsi5s_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   254      IfxPsi5s_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   255  } IfxPsi5s_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   257  /** \brief OCDS Suspend Control (OCDS.SUS)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   258   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   259  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   261      IfxPsi5s_SuspendMode_none = 0,  /**< \brief No suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   262      IfxPsi5s_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   263      IfxPsi5s_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   264  } IfxPsi5s_SuspendMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   265  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   266  /** \brief MODULE_PSI5S.TSCNTA.B.TBS;MODULE_PSI5S.TSCNTB.B.TBS:Time base
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   267   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   268  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   269  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   270      IfxPsi5s_TimeBase_internal = 0,  /**< \brief Internal time stamp clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   271      IfxPsi5s_TimeBase_external = 1   /**< \brief External GTM inputs */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   272  } IfxPsi5s_TimeBase;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   274  /** \brief Start/stop Current time stamp count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   275   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   276  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   277  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   278      IfxPsi5s_TimeStampCount_stopped = 0,  /**< \brief CTS stopped */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   279      IfxPsi5s_TimeStampCount_started = 1   /**< \brief CTS Started */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   280  } IfxPsi5s_TimeStampCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   281  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   282  /** \brief MODULE_PSI5S.TSCNTx(x= A,B):Timestamp register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   283   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   284  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   285  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   286      IfxPsi5s_TimestampRegister_a = 0,  /**< \brief Timestamp register A */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   287      IfxPsi5s_TimestampRegister_b = 1   /**< \brief Timestamp register B */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   288  } IfxPsi5s_TimestampRegister;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   289  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   290  /** \brief MODULE_PSI5S.RCRAx.TSTS:Timestamp trigger
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   291   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   292  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   293  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   294      IfxPsi5s_TimestampTrigger_syncPulse = 0,  /**< \brief Timestamp trigger on sync pulse */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   295      IfxPsi5s_TimestampTrigger_frame     = 1   /**< \brief Timestamp trigger on any frame */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   296  } IfxPsi5s_TimestampTrigger;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   297  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   298  /** \brief MODULE_PSI5S.TSCNTA.B.ETB;MODULE_PSI5S.TSCNTB.B.ETB:Trigger Id
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   300  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   301  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   302      IfxPsi5s_Trigger_0 = 0,      /**< \brief Trigger 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   303      IfxPsi5s_Trigger_1,          /**< \brief Trigger 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   304      IfxPsi5s_Trigger_2,          /**< \brief Trigger 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   305      IfxPsi5s_Trigger_3,          /**< \brief Trigger 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   306      IfxPsi5s_Trigger_4,          /**< \brief Trigger 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   307      IfxPsi5s_Trigger_5,          /**< \brief Trigger 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   308      IfxPsi5s_Trigger_6,          /**< \brief Trigger 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   309      IfxPsi5s_Trigger_7           /**< \brief Trigger 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   310  } IfxPsi5s_Trigger;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   312  /** \brief specifies service request line defined in MODULE_PSI5S.INP[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   313   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   314  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   315  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   316      IfxPsi5s_TriggerOutput_0 = 0,      /**< \brief Triggered output line is TRIGO_0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   317      IfxPsi5s_TriggerOutput_1,          /**< \brief Triggered output line is TRIGO_1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   318      IfxPsi5s_TriggerOutput_2,          /**< \brief Triggered output line is TRIGO_2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   319      IfxPsi5s_TriggerOutput_3,          /**< \brief Triggered output line is TRIGO_3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   320      IfxPsi5s_TriggerOutput_4,          /**< \brief Triggered output line is TRIGO_4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   321      IfxPsi5s_TriggerOutput_5,          /**< \brief Triggered output line is TRIGO_5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   322      IfxPsi5s_TriggerOutput_6,          /**< \brief Triggered output line is TRIGO_6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   323      IfxPsi5s_TriggerOutput_7           /**< \brief Triggered output line is TRIGO_7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   324  } IfxPsi5s_TriggerOutput;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   325  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   326  /** \brief Trigger type defined in
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   327   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   328  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   329  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   330      IfxPsi5s_TriggerType_periodic = 0,  /**< \brief Periodic trigger */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   331      IfxPsi5s_TriggerType_external = 1   /**< \brief External trigger */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   332  } IfxPsi5s_TriggerType;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   333  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   334  /** \brief MODULE_PSI5S.RCRAx.UFCY(x=0,1,...7;y=0,1...5):UART frame count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   336  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   337  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   338      IfxPsi5s_UartFrameCount_3 = 0,      /**< \brief 3 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   339      IfxPsi5s_UartFrameCount_4,          /**< \brief 4 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   340      IfxPsi5s_UartFrameCount_5,          /**< \brief 5 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   341      IfxPsi5s_UartFrameCount_6           /**< \brief 6 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   342  } IfxPsi5s_UartFrameCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   344  /** \brief MODULE_PSI5S.RCRAx.WDMS:Watchdog timer mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   346  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   347  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   348      IfxPsi5s_WatchdogTimerMode_frame     = 0, /**< \brief Watch Dog Timer is restarted on reception of each recoverable frame (async mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   349      IfxPsi5s_WatchdogTimerMode_syncPulse = 1  /**< \brief Watch Dog Timer is restarted on Sync Pulse and stopped at reception of the last frame configured in NFC.NFx.(sync mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   350  } IfxPsi5s_WatchdogTimerMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   352  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   353  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   354  /** \brief List of Global interrupt sources or registers INTxG
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   355   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   356  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   357  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   358      IfxPsi5s_GlobalInterruptSource_tir   = 0,  /**< \brief Enable Interrupt Request TIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   359      IfxPsi5s_GlobalInterruptSource_rir   = 1,  /**< \brief Enable Interrupt Request RIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   360      IfxPsi5s_GlobalInterruptSource_eir   = 2,  /**< \brief Enable Interrupt Request EIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   361      IfxPsi5s_GlobalInterruptSource_tbir  = 3,  /**< \brief Enable Interrupt Request TBIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   362      IfxPsi5s_GlobalInterruptSource_xcrci = 4,  /**< \brief Enable Interrupt Request XCRCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   363      IfxPsi5s_GlobalInterruptSource_foi   = 5   /**< \brief Enable Interrupt Request FOI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   364  } IfxPsi5s_GlobalInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   366  /** \addtogroup IfxLld_Psi5s_Std_Channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   367   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   368  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   369  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   370  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   371  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   372  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   373  /** \brief fill data into tx buffer for direct transmission(in ASC mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   374   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   375   * \param data Pointer to data
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   376   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   377   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   378  IFX_INLINE void IfxPsi5s_fillAscTransmitBuffer(Ifx_PSI5S *psi5s, uint32 *data);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   380  /** \brief received buffer in ASC mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   381   * \param psi5s Pointer to PSI5s register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   382   * \return recieved buffer value in asc mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   383   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   384  IFX_INLINE uint32 IfxPsi5s_getReceiveBuffer(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   385  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   386  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   387  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   388  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   389  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   390  /** \brief Asc receiver is disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   391   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   392   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   394  IFX_EXTERN void IfxPsi5s_disableAscReceiver(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   396  /** \brief Enable ASC receiver
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   397   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   400  IFX_EXTERN void IfxPsi5s_enableAscReceiver(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   402  /** \brief Enable/disable any combination of channel trigger counters selected by mask parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   403   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   404   * \param channels specifies the channel trigger counters which should be enabled/disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   405   * \param mask specifies the channel trigger counters which should be modified
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   406   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   407   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   408  IFX_EXTERN void IfxPsi5s_enableDisableChannelTriggerCounters(Ifx_PSI5S *psi5s, uint32 channels, uint32 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   410  /** \brief Enable/disable any combination of channels selected by mask parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   411   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   412   * \param channels specifies the channels which should be enabled/disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   413   * \param mask specifies the channels which should be modified
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   414   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   416  IFX_EXTERN void IfxPsi5s_enableDisableChannels(Ifx_PSI5S *psi5s, uint32 channels, uint32 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   417  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   418  /** \brief Baudrate frequency in HZ
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   419   * \param psi5s Pointer to PSI5s Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   420   * \param synchMode Pointer to the configuration structure of ASC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   421   * \param divMode specifies fractional/normal divider mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   422   * \param baudrateSelection select sbaudrate prescaler
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   423   * \return baudrate in HZ
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   424   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   425  IFX_EXTERN float32 IfxPsi5s_getBaudrate(Ifx_PSI5S *psi5s, boolean synchMode, boolean divMode, IfxPsi5s_AscBaudratePrescalar baudrateSelection);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   426  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   427  /** \brief Start ASC transactions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   428   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   429   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   430   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   431  IFX_EXTERN void IfxPsi5s_startAscTransactions(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   432  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   433  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   434   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   435   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   436   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   437  IFX_EXTERN void IfxPsi5s_stopAscTransactions(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   438  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   439  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   441  /** \addtogroup IfxLld_Psi5s_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   442   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   444  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   445  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   446  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   448  /** \brief Initializes a CLK output
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   449   * \param clk the CLK Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   450   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   451   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   452   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   454  IFX_INLINE void IfxPsi5s_initClkPin(const IfxPsi5s_Clk_Out *clk, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   456  /** \brief Initializes a RX input
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   457   * \param rx the RX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   458   * \param inputMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   459   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   460   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   462  IFX_INLINE void IfxPsi5s_initRxPin(const IfxPsi5s_Rx_In *rx, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   464  /** \brief Initializes a TX output
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   465   * \param tx the TX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   466   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   467   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   468   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   469   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   470  IFX_INLINE void IfxPsi5s_initTxPin(const IfxPsi5s_Tx_Out *tx, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   471  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   472  /** \brief Selects the alternate input for Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   473   * \param psi5s pointer to PSI5S registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   474   * \param alti alternate input selection of Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   475   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   476   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   477  IFX_INLINE void IfxPsi5s_setRxInput(Ifx_PSI5S *psi5s, IfxPsi5s_AlternateInput alti);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   479  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   481  /** \addtogroup IfxLld_Psi5s_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   482   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   483  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   484  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   485  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   486  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   487  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   488  /** \brief Enable /Disable Global Interrupt Source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   489   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   490   * \param interruptSource specifies Global Interrupt Source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   491   * \param enabled enable /disable Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   494  IFX_INLINE void IfxPsi5s_enableGlobalInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   496  /** \brief enable / disable interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   497   * \param psi5s pointer to psi5s register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   498   * \param channel specifies channel number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   499   * \param interruptSource specifies interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   500   * \param enabled Enable / Disable the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   501   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   502   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   503  IFX_INLINE void IfxPsi5s_enableInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   504  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   505  /** \brief Get  Receive Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   506   * \param psi5s Pointer to PSI5S Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   507   * \return Receive Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   508   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   509  IFX_INLINE boolean IfxPsi5s_getReceiveInterruptStatus(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   510  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   511  /** \brief get Transmit Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   512   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   513   * \return Transmit Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   514   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   515  IFX_INLINE boolean IfxPsi5s_getTransmitInterruptStatus(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   516  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   517  /** \brief Sets the node pointers of PSI5-S ASC and for XCRCI and FOI
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   518   * \param psi5s Pointer to PSI5S Register Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   519   * \param nodePointer specifies node pointer source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   520   * \param triggerOutputLine select trigger Output Line
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   521   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   522   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   523  IFX_INLINE void IfxPsi5s_setGlobalInterruptNodePointer(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource nodePointer, IfxPsi5s_Trigger triggerOutputLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   525  /** \brief set interrupt node pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   526   * \param psi5s specifies the pointer to PSI5S Module register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   527   * \param channel specifies channel number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   528   * \param nodePointer specifies node pointer source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   529   * \param triggerOutputLine select service request line
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   530   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   531   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   532  IFX_INLINE void IfxPsi5s_setInterruptNodePointer(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource nodePointer, IfxPsi5s_Trigger triggerOutputLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   533  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   534  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   536  /** \addtogroup IfxLld_Psi5s_Std_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   537   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   539  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   540  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   541  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   542  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   543  /** \brief clear time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   544   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   545   * \param clearTimeStampCounter clear time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   546   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   548  IFX_INLINE void IfxPsi5s_clearTimeStampCounterA(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   550  /** \brief Clear Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   551   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   552   * \param clearTimeStampCounter clear Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   553   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   554   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   555  IFX_INLINE void IfxPsi5s_clearTimeStampCounterB(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   556  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   557  /** \brief Returns the module's suspend state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   558   * TRUE :if module is suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   559   * FALSE:if module is not yet suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   560   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   561   * \return Suspend status (TRUE / FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   562   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   563  IFX_INLINE boolean IfxPsi5s_isModuleSuspended(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   565  /** \brief enable /disable loop back mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   566   * \param psi5s pointer to PSI5S Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   567   * \param enabled enable/disable loop back mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   568   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   570  IFX_INLINE void IfxPsi5s_setLoopBackMode(Ifx_PSI5S *psi5s, IfxPsi5s_LoopBackMode enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   572  /** \brief enable / disable sleep mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   573   * \param psi5s Pointer to PSI5S register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   574   * \param mode sleep mode (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   575   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   576   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   577  IFX_INLINE void IfxPsi5s_setSleepMode(Ifx_PSI5S *psi5s, IfxPsi5s_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   578  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   579  /** \brief Configure the Module to Hard/Soft suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   580   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   581   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   582   * \param mode Module suspend mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   583   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   584   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   585  IFX_INLINE void IfxPsi5s_setSuspendMode(Ifx_PSI5S *psi5s, IfxPsi5s_SuspendMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   587  /** \brief start time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   588   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   589   * \param startTimeStamp Start/stop current time stamp count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   590   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   591   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   592  IFX_INLINE void IfxPsi5s_setTimeStampCounterA(Ifx_PSI5S *psi5s, IfxPsi5s_TimeStampCount startTimeStamp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   593  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   594  /** \brief Start Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   595   * \param psi5s Pointer to PSI5S Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   596   * \param startTimeStamp start time stamp
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   597   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   598   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   599  IFX_INLINE void IfxPsi5s_setTimeStampCounterB(Ifx_PSI5S *psi5s, IfxPsi5s_TimeStampCount startTimeStamp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   601  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   602  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   603  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   605  /** \brief Disable PSI5S kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   606   * \param psi5s pointer to the base of PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   607   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   608   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   609  IFX_EXTERN void IfxPsi5s_disableModule(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   610  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   611  /** \brief Get the received psi5s frame for the channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   612   * \param psi5s Pointer to PSI5S Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   613   * \param channelId channel ID
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   614   * \return Frame Status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   615   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   616  IFX_EXTERN boolean IfxPsi5s_getReadFrameStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   617  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   618  /** \brief Indicates the successful reception of a frame.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   619   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   620   * \param channelId Channel Number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   621   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   622  IFX_EXTERN boolean IfxPsi5s_getSuccessfullyReceivedFrameStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   623  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   624  /** \brief resets PSI5S kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   625   * \param psi5s pointer to PSI5S registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   626   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   627   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   628  IFX_EXTERN void IfxPsi5s_resetModule(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   629  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   630  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   632  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   633  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   634  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   635  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   636  /** \brief Shows status of any interrupt in any channell in PSI5S.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   637   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   638   * \param channel Channel ID of channel whose interrupt status is required
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   639   * \param interruptSource Interrupt Source to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   640   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   641  IFX_INLINE boolean IfxPsi5s_getInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   643  /** \brief Clears the status of any interrupt of any  PSI5-S channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   644   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   645   * \param channel Channel ID of channel whose interrupt needs to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   646   * \param interruptSource Interrupt Source to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   647   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   648   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   649  IFX_INLINE void IfxPsi5s_clearInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   650  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   651  /** \brief Show the status of any global interrupt, i.e. of the ASC inside PSI5-S and XCRCI indicating a non recoverable message is received.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   652   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   653   * \param interruptSource Interrupt source under consideration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   654   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   655  IFX_INLINE boolean IfxPsi5s_getGlobalInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   657  /** \brief Clears the status of any interrupt of the ASC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   658   * integrated in PSI5-S and for XCRCI and FOI
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   659   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   660   * \param interruptSource Interrupt source under consideration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   661   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   662   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   663  IFX_INLINE void IfxPsi5s_clearGlobalInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   664  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   665  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   666  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   667  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   669  /** \brief Get address of the SRC register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   670   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   671   * \param channel Channel ID of the channel to get the corresponding SRC pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   672   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   673  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxPsi5s_getSrcAddress(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   675  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   676  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   677  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   678  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   679  IFX_INLINE void IfxPsi5s_clearTimeStampCounterA(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   680  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   681      psi5s->TSCNTA.B.CLRA = clearTimeStampCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   682  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   683  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   684  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   685  IFX_INLINE void IfxPsi5s_clearTimeStampCounterB(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   686  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   687      psi5s->TSCNTA.B.CLRB = clearTimeStampCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   688  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   689  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   690  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   691  IFX_INLINE void IfxPsi5s_enableGlobalInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   692  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   693      psi5s->INTENG.U |= (enabled << interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   694  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   695  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   696  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   697  IFX_INLINE void IfxPsi5s_enableInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   698  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   699      psi5s->INTEN[channel].U |= (enabled << interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   700  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   701  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   702  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   703  IFX_INLINE void IfxPsi5s_fillAscTransmitBuffer(Ifx_PSI5S *psi5s, uint32 *data)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   704  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   705      psi5s->TBUF.U = *data;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   706  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   707  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   708  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   709  IFX_INLINE uint32 IfxPsi5s_getReceiveBuffer(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   710  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   711      return psi5s->RBUF.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   712  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   713  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   714  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   715  IFX_INLINE boolean IfxPsi5s_getReceiveInterruptStatus(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   716  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   717      return (boolean)psi5s->INTSTATG.B.RIR;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   718  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   719  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   720  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   721  IFX_INLINE boolean IfxPsi5s_getTransmitInterruptStatus(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   722  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   723      return (boolean)psi5s->INTSTATG.B.TIR;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   724  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   725  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   726  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   727  IFX_INLINE void IfxPsi5s_initClkPin(const IfxPsi5s_Clk_Out *clk, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   728  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   729      if (clk->pin.port != NULL_PTR)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   730      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   731          IfxPort_setPinModeOutput(clk->pin.port, clk->pin.pinIndex, outputMode, clk->select);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   732          IfxPort_setPinPadDriver(clk->pin.port, clk->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   733      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   734  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   735  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   737  IFX_INLINE void IfxPsi5s_initRxPin(const IfxPsi5s_Rx_In *rx, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   738  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   739      if (rx->pin.port != NULL_PTR)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   740      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   741          IfxPort_setPinModeInput(rx->pin.port, rx->pin.pinIndex, inputMode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   742          IfxPort_setPinPadDriver(rx->pin.port, rx->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   743          IfxPsi5s_setRxInput(rx->module, (IfxPsi5s_AlternateInput)rx->select);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   744      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   745  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   746  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   747  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   748  IFX_INLINE void IfxPsi5s_initTxPin(const IfxPsi5s_Tx_Out *tx, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   749  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   750      if (tx->pin.port != NULL_PTR)
	ld.a	a4,[a15]4
.L260:
	ld.bu	d15,[a12]12
.L544:
	ld.bu	d9,[a12]21
.L269:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   750      if (tx->pin.port != NULL_PTR)      (inlined)
	jz.a	a4,.L29
.L271:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     2   * \file IfxPsi5s.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     3   * \brief PSI5S  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     4   * \ingroup IfxLld_Psi5s
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    10   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    11   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    14   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    16   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    19   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    20   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    21   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    22   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    23   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    24   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    25   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    27   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    28   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    29   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    30   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    31   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    32   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    33   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    40   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    43   * \defgroup IfxLld_Psi5s_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    44   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    45   * \defgroup IfxLld_Psi5s_Std_Channel Channel Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    46   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    47   * \defgroup IfxLld_Psi5s_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    48   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    49   * \defgroup IfxLld_Psi5s_Std_Interrupt Interrupt configuration functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    50   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    51   * \defgroup IfxLld_Psi5s_Std_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    52   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    53   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    54  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    55  #ifndef IFXPSI5S_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    56  #define IFXPSI5S_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    57  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    59  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    60  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    61  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    62  #include "_Impl/IfxPsi5s_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    63  #include "_PinMap/IfxPsi5s_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    64  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    65  #include "IfxPsi5s_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    66  #include "IfxPsi5s_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    67  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    68  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    69  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    70  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    71  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    72  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    73  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    74  /** \addtogroup IfxLld_Psi5s_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    75   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    76  /** \brief MODULE_PSI5S.IOCR.ALTI:Alternate input
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    77   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    78  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    79  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    80      IfxPsi5s_AlternateInput_0 = 0,      /**< \brief Alternate Input 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    81      IfxPsi5s_AlternateInput_1,          /**< \brief Alternate Input 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    82      IfxPsi5s_AlternateInput_2,          /**< \brief Alternate Input 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    83      IfxPsi5s_AlternateInput_3           /**< \brief Alternate Input 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    84  } IfxPsi5s_AlternateInput;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    86  /** \brief MODULE_PSI5S.BG.BR_VALUE:Baudrate prescalar select
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    87   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    88  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    89  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    90      IfxPsi5s_AscBaudratePrescalar_divideBy2 = 0,  /**< \brief Divide by 2 is selected for baudrate timer prescalar */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    91      IfxPsi5s_AscBaudratePrescalar_divideBy3 = 1   /**< \brief Divide by 3 is selected for baudrate timer prescalar */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    92  } IfxPsi5s_AscBaudratePrescalar;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    94  /** \brief MODULE_PSI5S.CON.M:ASC mode of operation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    95   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    96  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    97  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    98      IfxPsi5s_AscMode_sync                     = 0,  /**< \brief Synchronous mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    99      IfxPsi5s_AscMode_async_8bitData           = 1,  /**< \brief Asynchronous mode with 8 bit data */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   100      IfxPsi5s_AscMode_async_7bitDataWithParity = 3,  /**< \brief Asynchronous mode with 7 bit data with parity */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   101      IfxPsi5s_AscMode_async_9bitData           = 4,  /**< \brief Asynchronous mode with 9 bit data */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   102      IfxPsi5s_AscMode_async_8bitDataWithWakeup = 5,  /**< \brief Asynchronous mode with 8 bit data with wakeup */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   103      IfxPsi5s_AscMode_async_8bitDataWithParity = 7   /**< \brief Asynchronous mode with 8 bit data with parity */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   104  } IfxPsi5s_AscMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   106  /** \brief MODULE_PSI5S.CON.STP: Number of stop bits
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   110      IfxPsi5s_AscStopBits_1 = 0,      /**< \brief 1 stop bit  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   111      IfxPsi5s_AscStopBits_2           /**< \brief 2 stop bit  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   112  } IfxPsi5s_AscStopBits;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   113  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   114  /** \brief PSI5S Channel Id defined in MODULE_PSI5S.RDS.B.CID.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   115   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   116  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   117  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   118      IfxPsi5s_ChannelId_0 = 0,     /**< \brief Ifx_PSI5S Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   119      IfxPsi5s_ChannelId_1,         /**< \brief Ifx_PSI5S Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   120      IfxPsi5s_ChannelId_2,         /**< \brief Ifx_PSI5S Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   121      IfxPsi5s_ChannelId_3,         /**< \brief Ifx_PSI5S Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   122      IfxPsi5s_ChannelId_4,         /**< \brief Ifx_PSI5S Channel 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   123      IfxPsi5s_ChannelId_5,         /**< \brief Ifx_PSI5S Channel 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   124      IfxPsi5s_ChannelId_6,         /**< \brief Ifx_PSI5S Channel 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   125      IfxPsi5s_ChannelId_7,         /**< \brief Ifx_PSI5S Channel 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   126      IfxPsi5s_ChannelId_none = -1  /**< \brief None of the Ifx_PSI5S Channels */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   127  } IfxPsi5s_ChannelId;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   129  /** \brief Clock Selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   131  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   132  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   133      IfxPsi5s_ClockType_fracDiv    = 0,  /**< \brief Fractional Divide clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   134      IfxPsi5s_ClockType_timeStamp  = 1,  /**< \brief Timestamp clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   135      IfxPsi5s_ClockType_ascFracDiv = 2,  /**< \brief Asc Fractional divider clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   136      IfxPsi5s_ClockType_ascOutput  = 3   /**< \brief Asc output clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   137  } IfxPsi5s_ClockType;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   139  /** \brief MODULE_PSI5S.RCRAx.CRCy(x= 0,1,..7:y=0,1,..,5),MODULE_PSI5S.RCRBx.CRCy(x= 0,1,..7:y=0,1,..,5)CRC or parity
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   140   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   141  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   142  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   143      IfxPsi5s_CrcOrParity_parity = 0,  /**< \brief parity selection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   144      IfxPsi5s_CrcOrParity_crc    = 1   /**< \brief CRC selection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   145  } IfxPsi5s_CrcOrParity;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   147  /** \brief MODULE_PSI5S.FDR.DM;MODULE_PSI5S.FDRT.B.DM:Divider mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   148   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   149  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   150  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   151      IfxPsi5s_DividerMode_spb        = 0,  /**< \brief divider mode is off */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   152      IfxPsi5s_DividerMode_normal     = 1,  /**< \brief divider mode is normal */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   153      IfxPsi5s_DividerMode_fractional = 2,  /**< \brief divider mode is fractional */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   154      IfxPsi5s_DividerMode_off        = 3   /**< \brief divider mode is off */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   155  } IfxPsi5s_DividerMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   156  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   157  /** \brief MODULE_PSI5S.SCRx.EPS(x=0,1,...,7):Enhanced protocol types
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   158   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   159  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   160  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   161      IfxPsi5s_EnhancedProtocol_toothGapMethod              = 0,  /**< \brief toothGapMethod Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   162      IfxPsi5s_EnhancedProtocol_pulseWidth_frameFormat_1to3 = 1,  /**< \brief pulseWidth_frameFormat_1to3 Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   163      IfxPsi5s_EnhancedProtocol_pulseWidth_frameFormat_4    = 3   /**< \brief pulseWidth_frameFormat_4 Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   164  } IfxPsi5s_EnhancedProtocol;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   166  /** \brief MODULE_PSI5S.RCRAx.FIDS(x=0,1,....,7):.Frame ID updation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   167   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   168  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   169  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   170      IfxPsi5s_FrameId_frameHeader   = 0, /**< \brief Frame ID is updated from packet frame header (Sync mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   171      IfxPsi5s_FrameId_rollingNumber = 1  /**< \brief Frame ID is a rolling number 0 .. 5 copied from FCNT */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   172  } IfxPsi5s_FrameId;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   173  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   174  /** \brief MODULE_PSI5S.GCR.IDT:Idle time bit count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   178      IfxPsi5s_IdleTime_1 = 0,      /**< \brief 1 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   179      IfxPsi5s_IdleTime_2,          /**< \brief 2 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   180      IfxPsi5s_IdleTime_3,          /**< \brief 3 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   181      IfxPsi5s_IdleTime_4,          /**< \brief 4 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   182      IfxPsi5s_IdleTime_5,          /**< \brief 5 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   183      IfxPsi5s_IdleTime_6,          /**< \brief 6 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   184      IfxPsi5s_IdleTime_7,          /**< \brief 7 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   185      IfxPsi5s_IdleTime_8,          /**< \brief 8 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   186      IfxPsi5s_IdleTime_9,          /**< \brief 9 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   187      IfxPsi5s_IdleTime_10,         /**< \brief 10 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   188      IfxPsi5s_IdleTime_11,         /**< \brief 11 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   189      IfxPsi5s_IdleTime_12,         /**< \brief 12 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   190      IfxPsi5s_IdleTime_13,         /**< \brief 13 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   191      IfxPsi5s_IdleTime_14,         /**< \brief 14 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   192      IfxPsi5s_IdleTime_15,         /**< \brief 15 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   193      IfxPsi5s_IdleTime_16          /**< \brief 16 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   194  } IfxPsi5s_IdleTime;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   195  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   196  /** \brief Enable/Disable interrupt request .defined in MODULE_PSI5S.INTEN[x]
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   198  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   199  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   200      IfxPsi5s_InterruptRequest_disabled = 0,  /**< \brief no interrupt request can be generated for this source */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   201      IfxPsi5s_InterruptRequest_enabled  = 1   /**< \brief An Interrupt request can be generated for source */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   202  } IfxPsi5s_InterruptRequest;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   203  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   204  /** \brief Enable/Disable the interrupt and  select interrupt source pointer defined in MODULE_PSI5S.INTEN[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   205   * and MODULE_PSI5S.INP[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   206   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   207  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   208  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   209      IfxPsi5s_InterruptSource_rsi  = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   210      IfxPsi5s_InterruptSource_rdi  = 1,  /**< \brief Enable Interrupt Request RDI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   211      IfxPsi5s_InterruptSource_rbi  = 2,  /**< \brief Enable Interrupt Request RBI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   212      IfxPsi5s_InterruptSource_tei  = 3,  /**< \brief Enable Interrupt Request TEI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   213      IfxPsi5s_InterruptSource_chci = 4,  /**< \brief Enable Interrupt Request CHCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   214      IfxPsi5s_InterruptSource_crci = 5,  /**< \brief Enable Interrupt Request CRCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   215      IfxPsi5s_InterruptSource_tpi  = 6,  /**< \brief Enable Interrupt Request TPI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   216      IfxPsi5s_InterruptSource_tpoi = 7,  /**< \brief Enable Interrupt Request TPOI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   217      IfxPsi5s_InterruptSource_hdi  = 8   /**< \brief Enable Interrupt Request HDI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   218  } IfxPsi5s_InterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   219  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   220  /** \brief Enable/Disable Loop back Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   221   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   222  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   223  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   224      IfxPsi5s_LoopBackMode_disable = 0,  /**< \brief loop-back mode disabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   225      IfxPsi5s_LoopBackMode_enable  = 1   /**< \brief loop-back mode enabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   226  } IfxPsi5s_LoopBackMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   228  /** \brief Messaging bits presence
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   229   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   230  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   231  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   232      IfxPsi5s_MessagingBits_absent  = 0, /**< \brief No messaging bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   233      IfxPsi5s_MessagingBits_present = 1  /**< \brief 2 messaging bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   234  } IfxPsi5s_MessagingBits;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   235  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   236  /** \brief MODULE_PSI5S.NFC.NFx:Expected Psi5s frames
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   238  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   239  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   240      IfxPsi5s_NumberExpectedFrames_1 = 1,      /**< \brief 1 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   241      IfxPsi5s_NumberExpectedFrames_2,          /**< \brief 2 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   242      IfxPsi5s_NumberExpectedFrames_3,          /**< \brief 3 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   243      IfxPsi5s_NumberExpectedFrames_4,          /**< \brief 4 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   244      IfxPsi5s_NumberExpectedFrames_5,          /**< \brief 5 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   245      IfxPsi5s_NumberExpectedFrames_6           /**< \brief 6 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   246  } IfxPsi5s_NumberExpectedFrames;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   247  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   248  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   249   * Definition in Ifx_PSI5S.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   250   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   251  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   252  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   253      IfxPsi5s_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   254      IfxPsi5s_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   255  } IfxPsi5s_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   257  /** \brief OCDS Suspend Control (OCDS.SUS)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   258   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   259  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   261      IfxPsi5s_SuspendMode_none = 0,  /**< \brief No suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   262      IfxPsi5s_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   263      IfxPsi5s_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   264  } IfxPsi5s_SuspendMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   265  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   266  /** \brief MODULE_PSI5S.TSCNTA.B.TBS;MODULE_PSI5S.TSCNTB.B.TBS:Time base
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   267   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   268  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   269  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   270      IfxPsi5s_TimeBase_internal = 0,  /**< \brief Internal time stamp clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   271      IfxPsi5s_TimeBase_external = 1   /**< \brief External GTM inputs */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   272  } IfxPsi5s_TimeBase;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   274  /** \brief Start/stop Current time stamp count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   275   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   276  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   277  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   278      IfxPsi5s_TimeStampCount_stopped = 0,  /**< \brief CTS stopped */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   279      IfxPsi5s_TimeStampCount_started = 1   /**< \brief CTS Started */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   280  } IfxPsi5s_TimeStampCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   281  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   282  /** \brief MODULE_PSI5S.TSCNTx(x= A,B):Timestamp register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   283   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   284  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   285  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   286      IfxPsi5s_TimestampRegister_a = 0,  /**< \brief Timestamp register A */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   287      IfxPsi5s_TimestampRegister_b = 1   /**< \brief Timestamp register B */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   288  } IfxPsi5s_TimestampRegister;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   289  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   290  /** \brief MODULE_PSI5S.RCRAx.TSTS:Timestamp trigger
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   291   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   292  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   293  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   294      IfxPsi5s_TimestampTrigger_syncPulse = 0,  /**< \brief Timestamp trigger on sync pulse */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   295      IfxPsi5s_TimestampTrigger_frame     = 1   /**< \brief Timestamp trigger on any frame */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   296  } IfxPsi5s_TimestampTrigger;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   297  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   298  /** \brief MODULE_PSI5S.TSCNTA.B.ETB;MODULE_PSI5S.TSCNTB.B.ETB:Trigger Id
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   300  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   301  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   302      IfxPsi5s_Trigger_0 = 0,      /**< \brief Trigger 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   303      IfxPsi5s_Trigger_1,          /**< \brief Trigger 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   304      IfxPsi5s_Trigger_2,          /**< \brief Trigger 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   305      IfxPsi5s_Trigger_3,          /**< \brief Trigger 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   306      IfxPsi5s_Trigger_4,          /**< \brief Trigger 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   307      IfxPsi5s_Trigger_5,          /**< \brief Trigger 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   308      IfxPsi5s_Trigger_6,          /**< \brief Trigger 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   309      IfxPsi5s_Trigger_7           /**< \brief Trigger 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   310  } IfxPsi5s_Trigger;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   312  /** \brief specifies service request line defined in MODULE_PSI5S.INP[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   313   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   314  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   315  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   316      IfxPsi5s_TriggerOutput_0 = 0,      /**< \brief Triggered output line is TRIGO_0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   317      IfxPsi5s_TriggerOutput_1,          /**< \brief Triggered output line is TRIGO_1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   318      IfxPsi5s_TriggerOutput_2,          /**< \brief Triggered output line is TRIGO_2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   319      IfxPsi5s_TriggerOutput_3,          /**< \brief Triggered output line is TRIGO_3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   320      IfxPsi5s_TriggerOutput_4,          /**< \brief Triggered output line is TRIGO_4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   321      IfxPsi5s_TriggerOutput_5,          /**< \brief Triggered output line is TRIGO_5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   322      IfxPsi5s_TriggerOutput_6,          /**< \brief Triggered output line is TRIGO_6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   323      IfxPsi5s_TriggerOutput_7           /**< \brief Triggered output line is TRIGO_7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   324  } IfxPsi5s_TriggerOutput;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   325  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   326  /** \brief Trigger type defined in
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   327   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   328  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   329  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   330      IfxPsi5s_TriggerType_periodic = 0,  /**< \brief Periodic trigger */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   331      IfxPsi5s_TriggerType_external = 1   /**< \brief External trigger */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   332  } IfxPsi5s_TriggerType;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   333  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   334  /** \brief MODULE_PSI5S.RCRAx.UFCY(x=0,1,...7;y=0,1...5):UART frame count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   336  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   337  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   338      IfxPsi5s_UartFrameCount_3 = 0,      /**< \brief 3 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   339      IfxPsi5s_UartFrameCount_4,          /**< \brief 4 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   340      IfxPsi5s_UartFrameCount_5,          /**< \brief 5 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   341      IfxPsi5s_UartFrameCount_6           /**< \brief 6 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   342  } IfxPsi5s_UartFrameCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   344  /** \brief MODULE_PSI5S.RCRAx.WDMS:Watchdog timer mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   346  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   347  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   348      IfxPsi5s_WatchdogTimerMode_frame     = 0, /**< \brief Watch Dog Timer is restarted on reception of each recoverable frame (async mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   349      IfxPsi5s_WatchdogTimerMode_syncPulse = 1  /**< \brief Watch Dog Timer is restarted on Sync Pulse and stopped at reception of the last frame configured in NFC.NFx.(sync mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   350  } IfxPsi5s_WatchdogTimerMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   352  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   353  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   354  /** \brief List of Global interrupt sources or registers INTxG
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   355   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   356  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   357  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   358      IfxPsi5s_GlobalInterruptSource_tir   = 0,  /**< \brief Enable Interrupt Request TIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   359      IfxPsi5s_GlobalInterruptSource_rir   = 1,  /**< \brief Enable Interrupt Request RIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   360      IfxPsi5s_GlobalInterruptSource_eir   = 2,  /**< \brief Enable Interrupt Request EIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   361      IfxPsi5s_GlobalInterruptSource_tbir  = 3,  /**< \brief Enable Interrupt Request TBIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   362      IfxPsi5s_GlobalInterruptSource_xcrci = 4,  /**< \brief Enable Interrupt Request XCRCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   363      IfxPsi5s_GlobalInterruptSource_foi   = 5   /**< \brief Enable Interrupt Request FOI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   364  } IfxPsi5s_GlobalInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   366  /** \addtogroup IfxLld_Psi5s_Std_Channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   367   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   368  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   369  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   370  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   371  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   372  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   373  /** \brief fill data into tx buffer for direct transmission(in ASC mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   374   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   375   * \param data Pointer to data
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   376   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   377   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   378  IFX_INLINE void IfxPsi5s_fillAscTransmitBuffer(Ifx_PSI5S *psi5s, uint32 *data);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   380  /** \brief received buffer in ASC mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   381   * \param psi5s Pointer to PSI5s register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   382   * \return recieved buffer value in asc mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   383   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   384  IFX_INLINE uint32 IfxPsi5s_getReceiveBuffer(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   385  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   386  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   387  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   388  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   389  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   390  /** \brief Asc receiver is disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   391   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   392   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   394  IFX_EXTERN void IfxPsi5s_disableAscReceiver(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   396  /** \brief Enable ASC receiver
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   397   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   400  IFX_EXTERN void IfxPsi5s_enableAscReceiver(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   402  /** \brief Enable/disable any combination of channel trigger counters selected by mask parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   403   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   404   * \param channels specifies the channel trigger counters which should be enabled/disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   405   * \param mask specifies the channel trigger counters which should be modified
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   406   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   407   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   408  IFX_EXTERN void IfxPsi5s_enableDisableChannelTriggerCounters(Ifx_PSI5S *psi5s, uint32 channels, uint32 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   410  /** \brief Enable/disable any combination of channels selected by mask parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   411   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   412   * \param channels specifies the channels which should be enabled/disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   413   * \param mask specifies the channels which should be modified
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   414   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   416  IFX_EXTERN void IfxPsi5s_enableDisableChannels(Ifx_PSI5S *psi5s, uint32 channels, uint32 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   417  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   418  /** \brief Baudrate frequency in HZ
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   419   * \param psi5s Pointer to PSI5s Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   420   * \param synchMode Pointer to the configuration structure of ASC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   421   * \param divMode specifies fractional/normal divider mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   422   * \param baudrateSelection select sbaudrate prescaler
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   423   * \return baudrate in HZ
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   424   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   425  IFX_EXTERN float32 IfxPsi5s_getBaudrate(Ifx_PSI5S *psi5s, boolean synchMode, boolean divMode, IfxPsi5s_AscBaudratePrescalar baudrateSelection);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   426  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   427  /** \brief Start ASC transactions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   428   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   429   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   430   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   431  IFX_EXTERN void IfxPsi5s_startAscTransactions(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   432  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   433  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   434   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   435   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   436   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   437  IFX_EXTERN void IfxPsi5s_stopAscTransactions(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   438  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   439  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   441  /** \addtogroup IfxLld_Psi5s_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   442   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   444  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   445  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   446  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   448  /** \brief Initializes a CLK output
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   449   * \param clk the CLK Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   450   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   451   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   452   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   454  IFX_INLINE void IfxPsi5s_initClkPin(const IfxPsi5s_Clk_Out *clk, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   456  /** \brief Initializes a RX input
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   457   * \param rx the RX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   458   * \param inputMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   459   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   460   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   462  IFX_INLINE void IfxPsi5s_initRxPin(const IfxPsi5s_Rx_In *rx, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   464  /** \brief Initializes a TX output
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   465   * \param tx the TX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   466   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   467   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   468   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   469   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   470  IFX_INLINE void IfxPsi5s_initTxPin(const IfxPsi5s_Tx_Out *tx, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   471  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   472  /** \brief Selects the alternate input for Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   473   * \param psi5s pointer to PSI5S registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   474   * \param alti alternate input selection of Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   475   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   476   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   477  IFX_INLINE void IfxPsi5s_setRxInput(Ifx_PSI5S *psi5s, IfxPsi5s_AlternateInput alti);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   479  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   481  /** \addtogroup IfxLld_Psi5s_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   482   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   483  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   484  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   485  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   486  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   487  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   488  /** \brief Enable /Disable Global Interrupt Source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   489   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   490   * \param interruptSource specifies Global Interrupt Source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   491   * \param enabled enable /disable Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   494  IFX_INLINE void IfxPsi5s_enableGlobalInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   496  /** \brief enable / disable interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   497   * \param psi5s pointer to psi5s register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   498   * \param channel specifies channel number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   499   * \param interruptSource specifies interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   500   * \param enabled Enable / Disable the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   501   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   502   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   503  IFX_INLINE void IfxPsi5s_enableInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   504  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   505  /** \brief Get  Receive Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   506   * \param psi5s Pointer to PSI5S Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   507   * \return Receive Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   508   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   509  IFX_INLINE boolean IfxPsi5s_getReceiveInterruptStatus(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   510  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   511  /** \brief get Transmit Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   512   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   513   * \return Transmit Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   514   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   515  IFX_INLINE boolean IfxPsi5s_getTransmitInterruptStatus(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   516  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   517  /** \brief Sets the node pointers of PSI5-S ASC and for XCRCI and FOI
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   518   * \param psi5s Pointer to PSI5S Register Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   519   * \param nodePointer specifies node pointer source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   520   * \param triggerOutputLine select trigger Output Line
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   521   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   522   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   523  IFX_INLINE void IfxPsi5s_setGlobalInterruptNodePointer(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource nodePointer, IfxPsi5s_Trigger triggerOutputLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   525  /** \brief set interrupt node pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   526   * \param psi5s specifies the pointer to PSI5S Module register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   527   * \param channel specifies channel number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   528   * \param nodePointer specifies node pointer source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   529   * \param triggerOutputLine select service request line
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   530   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   531   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   532  IFX_INLINE void IfxPsi5s_setInterruptNodePointer(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource nodePointer, IfxPsi5s_Trigger triggerOutputLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   533  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   534  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   536  /** \addtogroup IfxLld_Psi5s_Std_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   537   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   539  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   540  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   541  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   542  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   543  /** \brief clear time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   544   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   545   * \param clearTimeStampCounter clear time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   546   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   548  IFX_INLINE void IfxPsi5s_clearTimeStampCounterA(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   550  /** \brief Clear Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   551   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   552   * \param clearTimeStampCounter clear Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   553   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   554   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   555  IFX_INLINE void IfxPsi5s_clearTimeStampCounterB(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   556  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   557  /** \brief Returns the module's suspend state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   558   * TRUE :if module is suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   559   * FALSE:if module is not yet suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   560   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   561   * \return Suspend status (TRUE / FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   562   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   563  IFX_INLINE boolean IfxPsi5s_isModuleSuspended(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   565  /** \brief enable /disable loop back mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   566   * \param psi5s pointer to PSI5S Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   567   * \param enabled enable/disable loop back mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   568   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   570  IFX_INLINE void IfxPsi5s_setLoopBackMode(Ifx_PSI5S *psi5s, IfxPsi5s_LoopBackMode enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   572  /** \brief enable / disable sleep mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   573   * \param psi5s Pointer to PSI5S register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   574   * \param mode sleep mode (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   575   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   576   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   577  IFX_INLINE void IfxPsi5s_setSleepMode(Ifx_PSI5S *psi5s, IfxPsi5s_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   578  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   579  /** \brief Configure the Module to Hard/Soft suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   580   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   581   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   582   * \param mode Module suspend mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   583   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   584   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   585  IFX_INLINE void IfxPsi5s_setSuspendMode(Ifx_PSI5S *psi5s, IfxPsi5s_SuspendMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   587  /** \brief start time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   588   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   589   * \param startTimeStamp Start/stop current time stamp count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   590   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   591   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   592  IFX_INLINE void IfxPsi5s_setTimeStampCounterA(Ifx_PSI5S *psi5s, IfxPsi5s_TimeStampCount startTimeStamp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   593  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   594  /** \brief Start Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   595   * \param psi5s Pointer to PSI5S Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   596   * \param startTimeStamp start time stamp
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   597   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   598   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   599  IFX_INLINE void IfxPsi5s_setTimeStampCounterB(Ifx_PSI5S *psi5s, IfxPsi5s_TimeStampCount startTimeStamp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   601  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   602  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   603  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   605  /** \brief Disable PSI5S kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   606   * \param psi5s pointer to the base of PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   607   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   608   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   609  IFX_EXTERN void IfxPsi5s_disableModule(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   610  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   611  /** \brief Get the received psi5s frame for the channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   612   * \param psi5s Pointer to PSI5S Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   613   * \param channelId channel ID
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   614   * \return Frame Status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   615   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   616  IFX_EXTERN boolean IfxPsi5s_getReadFrameStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   617  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   618  /** \brief Indicates the successful reception of a frame.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   619   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   620   * \param channelId Channel Number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   621   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   622  IFX_EXTERN boolean IfxPsi5s_getSuccessfullyReceivedFrameStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   623  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   624  /** \brief resets PSI5S kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   625   * \param psi5s pointer to PSI5S registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   626   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   627   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   628  IFX_EXTERN void IfxPsi5s_resetModule(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   629  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   630  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   632  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   633  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   634  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   635  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   636  /** \brief Shows status of any interrupt in any channell in PSI5S.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   637   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   638   * \param channel Channel ID of channel whose interrupt status is required
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   639   * \param interruptSource Interrupt Source to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   640   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   641  IFX_INLINE boolean IfxPsi5s_getInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   643  /** \brief Clears the status of any interrupt of any  PSI5-S channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   644   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   645   * \param channel Channel ID of channel whose interrupt needs to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   646   * \param interruptSource Interrupt Source to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   647   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   648   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   649  IFX_INLINE void IfxPsi5s_clearInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   650  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   651  /** \brief Show the status of any global interrupt, i.e. of the ASC inside PSI5-S and XCRCI indicating a non recoverable message is received.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   652   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   653   * \param interruptSource Interrupt source under consideration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   654   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   655  IFX_INLINE boolean IfxPsi5s_getGlobalInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   657  /** \brief Clears the status of any interrupt of the ASC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   658   * integrated in PSI5-S and for XCRCI and FOI
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   659   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   660   * \param interruptSource Interrupt source under consideration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   661   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   662   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   663  IFX_INLINE void IfxPsi5s_clearGlobalInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   664  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   665  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   666  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   667  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   669  /** \brief Get address of the SRC register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   670   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   671   * \param channel Channel ID of the channel to get the corresponding SRC pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   672   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   673  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxPsi5s_getSrcAddress(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   675  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   676  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   677  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   678  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   679  IFX_INLINE void IfxPsi5s_clearTimeStampCounterA(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   680  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   681      psi5s->TSCNTA.B.CLRA = clearTimeStampCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   682  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   683  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   684  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   685  IFX_INLINE void IfxPsi5s_clearTimeStampCounterB(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   686  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   687      psi5s->TSCNTA.B.CLRB = clearTimeStampCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   688  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   689  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   690  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   691  IFX_INLINE void IfxPsi5s_enableGlobalInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   692  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   693      psi5s->INTENG.U |= (enabled << interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   694  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   695  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   696  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   697  IFX_INLINE void IfxPsi5s_enableInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   698  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   699      psi5s->INTEN[channel].U |= (enabled << interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   700  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   701  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   702  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   703  IFX_INLINE void IfxPsi5s_fillAscTransmitBuffer(Ifx_PSI5S *psi5s, uint32 *data)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   704  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   705      psi5s->TBUF.U = *data;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   706  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   707  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   708  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   709  IFX_INLINE uint32 IfxPsi5s_getReceiveBuffer(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   710  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   711      return psi5s->RBUF.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   712  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   713  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   714  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   715  IFX_INLINE boolean IfxPsi5s_getReceiveInterruptStatus(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   716  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   717      return (boolean)psi5s->INTSTATG.B.RIR;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   718  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   719  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   720  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   721  IFX_INLINE boolean IfxPsi5s_getTransmitInterruptStatus(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   722  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   723      return (boolean)psi5s->INTSTATG.B.TIR;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   724  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   725  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   726  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   727  IFX_INLINE void IfxPsi5s_initClkPin(const IfxPsi5s_Clk_Out *clk, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   728  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   729      if (clk->pin.port != NULL_PTR)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   730      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   731          IfxPort_setPinModeOutput(clk->pin.port, clk->pin.pinIndex, outputMode, clk->select);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   732          IfxPort_setPinPadDriver(clk->pin.port, clk->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   733      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   734  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   735  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   737  IFX_INLINE void IfxPsi5s_initRxPin(const IfxPsi5s_Rx_In *rx, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   738  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   739      if (rx->pin.port != NULL_PTR)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   740      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   741          IfxPort_setPinModeInput(rx->pin.port, rx->pin.pinIndex, inputMode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   742          IfxPort_setPinPadDriver(rx->pin.port, rx->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   743          IfxPsi5s_setRxInput(rx->module, (IfxPsi5s_AlternateInput)rx->select);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   744      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   745  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   746  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   747  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   748  IFX_INLINE void IfxPsi5s_initTxPin(const IfxPsi5s_Tx_Out *tx, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   749  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   750      if (tx->pin.port != NULL_PTR)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   751      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   752          IfxPort_setPinModeOutput(tx->pin.port, tx->pin.pinIndex, outputMode, tx->select);
	ld.bu	d5,[a15]12
.L545:
	ld.bu	d4,[a15]8
.L546:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89  /** \brief specifies LVDS-M or LVDS-H mode as declare in Register MODULE_PORT.LPCRx.LVDSM
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_LvdsMode_high   = 0, /**< \brief LVDS-H Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_LvdsMode_medium = 1  /**< \brief LVDS-M Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95  } IfxPort_LvdsMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143          IfxPort_OutputMode_openDrain = 0x18U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144          IfxPort_OutputMode_none      = 0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160      IfxPort_PadDriver_ttlSpeed4            = 11, /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161      IfxPort_PadDriver_ttl3v3Speed1         = 12, /**< \brief 3.3v Pad supply speed1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162      IfxPort_PadDriver_ttl3v3Speed2         = 13, /**< \brief 3.3v Pad supply speed2 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163      IfxPort_PadDriver_ttl3v3Speed3         = 14, /**< \brief 3.3v Pad supply speed3 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadDriver_ttl3v3Speed4         = 15  /**< \brief 3.3v Pad supply speed4 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171      IfxPort_PadSupply_3v = 0,  /**< \brief select,3.3v */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      IfxPort_PadSupply_5v = 1   /**< \brief select,5V */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  /** \brief enable analog/digital mode for port pin, as Defined in MODULE_PORTx.PDISC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179      IfxPort_PinFunctionMode_digital = 0,  /**< \brief Pad Pn.x is enabled and can be selected for digital function */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      IfxPort_PinFunctionMode_analog  = 1   /**< \brief Pad Pn.x is enabled and can be selected for analog function */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181  } IfxPort_PinFunctionMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197  /** \brief Enable/DIsable LVDS direction TX or RX
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201      IfxPort_LvdsDirection_rx = 0,  /**< \brief LVDS direction RX */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202      IfxPort_LvdsDirection_tx = 1   /**< \brief LVDS direction TX */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203  } IfxPort_LvdsDirection;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205  /** \brief Enable/DIsable LVDS Path.declared in MODULE_PORTx.LPCRx.TX_EN and MODULE_PORTx.LPCRx.RX_EN
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209      IfxPort_LvdsPath_enable  = 0, /**< \brief LVDS enabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210      IfxPort_LvdsPath_disable = 1  /**< \brief LVDS disabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211  } IfxPort_LvdsPath;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213  /** \brief Specifies whether LVDS pull down resistor must be enabled/disabled as declared in Register MODULE_PORT.LPCRx.PWDPD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217      IfxPort_LvdsPullDown_disable = 0,  /**< \brief Disable Pull Down resistor */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218      IfxPort_LvdsPullDown_enable  = 1   /**< \brief Enable Pull Down resistor */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219  } IfxPort_LvdsPullDown;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221  /** \brief Specifies LVDS-Termination mode as declare in Register MODULE_PORT.LPCRx.TERM
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225      IfxPort_LvdsTerminationMode_external = 0,  /**< \brief Termination Mode External */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226      IfxPort_LvdsTerminationMode_internal = 1   /**< \brief Termination Mode Internal */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227  } IfxPort_LvdsTerminationMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235  /** \brief To Configure LVDS mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239      IfxPort_LvdsMode     lvdsMode;                   /**< \brief specifies LVDS-M or LVDS-H mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240      IfxPort_ControlledBy enablePortControlled;       /**< \brief specifies whether LVDS is controlled by PORT or HSCT */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241      IfxPort_PadSupply    padSupply;                  /**< \brief specify supply voltage */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242  } IfxPort_LvdsConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286  /** \brief set analog/digital mode for pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param port Pointer to Port register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \param pinIndex specifies the pin index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   * \param mode set analog/digital mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292  IFX_INLINE void IfxPort_setPinFunctionMode(Ifx_P *port, uint8 pinIndex, IfxPort_PinFunctionMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395   * /code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   *     {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   *     }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417   *     }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief set lvds mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port pointer to Port Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex specifies pin index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param pinMode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param lvds config LVDS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448  IFX_EXTERN void IfxPort_setPinModeLVDS(Ifx_P *port, uint8 pinIndex, IfxPort_Mode pinMode, IfxPort_LvdsConfig *lvds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465  /** \brief Enable the Pin Controller Selection.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * \param pinIndex Specifies the pin for which the mode has to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470  IFX_EXTERN void IfxPort_setPinControllerSelection(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  /** \brief Disable the Pin Controller Selection.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474   * \param pinIndex Specifies the pin for which the mode has to be cleared.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477  IFX_EXTERN void IfxPort_resetPinControllerSelection(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526  /** \brief Returns the module address of the selected Port module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527   * \param port Pointer to PORT module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528   * \return PORT module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   557   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   558   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   559   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   560   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   561   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   562   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   563   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   564   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   565   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   566   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   567   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   568   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   569  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   571  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   572   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   573   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   574   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   575   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   578   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   579   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   580   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   581   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   582   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   583   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   584   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   585  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   587  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   589  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   590  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   591  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   592  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   593  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   594   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   595   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   596   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   597   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   598   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   599   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   600   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   601   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   602  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   603  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   604  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   605   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   606   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   607   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   608   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   609   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   610   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   611   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   612   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   613  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   615  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   616   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   617   * \param pinIndex Specifies the pin for which the mode has to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   618   * \param mode Selects the controller for the port pin(Tricore,EVADC,GETH,SCR etc)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   619   * 0-> normal function
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   620   * 1-> Alternate functionality(SCR pin,EVADC PDD,GETH RGMII/MII etc)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   621   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   622   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   623  IFX_EXTERN void IfxPort_modifyPinControllerSelection(Ifx_P *port, uint8 pinIndex, boolean mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   625  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   626  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   627  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   628  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   629  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   630  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   631      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   632  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   634  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   635  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   636  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   637      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   638  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   640  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   641  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   642  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   643      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   644  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   646  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   647  IFX_INLINE void IfxPort_setPinFunctionMode(Ifx_P *port, uint8 pinIndex, IfxPort_PinFunctionMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   648  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   649      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   650  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   651      IfxScuWdt_clearCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   652      port->PDISC.U |= (mode << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   653      IfxScuWdt_setCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   654  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   657  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   658  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   659      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   660  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   661  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   663  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   664  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   665      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   669  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   671      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   675  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   677      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	or	d5,d15
	call	IfxPort_setPinMode
.L272:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   753          IfxPort_setPinPadDriver(tx->pin.port, tx->pin.pinIndex, padDriver);
	ld.a	a4,[a15]4
.L547:
	ld.bu	d4,[a15]8
.L548:
	mov	d5,d9
	call	IfxPort_setPinPadDriver

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   750      if (tx->pin.port != NULL_PTR)      (inlined)
.L29:
.L28:
	ld.a	a15,[a12]16
.L434:
	jz.a	a15,.L30
.L285:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     2   * \file IfxPsi5s.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     3   * \brief PSI5S  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     4   * \ingroup IfxLld_Psi5s
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    10   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    11   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    14   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    16   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    19   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    20   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    21   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    22   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    23   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    24   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    25   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    27   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    28   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    29   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    30   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    31   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    32   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    33   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    40   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    43   * \defgroup IfxLld_Psi5s_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    44   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    45   * \defgroup IfxLld_Psi5s_Std_Channel Channel Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    46   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    47   * \defgroup IfxLld_Psi5s_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    48   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    49   * \defgroup IfxLld_Psi5s_Std_Interrupt Interrupt configuration functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    50   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    51   * \defgroup IfxLld_Psi5s_Std_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    52   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    53   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    54  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    55  #ifndef IFXPSI5S_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    56  #define IFXPSI5S_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    57  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    59  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    60  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    61  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    62  #include "_Impl/IfxPsi5s_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    63  #include "_PinMap/IfxPsi5s_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    64  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    65  #include "IfxPsi5s_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    66  #include "IfxPsi5s_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    67  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    68  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    69  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    70  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    71  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    72  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    73  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    74  /** \addtogroup IfxLld_Psi5s_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    75   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    76  /** \brief MODULE_PSI5S.IOCR.ALTI:Alternate input
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    77   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    78  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    79  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    80      IfxPsi5s_AlternateInput_0 = 0,      /**< \brief Alternate Input 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    81      IfxPsi5s_AlternateInput_1,          /**< \brief Alternate Input 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    82      IfxPsi5s_AlternateInput_2,          /**< \brief Alternate Input 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    83      IfxPsi5s_AlternateInput_3           /**< \brief Alternate Input 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    84  } IfxPsi5s_AlternateInput;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    86  /** \brief MODULE_PSI5S.BG.BR_VALUE:Baudrate prescalar select
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    87   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    88  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    89  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    90      IfxPsi5s_AscBaudratePrescalar_divideBy2 = 0,  /**< \brief Divide by 2 is selected for baudrate timer prescalar */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    91      IfxPsi5s_AscBaudratePrescalar_divideBy3 = 1   /**< \brief Divide by 3 is selected for baudrate timer prescalar */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    92  } IfxPsi5s_AscBaudratePrescalar;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    94  /** \brief MODULE_PSI5S.CON.M:ASC mode of operation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    95   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    96  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    97  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    98      IfxPsi5s_AscMode_sync                     = 0,  /**< \brief Synchronous mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    99      IfxPsi5s_AscMode_async_8bitData           = 1,  /**< \brief Asynchronous mode with 8 bit data */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   100      IfxPsi5s_AscMode_async_7bitDataWithParity = 3,  /**< \brief Asynchronous mode with 7 bit data with parity */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   101      IfxPsi5s_AscMode_async_9bitData           = 4,  /**< \brief Asynchronous mode with 9 bit data */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   102      IfxPsi5s_AscMode_async_8bitDataWithWakeup = 5,  /**< \brief Asynchronous mode with 8 bit data with wakeup */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   103      IfxPsi5s_AscMode_async_8bitDataWithParity = 7   /**< \brief Asynchronous mode with 8 bit data with parity */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   104  } IfxPsi5s_AscMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   106  /** \brief MODULE_PSI5S.CON.STP: Number of stop bits
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   110      IfxPsi5s_AscStopBits_1 = 0,      /**< \brief 1 stop bit  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   111      IfxPsi5s_AscStopBits_2           /**< \brief 2 stop bit  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   112  } IfxPsi5s_AscStopBits;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   113  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   114  /** \brief PSI5S Channel Id defined in MODULE_PSI5S.RDS.B.CID.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   115   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   116  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   117  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   118      IfxPsi5s_ChannelId_0 = 0,     /**< \brief Ifx_PSI5S Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   119      IfxPsi5s_ChannelId_1,         /**< \brief Ifx_PSI5S Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   120      IfxPsi5s_ChannelId_2,         /**< \brief Ifx_PSI5S Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   121      IfxPsi5s_ChannelId_3,         /**< \brief Ifx_PSI5S Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   122      IfxPsi5s_ChannelId_4,         /**< \brief Ifx_PSI5S Channel 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   123      IfxPsi5s_ChannelId_5,         /**< \brief Ifx_PSI5S Channel 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   124      IfxPsi5s_ChannelId_6,         /**< \brief Ifx_PSI5S Channel 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   125      IfxPsi5s_ChannelId_7,         /**< \brief Ifx_PSI5S Channel 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   126      IfxPsi5s_ChannelId_none = -1  /**< \brief None of the Ifx_PSI5S Channels */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   127  } IfxPsi5s_ChannelId;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   129  /** \brief Clock Selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   131  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   132  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   133      IfxPsi5s_ClockType_fracDiv    = 0,  /**< \brief Fractional Divide clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   134      IfxPsi5s_ClockType_timeStamp  = 1,  /**< \brief Timestamp clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   135      IfxPsi5s_ClockType_ascFracDiv = 2,  /**< \brief Asc Fractional divider clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   136      IfxPsi5s_ClockType_ascOutput  = 3   /**< \brief Asc output clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   137  } IfxPsi5s_ClockType;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   139  /** \brief MODULE_PSI5S.RCRAx.CRCy(x= 0,1,..7:y=0,1,..,5),MODULE_PSI5S.RCRBx.CRCy(x= 0,1,..7:y=0,1,..,5)CRC or parity
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   140   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   141  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   142  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   143      IfxPsi5s_CrcOrParity_parity = 0,  /**< \brief parity selection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   144      IfxPsi5s_CrcOrParity_crc    = 1   /**< \brief CRC selection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   145  } IfxPsi5s_CrcOrParity;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   147  /** \brief MODULE_PSI5S.FDR.DM;MODULE_PSI5S.FDRT.B.DM:Divider mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   148   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   149  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   150  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   151      IfxPsi5s_DividerMode_spb        = 0,  /**< \brief divider mode is off */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   152      IfxPsi5s_DividerMode_normal     = 1,  /**< \brief divider mode is normal */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   153      IfxPsi5s_DividerMode_fractional = 2,  /**< \brief divider mode is fractional */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   154      IfxPsi5s_DividerMode_off        = 3   /**< \brief divider mode is off */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   155  } IfxPsi5s_DividerMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   156  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   157  /** \brief MODULE_PSI5S.SCRx.EPS(x=0,1,...,7):Enhanced protocol types
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   158   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   159  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   160  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   161      IfxPsi5s_EnhancedProtocol_toothGapMethod              = 0,  /**< \brief toothGapMethod Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   162      IfxPsi5s_EnhancedProtocol_pulseWidth_frameFormat_1to3 = 1,  /**< \brief pulseWidth_frameFormat_1to3 Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   163      IfxPsi5s_EnhancedProtocol_pulseWidth_frameFormat_4    = 3   /**< \brief pulseWidth_frameFormat_4 Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   164  } IfxPsi5s_EnhancedProtocol;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   166  /** \brief MODULE_PSI5S.RCRAx.FIDS(x=0,1,....,7):.Frame ID updation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   167   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   168  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   169  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   170      IfxPsi5s_FrameId_frameHeader   = 0, /**< \brief Frame ID is updated from packet frame header (Sync mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   171      IfxPsi5s_FrameId_rollingNumber = 1  /**< \brief Frame ID is a rolling number 0 .. 5 copied from FCNT */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   172  } IfxPsi5s_FrameId;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   173  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   174  /** \brief MODULE_PSI5S.GCR.IDT:Idle time bit count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   178      IfxPsi5s_IdleTime_1 = 0,      /**< \brief 1 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   179      IfxPsi5s_IdleTime_2,          /**< \brief 2 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   180      IfxPsi5s_IdleTime_3,          /**< \brief 3 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   181      IfxPsi5s_IdleTime_4,          /**< \brief 4 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   182      IfxPsi5s_IdleTime_5,          /**< \brief 5 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   183      IfxPsi5s_IdleTime_6,          /**< \brief 6 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   184      IfxPsi5s_IdleTime_7,          /**< \brief 7 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   185      IfxPsi5s_IdleTime_8,          /**< \brief 8 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   186      IfxPsi5s_IdleTime_9,          /**< \brief 9 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   187      IfxPsi5s_IdleTime_10,         /**< \brief 10 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   188      IfxPsi5s_IdleTime_11,         /**< \brief 11 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   189      IfxPsi5s_IdleTime_12,         /**< \brief 12 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   190      IfxPsi5s_IdleTime_13,         /**< \brief 13 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   191      IfxPsi5s_IdleTime_14,         /**< \brief 14 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   192      IfxPsi5s_IdleTime_15,         /**< \brief 15 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   193      IfxPsi5s_IdleTime_16          /**< \brief 16 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   194  } IfxPsi5s_IdleTime;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   195  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   196  /** \brief Enable/Disable interrupt request .defined in MODULE_PSI5S.INTEN[x]
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   198  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   199  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   200      IfxPsi5s_InterruptRequest_disabled = 0,  /**< \brief no interrupt request can be generated for this source */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   201      IfxPsi5s_InterruptRequest_enabled  = 1   /**< \brief An Interrupt request can be generated for source */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   202  } IfxPsi5s_InterruptRequest;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   203  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   204  /** \brief Enable/Disable the interrupt and  select interrupt source pointer defined in MODULE_PSI5S.INTEN[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   205   * and MODULE_PSI5S.INP[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   206   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   207  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   208  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   209      IfxPsi5s_InterruptSource_rsi  = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   210      IfxPsi5s_InterruptSource_rdi  = 1,  /**< \brief Enable Interrupt Request RDI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   211      IfxPsi5s_InterruptSource_rbi  = 2,  /**< \brief Enable Interrupt Request RBI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   212      IfxPsi5s_InterruptSource_tei  = 3,  /**< \brief Enable Interrupt Request TEI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   213      IfxPsi5s_InterruptSource_chci = 4,  /**< \brief Enable Interrupt Request CHCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   214      IfxPsi5s_InterruptSource_crci = 5,  /**< \brief Enable Interrupt Request CRCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   215      IfxPsi5s_InterruptSource_tpi  = 6,  /**< \brief Enable Interrupt Request TPI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   216      IfxPsi5s_InterruptSource_tpoi = 7,  /**< \brief Enable Interrupt Request TPOI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   217      IfxPsi5s_InterruptSource_hdi  = 8   /**< \brief Enable Interrupt Request HDI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   218  } IfxPsi5s_InterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   219  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   220  /** \brief Enable/Disable Loop back Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   221   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   222  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   223  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   224      IfxPsi5s_LoopBackMode_disable = 0,  /**< \brief loop-back mode disabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   225      IfxPsi5s_LoopBackMode_enable  = 1   /**< \brief loop-back mode enabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   226  } IfxPsi5s_LoopBackMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   228  /** \brief Messaging bits presence
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   229   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   230  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   231  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   232      IfxPsi5s_MessagingBits_absent  = 0, /**< \brief No messaging bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   233      IfxPsi5s_MessagingBits_present = 1  /**< \brief 2 messaging bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   234  } IfxPsi5s_MessagingBits;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   235  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   236  /** \brief MODULE_PSI5S.NFC.NFx:Expected Psi5s frames
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   238  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   239  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   240      IfxPsi5s_NumberExpectedFrames_1 = 1,      /**< \brief 1 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   241      IfxPsi5s_NumberExpectedFrames_2,          /**< \brief 2 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   242      IfxPsi5s_NumberExpectedFrames_3,          /**< \brief 3 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   243      IfxPsi5s_NumberExpectedFrames_4,          /**< \brief 4 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   244      IfxPsi5s_NumberExpectedFrames_5,          /**< \brief 5 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   245      IfxPsi5s_NumberExpectedFrames_6           /**< \brief 6 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   246  } IfxPsi5s_NumberExpectedFrames;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   247  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   248  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   249   * Definition in Ifx_PSI5S.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   250   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   251  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   252  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   253      IfxPsi5s_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   254      IfxPsi5s_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   255  } IfxPsi5s_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   257  /** \brief OCDS Suspend Control (OCDS.SUS)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   258   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   259  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   261      IfxPsi5s_SuspendMode_none = 0,  /**< \brief No suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   262      IfxPsi5s_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   263      IfxPsi5s_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   264  } IfxPsi5s_SuspendMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   265  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   266  /** \brief MODULE_PSI5S.TSCNTA.B.TBS;MODULE_PSI5S.TSCNTB.B.TBS:Time base
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   267   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   268  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   269  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   270      IfxPsi5s_TimeBase_internal = 0,  /**< \brief Internal time stamp clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   271      IfxPsi5s_TimeBase_external = 1   /**< \brief External GTM inputs */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   272  } IfxPsi5s_TimeBase;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   274  /** \brief Start/stop Current time stamp count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   275   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   276  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   277  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   278      IfxPsi5s_TimeStampCount_stopped = 0,  /**< \brief CTS stopped */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   279      IfxPsi5s_TimeStampCount_started = 1   /**< \brief CTS Started */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   280  } IfxPsi5s_TimeStampCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   281  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   282  /** \brief MODULE_PSI5S.TSCNTx(x= A,B):Timestamp register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   283   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   284  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   285  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   286      IfxPsi5s_TimestampRegister_a = 0,  /**< \brief Timestamp register A */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   287      IfxPsi5s_TimestampRegister_b = 1   /**< \brief Timestamp register B */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   288  } IfxPsi5s_TimestampRegister;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   289  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   290  /** \brief MODULE_PSI5S.RCRAx.TSTS:Timestamp trigger
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   291   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   292  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   293  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   294      IfxPsi5s_TimestampTrigger_syncPulse = 0,  /**< \brief Timestamp trigger on sync pulse */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   295      IfxPsi5s_TimestampTrigger_frame     = 1   /**< \brief Timestamp trigger on any frame */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   296  } IfxPsi5s_TimestampTrigger;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   297  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   298  /** \brief MODULE_PSI5S.TSCNTA.B.ETB;MODULE_PSI5S.TSCNTB.B.ETB:Trigger Id
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   300  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   301  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   302      IfxPsi5s_Trigger_0 = 0,      /**< \brief Trigger 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   303      IfxPsi5s_Trigger_1,          /**< \brief Trigger 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   304      IfxPsi5s_Trigger_2,          /**< \brief Trigger 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   305      IfxPsi5s_Trigger_3,          /**< \brief Trigger 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   306      IfxPsi5s_Trigger_4,          /**< \brief Trigger 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   307      IfxPsi5s_Trigger_5,          /**< \brief Trigger 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   308      IfxPsi5s_Trigger_6,          /**< \brief Trigger 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   309      IfxPsi5s_Trigger_7           /**< \brief Trigger 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   310  } IfxPsi5s_Trigger;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   312  /** \brief specifies service request line defined in MODULE_PSI5S.INP[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   313   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   314  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   315  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   316      IfxPsi5s_TriggerOutput_0 = 0,      /**< \brief Triggered output line is TRIGO_0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   317      IfxPsi5s_TriggerOutput_1,          /**< \brief Triggered output line is TRIGO_1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   318      IfxPsi5s_TriggerOutput_2,          /**< \brief Triggered output line is TRIGO_2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   319      IfxPsi5s_TriggerOutput_3,          /**< \brief Triggered output line is TRIGO_3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   320      IfxPsi5s_TriggerOutput_4,          /**< \brief Triggered output line is TRIGO_4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   321      IfxPsi5s_TriggerOutput_5,          /**< \brief Triggered output line is TRIGO_5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   322      IfxPsi5s_TriggerOutput_6,          /**< \brief Triggered output line is TRIGO_6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   323      IfxPsi5s_TriggerOutput_7           /**< \brief Triggered output line is TRIGO_7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   324  } IfxPsi5s_TriggerOutput;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   325  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   326  /** \brief Trigger type defined in
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   327   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   328  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   329  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   330      IfxPsi5s_TriggerType_periodic = 0,  /**< \brief Periodic trigger */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   331      IfxPsi5s_TriggerType_external = 1   /**< \brief External trigger */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   332  } IfxPsi5s_TriggerType;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   333  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   334  /** \brief MODULE_PSI5S.RCRAx.UFCY(x=0,1,...7;y=0,1...5):UART frame count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   336  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   337  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   338      IfxPsi5s_UartFrameCount_3 = 0,      /**< \brief 3 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   339      IfxPsi5s_UartFrameCount_4,          /**< \brief 4 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   340      IfxPsi5s_UartFrameCount_5,          /**< \brief 5 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   341      IfxPsi5s_UartFrameCount_6           /**< \brief 6 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   342  } IfxPsi5s_UartFrameCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   344  /** \brief MODULE_PSI5S.RCRAx.WDMS:Watchdog timer mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   346  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   347  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   348      IfxPsi5s_WatchdogTimerMode_frame     = 0, /**< \brief Watch Dog Timer is restarted on reception of each recoverable frame (async mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   349      IfxPsi5s_WatchdogTimerMode_syncPulse = 1  /**< \brief Watch Dog Timer is restarted on Sync Pulse and stopped at reception of the last frame configured in NFC.NFx.(sync mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   350  } IfxPsi5s_WatchdogTimerMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   352  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   353  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   354  /** \brief List of Global interrupt sources or registers INTxG
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   355   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   356  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   357  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   358      IfxPsi5s_GlobalInterruptSource_tir   = 0,  /**< \brief Enable Interrupt Request TIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   359      IfxPsi5s_GlobalInterruptSource_rir   = 1,  /**< \brief Enable Interrupt Request RIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   360      IfxPsi5s_GlobalInterruptSource_eir   = 2,  /**< \brief Enable Interrupt Request EIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   361      IfxPsi5s_GlobalInterruptSource_tbir  = 3,  /**< \brief Enable Interrupt Request TBIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   362      IfxPsi5s_GlobalInterruptSource_xcrci = 4,  /**< \brief Enable Interrupt Request XCRCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   363      IfxPsi5s_GlobalInterruptSource_foi   = 5   /**< \brief Enable Interrupt Request FOI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   364  } IfxPsi5s_GlobalInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   366  /** \addtogroup IfxLld_Psi5s_Std_Channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   367   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   368  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   369  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   370  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   371  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   372  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   373  /** \brief fill data into tx buffer for direct transmission(in ASC mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   374   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   375   * \param data Pointer to data
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   376   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   377   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   378  IFX_INLINE void IfxPsi5s_fillAscTransmitBuffer(Ifx_PSI5S *psi5s, uint32 *data);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   380  /** \brief received buffer in ASC mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   381   * \param psi5s Pointer to PSI5s register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   382   * \return recieved buffer value in asc mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   383   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   384  IFX_INLINE uint32 IfxPsi5s_getReceiveBuffer(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   385  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   386  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   387  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   388  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   389  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   390  /** \brief Asc receiver is disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   391   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   392   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   394  IFX_EXTERN void IfxPsi5s_disableAscReceiver(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   396  /** \brief Enable ASC receiver
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   397   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   400  IFX_EXTERN void IfxPsi5s_enableAscReceiver(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   402  /** \brief Enable/disable any combination of channel trigger counters selected by mask parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   403   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   404   * \param channels specifies the channel trigger counters which should be enabled/disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   405   * \param mask specifies the channel trigger counters which should be modified
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   406   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   407   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   408  IFX_EXTERN void IfxPsi5s_enableDisableChannelTriggerCounters(Ifx_PSI5S *psi5s, uint32 channels, uint32 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   410  /** \brief Enable/disable any combination of channels selected by mask parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   411   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   412   * \param channels specifies the channels which should be enabled/disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   413   * \param mask specifies the channels which should be modified
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   414   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   416  IFX_EXTERN void IfxPsi5s_enableDisableChannels(Ifx_PSI5S *psi5s, uint32 channels, uint32 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   417  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   418  /** \brief Baudrate frequency in HZ
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   419   * \param psi5s Pointer to PSI5s Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   420   * \param synchMode Pointer to the configuration structure of ASC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   421   * \param divMode specifies fractional/normal divider mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   422   * \param baudrateSelection select sbaudrate prescaler
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   423   * \return baudrate in HZ
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   424   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   425  IFX_EXTERN float32 IfxPsi5s_getBaudrate(Ifx_PSI5S *psi5s, boolean synchMode, boolean divMode, IfxPsi5s_AscBaudratePrescalar baudrateSelection);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   426  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   427  /** \brief Start ASC transactions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   428   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   429   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   430   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   431  IFX_EXTERN void IfxPsi5s_startAscTransactions(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   432  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   433  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   434   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   435   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   436   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   437  IFX_EXTERN void IfxPsi5s_stopAscTransactions(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   438  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   439  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   441  /** \addtogroup IfxLld_Psi5s_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   442   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   444  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   445  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   446  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   448  /** \brief Initializes a CLK output
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   449   * \param clk the CLK Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   450   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   451   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   452   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   454  IFX_INLINE void IfxPsi5s_initClkPin(const IfxPsi5s_Clk_Out *clk, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   456  /** \brief Initializes a RX input
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   457   * \param rx the RX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   458   * \param inputMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   459   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   460   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   462  IFX_INLINE void IfxPsi5s_initRxPin(const IfxPsi5s_Rx_In *rx, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   464  /** \brief Initializes a TX output
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   465   * \param tx the TX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   466   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   467   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   468   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   469   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   470  IFX_INLINE void IfxPsi5s_initTxPin(const IfxPsi5s_Tx_Out *tx, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   471  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   472  /** \brief Selects the alternate input for Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   473   * \param psi5s pointer to PSI5S registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   474   * \param alti alternate input selection of Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   475   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   476   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   477  IFX_INLINE void IfxPsi5s_setRxInput(Ifx_PSI5S *psi5s, IfxPsi5s_AlternateInput alti);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   479  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   481  /** \addtogroup IfxLld_Psi5s_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   482   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   483  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   484  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   485  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   486  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   487  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   488  /** \brief Enable /Disable Global Interrupt Source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   489   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   490   * \param interruptSource specifies Global Interrupt Source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   491   * \param enabled enable /disable Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   494  IFX_INLINE void IfxPsi5s_enableGlobalInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   496  /** \brief enable / disable interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   497   * \param psi5s pointer to psi5s register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   498   * \param channel specifies channel number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   499   * \param interruptSource specifies interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   500   * \param enabled Enable / Disable the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   501   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   502   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   503  IFX_INLINE void IfxPsi5s_enableInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   504  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   505  /** \brief Get  Receive Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   506   * \param psi5s Pointer to PSI5S Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   507   * \return Receive Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   508   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   509  IFX_INLINE boolean IfxPsi5s_getReceiveInterruptStatus(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   510  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   511  /** \brief get Transmit Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   512   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   513   * \return Transmit Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   514   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   515  IFX_INLINE boolean IfxPsi5s_getTransmitInterruptStatus(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   516  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   517  /** \brief Sets the node pointers of PSI5-S ASC and for XCRCI and FOI
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   518   * \param psi5s Pointer to PSI5S Register Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   519   * \param nodePointer specifies node pointer source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   520   * \param triggerOutputLine select trigger Output Line
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   521   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   522   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   523  IFX_INLINE void IfxPsi5s_setGlobalInterruptNodePointer(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource nodePointer, IfxPsi5s_Trigger triggerOutputLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   525  /** \brief set interrupt node pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   526   * \param psi5s specifies the pointer to PSI5S Module register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   527   * \param channel specifies channel number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   528   * \param nodePointer specifies node pointer source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   529   * \param triggerOutputLine select service request line
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   530   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   531   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   532  IFX_INLINE void IfxPsi5s_setInterruptNodePointer(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource nodePointer, IfxPsi5s_Trigger triggerOutputLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   533  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   534  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   536  /** \addtogroup IfxLld_Psi5s_Std_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   537   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   539  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   540  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   541  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   542  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   543  /** \brief clear time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   544   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   545   * \param clearTimeStampCounter clear time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   546   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   548  IFX_INLINE void IfxPsi5s_clearTimeStampCounterA(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   550  /** \brief Clear Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   551   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   552   * \param clearTimeStampCounter clear Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   553   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   554   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   555  IFX_INLINE void IfxPsi5s_clearTimeStampCounterB(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   556  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   557  /** \brief Returns the module's suspend state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   558   * TRUE :if module is suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   559   * FALSE:if module is not yet suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   560   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   561   * \return Suspend status (TRUE / FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   562   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   563  IFX_INLINE boolean IfxPsi5s_isModuleSuspended(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   565  /** \brief enable /disable loop back mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   566   * \param psi5s pointer to PSI5S Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   567   * \param enabled enable/disable loop back mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   568   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   570  IFX_INLINE void IfxPsi5s_setLoopBackMode(Ifx_PSI5S *psi5s, IfxPsi5s_LoopBackMode enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   572  /** \brief enable / disable sleep mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   573   * \param psi5s Pointer to PSI5S register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   574   * \param mode sleep mode (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   575   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   576   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   577  IFX_INLINE void IfxPsi5s_setSleepMode(Ifx_PSI5S *psi5s, IfxPsi5s_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   578  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   579  /** \brief Configure the Module to Hard/Soft suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   580   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   581   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   582   * \param mode Module suspend mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   583   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   584   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   585  IFX_INLINE void IfxPsi5s_setSuspendMode(Ifx_PSI5S *psi5s, IfxPsi5s_SuspendMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   587  /** \brief start time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   588   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   589   * \param startTimeStamp Start/stop current time stamp count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   590   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   591   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   592  IFX_INLINE void IfxPsi5s_setTimeStampCounterA(Ifx_PSI5S *psi5s, IfxPsi5s_TimeStampCount startTimeStamp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   593  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   594  /** \brief Start Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   595   * \param psi5s Pointer to PSI5S Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   596   * \param startTimeStamp start time stamp
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   597   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   598   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   599  IFX_INLINE void IfxPsi5s_setTimeStampCounterB(Ifx_PSI5S *psi5s, IfxPsi5s_TimeStampCount startTimeStamp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   601  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   602  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   603  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   605  /** \brief Disable PSI5S kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   606   * \param psi5s pointer to the base of PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   607   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   608   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   609  IFX_EXTERN void IfxPsi5s_disableModule(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   610  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   611  /** \brief Get the received psi5s frame for the channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   612   * \param psi5s Pointer to PSI5S Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   613   * \param channelId channel ID
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   614   * \return Frame Status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   615   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   616  IFX_EXTERN boolean IfxPsi5s_getReadFrameStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   617  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   618  /** \brief Indicates the successful reception of a frame.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   619   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   620   * \param channelId Channel Number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   621   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   622  IFX_EXTERN boolean IfxPsi5s_getSuccessfullyReceivedFrameStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   623  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   624  /** \brief resets PSI5S kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   625   * \param psi5s pointer to PSI5S registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   626   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   627   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   628  IFX_EXTERN void IfxPsi5s_resetModule(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   629  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   630  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   632  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   633  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   634  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   635  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   636  /** \brief Shows status of any interrupt in any channell in PSI5S.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   637   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   638   * \param channel Channel ID of channel whose interrupt status is required
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   639   * \param interruptSource Interrupt Source to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   640   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   641  IFX_INLINE boolean IfxPsi5s_getInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   643  /** \brief Clears the status of any interrupt of any  PSI5-S channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   644   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   645   * \param channel Channel ID of channel whose interrupt needs to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   646   * \param interruptSource Interrupt Source to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   647   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   648   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   649  IFX_INLINE void IfxPsi5s_clearInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   650  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   651  /** \brief Show the status of any global interrupt, i.e. of the ASC inside PSI5-S and XCRCI indicating a non recoverable message is received.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   652   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   653   * \param interruptSource Interrupt source under consideration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   654   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   655  IFX_INLINE boolean IfxPsi5s_getGlobalInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   657  /** \brief Clears the status of any interrupt of the ASC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   658   * integrated in PSI5-S and for XCRCI and FOI
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   659   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   660   * \param interruptSource Interrupt source under consideration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   661   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   662   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   663  IFX_INLINE void IfxPsi5s_clearGlobalInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   664  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   665  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   666  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   667  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   669  /** \brief Get address of the SRC register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   670   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   671   * \param channel Channel ID of the channel to get the corresponding SRC pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   672   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   673  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxPsi5s_getSrcAddress(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   675  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   676  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   677  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   678  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   679  IFX_INLINE void IfxPsi5s_clearTimeStampCounterA(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   680  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   681      psi5s->TSCNTA.B.CLRA = clearTimeStampCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   682  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   683  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   684  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   685  IFX_INLINE void IfxPsi5s_clearTimeStampCounterB(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   686  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   687      psi5s->TSCNTA.B.CLRB = clearTimeStampCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   688  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   689  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   690  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   691  IFX_INLINE void IfxPsi5s_enableGlobalInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   692  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   693      psi5s->INTENG.U |= (enabled << interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   694  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   695  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   696  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   697  IFX_INLINE void IfxPsi5s_enableInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   698  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   699      psi5s->INTEN[channel].U |= (enabled << interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   700  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   701  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   702  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   703  IFX_INLINE void IfxPsi5s_fillAscTransmitBuffer(Ifx_PSI5S *psi5s, uint32 *data)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   704  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   705      psi5s->TBUF.U = *data;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   706  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   707  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   708  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   709  IFX_INLINE uint32 IfxPsi5s_getReceiveBuffer(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   710  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   711      return psi5s->RBUF.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   712  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   713  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   714  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   715  IFX_INLINE boolean IfxPsi5s_getReceiveInterruptStatus(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   716  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   717      return (boolean)psi5s->INTSTATG.B.RIR;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   718  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   719  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   720  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   721  IFX_INLINE boolean IfxPsi5s_getTransmitInterruptStatus(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   722  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   723      return (boolean)psi5s->INTSTATG.B.TIR;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   724  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   725  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   726  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   727  IFX_INLINE void IfxPsi5s_initClkPin(const IfxPsi5s_Clk_Out *clk, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   728  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   729      if (clk->pin.port != NULL_PTR)
	ld.a	a4,[a15]4
.L286:
	ld.bu	d5,[a12]20
.L549:
	ld.bu	d9,[a12]21
.L295:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   729      if (clk->pin.port != NULL_PTR)      (inlined)
	jz.a	a4,.L31
.L296:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     2   * \file IfxPsi5s.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     3   * \brief PSI5S  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     4   * \ingroup IfxLld_Psi5s
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    10   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    11   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    14   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    16   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    19   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    20   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    21   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    22   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    23   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    24   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    25   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    27   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    28   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    29   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    30   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    31   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    32   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    33   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    40   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    43   * \defgroup IfxLld_Psi5s_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    44   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    45   * \defgroup IfxLld_Psi5s_Std_Channel Channel Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    46   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    47   * \defgroup IfxLld_Psi5s_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    48   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    49   * \defgroup IfxLld_Psi5s_Std_Interrupt Interrupt configuration functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    50   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    51   * \defgroup IfxLld_Psi5s_Std_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    52   * \ingroup IfxLld_Psi5s_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    53   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    54  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    55  #ifndef IFXPSI5S_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    56  #define IFXPSI5S_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    57  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    59  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    60  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    61  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    62  #include "_Impl/IfxPsi5s_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    63  #include "_PinMap/IfxPsi5s_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    64  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    65  #include "IfxPsi5s_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    66  #include "IfxPsi5s_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    67  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    68  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    69  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    70  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    71  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    72  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    73  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    74  /** \addtogroup IfxLld_Psi5s_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    75   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    76  /** \brief MODULE_PSI5S.IOCR.ALTI:Alternate input
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    77   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    78  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    79  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    80      IfxPsi5s_AlternateInput_0 = 0,      /**< \brief Alternate Input 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    81      IfxPsi5s_AlternateInput_1,          /**< \brief Alternate Input 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    82      IfxPsi5s_AlternateInput_2,          /**< \brief Alternate Input 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    83      IfxPsi5s_AlternateInput_3           /**< \brief Alternate Input 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    84  } IfxPsi5s_AlternateInput;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    86  /** \brief MODULE_PSI5S.BG.BR_VALUE:Baudrate prescalar select
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    87   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    88  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    89  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    90      IfxPsi5s_AscBaudratePrescalar_divideBy2 = 0,  /**< \brief Divide by 2 is selected for baudrate timer prescalar */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    91      IfxPsi5s_AscBaudratePrescalar_divideBy3 = 1   /**< \brief Divide by 3 is selected for baudrate timer prescalar */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    92  } IfxPsi5s_AscBaudratePrescalar;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    94  /** \brief MODULE_PSI5S.CON.M:ASC mode of operation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    95   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    96  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    97  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    98      IfxPsi5s_AscMode_sync                     = 0,  /**< \brief Synchronous mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	    99      IfxPsi5s_AscMode_async_8bitData           = 1,  /**< \brief Asynchronous mode with 8 bit data */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   100      IfxPsi5s_AscMode_async_7bitDataWithParity = 3,  /**< \brief Asynchronous mode with 7 bit data with parity */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   101      IfxPsi5s_AscMode_async_9bitData           = 4,  /**< \brief Asynchronous mode with 9 bit data */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   102      IfxPsi5s_AscMode_async_8bitDataWithWakeup = 5,  /**< \brief Asynchronous mode with 8 bit data with wakeup */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   103      IfxPsi5s_AscMode_async_8bitDataWithParity = 7   /**< \brief Asynchronous mode with 8 bit data with parity */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   104  } IfxPsi5s_AscMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   106  /** \brief MODULE_PSI5S.CON.STP: Number of stop bits
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   110      IfxPsi5s_AscStopBits_1 = 0,      /**< \brief 1 stop bit  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   111      IfxPsi5s_AscStopBits_2           /**< \brief 2 stop bit  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   112  } IfxPsi5s_AscStopBits;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   113  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   114  /** \brief PSI5S Channel Id defined in MODULE_PSI5S.RDS.B.CID.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   115   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   116  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   117  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   118      IfxPsi5s_ChannelId_0 = 0,     /**< \brief Ifx_PSI5S Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   119      IfxPsi5s_ChannelId_1,         /**< \brief Ifx_PSI5S Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   120      IfxPsi5s_ChannelId_2,         /**< \brief Ifx_PSI5S Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   121      IfxPsi5s_ChannelId_3,         /**< \brief Ifx_PSI5S Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   122      IfxPsi5s_ChannelId_4,         /**< \brief Ifx_PSI5S Channel 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   123      IfxPsi5s_ChannelId_5,         /**< \brief Ifx_PSI5S Channel 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   124      IfxPsi5s_ChannelId_6,         /**< \brief Ifx_PSI5S Channel 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   125      IfxPsi5s_ChannelId_7,         /**< \brief Ifx_PSI5S Channel 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   126      IfxPsi5s_ChannelId_none = -1  /**< \brief None of the Ifx_PSI5S Channels */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   127  } IfxPsi5s_ChannelId;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   129  /** \brief Clock Selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   131  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   132  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   133      IfxPsi5s_ClockType_fracDiv    = 0,  /**< \brief Fractional Divide clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   134      IfxPsi5s_ClockType_timeStamp  = 1,  /**< \brief Timestamp clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   135      IfxPsi5s_ClockType_ascFracDiv = 2,  /**< \brief Asc Fractional divider clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   136      IfxPsi5s_ClockType_ascOutput  = 3   /**< \brief Asc output clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   137  } IfxPsi5s_ClockType;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   139  /** \brief MODULE_PSI5S.RCRAx.CRCy(x= 0,1,..7:y=0,1,..,5),MODULE_PSI5S.RCRBx.CRCy(x= 0,1,..7:y=0,1,..,5)CRC or parity
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   140   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   141  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   142  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   143      IfxPsi5s_CrcOrParity_parity = 0,  /**< \brief parity selection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   144      IfxPsi5s_CrcOrParity_crc    = 1   /**< \brief CRC selection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   145  } IfxPsi5s_CrcOrParity;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   147  /** \brief MODULE_PSI5S.FDR.DM;MODULE_PSI5S.FDRT.B.DM:Divider mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   148   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   149  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   150  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   151      IfxPsi5s_DividerMode_spb        = 0,  /**< \brief divider mode is off */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   152      IfxPsi5s_DividerMode_normal     = 1,  /**< \brief divider mode is normal */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   153      IfxPsi5s_DividerMode_fractional = 2,  /**< \brief divider mode is fractional */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   154      IfxPsi5s_DividerMode_off        = 3   /**< \brief divider mode is off */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   155  } IfxPsi5s_DividerMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   156  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   157  /** \brief MODULE_PSI5S.SCRx.EPS(x=0,1,...,7):Enhanced protocol types
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   158   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   159  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   160  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   161      IfxPsi5s_EnhancedProtocol_toothGapMethod              = 0,  /**< \brief toothGapMethod Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   162      IfxPsi5s_EnhancedProtocol_pulseWidth_frameFormat_1to3 = 1,  /**< \brief pulseWidth_frameFormat_1to3 Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   163      IfxPsi5s_EnhancedProtocol_pulseWidth_frameFormat_4    = 3   /**< \brief pulseWidth_frameFormat_4 Enhanced protocol type */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   164  } IfxPsi5s_EnhancedProtocol;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   166  /** \brief MODULE_PSI5S.RCRAx.FIDS(x=0,1,....,7):.Frame ID updation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   167   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   168  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   169  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   170      IfxPsi5s_FrameId_frameHeader   = 0, /**< \brief Frame ID is updated from packet frame header (Sync mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   171      IfxPsi5s_FrameId_rollingNumber = 1  /**< \brief Frame ID is a rolling number 0 .. 5 copied from FCNT */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   172  } IfxPsi5s_FrameId;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   173  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   174  /** \brief MODULE_PSI5S.GCR.IDT:Idle time bit count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   178      IfxPsi5s_IdleTime_1 = 0,      /**< \brief 1 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   179      IfxPsi5s_IdleTime_2,          /**< \brief 2 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   180      IfxPsi5s_IdleTime_3,          /**< \brief 3 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   181      IfxPsi5s_IdleTime_4,          /**< \brief 4 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   182      IfxPsi5s_IdleTime_5,          /**< \brief 5 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   183      IfxPsi5s_IdleTime_6,          /**< \brief 6 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   184      IfxPsi5s_IdleTime_7,          /**< \brief 7 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   185      IfxPsi5s_IdleTime_8,          /**< \brief 8 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   186      IfxPsi5s_IdleTime_9,          /**< \brief 9 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   187      IfxPsi5s_IdleTime_10,         /**< \brief 10 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   188      IfxPsi5s_IdleTime_11,         /**< \brief 11 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   189      IfxPsi5s_IdleTime_12,         /**< \brief 12 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   190      IfxPsi5s_IdleTime_13,         /**< \brief 13 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   191      IfxPsi5s_IdleTime_14,         /**< \brief 14 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   192      IfxPsi5s_IdleTime_15,         /**< \brief 15 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   193      IfxPsi5s_IdleTime_16          /**< \brief 16 bit Idle time  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   194  } IfxPsi5s_IdleTime;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   195  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   196  /** \brief Enable/Disable interrupt request .defined in MODULE_PSI5S.INTEN[x]
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   198  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   199  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   200      IfxPsi5s_InterruptRequest_disabled = 0,  /**< \brief no interrupt request can be generated for this source */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   201      IfxPsi5s_InterruptRequest_enabled  = 1   /**< \brief An Interrupt request can be generated for source */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   202  } IfxPsi5s_InterruptRequest;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   203  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   204  /** \brief Enable/Disable the interrupt and  select interrupt source pointer defined in MODULE_PSI5S.INTEN[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   205   * and MODULE_PSI5S.INP[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   206   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   207  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   208  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   209      IfxPsi5s_InterruptSource_rsi  = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   210      IfxPsi5s_InterruptSource_rdi  = 1,  /**< \brief Enable Interrupt Request RDI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   211      IfxPsi5s_InterruptSource_rbi  = 2,  /**< \brief Enable Interrupt Request RBI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   212      IfxPsi5s_InterruptSource_tei  = 3,  /**< \brief Enable Interrupt Request TEI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   213      IfxPsi5s_InterruptSource_chci = 4,  /**< \brief Enable Interrupt Request CHCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   214      IfxPsi5s_InterruptSource_crci = 5,  /**< \brief Enable Interrupt Request CRCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   215      IfxPsi5s_InterruptSource_tpi  = 6,  /**< \brief Enable Interrupt Request TPI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   216      IfxPsi5s_InterruptSource_tpoi = 7,  /**< \brief Enable Interrupt Request TPOI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   217      IfxPsi5s_InterruptSource_hdi  = 8   /**< \brief Enable Interrupt Request HDI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   218  } IfxPsi5s_InterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   219  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   220  /** \brief Enable/Disable Loop back Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   221   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   222  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   223  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   224      IfxPsi5s_LoopBackMode_disable = 0,  /**< \brief loop-back mode disabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   225      IfxPsi5s_LoopBackMode_enable  = 1   /**< \brief loop-back mode enabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   226  } IfxPsi5s_LoopBackMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   228  /** \brief Messaging bits presence
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   229   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   230  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   231  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   232      IfxPsi5s_MessagingBits_absent  = 0, /**< \brief No messaging bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   233      IfxPsi5s_MessagingBits_present = 1  /**< \brief 2 messaging bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   234  } IfxPsi5s_MessagingBits;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   235  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   236  /** \brief MODULE_PSI5S.NFC.NFx:Expected Psi5s frames
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   238  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   239  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   240      IfxPsi5s_NumberExpectedFrames_1 = 1,      /**< \brief 1 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   241      IfxPsi5s_NumberExpectedFrames_2,          /**< \brief 2 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   242      IfxPsi5s_NumberExpectedFrames_3,          /**< \brief 3 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   243      IfxPsi5s_NumberExpectedFrames_4,          /**< \brief 4 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   244      IfxPsi5s_NumberExpectedFrames_5,          /**< \brief 5 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   245      IfxPsi5s_NumberExpectedFrames_6           /**< \brief 6 psi5s frame expected  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   246  } IfxPsi5s_NumberExpectedFrames;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   247  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   248  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   249   * Definition in Ifx_PSI5S.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   250   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   251  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   252  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   253      IfxPsi5s_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   254      IfxPsi5s_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   255  } IfxPsi5s_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   257  /** \brief OCDS Suspend Control (OCDS.SUS)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   258   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   259  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   261      IfxPsi5s_SuspendMode_none = 0,  /**< \brief No suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   262      IfxPsi5s_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   263      IfxPsi5s_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   264  } IfxPsi5s_SuspendMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   265  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   266  /** \brief MODULE_PSI5S.TSCNTA.B.TBS;MODULE_PSI5S.TSCNTB.B.TBS:Time base
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   267   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   268  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   269  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   270      IfxPsi5s_TimeBase_internal = 0,  /**< \brief Internal time stamp clock */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   271      IfxPsi5s_TimeBase_external = 1   /**< \brief External GTM inputs */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   272  } IfxPsi5s_TimeBase;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   274  /** \brief Start/stop Current time stamp count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   275   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   276  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   277  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   278      IfxPsi5s_TimeStampCount_stopped = 0,  /**< \brief CTS stopped */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   279      IfxPsi5s_TimeStampCount_started = 1   /**< \brief CTS Started */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   280  } IfxPsi5s_TimeStampCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   281  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   282  /** \brief MODULE_PSI5S.TSCNTx(x= A,B):Timestamp register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   283   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   284  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   285  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   286      IfxPsi5s_TimestampRegister_a = 0,  /**< \brief Timestamp register A */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   287      IfxPsi5s_TimestampRegister_b = 1   /**< \brief Timestamp register B */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   288  } IfxPsi5s_TimestampRegister;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   289  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   290  /** \brief MODULE_PSI5S.RCRAx.TSTS:Timestamp trigger
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   291   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   292  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   293  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   294      IfxPsi5s_TimestampTrigger_syncPulse = 0,  /**< \brief Timestamp trigger on sync pulse */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   295      IfxPsi5s_TimestampTrigger_frame     = 1   /**< \brief Timestamp trigger on any frame */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   296  } IfxPsi5s_TimestampTrigger;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   297  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   298  /** \brief MODULE_PSI5S.TSCNTA.B.ETB;MODULE_PSI5S.TSCNTB.B.ETB:Trigger Id
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   300  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   301  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   302      IfxPsi5s_Trigger_0 = 0,      /**< \brief Trigger 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   303      IfxPsi5s_Trigger_1,          /**< \brief Trigger 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   304      IfxPsi5s_Trigger_2,          /**< \brief Trigger 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   305      IfxPsi5s_Trigger_3,          /**< \brief Trigger 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   306      IfxPsi5s_Trigger_4,          /**< \brief Trigger 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   307      IfxPsi5s_Trigger_5,          /**< \brief Trigger 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   308      IfxPsi5s_Trigger_6,          /**< \brief Trigger 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   309      IfxPsi5s_Trigger_7           /**< \brief Trigger 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   310  } IfxPsi5s_Trigger;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   312  /** \brief specifies service request line defined in MODULE_PSI5S.INP[x].U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   313   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   314  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   315  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   316      IfxPsi5s_TriggerOutput_0 = 0,      /**< \brief Triggered output line is TRIGO_0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   317      IfxPsi5s_TriggerOutput_1,          /**< \brief Triggered output line is TRIGO_1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   318      IfxPsi5s_TriggerOutput_2,          /**< \brief Triggered output line is TRIGO_2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   319      IfxPsi5s_TriggerOutput_3,          /**< \brief Triggered output line is TRIGO_3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   320      IfxPsi5s_TriggerOutput_4,          /**< \brief Triggered output line is TRIGO_4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   321      IfxPsi5s_TriggerOutput_5,          /**< \brief Triggered output line is TRIGO_5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   322      IfxPsi5s_TriggerOutput_6,          /**< \brief Triggered output line is TRIGO_6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   323      IfxPsi5s_TriggerOutput_7           /**< \brief Triggered output line is TRIGO_7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   324  } IfxPsi5s_TriggerOutput;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   325  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   326  /** \brief Trigger type defined in
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   327   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   328  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   329  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   330      IfxPsi5s_TriggerType_periodic = 0,  /**< \brief Periodic trigger */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   331      IfxPsi5s_TriggerType_external = 1   /**< \brief External trigger */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   332  } IfxPsi5s_TriggerType;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   333  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   334  /** \brief MODULE_PSI5S.RCRAx.UFCY(x=0,1,...7;y=0,1...5):UART frame count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   336  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   337  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   338      IfxPsi5s_UartFrameCount_3 = 0,      /**< \brief 3 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   339      IfxPsi5s_UartFrameCount_4,          /**< \brief 4 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   340      IfxPsi5s_UartFrameCount_5,          /**< \brief 5 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   341      IfxPsi5s_UartFrameCount_6           /**< \brief 6 UART frames  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   342  } IfxPsi5s_UartFrameCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   344  /** \brief MODULE_PSI5S.RCRAx.WDMS:Watchdog timer mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   346  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   347  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   348      IfxPsi5s_WatchdogTimerMode_frame     = 0, /**< \brief Watch Dog Timer is restarted on reception of each recoverable frame (async mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   349      IfxPsi5s_WatchdogTimerMode_syncPulse = 1  /**< \brief Watch Dog Timer is restarted on Sync Pulse and stopped at reception of the last frame configured in NFC.NFx.(sync mode) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   350  } IfxPsi5s_WatchdogTimerMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   352  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   353  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   354  /** \brief List of Global interrupt sources or registers INTxG
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   355   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   356  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   357  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   358      IfxPsi5s_GlobalInterruptSource_tir   = 0,  /**< \brief Enable Interrupt Request TIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   359      IfxPsi5s_GlobalInterruptSource_rir   = 1,  /**< \brief Enable Interrupt Request RIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   360      IfxPsi5s_GlobalInterruptSource_eir   = 2,  /**< \brief Enable Interrupt Request EIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   361      IfxPsi5s_GlobalInterruptSource_tbir  = 3,  /**< \brief Enable Interrupt Request TBIR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   362      IfxPsi5s_GlobalInterruptSource_xcrci = 4,  /**< \brief Enable Interrupt Request XCRCI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   363      IfxPsi5s_GlobalInterruptSource_foi   = 5   /**< \brief Enable Interrupt Request FOI */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   364  } IfxPsi5s_GlobalInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   366  /** \addtogroup IfxLld_Psi5s_Std_Channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   367   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   368  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   369  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   370  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   371  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   372  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   373  /** \brief fill data into tx buffer for direct transmission(in ASC mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   374   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   375   * \param data Pointer to data
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   376   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   377   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   378  IFX_INLINE void IfxPsi5s_fillAscTransmitBuffer(Ifx_PSI5S *psi5s, uint32 *data);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   380  /** \brief received buffer in ASC mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   381   * \param psi5s Pointer to PSI5s register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   382   * \return recieved buffer value in asc mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   383   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   384  IFX_INLINE uint32 IfxPsi5s_getReceiveBuffer(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   385  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   386  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   387  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   388  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   389  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   390  /** \brief Asc receiver is disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   391   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   392   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   394  IFX_EXTERN void IfxPsi5s_disableAscReceiver(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   396  /** \brief Enable ASC receiver
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   397   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   400  IFX_EXTERN void IfxPsi5s_enableAscReceiver(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   402  /** \brief Enable/disable any combination of channel trigger counters selected by mask parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   403   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   404   * \param channels specifies the channel trigger counters which should be enabled/disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   405   * \param mask specifies the channel trigger counters which should be modified
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   406   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   407   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   408  IFX_EXTERN void IfxPsi5s_enableDisableChannelTriggerCounters(Ifx_PSI5S *psi5s, uint32 channels, uint32 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   410  /** \brief Enable/disable any combination of channels selected by mask parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   411   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   412   * \param channels specifies the channels which should be enabled/disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   413   * \param mask specifies the channels which should be modified
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   414   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   416  IFX_EXTERN void IfxPsi5s_enableDisableChannels(Ifx_PSI5S *psi5s, uint32 channels, uint32 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   417  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   418  /** \brief Baudrate frequency in HZ
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   419   * \param psi5s Pointer to PSI5s Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   420   * \param synchMode Pointer to the configuration structure of ASC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   421   * \param divMode specifies fractional/normal divider mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   422   * \param baudrateSelection select sbaudrate prescaler
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   423   * \return baudrate in HZ
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   424   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   425  IFX_EXTERN float32 IfxPsi5s_getBaudrate(Ifx_PSI5S *psi5s, boolean synchMode, boolean divMode, IfxPsi5s_AscBaudratePrescalar baudrateSelection);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   426  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   427  /** \brief Start ASC transactions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   428   * \param psi5s pointer to the PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   429   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   430   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   431  IFX_EXTERN void IfxPsi5s_startAscTransactions(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   432  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   433  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   434   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   435   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   436   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   437  IFX_EXTERN void IfxPsi5s_stopAscTransactions(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   438  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   439  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   441  /** \addtogroup IfxLld_Psi5s_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   442   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   444  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   445  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   446  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   448  /** \brief Initializes a CLK output
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   449   * \param clk the CLK Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   450   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   451   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   452   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   454  IFX_INLINE void IfxPsi5s_initClkPin(const IfxPsi5s_Clk_Out *clk, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   456  /** \brief Initializes a RX input
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   457   * \param rx the RX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   458   * \param inputMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   459   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   460   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   462  IFX_INLINE void IfxPsi5s_initRxPin(const IfxPsi5s_Rx_In *rx, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   464  /** \brief Initializes a TX output
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   465   * \param tx the TX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   466   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   467   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   468   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   469   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   470  IFX_INLINE void IfxPsi5s_initTxPin(const IfxPsi5s_Tx_Out *tx, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   471  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   472  /** \brief Selects the alternate input for Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   473   * \param psi5s pointer to PSI5S registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   474   * \param alti alternate input selection of Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   475   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   476   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   477  IFX_INLINE void IfxPsi5s_setRxInput(Ifx_PSI5S *psi5s, IfxPsi5s_AlternateInput alti);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   479  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   481  /** \addtogroup IfxLld_Psi5s_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   482   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   483  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   484  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   485  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   486  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   487  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   488  /** \brief Enable /Disable Global Interrupt Source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   489   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   490   * \param interruptSource specifies Global Interrupt Source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   491   * \param enabled enable /disable Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   494  IFX_INLINE void IfxPsi5s_enableGlobalInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   496  /** \brief enable / disable interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   497   * \param psi5s pointer to psi5s register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   498   * \param channel specifies channel number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   499   * \param interruptSource specifies interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   500   * \param enabled Enable / Disable the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   501   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   502   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   503  IFX_INLINE void IfxPsi5s_enableInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   504  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   505  /** \brief Get  Receive Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   506   * \param psi5s Pointer to PSI5S Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   507   * \return Receive Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   508   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   509  IFX_INLINE boolean IfxPsi5s_getReceiveInterruptStatus(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   510  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   511  /** \brief get Transmit Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   512   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   513   * \return Transmit Interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   514   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   515  IFX_INLINE boolean IfxPsi5s_getTransmitInterruptStatus(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   516  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   517  /** \brief Sets the node pointers of PSI5-S ASC and for XCRCI and FOI
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   518   * \param psi5s Pointer to PSI5S Register Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   519   * \param nodePointer specifies node pointer source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   520   * \param triggerOutputLine select trigger Output Line
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   521   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   522   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   523  IFX_INLINE void IfxPsi5s_setGlobalInterruptNodePointer(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource nodePointer, IfxPsi5s_Trigger triggerOutputLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   525  /** \brief set interrupt node pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   526   * \param psi5s specifies the pointer to PSI5S Module register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   527   * \param channel specifies channel number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   528   * \param nodePointer specifies node pointer source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   529   * \param triggerOutputLine select service request line
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   530   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   531   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   532  IFX_INLINE void IfxPsi5s_setInterruptNodePointer(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource nodePointer, IfxPsi5s_Trigger triggerOutputLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   533  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   534  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   536  /** \addtogroup IfxLld_Psi5s_Std_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   537   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   539  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   540  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   541  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   542  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   543  /** \brief clear time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   544   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   545   * \param clearTimeStampCounter clear time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   546   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   548  IFX_INLINE void IfxPsi5s_clearTimeStampCounterA(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   550  /** \brief Clear Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   551   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   552   * \param clearTimeStampCounter clear Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   553   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   554   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   555  IFX_INLINE void IfxPsi5s_clearTimeStampCounterB(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   556  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   557  /** \brief Returns the module's suspend state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   558   * TRUE :if module is suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   559   * FALSE:if module is not yet suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   560   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   561   * \return Suspend status (TRUE / FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   562   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   563  IFX_INLINE boolean IfxPsi5s_isModuleSuspended(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   565  /** \brief enable /disable loop back mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   566   * \param psi5s pointer to PSI5S Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   567   * \param enabled enable/disable loop back mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   568   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   570  IFX_INLINE void IfxPsi5s_setLoopBackMode(Ifx_PSI5S *psi5s, IfxPsi5s_LoopBackMode enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   572  /** \brief enable / disable sleep mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   573   * \param psi5s Pointer to PSI5S register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   574   * \param mode sleep mode (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   575   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   576   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   577  IFX_INLINE void IfxPsi5s_setSleepMode(Ifx_PSI5S *psi5s, IfxPsi5s_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   578  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   579  /** \brief Configure the Module to Hard/Soft suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   580   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   581   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   582   * \param mode Module suspend mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   583   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   584   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   585  IFX_INLINE void IfxPsi5s_setSuspendMode(Ifx_PSI5S *psi5s, IfxPsi5s_SuspendMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   587  /** \brief start time stamp counter A
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   588   * \param psi5s Pointer to PSI5S Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   589   * \param startTimeStamp Start/stop current time stamp count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   590   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   591   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   592  IFX_INLINE void IfxPsi5s_setTimeStampCounterA(Ifx_PSI5S *psi5s, IfxPsi5s_TimeStampCount startTimeStamp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   593  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   594  /** \brief Start Time Stamp Counter B
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   595   * \param psi5s Pointer to PSI5S Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   596   * \param startTimeStamp start time stamp
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   597   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   598   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   599  IFX_INLINE void IfxPsi5s_setTimeStampCounterB(Ifx_PSI5S *psi5s, IfxPsi5s_TimeStampCount startTimeStamp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   601  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   602  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   603  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   605  /** \brief Disable PSI5S kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   606   * \param psi5s pointer to the base of PSI5S register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   607   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   608   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   609  IFX_EXTERN void IfxPsi5s_disableModule(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   610  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   611  /** \brief Get the received psi5s frame for the channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   612   * \param psi5s Pointer to PSI5S Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   613   * \param channelId channel ID
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   614   * \return Frame Status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   615   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   616  IFX_EXTERN boolean IfxPsi5s_getReadFrameStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   617  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   618  /** \brief Indicates the successful reception of a frame.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   619   * \param psi5s Pointer to PSI5S module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   620   * \param channelId Channel Number
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   621   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   622  IFX_EXTERN boolean IfxPsi5s_getSuccessfullyReceivedFrameStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   623  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   624  /** \brief resets PSI5S kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   625   * \param psi5s pointer to PSI5S registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   626   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   627   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   628  IFX_EXTERN void IfxPsi5s_resetModule(Ifx_PSI5S *psi5s);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   629  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   630  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   632  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   633  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   634  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   635  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   636  /** \brief Shows status of any interrupt in any channell in PSI5S.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   637   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   638   * \param channel Channel ID of channel whose interrupt status is required
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   639   * \param interruptSource Interrupt Source to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   640   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   641  IFX_INLINE boolean IfxPsi5s_getInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   643  /** \brief Clears the status of any interrupt of any  PSI5-S channel
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   644   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   645   * \param channel Channel ID of channel whose interrupt needs to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   646   * \param interruptSource Interrupt Source to be cleared
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   647   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   648   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   649  IFX_INLINE void IfxPsi5s_clearInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   650  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   651  /** \brief Show the status of any global interrupt, i.e. of the ASC inside PSI5-S and XCRCI indicating a non recoverable message is received.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   652   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   653   * \param interruptSource Interrupt source under consideration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   654   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   655  IFX_INLINE boolean IfxPsi5s_getGlobalInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   657  /** \brief Clears the status of any interrupt of the ASC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   658   * integrated in PSI5-S and for XCRCI and FOI
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   659   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   660   * \param interruptSource Interrupt source under consideration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   661   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   662   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   663  IFX_INLINE void IfxPsi5s_clearGlobalInterruptStatus(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   664  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   665  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   666  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   667  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   669  /** \brief Get address of the SRC register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   670   * \param psi5s Pointer to PSI5S SFR's base address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   671   * \param channel Channel ID of the channel to get the corresponding SRC pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   672   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   673  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxPsi5s_getSrcAddress(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   675  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   676  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   677  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   678  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   679  IFX_INLINE void IfxPsi5s_clearTimeStampCounterA(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   680  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   681      psi5s->TSCNTA.B.CLRA = clearTimeStampCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   682  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   683  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   684  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   685  IFX_INLINE void IfxPsi5s_clearTimeStampCounterB(Ifx_PSI5S *psi5s, boolean clearTimeStampCounter)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   686  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   687      psi5s->TSCNTA.B.CLRB = clearTimeStampCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   688  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   689  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   690  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   691  IFX_INLINE void IfxPsi5s_enableGlobalInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_GlobalInterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   692  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   693      psi5s->INTENG.U |= (enabled << interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   694  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   695  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   696  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   697  IFX_INLINE void IfxPsi5s_enableInterrupt(Ifx_PSI5S *psi5s, IfxPsi5s_ChannelId channel, IfxPsi5s_InterruptSource interruptSource, IfxPsi5s_InterruptRequest enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   698  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   699      psi5s->INTEN[channel].U |= (enabled << interruptSource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   700  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   701  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   702  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   703  IFX_INLINE void IfxPsi5s_fillAscTransmitBuffer(Ifx_PSI5S *psi5s, uint32 *data)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   704  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   705      psi5s->TBUF.U = *data;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   706  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   707  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   708  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   709  IFX_INLINE uint32 IfxPsi5s_getReceiveBuffer(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   710  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   711      return psi5s->RBUF.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   712  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   713  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   714  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   715  IFX_INLINE boolean IfxPsi5s_getReceiveInterruptStatus(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   716  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   717      return (boolean)psi5s->INTSTATG.B.RIR;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   718  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   719  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   720  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   721  IFX_INLINE boolean IfxPsi5s_getTransmitInterruptStatus(Ifx_PSI5S *psi5s)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   722  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   723      return (boolean)psi5s->INTSTATG.B.TIR;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   724  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   725  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   726  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   727  IFX_INLINE void IfxPsi5s_initClkPin(const IfxPsi5s_Clk_Out *clk, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   728  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   729      if (clk->pin.port != NULL_PTR)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   730      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   731          IfxPort_setPinModeOutput(clk->pin.port, clk->pin.pinIndex, outputMode, clk->select);
	ld.bu	d15,[a15]12
.L550:
	ld.bu	d4,[a15]8
.L551:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89  /** \brief specifies LVDS-M or LVDS-H mode as declare in Register MODULE_PORT.LPCRx.LVDSM
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_LvdsMode_high   = 0, /**< \brief LVDS-H Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_LvdsMode_medium = 1  /**< \brief LVDS-M Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95  } IfxPort_LvdsMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143          IfxPort_OutputMode_openDrain = 0x18U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144          IfxPort_OutputMode_none      = 0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160      IfxPort_PadDriver_ttlSpeed4            = 11, /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161      IfxPort_PadDriver_ttl3v3Speed1         = 12, /**< \brief 3.3v Pad supply speed1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162      IfxPort_PadDriver_ttl3v3Speed2         = 13, /**< \brief 3.3v Pad supply speed2 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163      IfxPort_PadDriver_ttl3v3Speed3         = 14, /**< \brief 3.3v Pad supply speed3 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadDriver_ttl3v3Speed4         = 15  /**< \brief 3.3v Pad supply speed4 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171      IfxPort_PadSupply_3v = 0,  /**< \brief select,3.3v */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      IfxPort_PadSupply_5v = 1   /**< \brief select,5V */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  /** \brief enable analog/digital mode for port pin, as Defined in MODULE_PORTx.PDISC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179      IfxPort_PinFunctionMode_digital = 0,  /**< \brief Pad Pn.x is enabled and can be selected for digital function */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      IfxPort_PinFunctionMode_analog  = 1   /**< \brief Pad Pn.x is enabled and can be selected for analog function */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181  } IfxPort_PinFunctionMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197  /** \brief Enable/DIsable LVDS direction TX or RX
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201      IfxPort_LvdsDirection_rx = 0,  /**< \brief LVDS direction RX */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202      IfxPort_LvdsDirection_tx = 1   /**< \brief LVDS direction TX */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203  } IfxPort_LvdsDirection;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205  /** \brief Enable/DIsable LVDS Path.declared in MODULE_PORTx.LPCRx.TX_EN and MODULE_PORTx.LPCRx.RX_EN
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209      IfxPort_LvdsPath_enable  = 0, /**< \brief LVDS enabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210      IfxPort_LvdsPath_disable = 1  /**< \brief LVDS disabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211  } IfxPort_LvdsPath;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213  /** \brief Specifies whether LVDS pull down resistor must be enabled/disabled as declared in Register MODULE_PORT.LPCRx.PWDPD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217      IfxPort_LvdsPullDown_disable = 0,  /**< \brief Disable Pull Down resistor */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218      IfxPort_LvdsPullDown_enable  = 1   /**< \brief Enable Pull Down resistor */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219  } IfxPort_LvdsPullDown;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221  /** \brief Specifies LVDS-Termination mode as declare in Register MODULE_PORT.LPCRx.TERM
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225      IfxPort_LvdsTerminationMode_external = 0,  /**< \brief Termination Mode External */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226      IfxPort_LvdsTerminationMode_internal = 1   /**< \brief Termination Mode Internal */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227  } IfxPort_LvdsTerminationMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235  /** \brief To Configure LVDS mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239      IfxPort_LvdsMode     lvdsMode;                   /**< \brief specifies LVDS-M or LVDS-H mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240      IfxPort_ControlledBy enablePortControlled;       /**< \brief specifies whether LVDS is controlled by PORT or HSCT */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241      IfxPort_PadSupply    padSupply;                  /**< \brief specify supply voltage */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242  } IfxPort_LvdsConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286  /** \brief set analog/digital mode for pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param port Pointer to Port register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \param pinIndex specifies the pin index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   * \param mode set analog/digital mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292  IFX_INLINE void IfxPort_setPinFunctionMode(Ifx_P *port, uint8 pinIndex, IfxPort_PinFunctionMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395   * /code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   *     {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   *     }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417   *     }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief set lvds mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port pointer to Port Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex specifies pin index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param pinMode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param lvds config LVDS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448  IFX_EXTERN void IfxPort_setPinModeLVDS(Ifx_P *port, uint8 pinIndex, IfxPort_Mode pinMode, IfxPort_LvdsConfig *lvds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465  /** \brief Enable the Pin Controller Selection.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * \param pinIndex Specifies the pin for which the mode has to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470  IFX_EXTERN void IfxPort_setPinControllerSelection(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  /** \brief Disable the Pin Controller Selection.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474   * \param pinIndex Specifies the pin for which the mode has to be cleared.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477  IFX_EXTERN void IfxPort_resetPinControllerSelection(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526  /** \brief Returns the module address of the selected Port module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527   * \param port Pointer to PORT module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528   * \return PORT module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   557   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   558   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   559   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   560   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   561   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   562   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   563   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   564   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   565   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   566   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   567   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   568   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   569  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   571  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   572   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   573   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   574   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   575   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   578   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   579   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   580   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   581   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   582   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   583   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   584   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   585  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   587  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   589  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   590  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   591  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   592  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   593  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   594   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   595   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   596   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   597   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   598   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   599   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   600   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   601   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   602  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   603  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   604  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   605   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   606   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   607   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   608   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   609   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   610   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   611   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   612   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   613  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   615  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   616   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   617   * \param pinIndex Specifies the pin for which the mode has to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   618   * \param mode Selects the controller for the port pin(Tricore,EVADC,GETH,SCR etc)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   619   * 0-> normal function
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   620   * 1-> Alternate functionality(SCR pin,EVADC PDD,GETH RGMII/MII etc)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   621   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   622   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   623  IFX_EXTERN void IfxPort_modifyPinControllerSelection(Ifx_P *port, uint8 pinIndex, boolean mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   625  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   626  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   627  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   628  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   629  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   630  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   631      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   632  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   634  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   635  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   636  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   637      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   638  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   640  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   641  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   642  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   643      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   644  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   646  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   647  IFX_INLINE void IfxPort_setPinFunctionMode(Ifx_P *port, uint8 pinIndex, IfxPort_PinFunctionMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   648  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   649      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   650  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   651      IfxScuWdt_clearCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   652      port->PDISC.U |= (mode << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   653      IfxScuWdt_setCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   654  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   657  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   658  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   659      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   660  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   661  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   663  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   664  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   665      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   669  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   671      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   675  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   677      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	or	d5,d15
	call	IfxPort_setPinMode
.L297:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   732          IfxPort_setPinPadDriver(clk->pin.port, clk->pin.pinIndex, padDriver);
	ld.a	a4,[a15]4
.L552:
	ld.bu	d4,[a15]8
.L553:
	mov	d5,d9
	call	IfxPort_setPinPadDriver

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Psi5s\Std\IfxPsi5s.h	   729      if (clk->pin.port != NULL_PTR)      (inlined)
.L31:
.L30:
.L25:
.L24:
	mov	d2,d8
	ret
.L188:
	
__IfxPsi5s_Psi5s_initModule_function_end:
	.size	IfxPsi5s_Psi5s_initModule,__IfxPsi5s_Psi5s_initModule_function_end-IfxPsi5s_Psi5s_initModule
.L108:
	; End of function
	
	.sdecl	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_initModuleConfig',code,cluster('IfxPsi5s_Psi5s_initModuleConfig')
	.sect	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_initModuleConfig'
	.align	2
	
	.global	IfxPsi5s_Psi5s_initModuleConfig

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   395  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   396  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   397  void IfxPsi5s_Psi5s_initModuleConfig(IfxPsi5s_Psi5s_Config *config, Ifx_PSI5S *psi5s)
; Function IfxPsi5s_Psi5s_initModuleConfig
.L80:
IfxPsi5s_Psi5s_initModuleConfig:	.type	func
	mov.aa	a15,a4
.L436:
	mov.aa	a12,a5
.L437:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   398  {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   399      uint32 spbFrequency = IfxScuCcu_getSpbFrequency();
	call	IfxScuCcu_getSpbFrequency
.L435:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   400      config->module                                                 = psi5s;
	ftouz	d0,d2
	st.a	[a15],a12
.L438:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   401      config->fracDiv.frequency                                      = spbFrequency;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   402      config->fracDiv.mode                                           = IfxPsi5s_DividerMode_normal;
	mov	d15,#1
	st.w	[a15]4,d0
.L558:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   403      config->fracDiv.type                                           = IfxPsi5s_ClockType_fracDiv;
	mov	d1,#0
	st.b	[a15]8,d15
.L559:
	st.b	[a15]9,d1
.L560:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   404      config->timestampClock.frequency                               = spbFrequency;
	st.w	[a15]10,d0
.L561:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   405      config->timestampClock.mode                                    = IfxPsi5s_DividerMode_normal;
	st.b	[a15]14,d15
.L562:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   406      config->timestampClock.type                                    = IfxPsi5s_ClockType_timeStamp;
	st.b	[a15]15,d15
.L563:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   407      config->timestampCounterA.externalTimeBaseSelect               = IfxPsi5s_Trigger_0;
	st.b	[a15]16,d1
.L564:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   408      config->timestampCounterA.timeBaseSelect                       = IfxPsi5s_TimeBase_internal;
	st.b	[a15]17,d1
.L565:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   409      config->timestampCounterB.externalTimeBaseSelect               = IfxPsi5s_Trigger_0;
	st.b	[a15]18,d1
.L566:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   410      config->timestampCounterB.timeBaseSelect                       = IfxPsi5s_TimeBase_internal;
	st.b	[a15]19,d1
.L567:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   411      config->ascConfig.baudrateFrequency                            = IFXPSI5S_BAUDRATE_1562500;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   412      config->ascConfig.clockOutput.frequency                        = spbFrequency;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   413      config->ascConfig.clockOutput.mode                             = IfxPsi5s_DividerMode_normal;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   414      config->ascConfig.clockOutput.type                             = IfxPsi5s_ClockType_ascOutput;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   415      config->ascConfig.receiveMode                                  = IfxPsi5s_AscMode_sync;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   416      config->ascConfig.stopBits                                     = IfxPsi5s_AscStopBits_1;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   417      config->ascConfig.parityCheckEnabled                           = FALSE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   418      config->ascConfig.framingCheckEnabled                          = FALSE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   419      config->ascConfig.overrunCheckEnabled                          = FALSE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   420      config->ascConfig.fractionalDividerEnabled                     = FALSE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   421      config->ascConfig.receiverOddParityEnabled                     = FALSE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   422      config->ascConfig.baudrateSelection                            = IfxPsi5s_AscBaudratePrescalar_divideBy2;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   423      config->ascConfig.loopbackEnabled                              = IfxPsi5s_LoopBackMode_disable;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   424      config->ascConfig.transmitMode                                 = IfxPsi5s_AscMode_sync;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   425      config->ascConfig.transmitterOddParityEnabled                  = FALSE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   426      config->globalControlConfig.crcErrorConsideredForRSI           = TRUE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   427      config->globalControlConfig.xcrcErrorConsideredForRSI          = TRUE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   428      config->globalControlConfig.transmitErrorConsideredForRSI      = TRUE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   429      config->globalControlConfig.parityErrorConsideredForRSI        = TRUE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   430      config->globalControlConfig.framingErrorConsideredForRSI       = TRUE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   431      config->globalControlConfig.overrunErrorConsideredForRSI       = FALSE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   432      config->globalControlConfig.receiveBufferErrorConsideredForRSI = FALSE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   433      config->globalControlConfig.headerErrorConsideredForRSI        = FALSE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   434      config->globalControlConfig.idleTime                           = IfxPsi5s_IdleTime_1;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   435      config->globalControlConfig.ascOnlyMode                        = FALSE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   436      config->pins                                                   = NULL_PTR;
	mov.a	a2,#0
.L568:
	ld.w	d2,.3.cnt
.L569:
	st.w	[a15]26,d2
.L570:
	st.w	[a15]34,d0
.L571:
	mov	d0,#3
	st.b	[a15]38,d15
.L439:
	st.b	[a15]39,d0
.L572:
	st.b	[a15]31,d1
.L573:
	st.b	[a15]30,d1
.L574:
	st.b	[a15]20,d1
.L575:
	st.b	[a15]21,d1
.L576:
	st.b	[a15]22,d1
.L577:
	st.b	[a15]23,d1
.L578:
	st.b	[a15]24,d1
.L579:
	st.b	[a15]32,d1
.L580:
	st.b	[a15]40,d1
.L581:
	st.b	[a15]33,d1
.L582:
	st.b	[a15]25,d1
.L583:
	st.b	[a15]45,d15
.L584:
	st.b	[a15]46,d15
.L585:
	st.b	[a15]47,d15
.L586:
	st.b	[a15]48,d15
.L587:
	st.b	[a15]49,d15
.L588:
	st.b	[a15]50,d1
.L589:
	st.b	[a15]51,d1
.L590:
	st.b	[a15]52,d1
.L591:
	st.w	[a15]54,d1
.L592:
	st.b	[a15]44,d1
.L593:
	st.a	[a15]60,a2
.L594:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   437  }
	ret
.L298:
	
__IfxPsi5s_Psi5s_initModuleConfig_function_end:
	.size	IfxPsi5s_Psi5s_initModuleConfig,__IfxPsi5s_Psi5s_initModuleConfig_function_end-IfxPsi5s_Psi5s_initModuleConfig
.L113:
	; End of function
	
	.sdecl	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_initializeClock',code,cluster('IfxPsi5s_Psi5s_initializeClock')
	.sect	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_initializeClock'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   438  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   439  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   440  IFX_STATIC uint32 IfxPsi5s_Psi5s_initializeClock(Ifx_PSI5S *psi5s, const IfxPsi5s_Psi5s_Clock *clock)
; Function IfxPsi5s_Psi5s_initializeClock
.L82:
IfxPsi5s_Psi5s_initializeClock:	.type	func
	mov.aa	a15,a4
.L441:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   441  {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   442      uint64               step           = 0;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   443      uint32               stepRange      = IFXPSI5S_STEP_RANGE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   444      uint32               result         = 0;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   445      IfxPsi5s_DividerMode divMode        = clock->mode;
	mov	d8,#1024
	ld.bu	d9,[a5]4
.L443:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   446      IfxPsi5s_ClockType   clockType      = clock->type;
	ld.bu	d10,[a5]5
.L444:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   447      uint32               clockFrequency = clock->frequency;
	ld.w	d15,[a5]
.L445:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   448      uint32               fInput;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   449      Ifx_PSI5S_FDR        tempFDR;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   450      Ifx_PSI5S_FDRT       tempFDRT;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   451      Ifx_PSI5S_FDO        tempFDO;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   452  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   453      if (clockType == IfxPsi5s_ClockType_fracDiv)
	jeq	d10,#0,.L34
.L735:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   454      {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   455          fInput = IfxScuCcu_getSpbFrequency();
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   456      }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   457      else if (clockType == IfxPsi5s_ClockType_ascOutput)
	jne	d10,#3,.L35
.L736:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   458      {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   459          fInput    = IfxScuCcu_getSpbFrequency(); // assumption here is that fBaud2 is equal to fSPB
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   460          stepRange = 2 * IFXPSI5S_STEP_RANGE;
	mov	d8,#2048
.L34:
	call	IfxScuCcu_getSpbFrequency
.L440:
	ftouz	d11,d2
	j	.L36
.L35:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   461      }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   462      else
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   463      {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   464          fInput = IfxPsi5s_Psi5s_getFracDivClock(psi5s);
	call	IfxPsi5s_Psi5s_getFracDivClock
.L446:
	mov	d11,d2
.L447:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   465  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   466          if (fInput == 0)
	jne	d11,#0,.L37
.L737:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   467          {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   468              result = 0;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   469              return result;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   470          }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   471          else
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   472          {}
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   473      }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   474  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   475      switch (divMode)
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   476      {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   477      case IfxPsi5s_DividerMode_normal:
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   478          step = stepRange - (fInput / clockFrequency);
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   479  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   480          if (step > (stepRange - 1))
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   481          {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   482              step = stepRange - 1;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   483          }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   484          else
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   485          {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   486              /* do nothing */
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   487          }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   488  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   489          result = (uint32)(fInput / (stepRange - step));
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   490          break;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   491  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   492      case IfxPsi5s_DividerMode_fractional:
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   493          step = (uint64)((uint64)clockFrequency * stepRange) / fInput;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   494  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   495          if (step > (stepRange - 1))
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   496          {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   497              step = stepRange - 1;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   498          }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   499          else
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   500          {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   501              /* do nothing */
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   502          }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   503  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   504          result = (uint32)((uint64)((uint64)fInput * step)) / stepRange;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   505          break;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   506  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   507      case IfxPsi5s_DividerMode_off:
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   508      default:
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   509          step   = 0;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   510          result = 0;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   511          break;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   512      }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   513  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   514      if (result != 0)
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   515      {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   516          switch (clockType)
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   517          {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   518          case IfxPsi5s_ClockType_fracDiv:
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   519              tempFDR.U      = 0;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   520              tempFDR.B.DM   = divMode;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   521              tempFDR.B.STEP = (uint32)step;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   522              psi5s->FDR.U   = tempFDR.U;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   523              break;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   524  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   525          case IfxPsi5s_ClockType_timeStamp:
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   526              tempFDRT.U      = 0;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   527              tempFDRT.B.DM   = divMode;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   528              tempFDRT.B.STEP = (uint32)step;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   529              psi5s->FDRT.U   = tempFDRT.U;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   530              break;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   531  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   532          case IfxPsi5s_ClockType_ascOutput:
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   533              tempFDO.U      = 0;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   534              tempFDO.B.DM   = divMode;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   535              tempFDO.B.STEP = (uint32)step;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   536              psi5s->FDO.U   = tempFDO.U;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   537              break;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   538          default:
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   539              break;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   540          }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   541      }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   542  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   543      return result;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   544  }
	mov	d2,#0
	ret
.L37:
.L36:
	jeq	d9,#1,.L39
.L738:
	jeq	d9,#2,.L40
.L739:
	j	.L41
.L39:
	div.u	e0,d11,d15
.L740:
	mov	d3,#0
.L741:
	sub	d2,d8,d0
	fcall	.cocofun_5
.L442:
	sel	d13,d15,d3,d1
.L450:
	mov	d5,#0
	mov	d4,d11
.L453:
	mov	d0,d8
.L455:
	subx	d6,d0,d12
.L742:
	subc	d7,d1,d13
	call	__ll_udiv64
.L454:
	j	.L42
.L40:
	mov	d5,#0
	mov	d4,d15
.L456:
	mov	d7,#0
.L743:
	mov	d6,d8
	call	__ll_mul64
.L457:
	mov	e4,d3,d2
.L744:
	mov	d7,#0
.L745:
	mov	d6,d11
	call	__ll_udiv64
.L451:
	fcall	.cocofun_5
.L458:
	mul	d11,d12
.L459:
	div.u	e0,d11,d8
.L746:
	mov	d2,d0
	j	.L43
.L41:
	mov	e12,#0
.L460:
	mov	d2,#0
.L43:
.L42:
	jeq	d2,#0,.L44
.L461:
	jeq	d10,#0,.L45
.L747:
	jeq	d10,#1,.L46
.L748:
	jeq	d10,#3,.L47
.L44:
	ret
.L45:
	mov	d15,#0
.L462:
	insert	d15,d15,d9,#14,#2
.L749:
	insert	d15,d15,d12,#0,#10
	st.w	[a15]12,d15
.L750:
	ret
.L46:
	mov	d15,#0
.L463:
	insert	d15,d15,d9,#14,#2
.L751:
	insert	d15,d15,d12,#0,#10
	st.w	[a15]16,d15
.L752:
	ret
.L47:
	mov	d15,#0
.L464:
	insert	d15,d15,d9,#14,#2
.L753:
	insert	d15,d15,d12,#0,#11
	st.w	[a15]540,d15
.L754:
	ret
.L354:
	
__IfxPsi5s_Psi5s_initializeClock_function_end:
	.size	IfxPsi5s_Psi5s_initializeClock,__IfxPsi5s_Psi5s_initializeClock_function_end-IfxPsi5s_Psi5s_initializeClock
.L158:
	; End of function
	
	.sdecl	'.text.IfxPsi5s_Psi5s..cocofun_5',code,cluster('.cocofun_5')
	.sect	'.text.IfxPsi5s_Psi5s..cocofun_5'
	.align	2
; Function .cocofun_5
.L84:
.cocofun_5:	.type	func
; Function body .cocofun_5, coco_iter:0
	add	d0,d8,#-1
.L448:
	mov	d1,#0
.L808:
	lt.u	d15,d2,d0
.L449:
	and.eq	d15,d3,d1
	or.lt.u	d15,d3,d1
.L452:
	sel	d12,d15,d2,d0
	fret
.L168:
	; End of function
	.sdecl	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_readFrame',code,cluster('IfxPsi5s_Psi5s_readFrame')
	.sect	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_readFrame'
	.align	2
	
	.global	IfxPsi5s_Psi5s_readFrame

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   545  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   546  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   547  void IfxPsi5s_Psi5s_readFrame(IfxPsi5s_Psi5s_Channel *channel, IfxPsi5s_Psi5s_Frame *frame)
; Function IfxPsi5s_Psi5s_readFrame
.L86:
IfxPsi5s_Psi5s_readFrame:	.type	func

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   548  {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   549      frame->data.rdr                                       = channel->module->psi5s->RDR.U;
	ld.a	a15,[a4]
.L668:
	ld.a	a15,[a15]
.L669:
	ld.w	d15,[a15]180
.L670:
	st.w	[a5],d15
.L671:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   550      frame->status.rds                                     = channel->module->psi5s->RDS.U;
	ld.a	a15,[a4]
.L672:
	ld.a	a15,[a15]
.L673:
	ld.w	d15,[a15]176
.L674:
	st.w	[a5]6,d15
.L675:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   551      frame->timestamp.tsm                                  = channel->module->psi5s->TSM.U;
	ld.a	a15,[a4]
.L676:
	ld.a	a15,[a15]
.L677:
	ld.w	d15,[a15]184
.L678:
	st.w	[a5]12,d15
.L679:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   552  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   553      channel->module->psi5s->INTCLR[channel->channelId].U |= (IFX_PSI5S_INTCLR_RDI_MSK << IFX_PSI5S_INTCLR_RDI_OFF) | (IFX_PSI5S_INTCLR_RSI_MSK << IFX_PSI5S_INTCLR_RSI_OFF);
	fcall	.cocofun_7
.L680:
	ld.w	d15,[a15]672
.L681:
	or	d15,#3
	st.w	[a15]672,d15
.L682:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   554  }
	ret
.L333:
	
__IfxPsi5s_Psi5s_readFrame_function_end:
	.size	IfxPsi5s_Psi5s_readFrame,__IfxPsi5s_Psi5s_readFrame_function_end-IfxPsi5s_Psi5s_readFrame
.L128:
	; End of function
	
	.sdecl	'.text.IfxPsi5s_Psi5s..cocofun_7',code,cluster('.cocofun_7')
	.sect	'.text.IfxPsi5s_Psi5s..cocofun_7'
	.align	2
; Function .cocofun_7
.L88:
.cocofun_7:	.type	func
; Function body .cocofun_7, coco_iter:0
	ld.a	a15,[a4]
.L818:
	ld.a	a15,[a15]
.L819:
	ld.b	d15,[a4]4
.L820:
	addsc.a	a15,a15,d15,#2
.L821:
	fret
.L178:
	; End of function
	.sdecl	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_resetModule',code,cluster('IfxPsi5s_Psi5s_resetModule')
	.sect	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_resetModule'
	.align	2
	
	.global	IfxPsi5s_Psi5s_resetModule

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   555  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   556  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   557  void IfxPsi5s_Psi5s_resetModule(Ifx_PSI5S *psi5s)
; Function IfxPsi5s_Psi5s_resetModule
.L90:
IfxPsi5s_Psi5s_resetModule:	.type	func
	mov.aa	a15,a4
.L466:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   558  {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   559      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
	call	IfxScuWdt_getCpuWatchdogPassword
.L465:
	mov	d8,d2
.L468:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   560      IfxScuWdt_clearSafetyEndinit(passwd);
	mov	d4,d8
	call	IfxScuWdt_clearSafetyEndinit
.L467:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   561      psi5s->KRST1.B.RST = 1;     /* Only if both Kernel reset bits are set a reset is executed */
	ld.bu	d15,[a15]988
.L708:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   562      psi5s->KRST0.B.RST = 1;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   563  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   564      while (psi5s->KRST0.B.RSTSTAT == 0)
	lea	a2,[a15]984
.L709:
	or	d15,#1
	st.b	[a15]988,d15
.L710:
	ld.bu	d15,[a15]984
.L711:
	or	d15,#1
	st.b	[a15]984,d15
.L52:
	ld.bu	d15,[a2]
.L712:
	jz.t	d15:1,.L52
.L713:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   565      {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   566          /* Wait until reset is executed */
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   567      }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   568  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   569      psi5s->KRSTCLR.B.CLR = 1;   /* Clear Kernel reset status bit */
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   570      IfxScuWdt_setSafetyEndinit(passwd);
	mov	d4,d8
	ld.bu	d15,[a15]992
.L469:
	or	d15,#1
	st.b	[a15]992,d15
.L714:
	j	IfxScuWdt_setSafetyEndinit
.L347:
	
__IfxPsi5s_Psi5s_resetModule_function_end:
	.size	IfxPsi5s_Psi5s_resetModule,__IfxPsi5s_Psi5s_resetModule_function_end-IfxPsi5s_Psi5s_resetModule
.L148:
	; End of function
	
	.sdecl	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_sendChannelData',code,cluster('IfxPsi5s_Psi5s_sendChannelData')
	.sect	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_sendChannelData'
	.align	2
	
	.global	IfxPsi5s_Psi5s_sendChannelData

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   571  }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   572  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   573  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   574  boolean IfxPsi5s_Psi5s_sendChannelData(IfxPsi5s_Psi5s_Channel *channel, uint32 data)
; Function IfxPsi5s_Psi5s_sendChannelData
.L92:
IfxPsi5s_Psi5s_sendChannelData:	.type	func

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   575  {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   576      channel->module->psi5s->SDR[channel->channelId].U = data & 0x00FFFFFF;
	fcall	.cocofun_7
.L470:
	insert	d15,d4,#0,#24,#8
	st.w	[a15]336,d15
.L471:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   577  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   578      if (channel->module->psi5s->INTSTAT[channel->channelId].B.TPOI)
	fcall	.cocofun_7
.L472:
	ld.bu	d15,[a15]608
	extr.u	d15,d15,#7,#1
.L687:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   579      {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   580          return FALSE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   581      }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   582      else
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   583      {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   584          return TRUE;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   585      }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   586  }
	eq	d2,d15,#0
	ret
.L338:
	
__IfxPsi5s_Psi5s_sendChannelData_function_end:
	.size	IfxPsi5s_Psi5s_sendChannelData,__IfxPsi5s_Psi5s_sendChannelData_function_end-IfxPsi5s_Psi5s_sendChannelData
.L133:
	; End of function
	
	.sdecl	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_setBaudrate',code,cluster('IfxPsi5s_Psi5s_setBaudrate')
	.sect	'.text.IfxPsi5s_Psi5s.IfxPsi5s_Psi5s_setBaudrate'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   587  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   588  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   589  IFX_STATIC uint32 IfxPsi5s_Psi5s_setBaudrate(Ifx_PSI5S *psi5s, uint32 baudrate, IfxPsi5s_Psi5s_AscConfig *ascConfig)
; Function IfxPsi5s_Psi5s_setBaudrate
.L94:
IfxPsi5s_Psi5s_setBaudrate:	.type	func
	mov.aa	a15,a5
.L474:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   590  {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   591      uint32 bgValue = 0;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   592      uint32 fdValue = 0;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   593      uint32 result  = 0;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   594      uint32 fInput;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   595  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   596      if (ascConfig->receiveMode == IfxPsi5s_AscMode_sync)
	mov	d11,d4
	ld.bu	d15,[a15]11
.L475:
	mov	d14,#0
	mov.aa	a12,a4
.L477:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   597      {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   598          if (ascConfig->transmitMode != IfxPsi5s_AscMode_sync)
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   599          {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   600              // sync modes must be set for both receive and transmit
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   601          }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   602  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   603          fInput  = 2 * IfxScuCcu_getSpbFrequency();
	movh	d8,#16384
.L759:
	jne	d15,#0,.L54
.L760:
	call	IfxScuCcu_getSpbFrequency
.L473:
	mul.f	d15,d2,d8
.L761:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   604          bgValue = (uint32)(fInput / ((ascConfig->baudrateSelection + 2) * 4 * (uint64)baudrate) - 1);
	mov	d6,d11
.L478:
	ftouz	d9,d15
	ld.bu	d15,[a15]12
.L480:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   605  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   606          if (bgValue > (IFXPSI5S_BG_RANGE - 1))
	mov	d10,#8191
.L762:
	sha	d15,#2
	add	d8,d15,#8
.L763:
	mov	d12,d9
.L481:
	mov	d13,#0
.L764:
	mov	e4,d8
.L765:
	mov	d7,#0
	call	__ll_mul64
.L479:
	mov	e6,d3,d2
.L766:
	mov	e4,d13,d12
	call	__ll_udiv64
.L767:
	add	d15,d2,#-1
.L768:
	min.u	d2,d15,d10
.L482:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   607          {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   608              bgValue = IFXPSI5S_BG_RANGE - 1;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   609          }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   610          else
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   611          {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   612              /* do nothing */
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   613          }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   614  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   615          result = fInput / ((ascConfig->baudrateSelection + 2) * 4 * (bgValue + 1));
	add	d15,d2,#1
.L769:
	mul	d8,d15
.L770:
	div.u	e0,d9,d8
	j	.L55
.L54:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   616      }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   617      else if (ascConfig->fractionalDividerEnabled == FALSE)
	ld.bu	d15,[a15]3
.L771:
	jne	d15,#0,.L56
.L772:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   618      {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   619          fInput  = 2 * IfxScuCcu_getSpbFrequency();
	call	IfxScuCcu_getSpbFrequency
.L483:
	mul.f	d15,d2,d8
.L773:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   620          bgValue = (uint32)(fInput / ((ascConfig->baudrateSelection + 2) * 16 * (uint64)baudrate) - 1);
	mov	d6,d11
.L484:
	ftouz	d10,d15
	ld.bu	d15,[a15]12
.L486:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   621  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   622          if (bgValue > (IFXPSI5S_BG_RANGE - 1))
	mov	d9,#8191
.L774:
	sha	d15,#4
	add	d8,d15,#32
.L775:
	mov	d12,d10
.L487:
	mov	d13,#0
.L776:
	mov	e4,d8
.L777:
	mov	d7,#0
	call	__ll_mul64
.L485:
	mov	e6,d3,d2
.L778:
	mov	e4,d13,d12
	call	__ll_udiv64
.L779:
	add	d15,d2,#-1
.L780:
	min.u	d2,d15,d9
.L488:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   623          {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   624              bgValue = IFXPSI5S_BG_RANGE - 1;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   625          }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   626          else
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   627          {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   628              /* do nothing */
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   629          }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   630  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   631          result = fInput / ((ascConfig->baudrateSelection + 2) * 16 * (bgValue + 1));
	add	d15,d2,#1
.L781:
	mul	d8,d15
.L782:
	div.u	e0,d10,d8
	j	.L57
.L56:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   632      }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   633      else
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   634      {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   635          fInput  = 2 * IfxScuCcu_getSpbFrequency();
	call	IfxScuCcu_getSpbFrequency
.L489:
	mul.f	d15,d2,d8
.L783:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   636          fdValue = (((uint64)baudrate * IFXPSI5S_FDV_RANGE * 16)) / (float)fInput;
	mov	d0,d11
.L490:
	mov	d1,#0
.L784:
	ftouz	d8,d15
.L492:
	dextr	d5,d1,d0,#15
.L785:
	sh	d4,d0,#15
	call	__f_ulltof
.L491:
	utof	d15,d8
.L786:
	div.f	d15,d2,d15
	ftouz	d14,d15
.L787:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   637  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   638          if (fdValue > (IFXPSI5S_FDV_RANGE - 1))
	mov	d15,#2047
.L788:
	jge.u	d15,d14,.L58
.L789:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   639          {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   640              fdValue = IFXPSI5S_FDV_RANGE - 1;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   641              bgValue = ((float)fdValue / IFXPSI5S_FDV_RANGE) * (fInput / (16 * baudrate)) - 1;
	sh	d11,#4
.L476:
	div.u	e0,d8,d11
.L790:
	mov	d14,d15
.L791:
	utof	d15,d0
	ld.w	d0,.4.cnt
.L792:
	mul.f	d15,d15,d0
.L793:
	movh	d0,#16256
.L794:
	sub.f	d15,d15,d0
.L795:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   642  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   643              if (bgValue > (IFXPSI5S_BG_RANGE - 1))
	mov	d0,#8191
.L796:
	ftouz	d2,d15
.L493:
	jge.u	d0,d2,.L59
.L797:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   644              {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   645                  bgValue = IFXPSI5S_BG_RANGE - 1;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   646              }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   647              else
	mov	d2,d0
	j	.L60
.L58:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   648              {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   649                  /* do nothing */
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   650              }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   651          }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   652          else
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   653          {
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   654              bgValue = 0;
	mov	d2,#0
.L60:
.L59:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   655          }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   656  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   657          result = ((float)fdValue / IFXPSI5S_FDV_RANGE) * (fInput / (16 * (bgValue + 1)));
	utof	d15,d14
.L798:
	movh	d0,#14848
.L799:
	mul.f	d15,d15,d0
.L800:
	sh	d0,d2,#4
	add	d0,d0,#16
.L801:
	div.u	e0,d8,d0
	utof	d0,d0
.L802:
	mul.f	d15,d15,d0
	ftouz	d0,d15
.L57:
.L55:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   658      }
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   659  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   660      psi5s->FDV.U = fdValue;
	st.w	[a12]536,d14
.L803:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   661      psi5s->BG.U  = bgValue;
	st.w	[a12]532,d2
.L494:

; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   662  
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   663      return result;
; ..\0_Src\4_McHal\Tricore\Psi5s\Psi5s\IfxPsi5s_Psi5s.c	   664  }
	mov	d2,d0
	ret
.L375:
	
__IfxPsi5s_Psi5s_setBaudrate_function_end:
	.size	IfxPsi5s_Psi5s_setBaudrate,__IfxPsi5s_Psi5s_setBaudrate_function_end-IfxPsi5s_Psi5s_setBaudrate
.L163:
	; End of function
	
	.sdecl	'.rodata.IfxPsi5s_Psi5s..2.ini',data,rom
	.sect	'.rodata.IfxPsi5s_Psi5s..2.ini'
	.align	4
.2.ini:	.type	object
	.size	.2.ini,88
	.space	16
	.word	1
	.space	4
	.word	32
	.space	46
	.byte	1
	.space	5
	.word	6
	.space	4
	.calls	'IfxPsi5s_Psi5s_initializeClock','__ll_udiv64'
	.calls	'IfxPsi5s_Psi5s_initializeClock','__ll_mul64'
	.calls	'IfxPsi5s_Psi5s_setBaudrate','__ll_mul64'
	.calls	'IfxPsi5s_Psi5s_setBaudrate','__ll_udiv64'
	.calls	'IfxPsi5s_Psi5s_setBaudrate','__f_ulltof'
	.calls	'IfxPsi5s_Psi5s_deInitModule','IfxPsi5s_Psi5s_resetModule'
	.calls	'IfxPsi5s_Psi5s_getBaudrate','IfxPsi5s_getBaudrate'
	.calls	'IfxPsi5s_Psi5s_getFracDivClock','IfxScuCcu_getSpbFrequency'
	.calls	'IfxPsi5s_Psi5s_initChannel','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxPsi5s_Psi5s_initChannel','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxPsi5s_Psi5s_initChannel','IfxScuWdt_setCpuEndinit'
	.calls	'IfxPsi5s_Psi5s_initModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxPsi5s_Psi5s_initModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxPsi5s_Psi5s_initModule','IfxPsi5s_Psi5s_enableModule'
	.calls	'IfxPsi5s_Psi5s_initModule','IfxPsi5s_Psi5s_initializeClock'
	.calls	'IfxPsi5s_Psi5s_initModule','IfxPsi5s_Psi5s_setBaudrate'
	.calls	'IfxPsi5s_Psi5s_initModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxPsi5s_Psi5s_initModule','IfxPort_setPinMode'
	.calls	'IfxPsi5s_Psi5s_initModule','IfxPort_setPinPadDriver'
	.calls	'IfxPsi5s_Psi5s_initModuleConfig','IfxScuCcu_getSpbFrequency'
	.calls	'IfxPsi5s_Psi5s_initializeClock','IfxScuCcu_getSpbFrequency'
	.calls	'IfxPsi5s_Psi5s_initializeClock','IfxPsi5s_Psi5s_getFracDivClock'
	.calls	'IfxPsi5s_Psi5s_resetModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxPsi5s_Psi5s_resetModule','IfxScuWdt_clearSafetyEndinit'
	.calls	'IfxPsi5s_Psi5s_resetModule','IfxScuWdt_setSafetyEndinit'
	.calls	'IfxPsi5s_Psi5s_setBaudrate','IfxScuCcu_getSpbFrequency'
	.calls	'IfxPsi5s_Psi5s_initChannel','.cocofun_6'
	.calls	'IfxPsi5s_Psi5s_initChannelConfig','.cocofun_8'
	.calls	'IfxPsi5s_Psi5s_initializeClock','.cocofun_5'
	.calls	'IfxPsi5s_Psi5s_readFrame','.cocofun_7'
	.calls	'IfxPsi5s_Psi5s_sendChannelData','.cocofun_7'
	.calls	'IfxPsi5s_Psi5s_deInitModule','',0
	.calls	'IfxPsi5s_Psi5s_enableModule','',0
	.calls	'IfxPsi5s_Psi5s_getBaudrate','',0
	.calls	'IfxPsi5s_Psi5s_getFracDivClock','',0
	.calls	'IfxPsi5s_Psi5s_initChannel','',0
	.calls	'.cocofun_6','',0
	.calls	'IfxPsi5s_Psi5s_initChannelConfig','',0
	.calls	'.cocofun_8','',0
	.calls	'IfxPsi5s_Psi5s_initModule','',0
	.calls	'IfxPsi5s_Psi5s_initModuleConfig','',0
	.calls	'IfxPsi5s_Psi5s_initializeClock','',0
	.calls	'.cocofun_5','',0
	.calls	'IfxPsi5s_Psi5s_readFrame','',0
	.calls	'.cocofun_7','',0
	.calls	'IfxPsi5s_Psi5s_resetModule','',0
	.calls	'IfxPsi5s_Psi5s_sendChannelData','',0
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_clearSafetyEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_setSafetyEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxPort_setPinMode
	.extern	IfxPort_setPinPadDriver
	.extern	IfxScuCcu_getSpbFrequency
	.extern	IfxPsi5s_getBaudrate
	.extern	__ll_udiv64
	.extern	__ll_mul64
	.extern	__f_ulltof
	.calls	'IfxPsi5s_Psi5s_setBaudrate','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L96:
	.word	120560
	.half	3
	.word	.L97
	.byte	4
.L95:
	.byte	1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L98
	.byte	2,1,1,3
	.word	176
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,58,17,1,1,5
	.byte	'fun',0,1,58,43
	.word	179
	.byte	6,0,7
	.byte	'__fract',0,4,128,1,7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,149,2,18
	.word	224
	.byte	1,1,5
	.byte	'a',0,1,149,2,44
	.word	236
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,169,2,17,1,1,6,0
.L359:
	.byte	7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	348
	.byte	8
	.byte	'__ld64',0,3,2,132,1,19
	.word	322
	.byte	1,1,5
	.byte	'addr',0,2,132,1,32
	.word	354
	.byte	6,0,4
	.byte	'__st64',0,3,2,140,1,17,1,1,5
	.byte	'addr',0,2,140,1,30
	.word	354
	.byte	5
	.byte	'value',0,2,140,1,43
	.word	322
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,4,238,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	463
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	463
	.byte	16,0,2,35,0,0,12,4,189,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	479
	.byte	4,2,35,0,0
.L187:
	.byte	7
	.byte	'unsigned char',0,1,8
.L196:
	.byte	7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,4,247,9,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	615
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	16,0,2,35,2,0,12,4,197,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	654
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,4,135,10,16,4,11
	.byte	'AE',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	615
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	632
	.byte	16,0,2,35,2,0,12,4,205,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	920
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,4,136,17,25,12,13
	.byte	'CON0',0
	.word	575
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	880
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1111
	.byte	4,2,35,8,0,14
	.word	1151
	.byte	3
	.word	1214
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,3,164,4,17,1,1,5
	.byte	'watchdog',0,3,164,4,65
	.word	1219
	.byte	5
	.byte	'password',0,3,164,4,82
	.word	632
	.byte	6,0,4
	.byte	'IfxScuWdt_clearSafetyEndinitInline',0,3,3,197,4,17,1,1,5
	.byte	'password',0,3,197,4,59
	.word	632
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,3,144,5,17,1,1,5
	.byte	'watchdog',0,3,144,5,63
	.word	1219
	.byte	5
	.byte	'password',0,3,144,5,80
	.word	632
	.byte	6,0,4
	.byte	'IfxScuWdt_setSafetyEndinitInline',0,3,3,177,5,17,1,1,5
	.byte	'password',0,3,177,5,57
	.word	632
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,3,220,4,19
	.word	632
	.byte	1,1,5
	.byte	'watchdog',0,3,220,4,74
	.word	1219
	.byte	6,0,8
	.byte	'IfxScuWdt_getSafetyWatchdogPasswordInline',0,3,3,129,5,19
	.word	632
	.byte	1,1,6,0,10
	.byte	'_Ifx_P_OUT_Bits',0,6,145,3,16,4,11
	.byte	'P0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	16,0,2,35,2,0,12,6,171,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1629
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,6,171,2,16,4,11
	.byte	'PS0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	615
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	615
	.byte	1,0,2,35,3,0,12,6,251,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1945
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,6,133,1,16,4,11
	.byte	'MODREV',0,1
	.word	615
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	615
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	632
	.byte	16,0,2,35,2,0,12,6,155,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2516
	.byte	4,2,35,0,0,15,4
	.word	615
	.byte	16,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,6,163,1,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	615
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	615
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	615
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	615
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	615
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	615
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	615
	.byte	5,0,2,35,3,0,12,6,171,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2645
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,6,189,1,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	615
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	615
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	615
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	615
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	615
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	615
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	615
	.byte	5,0,2,35,3,0,12,6,187,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2860
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,6,202,1,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	615
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	615
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	615
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	615
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	615
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	615
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	615
	.byte	5,0,2,35,3,0,12,6,195,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3075
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,6,176,1,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	615
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	615
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	615
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	615
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	615
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	615
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	615
	.byte	5,0,2,35,3,0,12,6,179,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3292
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,6,141,1,16,4,11
	.byte	'P0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	16,0,2,35,2,0,12,6,163,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3512
	.byte	4,2,35,0,0,15,24
	.word	615
	.byte	16,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,6,212,3,16,4,11
	.byte	'PD0',0,1
	.word	615
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	615
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	615
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	615
	.byte	2,0,2,35,0,11
	.byte	'PD2',0,1
	.word	615
	.byte	2,6,2,35,1,11
	.byte	'PL2',0,1
	.word	615
	.byte	2,4,2,35,1,11
	.byte	'PD3',0,1
	.word	615
	.byte	2,2,2,35,1,11
	.byte	'PL3',0,1
	.word	615
	.byte	2,0,2,35,1,11
	.byte	'PD4',0,1
	.word	615
	.byte	2,6,2,35,2,11
	.byte	'PL4',0,1
	.word	615
	.byte	2,4,2,35,2,11
	.byte	'PD5',0,1
	.word	615
	.byte	2,2,2,35,2,11
	.byte	'PL5',0,1
	.word	615
	.byte	2,0,2,35,2,11
	.byte	'PD6',0,1
	.word	615
	.byte	2,6,2,35,3,11
	.byte	'PL6',0,1
	.word	615
	.byte	2,4,2,35,3,11
	.byte	'PD7',0,1
	.word	615
	.byte	2,2,2,35,3,11
	.byte	'PL7',0,1
	.word	615
	.byte	2,0,2,35,3,0,12,6,195,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3836
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,6,233,3,16,4,11
	.byte	'PD8',0,1
	.word	615
	.byte	2,6,2,35,0,11
	.byte	'PL8',0,1
	.word	615
	.byte	2,4,2,35,0,11
	.byte	'PD9',0,1
	.word	615
	.byte	2,2,2,35,0,11
	.byte	'PL9',0,1
	.word	615
	.byte	2,0,2,35,0,11
	.byte	'PD10',0,1
	.word	615
	.byte	2,6,2,35,1,11
	.byte	'PL10',0,1
	.word	615
	.byte	2,4,2,35,1,11
	.byte	'PD11',0,1
	.word	615
	.byte	2,2,2,35,1,11
	.byte	'PL11',0,1
	.word	615
	.byte	2,0,2,35,1,11
	.byte	'PD12',0,1
	.word	615
	.byte	2,6,2,35,2,11
	.byte	'PL12',0,1
	.word	615
	.byte	2,4,2,35,2,11
	.byte	'PD13',0,1
	.word	615
	.byte	2,2,2,35,2,11
	.byte	'PL13',0,1
	.word	615
	.byte	2,0,2,35,2,11
	.byte	'PD14',0,1
	.word	615
	.byte	2,6,2,35,3,11
	.byte	'PL14',0,1
	.word	615
	.byte	2,4,2,35,3,11
	.byte	'PD15',0,1
	.word	615
	.byte	2,2,2,35,3,11
	.byte	'PL15',0,1
	.word	615
	.byte	2,0,2,35,3,0,12,6,203,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4140
	.byte	4,2,35,0,0,15,8
	.word	615
	.byte	16,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,6,111,16,4,11
	.byte	'EN0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	16,0,2,35,2,0,12,6,147,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4465
	.byte	4,2,35,0,0,15,12
	.word	615
	.byte	16,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,6,190,3,16,4,11
	.byte	'PDIS0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	16,0,2,35,2,0,12,6,187,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4805
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,6,167,3,16,4,11
	.byte	'SEL0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'SEL8',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'SEL9',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'SEL12',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'SEL13',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'SEL14',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'SEL15',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	615
	.byte	1,0,2,35,3,0,12,6,179,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5171
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,6,230,2,16,4,11
	.byte	'PS0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	440
	.byte	28,0,2,35,0,0,12,6,139,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5535
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,6,251,2,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	440
	.byte	24,0,2,35,0,0,12,6,155,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5682
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,6,134,3,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	440
	.byte	20,0,2,35,0,0,12,6,163,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5851
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,6,240,2,16,4,11
	.byte	'reserved_0',0,2
	.word	632
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	16,0,2,35,2,0,12,6,147,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6023
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,6,128,2,16,4,11
	.byte	'reserved_0',0,2
	.word	632
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	632
	.byte	12,0,2,35,2,0,12,6,219,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6198
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,6,149,2,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	615
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	615
	.byte	8,0,2,35,3,0,12,6,235,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6372
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,6,160,2,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	615
	.byte	4,0,2,35,3,0,12,6,243,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6546
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,6,139,2,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	615
	.byte	1,0,2,35,3,0,12,6,227,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6722
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,6,208,2,16,4,11
	.byte	'PS0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	16,0,2,35,2,0,12,6,131,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6878
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,6,234,1,16,4,11
	.byte	'reserved_0',0,2
	.word	632
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	615
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	615
	.byte	1,0,2,35,3,0,12,6,211,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7211
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR_Bits',0,6,215,1,16,4,11
	.byte	'REN_CTRL',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'RX_EN',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	615
	.byte	3,2,2,35,0,11
	.byte	'LVDSM',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'PS',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'TEN_CTRL',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'TX_EN',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'VDIFFADJ',0,1
	.word	615
	.byte	2,4,2,35,1,11
	.byte	'VOSDYN',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'VOSEXT',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	16,0,2,35,2,0,12,6,203,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7559
	.byte	4,2,35,0,0,15,32
	.word	7839
	.byte	16,7,0,15,56
	.word	615
	.byte	16,55,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,6,105,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	32,0,2,35,0,0,12,6,139,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7897
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,6,68,16,4,11
	.byte	'EN0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	615
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	615
	.byte	1,0,2,35,3,0,12,6,131,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7984
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,6,220,5,25,128,2,13
	.byte	'OUT',0
	.word	1905
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	2476
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	2596
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2636
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	2820
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	3035
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3252
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	3472
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	2636
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	3787
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	3827
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	4100
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4416
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	4456
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	4756
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	4796
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5131
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5495
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	4456
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	5642
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	5811
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	5983
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	6158
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6332
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6506
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	6682
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	6838
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	7171
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	7519
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	4456
	.byte	8,3,35,152,1,13
	.byte	'LPCR',0
	.word	7879
	.byte	32,3,35,160,1,13
	.byte	'reserved_C0',0
	.word	7888
	.byte	56,3,35,192,1,13
	.byte	'ACCEN1',0
	.word	7944
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	8511
	.byte	4,3,35,252,1,0,14
	.word	8551
	.byte	3
	.word	9121
	.byte	17,5,81,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0
.L239:
	.byte	4
	.byte	'IfxPort_setPinModeInput',0,3,5,157,5,17,1,1
.L242:
	.byte	5
	.byte	'port',0,5,157,5,48
	.word	9126
.L244:
	.byte	5
	.byte	'pinIndex',0,5,157,5,60
	.word	615
.L246:
	.byte	5
	.byte	'mode',0,5,157,5,88
	.word	9131
.L248:
	.byte	6,0,17,5,140,1,9,1,18
	.byte	'IfxPort_OutputMode_none',0,0,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,17,5,126,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0
.L270:
	.byte	4
	.byte	'IfxPort_setPinModeOutput',0,3,5,163,5,17,1,1
.L273:
	.byte	5
	.byte	'port',0,5,163,5,49
	.word	9126
.L275:
	.byte	5
	.byte	'pinIndex',0,5,163,5,61
	.word	615
.L277:
	.byte	5
	.byte	'mode',0,5,163,5,90
	.word	9336
.L279:
	.byte	5
	.byte	'index',0,5,163,5,114
	.word	9432
.L281:
	.byte	6,0,17,5,187,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,5,169,5,17,1,1,5
	.byte	'port',0,5,169,5,44
	.word	9126
	.byte	5
	.byte	'pinIndex',0,5,169,5,56
	.word	615
	.byte	5
	.byte	'action',0,5,169,5,80
	.word	9745
	.byte	6,0,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,8,68,16,4,11
	.byte	'SRPN',0,1
	.word	615
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	615
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	615
	.byte	3,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	615
	.byte	2,0,2,35,1,11
	.byte	'ECC',0,1
	.word	615
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	615
	.byte	3,0,2,35,2,11
	.byte	'SRR',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	615
	.byte	1,0,2,35,3,0,12,8,93,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9926
	.byte	4,2,35,0,0,14
	.word	10216
	.byte	3
	.word	10255
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,7,247,1,17,1,1,5
	.byte	'src',0,7,247,1,60
	.word	10260
	.byte	6,0,17,10,161,1,9,1,18
	.byte	'IfxCpu_ResourceCpu_0',0,0,18
	.byte	'IfxCpu_ResourceCpu_1',0,1,18
	.byte	'IfxCpu_ResourceCpu_2',0,2,18
	.byte	'IfxCpu_ResourceCpu_3',0,3,18
	.byte	'IfxCpu_ResourceCpu_4',0,4,18
	.byte	'IfxCpu_ResourceCpu_5',0,5,18
	.byte	'IfxCpu_ResourceCpu_none',0,6,0,8
	.byte	'IfxCpu_getCoreIndex',0,3,9,235,6,31
	.word	10308
	.byte	1,1,6,0,8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,9,233,5,20
	.word	615
	.byte	1,1,6,0
.L302:
	.byte	7
	.byte	'unsigned long int',0,4,7,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,9,255,6,19
	.word	10555
	.byte	1,1,5
	.byte	'address',0,9,255,6,55
	.word	632
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,9,156,7,20
	.word	615
	.byte	1,1,5
	.byte	'address',0,9,156,7,70
	.word	632
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,9,138,9,17,1,1,5
	.byte	'address',0,9,138,9,56
	.word	10555
	.byte	5
	.byte	'count',0,9,138,9,72
	.word	10555
	.byte	19,6,0,0,4
	.byte	'IfxScuCcu_wait',0,3,11,157,14,17,1,1,5
	.byte	'timeSec',0,11,157,14,40
	.word	236
	.byte	19,6,0,0,8
	.byte	'IfxScuCcu_getStmFrequency',0,3,11,188,13,20
	.word	236
	.byte	1,1,6,0,10
	.byte	'_Ifx_PSI5S_CLC_Bits',0,14,140,1,16,4,11
	.byte	'DISR',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	440
	.byte	28,0,2,35,0,0,12,14,134,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10870
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_ID_Bits',0,14,144,2,16,4,11
	.byte	'MODREV',0,1
	.word	615
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	615
	.byte	8,0,2,35,1,11
	.byte	'MODNUM',0,2
	.word	632
	.byte	16,0,2,35,2,0,12,14,206,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11029
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_FDR_Bits',0,14,210,1,16,4,11
	.byte	'STEP',0,2
	.word	632
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	615
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	615
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	632
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	615
	.byte	6,0,2,35,3,0
.L369:
	.byte	12,14,174,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11150
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_FDRT_Bits',0,14,220,1,16,4,11
	.byte	'STEP',0,2
	.word	632
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	615
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	615
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	632
	.byte	10,6,2,35,2,11
	.byte	'ECS',0,1
	.word	615
	.byte	3,3,2,35,3,11
	.byte	'ECEA',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'ECEB',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	615
	.byte	1,0,2,35,3,0
.L371:
	.byte	12,14,182,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11311
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_TSCNTA_Bits',0,14,158,5,16,4,11
	.byte	'CTS',0,4
	.word	440
	.byte	24,8,2,35,0,11
	.byte	'ETB',0,1
	.word	615
	.byte	3,5,2,35,3,11
	.byte	'TBS',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'TBEA',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'TBEB',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'CLRA',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'CLRB',0,1
	.word	615
	.byte	1,0,2,35,3,0
.L209:
	.byte	12,14,174,8,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11520
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_TSCNTB_Bits',0,14,170,5,16,4,11
	.byte	'CTS',0,4
	.word	440
	.byte	24,8,2,35,0,11
	.byte	'ETB',0,1
	.word	615
	.byte	3,5,2,35,3,11
	.byte	'TBS',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	615
	.byte	4,0,2,35,3,0
.L215:
	.byte	12,14,182,8,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11699
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_GCR_Bits',0,14,240,1,16,4,11
	.byte	'CRCI',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'XCRCI',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'TEI',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'PE',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'FE',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'OE',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'RBI',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'HDI',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'ETC0',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'ETC1',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'ETC2',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'ETC3',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'ETC4',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'ETC5',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'ETC6',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'ETC7',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'CEN0',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'CEN1',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'CEN2',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'CEN3',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'CEN4',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'CEN5',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'CEN6',0,1
	.word	615
	.byte	1,1,2,35,2,11
	.byte	'CEN7',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'IDT',0,1
	.word	615
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	615
	.byte	3,1,2,35,3,11
	.byte	'ASC',0,1
	.word	615
	.byte	1,0,2,35,3,0
.L219:
	.byte	12,14,198,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11837
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_NFC_Bits',0,14,209,3,16,4,11
	.byte	'NF0',0,1
	.word	615
	.byte	3,5,2,35,0,11
	.byte	'NF1',0,1
	.word	615
	.byte	3,2,2,35,0,11
	.byte	'NF2',0,2
	.word	632
	.byte	3,7,2,35,0,11
	.byte	'NF3',0,1
	.word	615
	.byte	3,4,2,35,1,11
	.byte	'NF4',0,1
	.word	615
	.byte	3,1,2,35,1,11
	.byte	'NF5',0,4
	.word	440
	.byte	3,14,2,35,0,11
	.byte	'NF6',0,1
	.word	615
	.byte	3,3,2,35,2,11
	.byte	'NF7',0,1
	.word	615
	.byte	3,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	615
	.byte	8,0,2,35,3,0,12,14,206,7,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12333
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_FCNT_Bits',0,14,180,1,16,4,11
	.byte	'FC0',0,1
	.word	615
	.byte	3,5,2,35,0,11
	.byte	'FC1',0,1
	.word	615
	.byte	3,2,2,35,0,11
	.byte	'FC2',0,2
	.word	632
	.byte	3,7,2,35,0,11
	.byte	'FC3',0,1
	.word	615
	.byte	3,4,2,35,1,11
	.byte	'FC4',0,1
	.word	615
	.byte	3,1,2,35,1,11
	.byte	'FC5',0,4
	.word	440
	.byte	3,14,2,35,0,11
	.byte	'FC6',0,1
	.word	615
	.byte	3,3,2,35,2,11
	.byte	'FC7',0,1
	.word	615
	.byte	3,0,2,35,2,11
	.byte	'NFCLR0',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'NFCLR1',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'NFCLR2',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'NFCLR3',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'NFCLR4',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'NFCLR5',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'NFCLR6',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'NFCLR7',0,1
	.word	615
	.byte	1,0,2,35,3,0,12,14,158,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12543
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_IOCR_Bits',0,14,180,3,16,4,11
	.byte	'ALTI',0,1
	.word	615
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	440
	.byte	30,0,2,35,0,0,12,14,174,7,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12875
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_RCRA_Bits',0,14,255,3,16,4,11
	.byte	'CRC0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'CRC1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'CRC2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'CRC3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'CRC4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'CRC5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'TSEN',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'TSP',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'TSTS',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'FIDS',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'WDMS',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	615
	.byte	5,0,2,35,1,11
	.byte	'UFC0',0,1
	.word	615
	.byte	2,6,2,35,2,11
	.byte	'UFC1',0,1
	.word	615
	.byte	2,4,2,35,2,11
	.byte	'UFC2',0,1
	.word	615
	.byte	2,2,2,35,2,11
	.byte	'UFC3',0,1
	.word	615
	.byte	2,0,2,35,2,11
	.byte	'UFC4',0,1
	.word	615
	.byte	2,6,2,35,3,11
	.byte	'UFC5',0,1
	.word	615
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	615
	.byte	4,0,2,35,3,0
.L320:
	.byte	12,14,238,7,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12981
	.byte	4,2,35,0,0,15,32
	.word	13326
	.byte	16,7,0,10
	.byte	'_Ifx_PSI5S_RCRB_Bits',0,14,151,4,16,4,11
	.byte	'PDL0',0,1
	.word	615
	.byte	5,3,2,35,0,11
	.byte	'PDL1',0,2
	.word	632
	.byte	5,6,2,35,0,11
	.byte	'PDL2',0,1
	.word	615
	.byte	5,1,2,35,1,11
	.byte	'PDL3',0,4
	.word	440
	.byte	5,12,2,35,0,11
	.byte	'PDL4',0,2
	.word	632
	.byte	5,7,2,35,2,11
	.byte	'PDL5',0,1
	.word	615
	.byte	5,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	615
	.byte	2,0,2,35,3,0
.L323:
	.byte	12,14,246,7,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13375
	.byte	4,2,35,0,0,15,32
	.word	13522
	.byte	16,7,0,10
	.byte	'_Ifx_PSI5S_WDT_Bits',0,14,194,5,16,4,11
	.byte	'WDL',0,4
	.word	440
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	615
	.byte	8,0,2,35,3,0,12,14,206,8,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13571
	.byte	4,2,35,0,0,15,32
	.word	13636
	.byte	16,7,0,10
	.byte	'_Ifx_PSI5S_TSCR_Bits',0,14,179,5,16,4,11
	.byte	'TS',0,4
	.word	440
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	615
	.byte	8,0,2,35,3,0,12,14,190,8,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13685
	.byte	4,2,35,0,0,15,32
	.word	13750
	.byte	16,7,0,10
	.byte	'_Ifx_PSI5S_RDS_Bits',0,14,197,4,16,4,11
	.byte	'XCRC0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'XCRC1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'XCRC2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'XCRC3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'XCRC4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'XCRC5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'XCRCI',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'CRC0',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'CRC1',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'CRC2',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'CRCI',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'ERR0',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'ERR1',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'HDI',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'PE',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'FE',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'OE',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'TEI',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'RBI',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'FID',0,1
	.word	615
	.byte	3,2,2,35,2,11
	.byte	'CID',0,2
	.word	632
	.byte	3,7,2,35,2,11
	.byte	'AFC',0,1
	.word	615
	.byte	3,4,2,35,3,11
	.byte	'PFC',0,1
	.word	615
	.byte	4,0,2,35,3,0,12,14,134,8,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13799
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_RDR_Bits',0,14,163,4,16,4,11
	.byte	'RD0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'RD1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'RD2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'RD3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'RD4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'RD5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'RD6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'RD7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'RD8',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'RD9',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'RD10',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'RD11',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'RD12',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'RD13',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'RD14',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'RD15',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'RD16',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'RD17',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'RD18',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'RD19',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'RD20',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'RD21',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'RD22',0,1
	.word	615
	.byte	1,1,2,35,2,11
	.byte	'RD23',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'RD24',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'RD25',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'RD26',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'RD27',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'PFC',0,1
	.word	615
	.byte	4,0,2,35,3,0,12,14,254,7,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14228
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_TSM_Bits',0,14,186,5,16,4,11
	.byte	'TS',0,4
	.word	440
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	615
	.byte	4,4,2,35,3,11
	.byte	'PFC',0,1
	.word	615
	.byte	4,0,2,35,3,0,12,14,198,8,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14748
	.byte	4,2,35,0,0,15,20
	.word	615
	.byte	16,19,0,10
	.byte	'_Ifx_PSI5S_TAR_Bits',0,14,144,5,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	2,6,2,35,0,11
	.byte	'TA',0,4
	.word	440
	.byte	30,0,2,35,0,0,12,14,158,8,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14876
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_BAR_Bits',0,14,111,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	2,6,2,35,0,11
	.byte	'BA',0,4
	.word	440
	.byte	30,0,2,35,0,0,12,14,238,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14979
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_PGC_Bits',0,14,233,3,16,4,11
	.byte	'TXCMD',0,1
	.word	615
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	615
	.byte	3,0,2,35,0,11
	.byte	'ATXCMD',0,1
	.word	615
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	615
	.byte	2,1,2,35,1,11
	.byte	'TBS',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'ETB',0,1
	.word	615
	.byte	3,5,2,35,2,11
	.byte	'PTE',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'ETS',0,1
	.word	615
	.byte	3,1,2,35,2,11
	.byte	'ETE',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	615
	.byte	8,0,2,35,3,0
.L314:
	.byte	12,14,222,7,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15081
	.byte	4,2,35,0,0,15,32
	.word	15286
	.byte	16,7,0,10
	.byte	'_Ifx_PSI5S_CTV_Bits',0,14,173,1,16,4,11
	.byte	'CTV',0,2
	.word	632
	.byte	16,0,2,35,0,11
	.byte	'CTC',0,2
	.word	632
	.byte	16,0,2,35,2,0
.L317:
	.byte	12,14,150,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15335
	.byte	4,2,35,0,0,15,32
	.word	15392
	.byte	16,7,0,10
	.byte	'_Ifx_PSI5S_SCR_Bits',0,14,225,4,16,4,11
	.byte	'PLL',0,1
	.word	615
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'EPS',0,1
	.word	615
	.byte	2,0,2,35,0,11
	.byte	'BSC',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	615
	.byte	5,2,2,35,1,11
	.byte	'FLUS',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	440
	.byte	7,10,2,35,0,11
	.byte	'CRC',0,1
	.word	615
	.byte	1,1,2,35,2,11
	.byte	'STA',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	615
	.byte	2,6,2,35,3,11
	.byte	'TPF',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	615
	.byte	5,0,2,35,3,0
.L326:
	.byte	12,14,142,8,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15441
	.byte	4,2,35,0,0,15,32
	.word	15687
	.byte	16,7,0,10
	.byte	'_Ifx_PSI5S_SDR_Bits',0,14,242,4,16,4,11
	.byte	'SD0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'SD1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'SD2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'SD3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'SD4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'SD5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'SD6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'SD7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'SD8',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'SD9',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'SD10',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'SD11',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'SD12',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'SD13',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'SD14',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'SD15',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'SD16',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'SD17',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'SD18',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'SD19',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'SD20',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'SD21',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'SD22',0,1
	.word	615
	.byte	1,1,2,35,2,11
	.byte	'SD23',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	615
	.byte	8,0,2,35,3,0,12,14,150,8,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15736
	.byte	4,2,35,0,0,15,32
	.word	16160
	.byte	16,7,0,10
	.byte	'_Ifx_PSI5S_CDW_Bits',0,14,125,16,4,11
	.byte	'SD0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'SD1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'SD2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'SD3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'SD4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'SD5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'SD6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'SD7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'TSI',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	440
	.byte	23,0,2,35,0,0,12,14,254,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16209
	.byte	4,2,35,0,0,15,156,1
	.word	615
	.byte	16,155,1,0,10
	.byte	'_Ifx_PSI5S_CON_Bits',0,14,150,1,16,4,11
	.byte	'M',0,1
	.word	615
	.byte	3,5,2,35,0,11
	.byte	'STP',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'REN',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'PEN',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'FEN',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'OEN',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'PE',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'FE',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'OE',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'FDE',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'ODD',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'BRS',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'LB',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'R',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'MTX',0,1
	.word	615
	.byte	3,5,2,35,2,11
	.byte	'reserved_19',0,2
	.word	632
	.byte	9,4,2,35,2,11
	.byte	'ODDTX',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	615
	.byte	3,0,2,35,3,0
.L199:
	.byte	12,14,142,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16443
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_BG_Bits',0,14,118,16,4,11
	.byte	'BR_VALUE',0,2
	.word	632
	.byte	13,3,2,35,0,11
	.byte	'reserved_13',0,4
	.word	440
	.byte	19,0,2,35,0,0,12,14,246,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16790
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_FDV_Bits',0,14,233,1,16,4,11
	.byte	'FD_VALUE',0,2
	.word	632
	.byte	11,5,2,35,0,11
	.byte	'reserved_11',0,4
	.word	440
	.byte	21,0,2,35,0,0,12,14,190,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16898
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_FDO_Bits',0,14,201,1,16,4,11
	.byte	'STEP',0,2
	.word	632
	.byte	11,5,2,35,0,11
	.byte	'reserved_11',0,1
	.word	615
	.byte	3,2,2,35,1,11
	.byte	'DM',0,1
	.word	615
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	16,0,2,35,2,0
.L373:
	.byte	12,14,166,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17008
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_TBUF_Bits',0,14,151,5,16,4,11
	.byte	'TD_VALUE',0,2
	.word	632
	.byte	9,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	440
	.byte	23,0,2,35,0,0,12,14,166,8,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17151
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_RBUF_Bits',0,14,248,3,16,4,11
	.byte	'RD_VALUE',0,2
	.word	632
	.byte	9,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	440
	.byte	23,0,2,35,0,0,12,14,230,7,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17261
	.byte	4,2,35,0,0,15,40
	.word	615
	.byte	16,39,0,10
	.byte	'_Ifx_PSI5S_WHBCON_Bits',0,14,201,5,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	4,4,2,35,0,11
	.byte	'CLRREN',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'SETREN',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	615
	.byte	2,0,2,35,0,11
	.byte	'CLRPE',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'CLRFE',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'CLROE',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'SETPE',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'SETFE',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'SETOE',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	440
	.byte	18,0,2,35,0,0,12,14,214,8,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17380
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_INTSTAT_Bits',0,14,153,3,16,4,11
	.byte	'RSI',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'RDI',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'RBI',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'TEI',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'CHCI',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'CRCI',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'TPI',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'TPOI',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'HDI',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	440
	.byte	23,0,2,35,0,0,12,14,158,7,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17655
	.byte	4,2,35,0,0,15,32
	.word	17846
	.byte	16,7,0,10
	.byte	'_Ifx_PSI5S_INTSET_Bits',0,14,254,2,16,4,11
	.byte	'RSI',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'RDI',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'RBI',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'TEI',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'CHCI',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'CRCI',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'TPI',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'TPOI',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'HDI',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	440
	.byte	23,0,2,35,0,0,12,14,142,7,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17895
	.byte	4,2,35,0,0,15,32
	.word	18085
	.byte	16,7,0,10
	.byte	'_Ifx_PSI5S_INTCLR_Bits',0,14,179,2,16,4,11
	.byte	'RSI',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'RDI',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'RBI',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'TEI',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'CHCI',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'CRCI',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'TPI',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'TPOI',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'HDI',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	440
	.byte	23,0,2,35,0,0,12,14,230,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18134
	.byte	4,2,35,0,0,15,32
	.word	18324
	.byte	16,7,0,10
	.byte	'_Ifx_PSI5S_INTEN_Bits',0,14,206,2,16,4,11
	.byte	'RSI',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'RDI',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'RBI',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'TEI',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'CHCI',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'CRCI',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'TPI',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'TPOI',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'HDI',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	440
	.byte	23,0,2,35,0,0,12,14,246,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18373
	.byte	4,2,35,0,0,15,32
	.word	18562
	.byte	16,7,0,10
	.byte	'_Ifx_PSI5S_INP_Bits',0,14,152,2,16,4,11
	.byte	'RSI',0,1
	.word	615
	.byte	3,5,2,35,0,11
	.byte	'RDI',0,1
	.word	615
	.byte	3,2,2,35,0,11
	.byte	'RBI',0,2
	.word	632
	.byte	3,7,2,35,0,11
	.byte	'TEI',0,1
	.word	615
	.byte	3,4,2,35,1,11
	.byte	'CHCI',0,1
	.word	615
	.byte	3,1,2,35,1,11
	.byte	'CRCI',0,4
	.word	440
	.byte	3,14,2,35,0,11
	.byte	'TPI',0,1
	.word	615
	.byte	3,3,2,35,2,11
	.byte	'TPOI',0,1
	.word	615
	.byte	3,0,2,35,2,11
	.byte	'HDI',0,1
	.word	615
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	615
	.byte	5,0,2,35,3,0,12,14,214,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18611
	.byte	4,2,35,0,0,15,32
	.word	18799
	.byte	16,7,0,10
	.byte	'_Ifx_PSI5S_INTOV_Bits',0,14,233,2,16,4,11
	.byte	'RSI',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'RDI',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'RBI',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'TEI',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'CHCI',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'CRCI',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'TPI',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'TPOI',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'HDI',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'TIR',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'RIR',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'EIR',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'TBIR',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'XCRCI',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'FOI',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	440
	.byte	17,0,2,35,0,0,12,14,134,7,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18848
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_INTSTATG_Bits',0,14,168,3,16,4,11
	.byte	'TIR',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'RIR',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'EIR',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'TBIR',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'XCRCI',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'FOI',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	440
	.byte	26,0,2,35,0,0,12,14,166,7,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19171
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_INTSETG_Bits',0,14,141,3,16,4,11
	.byte	'TIR',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'RIR',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'EIR',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'TBIR',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'XCRCI',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'FOI',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	440
	.byte	26,0,2,35,0,0,12,14,150,7,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19358
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_INTCLRG_Bits',0,14,194,2,16,4,11
	.byte	'TIR',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'RIR',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'EIR',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'TBIR',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'XCRCI',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'FOI',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	440
	.byte	26,0,2,35,0,0,12,14,238,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19544
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_INTENG_Bits',0,14,221,2,16,4,11
	.byte	'TIR',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'RIR',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'EIR',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'TBIR',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'XCRCI',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'FOI',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	440
	.byte	26,0,2,35,0,0,12,14,254,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19730
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_INPG_Bits',0,14,167,2,16,4,11
	.byte	'TIR',0,1
	.word	615
	.byte	3,5,2,35,0,11
	.byte	'RIR',0,1
	.word	615
	.byte	3,2,2,35,0,11
	.byte	'EIR',0,2
	.word	632
	.byte	3,7,2,35,0,11
	.byte	'TBIR',0,1
	.word	615
	.byte	3,4,2,35,1,11
	.byte	'XCRCI',0,1
	.word	615
	.byte	3,1,2,35,1,11
	.byte	'FOI',0,4
	.word	440
	.byte	3,14,2,35,0,11
	.byte	'reserved_18',0,2
	.word	632
	.byte	14,0,2,35,2,0,12,14,222,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19915
	.byte	4,2,35,0,0,15,180,1
	.word	615
	.byte	16,179,1,0,10
	.byte	'_Ifx_PSI5S_OCS_Bits',0,14,223,3,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,1
	.word	615
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	615
	.byte	2,0,2,35,3,0,12,14,214,7,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20110
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_ACCEN0_Bits',0,14,68,16,4,11
	.byte	'EN0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	615
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	615
	.byte	1,0,2,35,3,0,12,14,222,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20272
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_ACCEN1_Bits',0,14,105,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	32,0,2,35,0,0,12,14,230,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20843
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_KRST0_Bits',0,14,187,3,16,4,11
	.byte	'RST',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	440
	.byte	30,0,2,35,0,0,12,14,182,7,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20934
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_KRST1_Bits',0,14,195,3,16,4,11
	.byte	'RST',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	440
	.byte	31,0,2,35,0,0,12,14,190,7,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21059
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_PSI5S_KRSTCLR_Bits',0,14,202,3,16,4,11
	.byte	'CLR',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	440
	.byte	31,0,2,35,0,0,12,14,198,7,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21165
	.byte	4,2,35,0,0,15,156,24
	.word	615
	.byte	16,155,24,0,10
	.byte	'_Ifx_PSI5S',0,14,231,8,25,128,32,13
	.byte	'CLC',0
	.word	10989
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	2636
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	11110
	.byte	4,2,35,8,13
	.byte	'FDR',0
	.word	11271
	.byte	4,2,35,12,13
	.byte	'FDRT',0
	.word	11480
	.byte	4,2,35,16,13
	.byte	'TSCNTA',0
	.word	11659
	.byte	4,2,35,20,13
	.byte	'TSCNTB',0
	.word	11797
	.byte	4,2,35,24,13
	.byte	'GCR',0
	.word	12293
	.byte	4,2,35,28,13
	.byte	'NFC',0
	.word	12503
	.byte	4,2,35,32,13
	.byte	'FCNT',0
	.word	12835
	.byte	4,2,35,36,13
	.byte	'IOCR',0
	.word	12941
	.byte	4,2,35,40,13
	.byte	'reserved_2C',0
	.word	2636
	.byte	4,2,35,44,13
	.byte	'RCRA',0
	.word	13366
	.byte	32,2,35,48,13
	.byte	'RCRB',0
	.word	13562
	.byte	32,2,35,80,13
	.byte	'WDT',0
	.word	13676
	.byte	32,2,35,112,13
	.byte	'TSCR',0
	.word	13790
	.byte	32,3,35,144,1,13
	.byte	'RDS',0
	.word	14188
	.byte	4,3,35,176,1,13
	.byte	'RDR',0
	.word	14708
	.byte	4,3,35,180,1,13
	.byte	'TSM',0
	.word	14827
	.byte	4,3,35,184,1,13
	.byte	'reserved_BC',0
	.word	14867
	.byte	20,3,35,188,1,13
	.byte	'TAR',0
	.word	14939
	.byte	4,3,35,208,1,13
	.byte	'BAR',0
	.word	15041
	.byte	4,3,35,212,1,13
	.byte	'reserved_D8',0
	.word	3827
	.byte	24,3,35,216,1,13
	.byte	'PGC',0
	.word	15326
	.byte	32,3,35,240,1,13
	.byte	'CTV',0
	.word	15432
	.byte	32,3,35,144,2,13
	.byte	'SCR',0
	.word	15727
	.byte	32,3,35,176,2,13
	.byte	'SDR',0
	.word	16200
	.byte	32,3,35,208,2,13
	.byte	'CDW',0
	.word	16392
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	16432
	.byte	156,1,3,35,244,2,13
	.byte	'CON',0
	.word	16750
	.byte	4,3,35,144,4,13
	.byte	'BG',0
	.word	16858
	.byte	4,3,35,148,4,13
	.byte	'FDV',0
	.word	16968
	.byte	4,3,35,152,4,13
	.byte	'FDO',0
	.word	17111
	.byte	4,3,35,156,4,13
	.byte	'TBUF',0
	.word	17221
	.byte	4,3,35,160,4,13
	.byte	'RBUF',0
	.word	17331
	.byte	4,3,35,164,4,13
	.byte	'reserved_228',0
	.word	17371
	.byte	40,3,35,168,4,13
	.byte	'WHBCON',0
	.word	17615
	.byte	4,3,35,208,4,13
	.byte	'reserved_254',0
	.word	4796
	.byte	12,3,35,212,4,13
	.byte	'INTSTAT',0
	.word	17886
	.byte	32,3,35,224,4,13
	.byte	'INTSET',0
	.word	18125
	.byte	32,3,35,128,5,13
	.byte	'INTCLR',0
	.word	18364
	.byte	32,3,35,160,5,13
	.byte	'INTEN',0
	.word	18602
	.byte	32,3,35,192,5,13
	.byte	'INP',0
	.word	18839
	.byte	32,3,35,224,5,13
	.byte	'INTOV',0
	.word	19131
	.byte	4,3,35,128,6,13
	.byte	'INTSTATG',0
	.word	19318
	.byte	4,3,35,132,6,13
	.byte	'INTSETG',0
	.word	19504
	.byte	4,3,35,136,6,13
	.byte	'INTCLRG',0
	.word	19690
	.byte	4,3,35,140,6,13
	.byte	'INTENG',0
	.word	19875
	.byte	4,3,35,144,6,13
	.byte	'INPG',0
	.word	20059
	.byte	4,3,35,148,6,13
	.byte	'reserved_318',0
	.word	20099
	.byte	180,1,3,35,152,6,13
	.byte	'OCS',0
	.word	20232
	.byte	4,3,35,204,7,13
	.byte	'ACCEN0',0
	.word	20803
	.byte	4,3,35,208,7,13
	.byte	'ACCEN1',0
	.word	20894
	.byte	4,3,35,212,7,13
	.byte	'KRST0',0
	.word	21019
	.byte	4,3,35,216,7,13
	.byte	'KRST1',0
	.word	21125
	.byte	4,3,35,220,7,13
	.byte	'KRSTCLR',0
	.word	21233
	.byte	4,3,35,224,7,13
	.byte	'reserved_3E4',0
	.word	21273
	.byte	156,24,3,35,228,7,0,14
	.word	21284
.L193:
	.byte	3
	.word	22225
	.byte	20,5,246,1,9,8,13
	.byte	'port',0
	.word	9126
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	615
	.byte	1,2,35,4,0,20,13,72,15,16,13
	.byte	'module',0
	.word	22230
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	22235
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	9432
	.byte	1,2,35,12,0,21
	.word	22274
.L282:
	.byte	3
	.word	22325
	.byte	17,5,151,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed1',0,12,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed2',0,13,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed3',0,14,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed4',0,15,0
.L284:
	.byte	4
	.byte	'IfxPsi5s_initClkPin',0,3,12,215,5,17,1,1
.L287:
	.byte	5
	.byte	'clk',0,12,215,5,61
	.word	22330
.L289:
	.byte	5
	.byte	'outputMode',0,12,215,5,85
	.word	9336
.L291:
	.byte	5
	.byte	'padDriver',0,12,215,5,115
	.word	22335
.L293:
	.byte	19,6,0,0,17,15,127,9,1,18
	.byte	'Ifx_RxSel_a',0,0,18
	.byte	'Ifx_RxSel_b',0,1,18
	.byte	'Ifx_RxSel_c',0,2,18
	.byte	'Ifx_RxSel_d',0,3,18
	.byte	'Ifx_RxSel_e',0,4,18
	.byte	'Ifx_RxSel_f',0,5,18
	.byte	'Ifx_RxSel_g',0,6,18
	.byte	'Ifx_RxSel_h',0,7,0,20,13,56,15,16,13
	.byte	'module',0
	.word	22230
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	22235
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	22842
	.byte	1,2,35,12,0,21
	.word	22960
.L225:
	.byte	3
	.word	23011
.L227:
	.byte	4
	.byte	'IfxPsi5s_initRxPin',0,3,12,225,5,17,1,1
.L230:
	.byte	5
	.byte	'rx',0,12,225,5,58
	.word	23016
.L232:
	.byte	5
	.byte	'inputMode',0,12,225,5,80
	.word	9131
.L234:
	.byte	5
	.byte	'padDriver',0,12,225,5,109
	.word	22335
.L236:
	.byte	19,6,6,0,0,20,13,64,15,16,13
	.byte	'module',0
	.word	22230
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	22235
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	9432
	.byte	1,2,35,12,0,21
	.word	23103
.L256:
	.byte	3
	.word	23154
.L258:
	.byte	4
	.byte	'IfxPsi5s_initTxPin',0,3,12,236,5,17,1,1
.L261:
	.byte	5
	.byte	'tx',0,12,236,5,59
	.word	23159
.L263:
	.byte	5
	.byte	'outputMode',0,12,236,5,82
	.word	9336
.L265:
	.byte	5
	.byte	'padDriver',0,12,236,5,112
	.word	22335
.L267:
	.byte	19,6,0,0,17,12,78,9,1,18
	.byte	'IfxPsi5s_AlternateInput_0',0,0,18
	.byte	'IfxPsi5s_AlternateInput_1',0,1,18
	.byte	'IfxPsi5s_AlternateInput_2',0,2,18
	.byte	'IfxPsi5s_AlternateInput_3',0,3,0
.L249:
	.byte	4
	.byte	'IfxPsi5s_setRxInput',0,3,12,148,6,17,1,1
.L251:
	.byte	5
	.byte	'psi5s',0,12,148,6,48
	.word	22230
.L253:
	.byte	5
	.byte	'alti',0,12,148,6,79
	.word	23246
.L255:
	.byte	6,0,17,12,222,1,9,1,18
	.byte	'IfxPsi5s_LoopBackMode_disable',0,0,18
	.byte	'IfxPsi5s_LoopBackMode_enable',0,1,0
.L201:
	.byte	4
	.byte	'IfxPsi5s_setLoopBackMode',0,3,12,142,6,17,1,1
.L204:
	.byte	5
	.byte	'psi5s',0,12,142,6,53
	.word	22230
.L206:
	.byte	5
	.byte	'enabled',0,12,142,6,82
	.word	23423
.L208:
	.byte	6,0,21
	.word	456
	.byte	22
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,23
	.word	23560
	.byte	0,14
	.word	440
	.byte	3
	.word	440
	.byte	24
	.byte	'__cmpswapw',0
	.word	23602
	.byte	1,1,1,1,25
	.byte	'p',0
	.word	23607
	.byte	25
	.byte	'value',0
	.word	440
	.byte	25
	.byte	'compare',0
	.word	440
	.byte	0,26
	.word	184
	.byte	27
	.word	210
	.byte	6,0,26
	.word	245
	.byte	27
	.word	277
	.byte	6,0,26
	.word	290
	.byte	6,0,26
	.word	359
	.byte	27
	.word	378
	.byte	6,0,26
	.word	394
	.byte	27
	.word	409
	.byte	27
	.word	423
	.byte	6,0,26
	.word	1224
	.byte	27
	.word	1264
	.byte	27
	.word	1282
	.byte	6,0,26
	.word	1302
	.byte	27
	.word	1345
	.byte	6,0,26
	.word	1365
	.byte	27
	.word	1403
	.byte	27
	.word	1421
	.byte	6,0,26
	.word	1441
	.byte	27
	.word	1482
	.byte	6,0,28
	.byte	'IfxScuWdt_clearCpuEndinit',0,3,237,1,17,1,1,1,1,5
	.byte	'password',0,3,237,1,50
	.word	632
	.byte	0,28
	.byte	'IfxScuWdt_clearSafetyEndinit',0,3,147,2,17,1,1,1,1,5
	.byte	'password',0,3,147,2,53
	.word	632
	.byte	0,28
	.byte	'IfxScuWdt_setCpuEndinit',0,3,157,2,17,1,1,1,1,5
	.byte	'password',0,3,157,2,48
	.word	632
	.byte	0,28
	.byte	'IfxScuWdt_setSafetyEndinit',0,3,187,2,17,1,1,1,1,5
	.byte	'password',0,3,187,2,51
	.word	632
	.byte	0,26
	.word	1502
	.byte	27
	.word	1553
	.byte	6,0,26
	.word	1573
	.byte	6,0,29
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,3,215,3,19
	.word	632
	.byte	1,1,1,1,26
	.word	9256
	.byte	27
	.word	9288
	.byte	27
	.word	9302
	.byte	27
	.word	9320
	.byte	6,0,26
	.word	9649
	.byte	27
	.word	9682
	.byte	27
	.word	9696
	.byte	27
	.word	9714
	.byte	27
	.word	9728
	.byte	6,0,26
	.word	9848
	.byte	27
	.word	9876
	.byte	27
	.word	9890
	.byte	27
	.word	9908
	.byte	6,0,17,5,101,9,1,18
	.byte	'IfxPort_Mode_inputNoPullDevice',0,0,18
	.byte	'IfxPort_Mode_inputPullDown',0,8,18
	.byte	'IfxPort_Mode_inputPullUp',0,16,18
	.byte	'IfxPort_Mode_outputPushPullGeneral',0,128,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt1',0,136,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt2',0,144,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt3',0,152,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt4',0,160,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt5',0,168,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt6',0,176,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt7',0,184,1,18
	.byte	'IfxPort_Mode_outputOpenDrainGeneral',0,192,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt1',0,200,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt2',0,208,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt3',0,216,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt4',0,224,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt5',0,232,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt6',0,240,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt7',0,248,1,0,28
	.byte	'IfxPort_setPinMode',0,5,183,3,17,1,1,1,1,5
	.byte	'port',0,5,183,3,43
	.word	9126
	.byte	5
	.byte	'pinIndex',0,5,183,3,55
	.word	615
	.byte	5
	.byte	'mode',0,5,183,3,78
	.word	24136
	.byte	0,28
	.byte	'IfxPort_setPinPadDriver',0,5,207,3,17,1,1,1,1,5
	.byte	'port',0,5,207,3,48
	.word	9126
	.byte	5
	.byte	'pinIndex',0,5,207,3,60
	.word	615
	.byte	5
	.byte	'padDriver',0,5,207,3,88
	.word	22335
	.byte	0,26
	.word	10265
	.byte	27
	.word	10293
	.byte	6,0,26
	.word	10479
	.byte	6,0,26
	.word	10513
	.byte	6,0,26
	.word	10576
	.byte	27
	.word	10617
	.byte	6,0,26
	.word	10636
	.byte	27
	.word	10691
	.byte	6,0,26
	.word	10710
	.byte	27
	.word	10750
	.byte	27
	.word	10767
	.byte	19,6,0,0,26
	.word	10786
	.byte	27
	.word	10809
	.byte	19,30
	.word	10830
	.byte	31
	.word	10868
	.byte	0,6,0,0,26
	.word	10830
	.byte	6,0,29
	.byte	'IfxScuCcu_getSpbFrequency',0,11,144,7,20
	.word	236
	.byte	1,1,1,1,17,12,88,9,1,18
	.byte	'IfxPsi5s_AscBaudratePrescalar_divideBy2',0,0,18
	.byte	'IfxPsi5s_AscBaudratePrescalar_divideBy3',0,1,0,32
	.byte	'IfxPsi5s_getBaudrate',0,12,169,3,20
	.word	236
	.byte	1,1,1,1,5
	.byte	'psi5s',0,12,169,3,52
	.word	22230
	.byte	5
	.byte	'synchMode',0,12,169,3,67
	.word	615
	.byte	5
	.byte	'divMode',0,12,169,3,86
	.word	615
	.byte	5
	.byte	'baudrateSelection',0,12,169,3,125
	.word	25105
	.byte	0,26
	.word	22758
	.byte	27
	.word	22786
	.byte	27
	.word	22799
	.byte	27
	.word	22819
	.byte	19,30
	.word	9649
	.byte	27
	.word	9682
	.byte	27
	.word	9696
	.byte	27
	.word	9714
	.byte	27
	.word	9728
	.byte	31
	.word	9743
	.byte	0,6,0,0,26
	.word	23021
	.byte	27
	.word	23048
	.byte	27
	.word	23060
	.byte	27
	.word	23079
	.byte	19,30
	.word	9256
	.byte	27
	.word	9288
	.byte	27
	.word	9302
	.byte	27
	.word	9320
	.byte	31
	.word	9334
	.byte	0,6,30
	.word	23364
	.byte	27
	.word	23392
	.byte	27
	.word	23407
	.byte	31
	.word	23421
	.byte	0,6,0,0,26
	.word	23164
	.byte	27
	.word	23191
	.byte	27
	.word	23203
	.byte	27
	.word	23223
	.byte	19,30
	.word	9649
	.byte	27
	.word	9682
	.byte	27
	.word	9696
	.byte	27
	.word	9714
	.byte	27
	.word	9728
	.byte	31
	.word	9743
	.byte	0,6,0,0,26
	.word	23364
	.byte	27
	.word	23392
	.byte	27
	.word	23407
	.byte	6,0,26
	.word	23493
	.byte	27
	.word	23526
	.byte	27
	.word	23541
	.byte	6,0,20,16,230,1,9,4,13
	.byte	'psi5s',0
	.word	22230
	.byte	4,2,35,0,0
.L185:
	.byte	3
	.word	25524
.L363:
	.byte	17,12,149,1,9,1,18
	.byte	'IfxPsi5s_DividerMode_spb',0,0,18
	.byte	'IfxPsi5s_DividerMode_normal',0,1,18
	.byte	'IfxPsi5s_DividerMode_fractional',0,2,18
	.byte	'IfxPsi5s_DividerMode_off',0,3,0
.L365:
	.byte	17,12,131,1,9,1,18
	.byte	'IfxPsi5s_ClockType_fracDiv',0,0,18
	.byte	'IfxPsi5s_ClockType_timeStamp',0,1,18
	.byte	'IfxPsi5s_ClockType_ascFracDiv',0,2,18
	.byte	'IfxPsi5s_ClockType_ascOutput',0,3,0,20,16,179,1,9,6,13
	.byte	'frequency',0
	.word	10555
	.byte	4,2,35,0,13
	.byte	'mode',0
	.word	25551
	.byte	1,2,35,4,13
	.byte	'type',0
	.word	25676
	.byte	1,2,35,5,0,17,12,172,2,9,1,18
	.byte	'IfxPsi5s_Trigger_0',0,0,18
	.byte	'IfxPsi5s_Trigger_1',0,1,18
	.byte	'IfxPsi5s_Trigger_2',0,2,18
	.byte	'IfxPsi5s_Trigger_3',0,3,18
	.byte	'IfxPsi5s_Trigger_4',0,4,18
	.byte	'IfxPsi5s_Trigger_5',0,5,18
	.byte	'IfxPsi5s_Trigger_6',0,6,18
	.byte	'IfxPsi5s_Trigger_7',0,7,0,17,12,140,2,9,1,18
	.byte	'IfxPsi5s_TimeBase_internal',0,0,18
	.byte	'IfxPsi5s_TimeBase_external',0,1,0,20,16,216,2,9,2,13
	.byte	'externalTimeBaseSelect',0
	.word	25860
	.byte	1,2,35,0,13
	.byte	'timeBaseSelect',0
	.word	26035
	.byte	1,2,35,1,0,17,12,108,9,1,18
	.byte	'IfxPsi5s_AscStopBits_1',0,0,18
	.byte	'IfxPsi5s_AscStopBits_2',0,1,0,17,12,96,9,1,18
	.byte	'IfxPsi5s_AscMode_sync',0,0,18
	.byte	'IfxPsi5s_AscMode_async_8bitData',0,1,18
	.byte	'IfxPsi5s_AscMode_async_7bitDataWithParity',0,3,18
	.byte	'IfxPsi5s_AscMode_async_9bitData',0,4,18
	.byte	'IfxPsi5s_AscMode_async_8bitDataWithWakeup',0,5,18
	.byte	'IfxPsi5s_AscMode_async_8bitDataWithParity',0,7,0,20,16,237,1,9,24,13
	.byte	'parityCheckEnabled',0
	.word	615
	.byte	1,2,35,0,13
	.byte	'framingCheckEnabled',0
	.word	615
	.byte	1,2,35,1,13
	.byte	'overrunCheckEnabled',0
	.word	615
	.byte	1,2,35,2,13
	.byte	'fractionalDividerEnabled',0
	.word	615
	.byte	1,2,35,3,13
	.byte	'receiverOddParityEnabled',0
	.word	615
	.byte	1,2,35,4,13
	.byte	'transmitterOddParityEnabled',0
	.word	615
	.byte	1,2,35,5,13
	.byte	'baudrateFrequency',0
	.word	10555
	.byte	4,2,35,6,13
	.byte	'stopBits',0
	.word	26163
	.byte	1,2,35,10,13
	.byte	'receiveMode',0
	.word	26219
	.byte	1,2,35,11,13
	.byte	'baudrateSelection',0
	.word	25105
	.byte	1,2,35,12,13
	.byte	'transmitMode',0
	.word	26219
	.byte	1,2,35,13,13
	.byte	'clockOutput',0
	.word	25806
	.byte	6,2,35,14,13
	.byte	'loopbackEnabled',0
	.word	23423
	.byte	1,2,35,20,0,20,16,136,2,9,16,13
	.byte	'ascOnlyMode',0
	.word	615
	.byte	1,2,35,0,13
	.byte	'crcErrorConsideredForRSI',0
	.word	615
	.byte	1,2,35,1,13
	.byte	'xcrcErrorConsideredForRSI',0
	.word	615
	.byte	1,2,35,2,13
	.byte	'transmitErrorConsideredForRSI',0
	.word	615
	.byte	1,2,35,3,13
	.byte	'parityErrorConsideredForRSI',0
	.word	615
	.byte	1,2,35,4,13
	.byte	'framingErrorConsideredForRSI',0
	.word	615
	.byte	1,2,35,5,13
	.byte	'overrunErrorConsideredForRSI',0
	.word	615
	.byte	1,2,35,6,13
	.byte	'receiveBufferErrorConsideredForRSI',0
	.word	615
	.byte	1,2,35,7,13
	.byte	'headerErrorConsideredForRSI',0
	.word	615
	.byte	1,2,35,8,13
	.byte	'idleTime',0
	.word	10555
	.byte	4,2,35,10,0,20,16,152,2,9,24,13
	.byte	'rx',0
	.word	23016
	.byte	4,2,35,0,13
	.byte	'rxMode',0
	.word	9131
	.byte	1,2,35,4,13
	.byte	'tx',0
	.word	23159
	.byte	4,2,35,8,13
	.byte	'txMode',0
	.word	9336
	.byte	1,2,35,12,13
	.byte	'clk',0
	.word	22330
	.byte	4,2,35,16,13
	.byte	'clkMode',0
	.word	9336
	.byte	1,2,35,20,13
	.byte	'pinDriver',0
	.word	22335
	.byte	1,2,35,21,0,21
	.word	27156
.L222:
	.byte	3
	.word	27268
	.byte	20,16,132,3,9,64,13
	.byte	'module',0
	.word	22230
	.byte	4,2,35,0,13
	.byte	'fracDiv',0
	.word	25806
	.byte	6,2,35,4,13
	.byte	'timestampClock',0
	.word	25806
	.byte	6,2,35,10,13
	.byte	'timestampCounterA',0
	.word	26100
	.byte	2,2,35,16,13
	.byte	'timestampCounterB',0
	.word	26100
	.byte	2,2,35,18,13
	.byte	'ascConfig',0
	.word	26449
	.byte	24,2,35,20,13
	.byte	'globalControlConfig',0
	.word	26808
	.byte	16,2,35,44,13
	.byte	'pins',0
	.word	27273
	.byte	4,2,35,60,0,21
	.word	27278
.L190:
	.byte	3
	.word	27458
.L299:
	.byte	3
	.word	27278
	.byte	17,12,116,9,1,18
	.byte	'IfxPsi5s_ChannelId_none',0,127,18
	.byte	'IfxPsi5s_ChannelId_0',0,0,18
	.byte	'IfxPsi5s_ChannelId_1',0,1,18
	.byte	'IfxPsi5s_ChannelId_2',0,2,18
	.byte	'IfxPsi5s_ChannelId_3',0,3,18
	.byte	'IfxPsi5s_ChannelId_4',0,4,18
	.byte	'IfxPsi5s_ChannelId_5',0,5,18
	.byte	'IfxPsi5s_ChannelId_6',0,6,18
	.byte	'IfxPsi5s_ChannelId_7',0,7,0,20,16,239,2,9,8,13
	.byte	'module',0
	.word	25546
	.byte	4,2,35,0,13
	.byte	'channelId',0
	.word	27473
	.byte	1,2,35,4,0
.L305:
	.byte	3
	.word	27689
	.byte	21
	.word	25524
	.byte	3
	.word	27736
	.byte	17,12,200,2,9,1,18
	.byte	'IfxPsi5s_TriggerType_periodic',0,0,18
	.byte	'IfxPsi5s_TriggerType_external',0,1,0,20,16,165,2,9,12,13
	.byte	'codeforZero',0
	.word	10555
	.byte	4,2,35,0,13
	.byte	'codeforOne',0
	.word	10555
	.byte	4,2,35,4,13
	.byte	'timeBaseSelect',0
	.word	26035
	.byte	1,2,35,8,13
	.byte	'externalTimeBaseSelect',0
	.word	25860
	.byte	1,2,35,9,13
	.byte	'periodicOrExternal',0
	.word	27746
	.byte	1,2,35,10,13
	.byte	'externalTriggerSelect',0
	.word	25860
	.byte	1,2,35,11,0,20,16,128,2,9,8,13
	.byte	'channelTriggerValue',0
	.word	10555
	.byte	4,2,35,0,13
	.byte	'channelTriggerCounter',0
	.word	10555
	.byte	4,2,35,4,0,15,24
	.word	10555
	.byte	16,5,0,17,12,141,1,9,1,18
	.byte	'IfxPsi5s_CrcOrParity_parity',0,0,18
	.byte	'IfxPsi5s_CrcOrParity_crc',0,1,0,15,6
	.word	28056
	.byte	16,5,0,17,12,156,2,9,1,18
	.byte	'IfxPsi5s_TimestampRegister_a',0,0,18
	.byte	'IfxPsi5s_TimestampRegister_b',0,1,0,17,12,164,2,9,1,18
	.byte	'IfxPsi5s_TimestampTrigger_syncPulse',0,0,18
	.byte	'IfxPsi5s_TimestampTrigger_frame',0,1,0,17,12,168,1,9,1,18
	.byte	'IfxPsi5s_FrameId_frameHeader',0,0,18
	.byte	'IfxPsi5s_FrameId_rollingNumber',0,1,0,17,12,218,2,9,1,18
	.byte	'IfxPsi5s_WatchdogTimerMode_frame',0,0,18
	.byte	'IfxPsi5s_WatchdogTimerMode_syncPulse',0,1,0,17,12,208,2,9,1,18
	.byte	'IfxPsi5s_UartFrameCount_3',0,0,18
	.byte	'IfxPsi5s_UartFrameCount_4',0,1,18
	.byte	'IfxPsi5s_UartFrameCount_5',0,2,18
	.byte	'IfxPsi5s_UartFrameCount_6',0,3,0,15,6
	.word	28429
	.byte	16,5,0,17,12,238,1,9,1,18
	.byte	'IfxPsi5s_NumberExpectedFrames_1',0,1,18
	.byte	'IfxPsi5s_NumberExpectedFrames_2',0,2,18
	.byte	'IfxPsi5s_NumberExpectedFrames_3',0,3,18
	.byte	'IfxPsi5s_NumberExpectedFrames_4',0,4,18
	.byte	'IfxPsi5s_NumberExpectedFrames_5',0,5,18
	.byte	'IfxPsi5s_NumberExpectedFrames_6',0,6,0,20,16,177,2,9,44,13
	.byte	'timestampEnabled',0
	.word	615
	.byte	1,2,35,0,13
	.byte	'payloadLength',0
	.word	28047
	.byte	24,2,35,2,13
	.byte	'crcOrParity',0
	.word	28120
	.byte	6,2,35,26,13
	.byte	'timestampSelect',0
	.word	28129
	.byte	1,2,35,32,13
	.byte	'timestampTriggerSelect',0
	.word	28198
	.byte	1,2,35,33,13
	.byte	'frameIdSelect',0
	.word	28277
	.byte	1,2,35,34,13
	.byte	'watchdogTimerModeSelect',0
	.word	28348
	.byte	1,2,35,35,13
	.byte	'uartFrameCount',0
	.word	28548
	.byte	6,2,35,36,13
	.byte	'numberOfFramesExpected',0
	.word	28557
	.byte	1,2,35,42,0,17,12,159,1,9,1,18
	.byte	'IfxPsi5s_EnhancedProtocol_toothGapMethod',0,0,18
	.byte	'IfxPsi5s_EnhancedProtocol_pulseWidth_frameFormat_1to3',0,1,18
	.byte	'IfxPsi5s_EnhancedProtocol_pulseWidth_frameFormat_4',0,3,0,20,16,224,2,9,12,13
	.byte	'bitStuffControl',0
	.word	615
	.byte	1,2,35,0,13
	.byte	'crcGenerationControl',0
	.word	615
	.byte	1,2,35,1,13
	.byte	'startSequenceGenerationControl',0
	.word	615
	.byte	1,2,35,2,13
	.byte	'payloadLength',0
	.word	10555
	.byte	4,2,35,4,13
	.byte	'enhancedProtocolSelection',0
	.word	29014
	.byte	1,2,35,8,0,20,16,247,2,9,88,13
	.byte	'module',0
	.word	27741
	.byte	4,2,35,0,13
	.byte	'watchdogTimerLimit',0
	.word	10555
	.byte	4,2,35,4,13
	.byte	'channelId',0
	.word	27473
	.byte	1,2,35,8,13
	.byte	'pulseGeneration',0
	.word	27817
	.byte	12,2,35,12,13
	.byte	'channelTrigger',0
	.word	27980
	.byte	8,2,35,24,13
	.byte	'receiveControl',0
	.word	28768
	.byte	44,2,35,32,13
	.byte	'sendControl',0
	.word	29173
	.byte	12,2,35,76,0,21
	.word	29333
.L307:
	.byte	3
	.word	29497
.L329:
	.byte	3
	.word	29333
	.byte	20,16,210,1,9,6,11
	.byte	'readData',0,4
	.word	10555
	.byte	28,4,2,35,0,13
	.byte	'packetFrameCount',0
	.word	615
	.byte	1,2,35,4,0,12,16,192,2,9,6,13
	.byte	'rdr',0
	.word	10555
	.byte	4,2,35,0,13
	.byte	'receivedData',0
	.word	29512
	.byte	6,2,35,0,0,20,16,188,1,9,6,11
	.byte	'xcrc',0,1
	.word	615
	.byte	6,2,2,35,0,11
	.byte	'xcrcError',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'crc',0,1
	.word	615
	.byte	3,5,2,35,1,11
	.byte	'crcError',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'errorFlag0',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'errorFlag1',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'headerErrorFlag',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'ascParityErrorFlag',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'ascFramingErrorFlag',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'ascOverrunErrorFlag',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'watchdogTimeoutErrorFlag',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'receiveBufferOverflowFlag',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'frameId',0,1
	.word	615
	.byte	3,1,2,35,2,11
	.byte	'channelId',0,1
	.word	615
	.byte	3,5,2,35,3,11
	.byte	'actualUartFrameCount',0,1
	.word	615
	.byte	3,2,2,35,3,11
	.byte	'packetFrameCount',0,1
	.word	615
	.byte	4,4,2,35,4,0,12,16,200,2,9,6,13
	.byte	'rds',0
	.word	10555
	.byte	4,2,35,0,13
	.byte	'receivedBits',0
	.word	29607
	.byte	6,2,35,0,0,20,16,218,1,9,4,11
	.byte	'packetFrameCount',0,1
	.word	615
	.byte	4,4,2,35,0,11
	.byte	'timestamp',0,4
	.word	10555
	.byte	24,4,2,35,0,0,12,16,208,2,9,4,13
	.byte	'tsm',0
	.word	10555
	.byte	4,2,35,0,13
	.byte	'timeStamp',0
	.word	30064
	.byte	4,2,35,0,0,20,16,146,3,9,16,13
	.byte	'data',0
	.word	29565
	.byte	6,2,35,0,13
	.byte	'status',0
	.word	30022
	.byte	6,2,35,6,13
	.byte	'timestamp',0
	.word	30120
	.byte	4,2,35,12,0
.L335:
	.byte	3
	.word	30159
.L345:
	.byte	3
	.word	26449
	.byte	21
	.word	25806
.L356:
	.byte	3
	.word	30225
	.byte	7
	.byte	'short int',0,2,5,33
	.byte	'__wchar_t',0,17,1,1
	.word	30235
	.byte	33
	.byte	'__size_t',0,17,1,1
	.word	440
	.byte	33
	.byte	'__ptrdiff_t',0,17,1,1
	.word	456
	.byte	34,1,3
	.word	30303
	.byte	33
	.byte	'__codeptr',0,17,1,1
	.word	30305
	.byte	33
	.byte	'Ifx_UReg_8Bit',0,18,96,24
	.word	615
	.byte	33
	.byte	'Ifx_UReg_32Bit',0,18,98,24
	.word	440
	.byte	33
	.byte	'Ifx_SReg_32Bit',0,18,101,24
	.word	456
	.byte	33
	.byte	'Ifx_PSI5S_ACCEN0_Bits',0,14,102,3
	.word	20272
	.byte	33
	.byte	'Ifx_PSI5S_ACCEN1_Bits',0,14,108,3
	.word	20843
	.byte	33
	.byte	'Ifx_PSI5S_BAR_Bits',0,14,115,3
	.word	14979
	.byte	33
	.byte	'Ifx_PSI5S_BG_Bits',0,14,122,3
	.word	16790
	.byte	33
	.byte	'Ifx_PSI5S_CDW_Bits',0,14,137,1,3
	.word	16209
	.byte	33
	.byte	'Ifx_PSI5S_CLC_Bits',0,14,147,1,3
	.word	10870
	.byte	33
	.byte	'Ifx_PSI5S_CON_Bits',0,14,170,1,3
	.word	16443
	.byte	33
	.byte	'Ifx_PSI5S_CTV_Bits',0,14,177,1,3
	.word	15335
	.byte	33
	.byte	'Ifx_PSI5S_FCNT_Bits',0,14,198,1,3
	.word	12543
	.byte	33
	.byte	'Ifx_PSI5S_FDO_Bits',0,14,207,1,3
	.word	17008
	.byte	33
	.byte	'Ifx_PSI5S_FDR_Bits',0,14,217,1,3
	.word	11150
	.byte	33
	.byte	'Ifx_PSI5S_FDRT_Bits',0,14,230,1,3
	.word	11311
	.byte	33
	.byte	'Ifx_PSI5S_FDV_Bits',0,14,237,1,3
	.word	16898
	.byte	33
	.byte	'Ifx_PSI5S_GCR_Bits',0,14,141,2,3
	.word	11837
	.byte	33
	.byte	'Ifx_PSI5S_ID_Bits',0,14,149,2,3
	.word	11029
	.byte	33
	.byte	'Ifx_PSI5S_INP_Bits',0,14,164,2,3
	.word	18611
	.byte	33
	.byte	'Ifx_PSI5S_INPG_Bits',0,14,176,2,3
	.word	19915
	.byte	33
	.byte	'Ifx_PSI5S_INTCLR_Bits',0,14,191,2,3
	.word	18134
	.byte	33
	.byte	'Ifx_PSI5S_INTCLRG_Bits',0,14,203,2,3
	.word	19544
	.byte	33
	.byte	'Ifx_PSI5S_INTEN_Bits',0,14,218,2,3
	.word	18373
	.byte	33
	.byte	'Ifx_PSI5S_INTENG_Bits',0,14,230,2,3
	.word	19730
	.byte	33
	.byte	'Ifx_PSI5S_INTOV_Bits',0,14,251,2,3
	.word	18848
	.byte	33
	.byte	'Ifx_PSI5S_INTSET_Bits',0,14,138,3,3
	.word	17895
	.byte	33
	.byte	'Ifx_PSI5S_INTSETG_Bits',0,14,150,3,3
	.word	19358
	.byte	33
	.byte	'Ifx_PSI5S_INTSTAT_Bits',0,14,165,3,3
	.word	17655
	.byte	33
	.byte	'Ifx_PSI5S_INTSTATG_Bits',0,14,177,3,3
	.word	19171
	.byte	33
	.byte	'Ifx_PSI5S_IOCR_Bits',0,14,184,3,3
	.word	12875
	.byte	33
	.byte	'Ifx_PSI5S_KRST0_Bits',0,14,192,3,3
	.word	20934
	.byte	33
	.byte	'Ifx_PSI5S_KRST1_Bits',0,14,199,3,3
	.word	21059
	.byte	33
	.byte	'Ifx_PSI5S_KRSTCLR_Bits',0,14,206,3,3
	.word	21165
	.byte	33
	.byte	'Ifx_PSI5S_NFC_Bits',0,14,220,3,3
	.word	12333
	.byte	33
	.byte	'Ifx_PSI5S_OCS_Bits',0,14,230,3,3
	.word	20110
	.byte	33
	.byte	'Ifx_PSI5S_PGC_Bits',0,14,245,3,3
	.word	15081
	.byte	33
	.byte	'Ifx_PSI5S_RBUF_Bits',0,14,252,3,3
	.word	17261
	.byte	33
	.byte	'Ifx_PSI5S_RCRA_Bits',0,14,148,4,3
	.word	12981
	.byte	33
	.byte	'Ifx_PSI5S_RCRB_Bits',0,14,160,4,3
	.word	13375
	.byte	33
	.byte	'Ifx_PSI5S_RDR_Bits',0,14,194,4,3
	.word	14228
	.byte	33
	.byte	'Ifx_PSI5S_RDS_Bits',0,14,222,4,3
	.word	13799
	.byte	33
	.byte	'Ifx_PSI5S_SCR_Bits',0,14,239,4,3
	.word	15441
	.byte	33
	.byte	'Ifx_PSI5S_SDR_Bits',0,14,141,5,3
	.word	15736
	.byte	33
	.byte	'Ifx_PSI5S_TAR_Bits',0,14,148,5,3
	.word	14876
	.byte	33
	.byte	'Ifx_PSI5S_TBUF_Bits',0,14,155,5,3
	.word	17151
	.byte	33
	.byte	'Ifx_PSI5S_TSCNTA_Bits',0,14,167,5,3
	.word	11520
	.byte	33
	.byte	'Ifx_PSI5S_TSCNTB_Bits',0,14,176,5,3
	.word	11699
	.byte	33
	.byte	'Ifx_PSI5S_TSCR_Bits',0,14,183,5,3
	.word	13685
	.byte	33
	.byte	'Ifx_PSI5S_TSM_Bits',0,14,191,5,3
	.word	14748
	.byte	33
	.byte	'Ifx_PSI5S_WDT_Bits',0,14,198,5,3
	.word	13571
	.byte	33
	.byte	'Ifx_PSI5S_WHBCON_Bits',0,14,214,5,3
	.word	17380
	.byte	33
	.byte	'Ifx_PSI5S_ACCEN0',0,14,227,5,3
	.word	20803
	.byte	33
	.byte	'Ifx_PSI5S_ACCEN1',0,14,235,5,3
	.word	20894
	.byte	33
	.byte	'Ifx_PSI5S_BAR',0,14,243,5,3
	.word	15041
	.byte	33
	.byte	'Ifx_PSI5S_BG',0,14,251,5,3
	.word	16858
	.byte	33
	.byte	'Ifx_PSI5S_CDW',0,14,131,6,3
	.word	16392
	.byte	33
	.byte	'Ifx_PSI5S_CLC',0,14,139,6,3
	.word	10989
	.byte	33
	.byte	'Ifx_PSI5S_CON',0,14,147,6,3
	.word	16750
	.byte	33
	.byte	'Ifx_PSI5S_CTV',0,14,155,6,3
	.word	15392
	.byte	33
	.byte	'Ifx_PSI5S_FCNT',0,14,163,6,3
	.word	12835
	.byte	33
	.byte	'Ifx_PSI5S_FDO',0,14,171,6,3
	.word	17111
	.byte	33
	.byte	'Ifx_PSI5S_FDR',0,14,179,6,3
	.word	11271
	.byte	33
	.byte	'Ifx_PSI5S_FDRT',0,14,187,6,3
	.word	11480
	.byte	33
	.byte	'Ifx_PSI5S_FDV',0,14,195,6,3
	.word	16968
	.byte	33
	.byte	'Ifx_PSI5S_GCR',0,14,203,6,3
	.word	12293
	.byte	33
	.byte	'Ifx_PSI5S_ID',0,14,211,6,3
	.word	11110
	.byte	33
	.byte	'Ifx_PSI5S_INP',0,14,219,6,3
	.word	18799
	.byte	33
	.byte	'Ifx_PSI5S_INPG',0,14,227,6,3
	.word	20059
	.byte	33
	.byte	'Ifx_PSI5S_INTCLR',0,14,235,6,3
	.word	18324
	.byte	33
	.byte	'Ifx_PSI5S_INTCLRG',0,14,243,6,3
	.word	19690
	.byte	33
	.byte	'Ifx_PSI5S_INTEN',0,14,251,6,3
	.word	18562
	.byte	33
	.byte	'Ifx_PSI5S_INTENG',0,14,131,7,3
	.word	19875
	.byte	33
	.byte	'Ifx_PSI5S_INTOV',0,14,139,7,3
	.word	19131
	.byte	33
	.byte	'Ifx_PSI5S_INTSET',0,14,147,7,3
	.word	18085
	.byte	33
	.byte	'Ifx_PSI5S_INTSETG',0,14,155,7,3
	.word	19504
	.byte	33
	.byte	'Ifx_PSI5S_INTSTAT',0,14,163,7,3
	.word	17846
	.byte	33
	.byte	'Ifx_PSI5S_INTSTATG',0,14,171,7,3
	.word	19318
	.byte	33
	.byte	'Ifx_PSI5S_IOCR',0,14,179,7,3
	.word	12941
	.byte	33
	.byte	'Ifx_PSI5S_KRST0',0,14,187,7,3
	.word	21019
	.byte	33
	.byte	'Ifx_PSI5S_KRST1',0,14,195,7,3
	.word	21125
	.byte	33
	.byte	'Ifx_PSI5S_KRSTCLR',0,14,203,7,3
	.word	21233
	.byte	33
	.byte	'Ifx_PSI5S_NFC',0,14,211,7,3
	.word	12503
	.byte	33
	.byte	'Ifx_PSI5S_OCS',0,14,219,7,3
	.word	20232
	.byte	33
	.byte	'Ifx_PSI5S_PGC',0,14,227,7,3
	.word	15286
	.byte	33
	.byte	'Ifx_PSI5S_RBUF',0,14,235,7,3
	.word	17331
	.byte	33
	.byte	'Ifx_PSI5S_RCRA',0,14,243,7,3
	.word	13326
	.byte	33
	.byte	'Ifx_PSI5S_RCRB',0,14,251,7,3
	.word	13522
	.byte	33
	.byte	'Ifx_PSI5S_RDR',0,14,131,8,3
	.word	14708
	.byte	33
	.byte	'Ifx_PSI5S_RDS',0,14,139,8,3
	.word	14188
	.byte	33
	.byte	'Ifx_PSI5S_SCR',0,14,147,8,3
	.word	15687
	.byte	33
	.byte	'Ifx_PSI5S_SDR',0,14,155,8,3
	.word	16160
	.byte	33
	.byte	'Ifx_PSI5S_TAR',0,14,163,8,3
	.word	14939
	.byte	33
	.byte	'Ifx_PSI5S_TBUF',0,14,171,8,3
	.word	17221
	.byte	33
	.byte	'Ifx_PSI5S_TSCNTA',0,14,179,8,3
	.word	11659
	.byte	33
	.byte	'Ifx_PSI5S_TSCNTB',0,14,187,8,3
	.word	11797
	.byte	33
	.byte	'Ifx_PSI5S_TSCR',0,14,195,8,3
	.word	13750
	.byte	33
	.byte	'Ifx_PSI5S_TSM',0,14,203,8,3
	.word	14827
	.byte	33
	.byte	'Ifx_PSI5S_WDT',0,14,211,8,3
	.word	13636
	.byte	33
	.byte	'Ifx_PSI5S_WHBCON',0,14,219,8,3
	.word	17615
	.byte	14
	.word	21284
	.byte	33
	.byte	'Ifx_PSI5S',0,14,162,9,3
	.word	32960
	.byte	33
	.byte	'boolean',0,19,104,29
	.word	615
	.byte	33
	.byte	'uint8',0,19,108,29
	.word	615
	.byte	33
	.byte	'uint16',0,19,112,29
	.word	632
	.byte	33
	.byte	'uint32',0,19,116,29
	.word	10555
	.byte	33
	.byte	'uint64',0,19,121,29
	.word	322
	.byte	33
	.byte	'sint16',0,19,129,1,29
	.word	30235
	.byte	7
	.byte	'long int',0,4,5,33
	.byte	'sint32',0,19,134,1,29
	.word	33075
	.byte	7
	.byte	'long long int',0,8,5,33
	.byte	'sint64',0,19,141,1,29
	.word	33103
	.byte	33
	.byte	'float32',0,19,170,1,29
	.word	236
	.byte	33
	.byte	'pvoid',0,15,54,28
	.word	354
	.byte	33
	.byte	'Ifx_TickTime',0,15,76,28
	.word	33103
	.byte	33
	.byte	'Ifx_Priority',0,15,100,16
	.word	632
	.byte	33
	.byte	'Ifx_RxSel',0,15,137,1,3
	.word	22842
	.byte	33
	.byte	'Ifx_P_ACCEN0_Bits',0,6,102,3
	.word	7984
	.byte	33
	.byte	'Ifx_P_ACCEN1_Bits',0,6,108,3
	.word	7897
	.byte	33
	.byte	'Ifx_P_ESR_Bits',0,6,130,1,3
	.word	4465
	.byte	33
	.byte	'Ifx_P_ID_Bits',0,6,138,1,3
	.word	2516
	.byte	33
	.byte	'Ifx_P_IN_Bits',0,6,160,1,3
	.word	3512
	.byte	33
	.byte	'Ifx_P_IOCR0_Bits',0,6,173,1,3
	.word	2645
	.byte	33
	.byte	'Ifx_P_IOCR12_Bits',0,6,186,1,3
	.word	3292
	.byte	33
	.byte	'Ifx_P_IOCR4_Bits',0,6,199,1,3
	.word	2860
	.byte	33
	.byte	'Ifx_P_IOCR8_Bits',0,6,212,1,3
	.word	3075
	.byte	33
	.byte	'Ifx_P_LPCR_Bits',0,6,231,1,3
	.word	7559
	.byte	33
	.byte	'Ifx_P_OMCR_Bits',0,6,253,1,3
	.word	7211
	.byte	33
	.byte	'Ifx_P_OMCR0_Bits',0,6,136,2,3
	.word	6198
	.byte	33
	.byte	'Ifx_P_OMCR12_Bits',0,6,146,2,3
	.word	6722
	.byte	33
	.byte	'Ifx_P_OMCR4_Bits',0,6,157,2,3
	.word	6372
	.byte	33
	.byte	'Ifx_P_OMCR8_Bits',0,6,168,2,3
	.word	6546
	.byte	33
	.byte	'Ifx_P_OMR_Bits',0,6,205,2,3
	.word	1945
	.byte	33
	.byte	'Ifx_P_OMSR_Bits',0,6,227,2,3
	.word	6878
	.byte	33
	.byte	'Ifx_P_OMSR0_Bits',0,6,237,2,3
	.word	5535
	.byte	33
	.byte	'Ifx_P_OMSR12_Bits',0,6,248,2,3
	.word	6023
	.byte	33
	.byte	'Ifx_P_OMSR4_Bits',0,6,131,3,3
	.word	5682
	.byte	33
	.byte	'Ifx_P_OMSR8_Bits',0,6,142,3,3
	.word	5851
	.byte	33
	.byte	'Ifx_P_OUT_Bits',0,6,164,3,3
	.word	1629
	.byte	33
	.byte	'Ifx_P_PCSR_Bits',0,6,187,3,3
	.word	5171
	.byte	33
	.byte	'Ifx_P_PDISC_Bits',0,6,209,3,3
	.word	4805
	.byte	33
	.byte	'Ifx_P_PDR0_Bits',0,6,230,3,3
	.word	3836
	.byte	33
	.byte	'Ifx_P_PDR1_Bits',0,6,251,3,3
	.word	4140
	.byte	33
	.byte	'Ifx_P_ACCEN0',0,6,136,4,3
	.word	8511
	.byte	33
	.byte	'Ifx_P_ACCEN1',0,6,144,4,3
	.word	7944
	.byte	33
	.byte	'Ifx_P_ESR',0,6,152,4,3
	.word	4756
	.byte	33
	.byte	'Ifx_P_ID',0,6,160,4,3
	.word	2596
	.byte	33
	.byte	'Ifx_P_IN',0,6,168,4,3
	.word	3787
	.byte	33
	.byte	'Ifx_P_IOCR0',0,6,176,4,3
	.word	2820
	.byte	33
	.byte	'Ifx_P_IOCR12',0,6,184,4,3
	.word	3472
	.byte	33
	.byte	'Ifx_P_IOCR4',0,6,192,4,3
	.word	3035
	.byte	33
	.byte	'Ifx_P_IOCR8',0,6,200,4,3
	.word	3252
	.byte	33
	.byte	'Ifx_P_LPCR',0,6,208,4,3
	.word	7839
	.byte	33
	.byte	'Ifx_P_OMCR',0,6,216,4,3
	.word	7519
	.byte	33
	.byte	'Ifx_P_OMCR0',0,6,224,4,3
	.word	6332
	.byte	33
	.byte	'Ifx_P_OMCR12',0,6,232,4,3
	.word	6838
	.byte	33
	.byte	'Ifx_P_OMCR4',0,6,240,4,3
	.word	6506
	.byte	33
	.byte	'Ifx_P_OMCR8',0,6,248,4,3
	.word	6682
	.byte	33
	.byte	'Ifx_P_OMR',0,6,128,5,3
	.word	2476
	.byte	33
	.byte	'Ifx_P_OMSR',0,6,136,5,3
	.word	7171
	.byte	33
	.byte	'Ifx_P_OMSR0',0,6,144,5,3
	.word	5642
	.byte	33
	.byte	'Ifx_P_OMSR12',0,6,152,5,3
	.word	6158
	.byte	33
	.byte	'Ifx_P_OMSR4',0,6,160,5,3
	.word	5811
	.byte	33
	.byte	'Ifx_P_OMSR8',0,6,168,5,3
	.word	5983
	.byte	33
	.byte	'Ifx_P_OUT',0,6,176,5,3
	.word	1905
	.byte	33
	.byte	'Ifx_P_PCSR',0,6,184,5,3
	.word	5495
	.byte	33
	.byte	'Ifx_P_PDISC',0,6,192,5,3
	.word	5131
	.byte	33
	.byte	'Ifx_P_PDR0',0,6,200,5,3
	.word	4100
	.byte	33
	.byte	'Ifx_P_PDR1',0,6,208,5,3
	.word	4416
	.byte	14
	.word	8551
	.byte	33
	.byte	'Ifx_P',0,6,128,6,3
	.word	34422
	.byte	17,20,162,11,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,33
	.byte	'IfxScu_WDTCON1_IR',0,20,167,11,3
	.word	34442
	.byte	10
	.byte	'_Ifx_SCU_ACCEN00_Bits',0,4,68,16,4,11
	.byte	'EN0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	615
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_ACCEN00_Bits',0,4,102,3
	.word	34564
	.byte	10
	.byte	'_Ifx_SCU_ACCEN01_Bits',0,4,105,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN01_Bits',0,4,108,3
	.word	35123
	.byte	10
	.byte	'_Ifx_SCU_ACCEN10_Bits',0,4,111,16,4,11
	.byte	'EN0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	615
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_ACCEN10_Bits',0,4,145,1,3
	.word	35202
	.byte	10
	.byte	'_Ifx_SCU_ACCEN11_Bits',0,4,148,1,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN11_Bits',0,4,151,1,3
	.word	35762
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,4,154,1,16,4,11
	.byte	'STM0DIS',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'STM3DIS',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'STM4DIS',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'STM5DIS',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	615
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	440
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,4,164,1,3
	.word	35843
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,4,167,1,16,4,11
	.byte	'STMDIV',0,1
	.word	615
	.byte	4,4,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	615
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	615
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	615
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	615
	.byte	4,4,2,35,2,11
	.byte	'BBBDIV',0,1
	.word	615
	.byte	4,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	615
	.byte	2,6,2,35,3,11
	.byte	'FSI2DIV',0,1
	.word	615
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	615
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON0_Bits',0,4,181,1,3
	.word	36060
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,4,184,1,16,4,11
	.byte	'MCANDIV',0,1
	.word	615
	.byte	4,4,2,35,0,11
	.byte	'CLKSELMCAN',0,1
	.word	615
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'PLL1DIVDIS',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'I2CDIV',0,1
	.word	615
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	615
	.byte	4,0,2,35,1,11
	.byte	'MSCDIV',0,1
	.word	615
	.byte	4,4,2,35,2,11
	.byte	'CLKSELMSC',0,1
	.word	615
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	615
	.byte	2,0,2,35,2,11
	.byte	'QSPIDIV',0,1
	.word	615
	.byte	4,4,2,35,3,11
	.byte	'CLKSELQSPI',0,1
	.word	615
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON1_Bits',0,4,199,1,3
	.word	36333
	.byte	10
	.byte	'_Ifx_SCU_CCUCON10_Bits',0,4,202,1,16,4,11
	.byte	'CPU4DIV',0,1
	.word	615
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	440
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON10_Bits',0,4,206,1,3
	.word	36659
	.byte	10
	.byte	'_Ifx_SCU_CCUCON11_Bits',0,4,209,1,16,4,11
	.byte	'CPU5DIV',0,1
	.word	615
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	440
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON11_Bits',0,4,213,1,3
	.word	36761
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,4,216,1,16,4,11
	.byte	'ASCLINFDIV',0,1
	.word	615
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	615
	.byte	4,0,2,35,0,11
	.byte	'ASCLINSDIV',0,1
	.word	615
	.byte	4,4,2,35,1,11
	.byte	'CLKSELASCLINS',0,1
	.word	615
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	440
	.byte	10,8,2,35,0,11
	.byte	'EBUPERON',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'ERAYPERON',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'HSPDMPERON',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	615
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON2_Bits',0,4,228,1,3
	.word	36863
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,4,231,1,16,4,11
	.byte	'PLL0MONEN',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'PLL1MONEN',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'PLL2MONEN',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'SPBMONEN',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'BACKMONEN',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	615
	.byte	3,0,2,35,0,11
	.byte	'PLL0MONTST',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'PLL1MONTST',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'PLL2MONTST',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'SPBMONTST',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'BACKMONTST',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	440
	.byte	11,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	615
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON3_Bits',0,4,248,1,3
	.word	37137
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,4,251,1,16,4,11
	.byte	'LOTHR',0,2
	.word	632
	.byte	12,4,2,35,0,11
	.byte	'UPTHR',0,4
	.word	440
	.byte	12,8,2,35,0,11
	.byte	'MONEN',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'MONTST',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	615
	.byte	4,2,2,35,3,11
	.byte	'UP',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON4_Bits',0,4,132,2,3
	.word	37506
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,4,135,2,16,4,11
	.byte	'GETHDIV',0,1
	.word	615
	.byte	4,4,2,35,0,11
	.byte	'MCANHDIV',0,1
	.word	615
	.byte	4,0,2,35,0,11
	.byte	'ADASDIV',0,1
	.word	615
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	440
	.byte	18,2,2,35,0,11
	.byte	'UP',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON5_Bits',0,4,143,2,3
	.word	37686
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,4,146,2,16,4,11
	.byte	'CPU0DIV',0,1
	.word	615
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	440
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON6_Bits',0,4,150,2,3
	.word	37855
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,4,153,2,16,4,11
	.byte	'CPU1DIV',0,1
	.word	615
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	440
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON7_Bits',0,4,157,2,3
	.word	37955
	.byte	10
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,4,160,2,16,4,11
	.byte	'CPU2DIV',0,1
	.word	615
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	440
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON8_Bits',0,4,164,2,3
	.word	38055
	.byte	10
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,4,167,2,16,4,11
	.byte	'CPU3DIV',0,1
	.word	615
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	440
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON9_Bits',0,4,171,2,3
	.word	38155
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,4,174,2,16,4,11
	.byte	'CHREV',0,1
	.word	615
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	615
	.byte	2,0,2,35,0,11
	.byte	'CHPK',0,1
	.word	615
	.byte	4,4,2,35,1,11
	.byte	'CHID',0,1
	.word	615
	.byte	4,0,2,35,1,11
	.byte	'EEA',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	615
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	615
	.byte	4,4,2,35,3,11
	.byte	'VART',0,1
	.word	615
	.byte	3,1,2,35,3,11
	.byte	'SEC',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CHIPID_Bits',0,4,185,2,3
	.word	38255
	.byte	10
	.byte	'_Ifx_SCU_DTSCLIM_Bits',0,4,188,2,16,4,11
	.byte	'LOWER',0,2
	.word	632
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'BGPOK',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'EN',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'LLU',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	632
	.byte	12,4,2,35,2,11
	.byte	'INTEN',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'INT',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_DTSCLIM_Bits',0,4,200,2,3
	.word	38458
	.byte	10
	.byte	'_Ifx_SCU_DTSCSTAT_Bits',0,4,203,2,16,4,11
	.byte	'RESULT',0,2
	.word	632
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	440
	.byte	20,0,2,35,0,0,33
	.byte	'Ifx_SCU_DTSCSTAT_Bits',0,4,207,2,3
	.word	38690
	.byte	10
	.byte	'_Ifx_SCU_EICON0_Bits',0,4,210,2,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	463
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	463
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_SCU_EICON0_Bits',0,4,216,2,3
	.word	38792
	.byte	10
	.byte	'_Ifx_SCU_EICON1_Bits',0,4,219,2,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	440
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_EICON1_Bits',0,4,228,2,3
	.word	38920
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,4,231,2,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	615
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	615
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	440
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	615
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	615
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EICR_Bits',0,4,250,2,3
	.word	39109
	.byte	10
	.byte	'_Ifx_SCU_EIFILT_Bits',0,4,253,2,16,4,11
	.byte	'FILRQ0A',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'FILRQ5A',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'FILRQ2A',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'FILRQ3A',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'FILRQ0C',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'FILRQ1C',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'FILRQ3C',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'FILRQ2C',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'FILRQ4A',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'FILRQ6A',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'FILRQ1A',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'FILRQ7A',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'FILRQ6D',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'FILRQ4D',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'FILRQ2B',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'FILRQ3B',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'FILRQ7C',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	615
	.byte	7,0,2,35,2,11
	.byte	'FILTDIV',0,1
	.word	615
	.byte	4,4,2,35,3,11
	.byte	'DEPTH',0,1
	.word	615
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_EIFILT_Bits',0,4,147,3,3
	.word	39473
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,4,150,3,16,4,11
	.byte	'INTF0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	440
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_EIFR_Bits',0,4,161,3,3
	.word	39912
	.byte	10
	.byte	'_Ifx_SCU_EISR_Bits',0,4,164,3,16,4,11
	.byte	'AE',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	632
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	632
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_EISR_Bits',0,4,174,3,3
	.word	40123
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,4,177,3,16,4,11
	.byte	'POL',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	632
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	632
	.byte	14,0,2,35,2,0,33
	.byte	'Ifx_SCU_EMSR_Bits',0,4,187,3,3
	.word	40299
	.byte	10
	.byte	'_Ifx_SCU_EMSSW_Bits',0,4,190,3,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	24,8,2,35,0,11
	.byte	'EMSFM',0,1
	.word	615
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	615
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	615
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_EMSSW_Bits',0,4,196,3,3
	.word	40493
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,4,199,3,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	632
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	440
	.byte	23,0,2,35,0,0,33
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,4,204,3,3
	.word	40628
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,4,207,3,16,4,11
	.byte	'ARI',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	440
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_ESROCFG_Bits',0,4,212,3,3
	.word	40764
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,4,215,3,16,4,11
	.byte	'EN0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	615
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	632
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	615
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	615
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	615
	.byte	8,0,2,35,3,0,33
	.byte	'Ifx_SCU_EXTCON_Bits',0,4,226,3,3
	.word	40875
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,4,229,3,16,4,11
	.byte	'STEP',0,2
	.word	632
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	615
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	615
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	632
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	615
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_FDR_Bits',0,4,237,3,3
	.word	41093
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,4,240,3,16,4,11
	.byte	'FS0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	615
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	615
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	615
	.byte	8,0,2,35,3,0,33
	.byte	'Ifx_SCU_FMR_Bits',0,4,132,4,3
	.word	41256
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,4,135,4,16,4,11
	.byte	'MODREV',0,1
	.word	615
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	615
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	632
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_ID_Bits',0,4,140,4,3
	.word	41592
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,4,143,4,16,4,11
	.byte	'IPEN00',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	615
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	615
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	615
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	615
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	615
	.byte	2,0,2,35,3,0,33
	.byte	'Ifx_SCU_IGCR_Bits',0,4,167,4,3
	.word	41699
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,4,170,4,16,4,11
	.byte	'P0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	440
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_IN_Bits',0,4,175,4,3
	.word	42151
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,4,178,4,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	615
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	615
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	615
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_IOCR_Bits',0,4,185,4,3
	.word	42250
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,4,188,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'LBISTRES',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,4
	.word	440
	.byte	18,12,2,35,0,11
	.byte	'reserved_20',0,2
	.word	632
	.byte	8,4,2,35,2,11
	.byte	'LBISTDONE',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'LBISTERRINJ',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'LBISTREQRED',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,4,198,4,3
	.word	42400
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,4,201,4,16,4,11
	.byte	'SEED',0,4
	.word	440
	.byte	19,13,2,35,0,11
	.byte	'reserved_19',0,1
	.word	615
	.byte	5,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	615
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	615
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,4,208,4,3
	.word	42638
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,4,211,4,16,4,11
	.byte	'LENGTH',0,2
	.word	632
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	440
	.byte	20,0,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,4,215,4,3
	.word	42799
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL3_Bits',0,4,218,4,16,4,11
	.byte	'SIGNATURE',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL3_Bits',0,4,221,4,3
	.word	42905
	.byte	10
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,4,224,4,16,4,11
	.byte	'LS2',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	632
	.byte	14,1,2,35,0,11
	.byte	'LSEN2',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'LS0',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	632
	.byte	14,1,2,35,2,11
	.byte	'LSEN0',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_LCLCON0_Bits',0,4,232,4,3
	.word	42991
	.byte	10
	.byte	'_Ifx_SCU_LCLCON1_Bits',0,4,235,4,16,4,11
	.byte	'LS3',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	632
	.byte	14,1,2,35,0,11
	.byte	'LSEN3',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'LS1',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	632
	.byte	14,1,2,35,2,11
	.byte	'LSEN1',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_LCLCON1_Bits',0,4,243,4,3
	.word	43159
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,4,246,4,16,4,11
	.byte	'LCLT0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'LCLT2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'LCLT3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'LCLT4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'LCLT5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	632
	.byte	10,0,2,35,0,11
	.byte	'PLCLT0',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'PLCLT1',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'PLCLT2',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'PLCLT3',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'PLCLT4',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'PLCLT5',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	632
	.byte	10,0,2,35,2,0,33
	.byte	'Ifx_SCU_LCLTEST_Bits',0,4,134,5,3
	.word	43327
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,4,137,5,16,4,11
	.byte	'DEPT',0,1
	.word	615
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	632
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_MANID_Bits',0,4,142,5,3
	.word	43641
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,4,145,5,16,4,11
	.byte	'PS0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	632
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	632
	.byte	14,0,2,35,2,0,33
	.byte	'Ifx_SCU_OMR_Bits',0,4,153,5,3
	.word	43752
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,4,156,5,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	615
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	615
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'HYSEN',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'HYSCTL',0,1
	.word	615
	.byte	2,4,2,35,1,11
	.byte	'AMPCTL',0,1
	.word	615
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	615
	.byte	2,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	615
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	615
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	615
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_OSCCON_Bits',0,4,177,5,3
	.word	43910
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,4,180,5,16,4,11
	.byte	'P0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	440
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_OUT_Bits',0,4,185,5,3
	.word	44321
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,4,188,5,16,4,11
	.byte	'CSEL0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'CSEL3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'CSEL4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'CSEL5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	632
	.byte	10,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	615
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	615
	.byte	6,0,2,35,3,0,33
	.byte	'Ifx_SCU_OVCCON_Bits',0,4,204,5,3
	.word	44422
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,4,207,5,16,4,11
	.byte	'OVEN0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'OVEN3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'OVEN4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'OVEN5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	440
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,4,216,5,3
	.word	44740
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,4,219,5,16,4,11
	.byte	'PDIS0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	440
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_PDISC_Bits',0,4,224,5,3
	.word	44927
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,4,227,5,16,4,11
	.byte	'PD0',0,1
	.word	615
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	615
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	615
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	615
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	440
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_PDR_Bits',0,4,234,5,3
	.word	45038
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,4,237,5,16,4,11
	.byte	'PDR0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	440
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_PDRR_Bits',0,4,248,5,3
	.word	45171
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON0_Bits',0,4,251,5,16,4,11
	.byte	'DIVBY',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	632
	.byte	8,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	615
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	615
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	615
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	615
	.byte	5,0,2,35,3,0,33
	.byte	'Ifx_SCU_PERPLLCON0_Bits',0,4,134,6,3
	.word	45374
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON1_Bits',0,4,137,6,16,4,11
	.byte	'K2DIV',0,1
	.word	615
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	615
	.byte	5,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	615
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	440
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_PERPLLCON1_Bits',0,4,143,6,3
	.word	45614
	.byte	10
	.byte	'_Ifx_SCU_PERPLLSTAT_Bits',0,4,146,6,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'K3RDY',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	440
	.byte	25,0,2,35,0,0,33
	.byte	'Ifx_SCU_PERPLLSTAT_Bits',0,4,156,6,3
	.word	45758
	.byte	10
	.byte	'_Ifx_SCU_PMCSR0_Bits',0,4,159,6,16,4,11
	.byte	'REQSLP',0,1
	.word	615
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	615
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	615
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	440
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR0_Bits',0,4,165,6,3
	.word	45980
	.byte	10
	.byte	'_Ifx_SCU_PMCSR1_Bits',0,4,168,6,16,4,11
	.byte	'REQSLP',0,1
	.word	615
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	615
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	615
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	440
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR1_Bits',0,4,174,6,3
	.word	46116
	.byte	10
	.byte	'_Ifx_SCU_PMCSR2_Bits',0,4,177,6,16,4,11
	.byte	'REQSLP',0,1
	.word	615
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	615
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	615
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	440
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR2_Bits',0,4,183,6,3
	.word	46252
	.byte	10
	.byte	'_Ifx_SCU_PMCSR3_Bits',0,4,186,6,16,4,11
	.byte	'REQSLP',0,1
	.word	615
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	615
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	615
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	440
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR3_Bits',0,4,192,6,3
	.word	46388
	.byte	10
	.byte	'_Ifx_SCU_PMCSR4_Bits',0,4,195,6,16,4,11
	.byte	'REQSLP',0,1
	.word	615
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	615
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	615
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	440
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR4_Bits',0,4,201,6,3
	.word	46524
	.byte	10
	.byte	'_Ifx_SCU_PMCSR5_Bits',0,4,204,6,16,4,11
	.byte	'REQSLP',0,1
	.word	615
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	615
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	615
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	440
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR5_Bits',0,4,210,6,3
	.word	46660
	.byte	10
	.byte	'_Ifx_SCU_PMSTAT0_Bits',0,4,213,6,16,4,11
	.byte	'CPU0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'CPU1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'CPU2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'CPU3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'CPU4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'CPU5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	632
	.byte	10,0,2,35,0,11
	.byte	'CPU0LS',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'CPU1LS',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'CPU2LS',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'CPU3LS',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	632
	.byte	12,0,2,35,2,0,33
	.byte	'Ifx_SCU_PMSTAT0_Bits',0,4,227,6,3
	.word	46796
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,4,230,6,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	8,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	615
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	440
	.byte	11,8,2,35,0,11
	.byte	'CPUSEL',0,1
	.word	615
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	615
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,4,241,6,3
	.word	47068
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR0_Bits',0,4,244,6,16,4,11
	.byte	'LJTEN',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'LJTOVEN',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'LJTOVIEN',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'LJTSTRT',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'LJTSTP',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'LJTCLR',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	632
	.byte	6,4,2,35,0,11
	.byte	'SDSTEP',0,1
	.word	615
	.byte	4,0,2,35,1,11
	.byte	'VDTEN',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'VDTOVEN',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'VDTOVIEN',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'VDTSTRT',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'VDTSTP',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'VDTCLR',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	632
	.byte	7,3,2,35,2,11
	.byte	'LPSLPEN',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	615
	.byte	2,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMTRCSR0_Bits',0,4,135,7,3
	.word	47313
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR1_Bits',0,4,138,7,16,4,11
	.byte	'LJTCV',0,2
	.word	632
	.byte	16,0,2,35,0,11
	.byte	'VDTCV',0,2
	.word	632
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	615
	.byte	6,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMTRCSR1_Bits',0,4,143,7,3
	.word	47701
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR2_Bits',0,4,146,7,16,4,11
	.byte	'LDJMPREQ',0,1
	.word	615
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	615
	.byte	2,4,2,35,0,11
	.byte	'LJTRUN',0,1
	.word	615
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	615
	.byte	2,0,2,35,0,11
	.byte	'LJTOV',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	615
	.byte	3,4,2,35,1,11
	.byte	'LJTOVCLR',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	615
	.byte	3,0,2,35,1,11
	.byte	'LJTCNT',0,2
	.word	632
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_PMTRCSR2_Bits',0,4,157,7,3
	.word	47819
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR3_Bits',0,4,160,7,16,4,11
	.byte	'VDROOPREQ',0,1
	.word	615
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	615
	.byte	2,4,2,35,0,11
	.byte	'VDTRUN',0,1
	.word	615
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	615
	.byte	2,0,2,35,0,11
	.byte	'VDTOV',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	615
	.byte	3,4,2,35,1,11
	.byte	'VDTOVCLR',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	615
	.byte	3,0,2,35,1,11
	.byte	'VDTCNT',0,2
	.word	632
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	615
	.byte	6,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMTRCSR3_Bits',0,4,172,7,3
	.word	48062
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,4,175,7,16,4,11
	.byte	'ESR0',0,1
	.word	615
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	615
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	615
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	615
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	615
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	615
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	615
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	615
	.byte	2,0,2,35,1,11
	.byte	'STM3',0,1
	.word	615
	.byte	2,6,2,35,2,11
	.byte	'STM4',0,1
	.word	615
	.byte	2,4,2,35,2,11
	.byte	'STM5',0,1
	.word	615
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	632
	.byte	10,0,2,35,2,0,33
	.byte	'Ifx_SCU_RSTCON_Bits',0,4,189,7,3
	.word	48329
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,4,192,7,16,4,11
	.byte	'FRTO',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'CSSX',0,2
	.word	632
	.byte	6,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	632
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_RSTCON2_Bits',0,4,206,7,3
	.word	48588
	.byte	10
	.byte	'_Ifx_SCU_RSTCON3_Bits',0,4,209,7,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_RSTCON3_Bits',0,4,212,7,3
	.word	48893
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,4,215,7,16,4,11
	.byte	'ESR0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'STM3',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'STM4',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'STM5',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	615
	.byte	5,0,2,35,1,11
	.byte	'PORST',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	615
	.byte	1,1,2,35,2,11
	.byte	'EVRC',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'HSMS',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'HSMA',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'LBPORST',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'LBTERM',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,4,245,7,3
	.word	48974
	.byte	10
	.byte	'_Ifx_SCU_SEICON0_Bits',0,4,248,7,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	463
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	463
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_SCU_SEICON0_Bits',0,4,254,7,3
	.word	49523
	.byte	10
	.byte	'_Ifx_SCU_SEICON1_Bits',0,4,129,8,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	440
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_SEICON1_Bits',0,4,138,8,3
	.word	49653
	.byte	10
	.byte	'_Ifx_SCU_SEISR_Bits',0,4,141,8,16,4,11
	.byte	'AE',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	632
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	632
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_SEISR_Bits',0,4,151,8,3
	.word	49844
	.byte	10
	.byte	'_Ifx_SCU_STCON_Bits',0,4,154,8,16,4,11
	.byte	'reserved_0',0,2
	.word	632
	.byte	13,3,2,35,0,11
	.byte	'SFCBAE',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'CFCBAE',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'STP',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_STCON_Bits',0,4,161,8,3
	.word	50022
	.byte	10
	.byte	'_Ifx_SCU_STMEM1_Bits',0,4,164,8,16,4,11
	.byte	'MEM',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM1_Bits',0,4,167,8,3
	.word	50173
	.byte	10
	.byte	'_Ifx_SCU_STMEM2_Bits',0,4,170,8,16,4,11
	.byte	'MEM',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM2_Bits',0,4,173,8,3
	.word	50245
	.byte	10
	.byte	'_Ifx_SCU_STMEM3_Bits',0,4,176,8,16,4,11
	.byte	'MEM',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM3_Bits',0,4,179,8,3
	.word	50317
	.byte	10
	.byte	'_Ifx_SCU_STMEM4_Bits',0,4,182,8,16,4,11
	.byte	'MEM',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM4_Bits',0,4,185,8,3
	.word	50389
	.byte	10
	.byte	'_Ifx_SCU_STMEM5_Bits',0,4,188,8,16,4,11
	.byte	'MEM',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM5_Bits',0,4,191,8,3
	.word	50461
	.byte	10
	.byte	'_Ifx_SCU_STMEM6_Bits',0,4,194,8,16,4,11
	.byte	'MEM',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM6_Bits',0,4,197,8,3
	.word	50533
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,4,200,8,16,4,11
	.byte	'HWCFG',0,1
	.word	615
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	615
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	615
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	615
	.byte	3,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	615
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_STSTAT_Bits',0,4,216,8,3
	.word	50605
	.byte	10
	.byte	'_Ifx_SCU_SWAPCTRL_Bits',0,4,219,8,16,4,11
	.byte	'ADDRCFG',0,1
	.word	615
	.byte	2,6,2,35,0,11
	.byte	'SPARE',0,2
	.word	632
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_SWAPCTRL_Bits',0,4,224,8,3
	.word	50934
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,4,227,8,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	615
	.byte	6,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	615
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,4,234,8,3
	.word	51054
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,4,237,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	615
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'DDC',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	615
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_SYSCON_Bits',0,4,249,8,3
	.word	51224
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON0_Bits',0,4,252,8,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	2,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	632
	.byte	6,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	615
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	615
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	615
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	615
	.byte	3,2,2,35,3,11
	.byte	'INSEL',0,1
	.word	615
	.byte	2,0,2,35,3,0,33
	.byte	'Ifx_SCU_SYSPLLCON0_Bits',0,4,137,9,3
	.word	51487
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON1_Bits',0,4,140,9,16,4,11
	.byte	'K2DIV',0,1
	.word	615
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	440
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_SCU_SYSPLLCON1_Bits',0,4,144,9,3
	.word	51766
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON2_Bits',0,4,147,9,16,4,11
	.byte	'MODCFG',0,2
	.word	632
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_SYSPLLCON2_Bits',0,4,151,9,3
	.word	51870
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLSTAT_Bits',0,4,154,9,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	615
	.byte	2,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	440
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_SYSPLLSTAT_Bits',0,4,164,9,3
	.word	51976
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,4,167,9,16,4,11
	.byte	'ESR0T',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	440
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,4,174,9,3
	.word	52199
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS0_Bits',0,4,177,9,16,4,11
	.byte	'CPU0ESR0T',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'CPU0ESR1T',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'CPU0TRAP2T',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'CPU0SMUT',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	615
	.byte	4,0,2,35,0,11
	.byte	'CPU1ESR0T',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'CPU1ESR1T',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'CPU1TRAP2T',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'CPU1SMUT',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	615
	.byte	4,0,2,35,1,11
	.byte	'CPU2ESR0T',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'CPU2ESR1T',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'CPU2TRAP2T',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'CPU2SMUT',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	615
	.byte	4,0,2,35,2,11
	.byte	'CPU3ESR0T',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'CPU3ESR1T',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'CPU3TRAP2T',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'CPU3SMUT',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	615
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_TRAPDIS0_Bits',0,4,199,9,3
	.word	52347
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS1_Bits',0,4,202,9,16,4,11
	.byte	'CPU4ESR0T',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'CPU4ESR1T',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'CPU4TRAP2T',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'CPU4SMUT',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	615
	.byte	4,0,2,35,0,11
	.byte	'CPU5ESR0T',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'CPU5ESR1T',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'CPU5TRAP2T',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'CPU5SMUT',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	615
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_TRAPDIS1_Bits',0,4,215,9,3
	.word	52835
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,4,218,9,16,4,11
	.byte	'ESR0T',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	440
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSET_Bits',0,4,225,9,3
	.word	53132
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,4,228,9,16,4,11
	.byte	'ESR0T',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	440
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,4,235,9,3
	.word	53280
	.byte	33
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,4,244,9,3
	.word	479
	.byte	33
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,4,132,10,3
	.word	654
	.byte	33
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,4,148,10,3
	.word	920
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,4,151,10,16,4,11
	.byte	'ENDINIT',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	463
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	463
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,4,157,10,3
	.word	53530
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,4,160,10,16,4,11
	.byte	'CLRIRF',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	615
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,4,173,10,3
	.word	53656
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,4,176,10,16,4,11
	.byte	'AE',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	615
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	632
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,4,189,10,3
	.word	53908
	.byte	12,4,197,10,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34564
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN00',0,4,202,10,3
	.word	54127
	.byte	12,4,205,10,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35123
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN01',0,4,210,10,3
	.word	54192
	.byte	12,4,213,10,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35202
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN10',0,4,218,10,3
	.word	54257
	.byte	12,4,221,10,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35762
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN11',0,4,226,10,3
	.word	54322
	.byte	12,4,229,10,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35843
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ARSTDIS',0,4,234,10,3
	.word	54387
	.byte	12,4,237,10,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36060
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON0',0,4,242,10,3
	.word	54452
	.byte	12,4,245,10,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36333
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON1',0,4,250,10,3
	.word	54517
	.byte	12,4,253,10,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36659
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON10',0,4,130,11,3
	.word	54582
	.byte	12,4,133,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36761
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON11',0,4,138,11,3
	.word	54648
	.byte	12,4,141,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36863
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON2',0,4,146,11,3
	.word	54714
	.byte	12,4,149,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37137
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON3',0,4,154,11,3
	.word	54779
	.byte	12,4,157,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37506
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON4',0,4,162,11,3
	.word	54844
	.byte	12,4,165,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37686
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON5',0,4,170,11,3
	.word	54909
	.byte	12,4,173,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37855
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON6',0,4,178,11,3
	.word	54974
	.byte	12,4,181,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37955
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON7',0,4,186,11,3
	.word	55039
	.byte	12,4,189,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38055
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON8',0,4,194,11,3
	.word	55104
	.byte	12,4,197,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38155
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON9',0,4,202,11,3
	.word	55169
	.byte	12,4,205,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38255
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CHIPID',0,4,210,11,3
	.word	55234
	.byte	12,4,213,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38458
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_DTSCLIM',0,4,218,11,3
	.word	55298
	.byte	12,4,221,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38690
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_DTSCSTAT',0,4,226,11,3
	.word	55363
	.byte	12,4,229,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38792
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EICON0',0,4,234,11,3
	.word	55429
	.byte	12,4,237,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38920
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EICON1',0,4,242,11,3
	.word	55493
	.byte	12,4,245,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39109
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EICR',0,4,250,11,3
	.word	55557
	.byte	12,4,253,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39473
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EIFILT',0,4,130,12,3
	.word	55619
	.byte	12,4,133,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39912
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EIFR',0,4,138,12,3
	.word	55683
	.byte	12,4,141,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40123
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EISR',0,4,146,12,3
	.word	55745
	.byte	12,4,149,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40299
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EMSR',0,4,154,12,3
	.word	55807
	.byte	12,4,157,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40493
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EMSSW',0,4,162,12,3
	.word	55869
	.byte	12,4,165,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40628
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX',0,4,170,12,3
	.word	55932
	.byte	12,4,173,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40764
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ESROCFG',0,4,178,12,3
	.word	56005
	.byte	12,4,181,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40875
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EXTCON',0,4,186,12,3
	.word	56070
	.byte	12,4,189,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41093
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_FDR',0,4,194,12,3
	.word	56134
	.byte	12,4,197,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41256
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_FMR',0,4,202,12,3
	.word	56195
	.byte	12,4,205,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41592
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ID',0,4,210,12,3
	.word	56256
	.byte	12,4,213,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41699
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_IGCR',0,4,218,12,3
	.word	56316
	.byte	12,4,221,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42151
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_IN',0,4,226,12,3
	.word	56378
	.byte	12,4,229,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42250
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_IOCR',0,4,234,12,3
	.word	56438
	.byte	12,4,237,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42400
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL0',0,4,242,12,3
	.word	56500
	.byte	12,4,245,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42638
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL1',0,4,250,12,3
	.word	56568
	.byte	12,4,253,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42799
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL2',0,4,130,13,3
	.word	56636
	.byte	12,4,133,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42905
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL3',0,4,138,13,3
	.word	56704
	.byte	12,4,141,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42991
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LCLCON0',0,4,146,13,3
	.word	56772
	.byte	12,4,149,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43159
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LCLCON1',0,4,154,13,3
	.word	56837
	.byte	12,4,157,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43327
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LCLTEST',0,4,162,13,3
	.word	56902
	.byte	12,4,165,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43641
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_MANID',0,4,170,13,3
	.word	56967
	.byte	12,4,173,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43752
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OMR',0,4,178,13,3
	.word	57030
	.byte	12,4,181,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43910
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OSCCON',0,4,186,13,3
	.word	57091
	.byte	12,4,189,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44321
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OUT',0,4,194,13,3
	.word	57155
	.byte	12,4,197,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44422
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OVCCON',0,4,202,13,3
	.word	57216
	.byte	12,4,205,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44740
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OVCENABLE',0,4,210,13,3
	.word	57280
	.byte	12,4,213,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44927
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PDISC',0,4,218,13,3
	.word	57347
	.byte	12,4,221,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45038
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PDR',0,4,226,13,3
	.word	57410
	.byte	12,4,229,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45171
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PDRR',0,4,234,13,3
	.word	57471
	.byte	12,4,237,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45374
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PERPLLCON0',0,4,242,13,3
	.word	57533
	.byte	12,4,245,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45614
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PERPLLCON1',0,4,250,13,3
	.word	57601
	.byte	12,4,253,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45758
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PERPLLSTAT',0,4,130,14,3
	.word	57669
	.byte	12,4,133,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45980
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR0',0,4,138,14,3
	.word	57737
	.byte	12,4,141,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46116
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR1',0,4,146,14,3
	.word	57801
	.byte	12,4,149,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46252
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR2',0,4,154,14,3
	.word	57865
	.byte	12,4,157,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46388
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR3',0,4,162,14,3
	.word	57929
	.byte	12,4,165,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46524
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR4',0,4,170,14,3
	.word	57993
	.byte	12,4,173,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46660
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR5',0,4,178,14,3
	.word	58057
	.byte	12,4,181,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46796
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMSTAT0',0,4,186,14,3
	.word	58121
	.byte	12,4,189,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47068
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMSWCR1',0,4,194,14,3
	.word	58186
	.byte	12,4,197,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47313
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMTRCSR0',0,4,202,14,3
	.word	58251
	.byte	12,4,205,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47701
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMTRCSR1',0,4,210,14,3
	.word	58317
	.byte	12,4,213,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47819
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMTRCSR2',0,4,218,14,3
	.word	58383
	.byte	12,4,221,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48062
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMTRCSR3',0,4,226,14,3
	.word	58449
	.byte	12,4,229,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48329
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_RSTCON',0,4,234,14,3
	.word	58515
	.byte	12,4,237,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48588
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_RSTCON2',0,4,242,14,3
	.word	58579
	.byte	12,4,245,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48893
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_RSTCON3',0,4,250,14,3
	.word	58644
	.byte	12,4,253,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48974
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_RSTSTAT',0,4,130,15,3
	.word	58709
	.byte	12,4,133,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49523
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SEICON0',0,4,138,15,3
	.word	58774
	.byte	12,4,141,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49653
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SEICON1',0,4,146,15,3
	.word	58839
	.byte	12,4,149,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49844
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SEISR',0,4,154,15,3
	.word	58904
	.byte	12,4,157,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50022
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_STCON',0,4,162,15,3
	.word	58967
	.byte	12,4,165,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50173
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM1',0,4,170,15,3
	.word	59030
	.byte	12,4,173,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50245
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM2',0,4,178,15,3
	.word	59094
	.byte	12,4,181,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50317
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM3',0,4,186,15,3
	.word	59158
	.byte	12,4,189,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50389
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM4',0,4,194,15,3
	.word	59222
	.byte	12,4,197,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50461
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM5',0,4,202,15,3
	.word	59286
	.byte	12,4,205,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50533
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM6',0,4,210,15,3
	.word	59350
	.byte	12,4,213,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50605
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_STSTAT',0,4,218,15,3
	.word	59414
	.byte	12,4,221,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50934
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SWAPCTRL',0,4,226,15,3
	.word	59478
	.byte	12,4,229,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51054
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SWRSTCON',0,4,234,15,3
	.word	59544
	.byte	12,4,237,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51224
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SYSCON',0,4,242,15,3
	.word	59610
	.byte	12,4,245,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51487
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SYSPLLCON0',0,4,250,15,3
	.word	59674
	.byte	12,4,253,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51766
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SYSPLLCON1',0,4,130,16,3
	.word	59742
	.byte	12,4,133,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51870
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SYSPLLCON2',0,4,138,16,3
	.word	59810
	.byte	12,4,141,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51976
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SYSPLLSTAT',0,4,146,16,3
	.word	59878
	.byte	12,4,149,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52199
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPCLR',0,4,154,16,3
	.word	59946
	.byte	12,4,157,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52347
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPDIS0',0,4,162,16,3
	.word	60011
	.byte	12,4,165,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52835
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPDIS1',0,4,170,16,3
	.word	60077
	.byte	12,4,173,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53132
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSET',0,4,178,16,3
	.word	60143
	.byte	12,4,181,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53280
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSTAT',0,4,186,16,3
	.word	60208
	.byte	33
	.byte	'Ifx_SCU_WDTCPU_CON0',0,4,194,16,3
	.word	575
	.byte	33
	.byte	'Ifx_SCU_WDTCPU_CON1',0,4,202,16,3
	.word	880
	.byte	33
	.byte	'Ifx_SCU_WDTCPU_SR',0,4,210,16,3
	.word	1111
	.byte	12,4,213,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53530
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_CON0',0,4,218,16,3
	.word	60359
	.byte	12,4,221,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53656
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_CON1',0,4,226,16,3
	.word	60426
	.byte	12,4,229,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53908
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_SR',0,4,234,16,3
	.word	60493
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX',0,4,246,16,25,4,13
	.byte	'ESRCFGX',0
	.word	55932
	.byte	4,2,35,0,0,14
	.word	60558
	.byte	33
	.byte	'Ifx_SCU_ESRCFGX',0,4,249,16,3
	.word	60599
	.byte	14
	.word	1151
	.byte	33
	.byte	'Ifx_SCU_WDTCPU',0,4,141,17,3
	.word	60629
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,4,156,17,25,12,13
	.byte	'CON0',0
	.word	60359
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	60426
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	60493
	.byte	4,2,35,8,0,14
	.word	60658
	.byte	33
	.byte	'Ifx_SCU_WDTS',0,4,161,17,3
	.word	60719
	.byte	15,8
	.word	60558
	.byte	16,1,0,14
	.word	60746
	.byte	15,16
	.word	615
	.byte	16,15,0,15,36
	.word	615
	.byte	16,35,0,15,16
	.word	55557
	.byte	16,3,0,15,16
	.word	56316
	.byte	16,3,0,15,72
	.word	1151
	.byte	16,5,0,14
	.word	60796
	.byte	14
	.word	60658
	.byte	15,176,2
	.word	615
	.byte	16,175,2,0,10
	.byte	'_Ifx_SCU',0,4,176,17,25,128,8,13
	.byte	'reserved_0',0
	.word	4456
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	56256
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2636
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	57091
	.byte	4,2,35,16,13
	.byte	'SYSPLLSTAT',0
	.word	59878
	.byte	4,2,35,20,13
	.byte	'SYSPLLCON0',0
	.word	59674
	.byte	4,2,35,24,13
	.byte	'SYSPLLCON1',0
	.word	59742
	.byte	4,2,35,28,13
	.byte	'SYSPLLCON2',0
	.word	59810
	.byte	4,2,35,32,13
	.byte	'PERPLLSTAT',0
	.word	57669
	.byte	4,2,35,36,13
	.byte	'PERPLLCON0',0
	.word	57533
	.byte	4,2,35,40,13
	.byte	'PERPLLCON1',0
	.word	57601
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	54452
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	54517
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	56134
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	56070
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	54714
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	54779
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	54844
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	54909
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	58709
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	2636
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	58515
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	54387
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	59544
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	58579
	.byte	4,2,35,100,13
	.byte	'RSTCON3',0
	.word	58644
	.byte	4,2,35,104,13
	.byte	'reserved_6C',0
	.word	2636
	.byte	4,2,35,108,13
	.byte	'ESRCFGX',0
	.word	60755
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	56005
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	59610
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	54974
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	55039
	.byte	4,3,35,132,1,13
	.byte	'CCUCON8',0
	.word	55104
	.byte	4,3,35,136,1,13
	.byte	'CCUCON9',0
	.word	55169
	.byte	4,3,35,140,1,13
	.byte	'CCUCON10',0
	.word	54582
	.byte	4,3,35,144,1,13
	.byte	'CCUCON11',0
	.word	54648
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	2636
	.byte	4,3,35,152,1,13
	.byte	'PDR',0
	.word	57410
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	56438
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	57155
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	57030
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	56378
	.byte	4,3,35,172,1,13
	.byte	'reserved_B0',0
	.word	60760
	.byte	16,3,35,176,1,13
	.byte	'STSTAT',0
	.word	59414
	.byte	4,3,35,192,1,13
	.byte	'STCON',0
	.word	58967
	.byte	4,3,35,196,1,13
	.byte	'PMCSR0',0
	.word	57737
	.byte	4,3,35,200,1,13
	.byte	'PMCSR1',0
	.word	57801
	.byte	4,3,35,204,1,13
	.byte	'PMCSR2',0
	.word	57865
	.byte	4,3,35,208,1,13
	.byte	'PMCSR3',0
	.word	57929
	.byte	4,3,35,212,1,13
	.byte	'PMCSR4',0
	.word	57993
	.byte	4,3,35,216,1,13
	.byte	'PMCSR5',0
	.word	58057
	.byte	4,3,35,220,1,13
	.byte	'reserved_E0',0
	.word	2636
	.byte	4,3,35,224,1,13
	.byte	'PMSTAT0',0
	.word	58121
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	58186
	.byte	4,3,35,232,1,13
	.byte	'reserved_EC',0
	.word	60760
	.byte	16,3,35,236,1,13
	.byte	'EMSR',0
	.word	55807
	.byte	4,3,35,252,1,13
	.byte	'EMSSW',0
	.word	55869
	.byte	4,3,35,128,2,13
	.byte	'DTSCSTAT',0
	.word	55363
	.byte	4,3,35,132,2,13
	.byte	'DTSCLIM',0
	.word	55298
	.byte	4,3,35,136,2,13
	.byte	'reserved_10C',0
	.word	14867
	.byte	20,3,35,140,2,13
	.byte	'TRAPDIS1',0
	.word	60077
	.byte	4,3,35,160,2,13
	.byte	'TRAPSTAT',0
	.word	60208
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	60143
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	59946
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS0',0
	.word	60011
	.byte	4,3,35,176,2,13
	.byte	'LCLCON0',0
	.word	56772
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	56837
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	56902
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	55234
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	56967
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	2636
	.byte	4,3,35,200,2,13
	.byte	'SWAPCTRL',0
	.word	59478
	.byte	4,3,35,204,2,13
	.byte	'reserved_150',0
	.word	14867
	.byte	20,3,35,208,2,13
	.byte	'LBISTCTRL0',0
	.word	56500
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	56568
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	56636
	.byte	4,3,35,236,2,13
	.byte	'LBISTCTRL3',0
	.word	56704
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	60760
	.byte	16,3,35,244,2,13
	.byte	'STMEM1',0
	.word	59030
	.byte	4,3,35,132,3,13
	.byte	'STMEM2',0
	.word	59094
	.byte	4,3,35,136,3,13
	.byte	'PDISC',0
	.word	57347
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	4456
	.byte	8,3,35,144,3,13
	.byte	'PMTRCSR0',0
	.word	58251
	.byte	4,3,35,152,3,13
	.byte	'PMTRCSR1',0
	.word	58317
	.byte	4,3,35,156,3,13
	.byte	'PMTRCSR2',0
	.word	58383
	.byte	4,3,35,160,3,13
	.byte	'PMTRCSR3',0
	.word	58449
	.byte	4,3,35,164,3,13
	.byte	'reserved_1A8',0
	.word	3827
	.byte	24,3,35,168,3,13
	.byte	'STMEM3',0
	.word	59158
	.byte	4,3,35,192,3,13
	.byte	'STMEM4',0
	.word	59222
	.byte	4,3,35,196,3,13
	.byte	'STMEM5',0
	.word	59286
	.byte	4,3,35,200,3,13
	.byte	'STMEM6',0
	.word	59350
	.byte	4,3,35,204,3,13
	.byte	'reserved_1D0',0
	.word	60760
	.byte	16,3,35,208,3,13
	.byte	'OVCENABLE',0
	.word	57280
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	57216
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	60769
	.byte	36,3,35,232,3,13
	.byte	'EIFILT',0
	.word	55619
	.byte	4,3,35,140,4,13
	.byte	'EICR',0
	.word	60778
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	55683
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	56195
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	57471
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	60787
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	60760
	.byte	16,3,35,188,4,13
	.byte	'WDTCPU',0
	.word	60805
	.byte	72,3,35,204,4,13
	.byte	'reserved_294',0
	.word	4456
	.byte	8,3,35,148,5,13
	.byte	'EICON0',0
	.word	55429
	.byte	4,3,35,156,5,13
	.byte	'EICON1',0
	.word	55493
	.byte	4,3,35,160,5,13
	.byte	'EISR',0
	.word	55745
	.byte	4,3,35,164,5,13
	.byte	'WDTS',0
	.word	60810
	.byte	12,3,35,168,5,13
	.byte	'SEICON0',0
	.word	58774
	.byte	4,3,35,180,5,13
	.byte	'SEICON1',0
	.word	58839
	.byte	4,3,35,184,5,13
	.byte	'SEISR',0
	.word	58904
	.byte	4,3,35,188,5,13
	.byte	'reserved_2C0',0
	.word	60815
	.byte	176,2,3,35,192,5,13
	.byte	'ACCEN11',0
	.word	54322
	.byte	4,3,35,240,7,13
	.byte	'ACCEN10',0
	.word	54257
	.byte	4,3,35,244,7,13
	.byte	'ACCEN01',0
	.word	54192
	.byte	4,3,35,248,7,13
	.byte	'ACCEN00',0
	.word	54127
	.byte	4,3,35,252,7,0,14
	.word	60826
	.byte	33
	.byte	'Ifx_SCU',0,4,166,18,3
	.word	62947
	.byte	17,5,73,9,1,18
	.byte	'IfxPort_ControlledBy_port',0,0,18
	.byte	'IfxPort_ControlledBy_hsct',0,1,0,33
	.byte	'IfxPort_ControlledBy',0,5,77,3
	.word	62969
	.byte	33
	.byte	'IfxPort_InputMode',0,5,87,3
	.word	9131
	.byte	17,5,91,9,1,18
	.byte	'IfxPort_LvdsMode_high',0,0,18
	.byte	'IfxPort_LvdsMode_medium',0,1,0,33
	.byte	'IfxPort_LvdsMode',0,5,95,3
	.word	63086
	.byte	33
	.byte	'IfxPort_Mode',0,5,122,3
	.word	24136
	.byte	33
	.byte	'IfxPort_OutputIdx',0,5,136,1,3
	.word	9432
	.byte	33
	.byte	'IfxPort_OutputMode',0,5,145,1,3
	.word	9336
	.byte	33
	.byte	'IfxPort_PadDriver',0,5,165,1,3
	.word	22335
	.byte	17,5,169,1,9,1,18
	.byte	'IfxPort_PadSupply_3v',0,0,18
	.byte	'IfxPort_PadSupply_5v',0,1,0,33
	.byte	'IfxPort_PadSupply',0,5,173,1,3
	.word	63270
	.byte	17,5,177,1,9,1,18
	.byte	'IfxPort_PinFunctionMode_digital',0,0,18
	.byte	'IfxPort_PinFunctionMode_analog',0,1,0,33
	.byte	'IfxPort_PinFunctionMode',0,5,181,1,3
	.word	63350
	.byte	33
	.byte	'IfxPort_State',0,5,193,1,3
	.word	9745
	.byte	33
	.byte	'IfxPort_Pin',0,5,250,1,3
	.word	22235
	.byte	21
	.word	22960
	.byte	33
	.byte	'IfxPsi5s_Rx_In',0,13,61,3
	.word	63501
	.byte	21
	.word	23103
	.byte	33
	.byte	'IfxPsi5s_Tx_Out',0,13,69,3
	.word	63529
	.byte	21
	.word	22274
	.byte	33
	.byte	'IfxPsi5s_Clk_Out',0,13,77,3
	.word	63558
	.byte	17,21,66,9,1,18
	.byte	'IfxSrc_Tos_cpu0',0,0,18
	.byte	'IfxSrc_Tos_dma',0,1,18
	.byte	'IfxSrc_Tos_cpu1',0,2,18
	.byte	'IfxSrc_Tos_cpu2',0,3,18
	.byte	'IfxSrc_Tos_cpu3',0,4,18
	.byte	'IfxSrc_Tos_cpu4',0,5,18
	.byte	'IfxSrc_Tos_cpu5',0,6,0,33
	.byte	'IfxSrc_Tos',0,21,75,3
	.word	63588
	.byte	33
	.byte	'Ifx_SRC_SRCR_Bits',0,8,85,3
	.word	9926
	.byte	33
	.byte	'Ifx_SRC_SRCR',0,8,98,3
	.word	10216
	.byte	10
	.byte	'_Ifx_SRC_CPU_CPU',0,8,110,25,4,13
	.byte	'SB',0
	.word	10216
	.byte	4,2,35,0,0,14
	.word	63785
	.byte	33
	.byte	'Ifx_SRC_CPU_CPU',0,8,113,3
	.word	63820
	.byte	15,24
	.word	63785
	.byte	16,5,0,14
	.word	63849
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,8,128,1,25,24,13
	.byte	'CPU',0
	.word	63858
	.byte	24,2,35,0,0,14
	.word	63863
	.byte	33
	.byte	'Ifx_SRC_CPU',0,8,131,1,3
	.word	63896
	.byte	10
	.byte	'_Ifx_SRC_AGBT_AGBT',0,8,146,1,25,4,13
	.byte	'SR',0
	.word	10216
	.byte	4,2,35,0,0,14
	.word	63922
	.byte	33
	.byte	'Ifx_SRC_AGBT_AGBT',0,8,149,1,3
	.word	63960
	.byte	15,4
	.word	63922
	.byte	16,0,0,14
	.word	63992
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,8,164,1,25,4,13
	.byte	'AGBT',0
	.word	64001
	.byte	4,2,35,0,0,14
	.word	64006
	.byte	33
	.byte	'Ifx_SRC_AGBT',0,8,167,1,3
	.word	64041
	.byte	10
	.byte	'_Ifx_SRC_XBAR_XBAR',0,8,182,1,25,4,13
	.byte	'SR',0
	.word	10216
	.byte	4,2,35,0,0,14
	.word	64068
	.byte	33
	.byte	'Ifx_SRC_XBAR_XBAR',0,8,185,1,3
	.word	64106
	.byte	15,12
	.word	64068
	.byte	16,2,0,14
	.word	64138
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,8,200,1,25,12,13
	.byte	'XBAR',0
	.word	64147
	.byte	12,2,35,0,0,14
	.word	64152
	.byte	33
	.byte	'Ifx_SRC_XBAR',0,8,203,1,3
	.word	64187
	.byte	15,8
	.word	10216
	.byte	16,1,0,10
	.byte	'_Ifx_SRC_CERBERUS_CERBERUS',0,8,218,1,25,8,13
	.byte	'SR',0
	.word	64214
	.byte	8,2,35,0,0,14
	.word	64223
	.byte	33
	.byte	'Ifx_SRC_CERBERUS_CERBERUS',0,8,221,1,3
	.word	64269
	.byte	14
	.word	64223
	.byte	10
	.byte	'_Ifx_SRC_CERBERUS',0,8,236,1,25,8,13
	.byte	'CERBERUS',0
	.word	64309
	.byte	8,2,35,0,0,14
	.word	64314
	.byte	33
	.byte	'Ifx_SRC_CERBERUS',0,8,239,1,3
	.word	64357
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN_ASCLIN',0,8,254,1,25,12,13
	.byte	'TX',0
	.word	10216
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10216
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10216
	.byte	4,2,35,8,0,14
	.word	64388
	.byte	33
	.byte	'Ifx_SRC_ASCLIN_ASCLIN',0,8,131,2,3
	.word	64455
	.byte	15,144,1
	.word	64388
	.byte	16,11,0,14
	.word	64491
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,8,146,2,25,144,1,13
	.byte	'ASCLIN',0
	.word	64501
	.byte	144,1,2,35,0,0,14
	.word	64506
	.byte	33
	.byte	'Ifx_SRC_ASCLIN',0,8,149,2,3
	.word	64547
	.byte	10
	.byte	'_Ifx_SRC_QSPI_QSPI',0,8,164,2,25,20,13
	.byte	'TX',0
	.word	10216
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10216
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10216
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	10216
	.byte	4,2,35,12,13
	.byte	'U',0
	.word	10216
	.byte	4,2,35,16,0,14
	.word	64576
	.byte	33
	.byte	'Ifx_SRC_QSPI_QSPI',0,8,171,2,3
	.word	64662
	.byte	15,120
	.word	64576
	.byte	16,5,0,14
	.word	64694
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,8,186,2,25,120,13
	.byte	'QSPI',0
	.word	64703
	.byte	120,2,35,0,0,14
	.word	64708
	.byte	33
	.byte	'Ifx_SRC_QSPI',0,8,189,2,3
	.word	64743
	.byte	10
	.byte	'_Ifx_SRC_HSCT_HSCT',0,8,204,2,25,4,13
	.byte	'SR',0
	.word	10216
	.byte	4,2,35,0,0,14
	.word	64770
	.byte	33
	.byte	'Ifx_SRC_HSCT_HSCT',0,8,207,2,3
	.word	64808
	.byte	15,8
	.word	64770
	.byte	16,1,0,14
	.word	64840
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,8,222,2,25,8,13
	.byte	'HSCT',0
	.word	64849
	.byte	8,2,35,0,0,14
	.word	64854
	.byte	33
	.byte	'Ifx_SRC_HSCT',0,8,225,2,3
	.word	64889
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL_CH',0,8,240,2,25,16,13
	.byte	'COK',0
	.word	10216
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	10216
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10216
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	10216
	.byte	4,2,35,12,0,14
	.word	64916
	.byte	33
	.byte	'Ifx_SRC_HSSL_HSSL_CH',0,8,246,2,3
	.word	64997
	.byte	15,64
	.word	64916
	.byte	16,3,0,14
	.word	65032
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL',0,8,133,3,25,68,13
	.byte	'CH',0
	.word	65041
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	10216
	.byte	4,2,35,64,0,14
	.word	65046
	.byte	33
	.byte	'Ifx_SRC_HSSL_HSSL',0,8,137,3,3
	.word	65097
	.byte	15,136,1
	.word	65046
	.byte	16,1,0,14
	.word	65129
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,8,152,3,25,136,1,13
	.byte	'HSSL',0
	.word	65139
	.byte	136,1,2,35,0,0,14
	.word	65144
	.byte	33
	.byte	'Ifx_SRC_HSSL',0,8,155,3,3
	.word	65181
	.byte	10
	.byte	'_Ifx_SRC_I2C_I2C',0,8,170,3,25,16,13
	.byte	'DTR',0
	.word	10216
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	10216
	.byte	4,2,35,4,13
	.byte	'P',0
	.word	10216
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2636
	.byte	4,2,35,12,0,14
	.word	65208
	.byte	33
	.byte	'Ifx_SRC_I2C_I2C',0,8,176,3,3
	.word	65289
	.byte	15,32
	.word	65208
	.byte	16,1,0,14
	.word	65319
	.byte	10
	.byte	'_Ifx_SRC_I2C',0,8,191,3,25,32,13
	.byte	'I2C',0
	.word	65328
	.byte	32,2,35,0,0,14
	.word	65333
	.byte	33
	.byte	'Ifx_SRC_I2C',0,8,194,3,3
	.word	65366
	.byte	10
	.byte	'_Ifx_SRC_SENT_SENT',0,8,209,3,25,4,13
	.byte	'SR',0
	.word	10216
	.byte	4,2,35,0,0,14
	.word	65392
	.byte	33
	.byte	'Ifx_SRC_SENT_SENT',0,8,212,3,3
	.word	65430
	.byte	15,40
	.word	65392
	.byte	16,9,0,14
	.word	65462
	.byte	10
	.byte	'_Ifx_SRC_SENT',0,8,227,3,25,40,13
	.byte	'SENT',0
	.word	65471
	.byte	40,2,35,0,0,14
	.word	65476
	.byte	33
	.byte	'Ifx_SRC_SENT',0,8,230,3,3
	.word	65511
	.byte	15,20
	.word	10216
	.byte	16,4,0,10
	.byte	'_Ifx_SRC_MSC_MSC',0,8,245,3,25,20,13
	.byte	'SR',0
	.word	65538
	.byte	20,2,35,0,0,14
	.word	65547
	.byte	33
	.byte	'Ifx_SRC_MSC_MSC',0,8,248,3,3
	.word	65583
	.byte	15,80
	.word	65547
	.byte	16,3,0,14
	.word	65613
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,8,135,4,25,80,13
	.byte	'MSC',0
	.word	65622
	.byte	80,2,35,0,0,14
	.word	65627
	.byte	33
	.byte	'Ifx_SRC_MSC',0,8,138,4,3
	.word	65660
	.byte	15,16
	.word	10216
	.byte	16,3,0,10
	.byte	'_Ifx_SRC_CCU6_CCU',0,8,153,4,25,16,13
	.byte	'SR',0
	.word	65686
	.byte	16,2,35,0,0,14
	.word	65695
	.byte	33
	.byte	'Ifx_SRC_CCU6_CCU',0,8,156,4,3
	.word	65732
	.byte	15,32
	.word	65695
	.byte	16,1,0,14
	.word	65763
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,8,171,4,25,32,13
	.byte	'CCU',0
	.word	65772
	.byte	32,2,35,0,0,14
	.word	65777
	.byte	33
	.byte	'Ifx_SRC_CCU6',0,8,174,4,3
	.word	65811
	.byte	10
	.byte	'_Ifx_SRC_GPT12_GPT12',0,8,189,4,25,24,13
	.byte	'CIRQ',0
	.word	10216
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	10216
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	10216
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	10216
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	10216
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	10216
	.byte	4,2,35,20,0,14
	.word	65838
	.byte	33
	.byte	'Ifx_SRC_GPT12_GPT12',0,8,197,4,3
	.word	65940
	.byte	15,24
	.word	65838
	.byte	16,0,0,14
	.word	65974
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,8,212,4,25,24,13
	.byte	'GPT12',0
	.word	65983
	.byte	24,2,35,0,0,14
	.word	65988
	.byte	33
	.byte	'Ifx_SRC_GPT12',0,8,215,4,3
	.word	66025
	.byte	10
	.byte	'_Ifx_SRC_STM_STM',0,8,230,4,25,8,13
	.byte	'SR',0
	.word	64214
	.byte	8,2,35,0,0,14
	.word	66053
	.byte	33
	.byte	'Ifx_SRC_STM_STM',0,8,233,4,3
	.word	66089
	.byte	15,48
	.word	66053
	.byte	16,5,0,14
	.word	66119
	.byte	10
	.byte	'_Ifx_SRC_STM',0,8,248,4,25,48,13
	.byte	'STM',0
	.word	66128
	.byte	48,2,35,0,0,14
	.word	66133
	.byte	33
	.byte	'Ifx_SRC_STM',0,8,251,4,3
	.word	66166
	.byte	10
	.byte	'_Ifx_SRC_FCE_FCE0',0,8,138,5,25,4,13
	.byte	'SR',0
	.word	10216
	.byte	4,2,35,0,0,14
	.word	66192
	.byte	33
	.byte	'Ifx_SRC_FCE_FCE0',0,8,141,5,3
	.word	66229
	.byte	14
	.word	66192
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,8,156,5,25,4,13
	.byte	'FCE0',0
	.word	66260
	.byte	4,2,35,0,0,14
	.word	66265
	.byte	33
	.byte	'Ifx_SRC_FCE',0,8,159,5,3
	.word	66299
	.byte	15,32
	.word	615
	.byte	16,31,0,15,128,4
	.word	10216
	.byte	16,127,0,10
	.byte	'_Ifx_SRC_DMA_DMA',0,8,174,5,25,176,4,13
	.byte	'ERR',0
	.word	65686
	.byte	16,2,35,0,13
	.byte	'reserved_10',0
	.word	66325
	.byte	32,2,35,16,13
	.byte	'CH',0
	.word	66334
	.byte	128,4,2,35,48,0,14
	.word	66344
	.byte	33
	.byte	'Ifx_SRC_DMA_DMA',0,8,179,5,3
	.word	66416
	.byte	15,176,4
	.word	66344
	.byte	16,0,0,14
	.word	66446
	.byte	10
	.byte	'_Ifx_SRC_DMA',0,8,194,5,25,176,4,13
	.byte	'DMA',0
	.word	66456
	.byte	176,4,2,35,0,0,14
	.word	66461
	.byte	33
	.byte	'Ifx_SRC_DMA',0,8,197,5,3
	.word	66496
	.byte	10
	.byte	'_Ifx_SRC_SDMMC_SDMMC',0,8,212,5,25,8,13
	.byte	'ERR',0
	.word	10216
	.byte	4,2,35,0,13
	.byte	'DMA',0
	.word	10216
	.byte	4,2,35,4,0,14
	.word	66522
	.byte	33
	.byte	'Ifx_SRC_SDMMC_SDMMC',0,8,216,5,3
	.word	66576
	.byte	15,8
	.word	66522
	.byte	16,0,0,14
	.word	66610
	.byte	10
	.byte	'_Ifx_SRC_SDMMC',0,8,231,5,25,8,13
	.byte	'SDMMC',0
	.word	66619
	.byte	8,2,35,0,0,14
	.word	66624
	.byte	33
	.byte	'Ifx_SRC_SDMMC',0,8,234,5,3
	.word	66661
	.byte	15,40
	.word	10216
	.byte	16,9,0,10
	.byte	'_Ifx_SRC_GETH_GETH',0,8,249,5,25,40,13
	.byte	'SR',0
	.word	66689
	.byte	40,2,35,0,0,14
	.word	66698
	.byte	33
	.byte	'Ifx_SRC_GETH_GETH',0,8,252,5,3
	.word	66736
	.byte	15,40
	.word	66698
	.byte	16,0,0,14
	.word	66768
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,8,139,6,25,40,13
	.byte	'GETH',0
	.word	66777
	.byte	40,2,35,0,0,14
	.word	66782
	.byte	33
	.byte	'Ifx_SRC_GETH',0,8,142,6,3
	.word	66817
	.byte	15,64
	.word	10216
	.byte	16,15,0,10
	.byte	'_Ifx_SRC_CAN_CAN',0,8,157,6,25,64,13
	.byte	'INT',0
	.word	66844
	.byte	64,2,35,0,0,14
	.word	66853
	.byte	33
	.byte	'Ifx_SRC_CAN_CAN',0,8,160,6,3
	.word	66890
	.byte	15,192,1
	.word	66853
	.byte	16,2,0,14
	.word	66920
	.byte	10
	.byte	'_Ifx_SRC_CAN',0,8,175,6,25,192,1,13
	.byte	'CAN',0
	.word	66930
	.byte	192,1,2,35,0,0,14
	.word	66935
	.byte	33
	.byte	'Ifx_SRC_CAN',0,8,178,6,3
	.word	66970
	.byte	10
	.byte	'_Ifx_SRC_VADC_G',0,8,193,6,25,16,13
	.byte	'SR0',0
	.word	10216
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10216
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10216
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10216
	.byte	4,2,35,12,0,14
	.word	66996
	.byte	33
	.byte	'Ifx_SRC_VADC_G',0,8,199,6,3
	.word	67071
	.byte	10
	.byte	'_Ifx_SRC_VADC_FC',0,8,214,6,25,4,13
	.byte	'SR0',0
	.word	10216
	.byte	4,2,35,0,0,14
	.word	67100
	.byte	33
	.byte	'Ifx_SRC_VADC_FC',0,8,217,6,3
	.word	67137
	.byte	15,192,1
	.word	66996
	.byte	16,11,0,14
	.word	67167
	.byte	15,32
	.word	67100
	.byte	16,7,0,14
	.word	67182
	.byte	15,32
	.word	66996
	.byte	16,1,0,14
	.word	67196
	.byte	10
	.byte	'_Ifx_SRC_VADC',0,8,233,6,25,128,2,13
	.byte	'G',0
	.word	67177
	.byte	192,1,2,35,0,13
	.byte	'FC',0
	.word	67191
	.byte	32,3,35,192,1,13
	.byte	'CG',0
	.word	67205
	.byte	32,3,35,224,1,0,14
	.word	67210
	.byte	33
	.byte	'Ifx_SRC_VADC',0,8,238,6,3
	.word	67270
	.byte	10
	.byte	'_Ifx_SRC_DSADC_DSADC',0,8,253,6,25,8,13
	.byte	'SRM',0
	.word	10216
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	10216
	.byte	4,2,35,4,0,14
	.word	67297
	.byte	33
	.byte	'Ifx_SRC_DSADC_DSADC',0,8,129,7,3
	.word	67351
	.byte	15,112
	.word	67297
	.byte	16,13,0,14
	.word	67385
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,8,144,7,25,112,13
	.byte	'DSADC',0
	.word	67394
	.byte	112,2,35,0,0,14
	.word	67399
	.byte	33
	.byte	'Ifx_SRC_DSADC',0,8,147,7,3
	.word	67436
	.byte	10
	.byte	'_Ifx_SRC_ERAY_ERAY',0,8,162,7,25,48,13
	.byte	'INT0',0
	.word	10216
	.byte	4,2,35,0,13
	.byte	'INT1',0
	.word	10216
	.byte	4,2,35,4,13
	.byte	'TINT0',0
	.word	10216
	.byte	4,2,35,8,13
	.byte	'TINT1',0
	.word	10216
	.byte	4,2,35,12,13
	.byte	'NDAT0',0
	.word	10216
	.byte	4,2,35,16,13
	.byte	'NDAT1',0
	.word	10216
	.byte	4,2,35,20,13
	.byte	'MBSC0',0
	.word	10216
	.byte	4,2,35,24,13
	.byte	'MBSC1',0
	.word	10216
	.byte	4,2,35,28,13
	.byte	'OBUSY',0
	.word	10216
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	10216
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4456
	.byte	8,2,35,40,0,14
	.word	67464
	.byte	33
	.byte	'Ifx_SRC_ERAY_ERAY',0,8,175,7,3
	.word	67659
	.byte	15,96
	.word	67464
	.byte	16,1,0,14
	.word	67691
	.byte	10
	.byte	'_Ifx_SRC_ERAY',0,8,190,7,25,96,13
	.byte	'ERAY',0
	.word	67700
	.byte	96,2,35,0,0,14
	.word	67705
	.byte	33
	.byte	'Ifx_SRC_ERAY',0,8,193,7,3
	.word	67740
	.byte	10
	.byte	'_Ifx_SRC_HSM_HSM',0,8,208,7,25,8,13
	.byte	'HSM',0
	.word	64214
	.byte	8,2,35,0,0,14
	.word	67767
	.byte	33
	.byte	'Ifx_SRC_HSM_HSM',0,8,211,7,3
	.word	67804
	.byte	15,8
	.word	67767
	.byte	16,0,0,14
	.word	67834
	.byte	10
	.byte	'_Ifx_SRC_HSM',0,8,226,7,25,8,13
	.byte	'HSM',0
	.word	67843
	.byte	8,2,35,0,0,14
	.word	67848
	.byte	33
	.byte	'Ifx_SRC_HSM',0,8,229,7,3
	.word	67881
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,8,244,7,25,16,13
	.byte	'SCUERU',0
	.word	65686
	.byte	16,2,35,0,0,14
	.word	67907
	.byte	33
	.byte	'Ifx_SRC_SCU',0,8,247,7,3
	.word	67943
	.byte	10
	.byte	'_Ifx_SRC_PMS_PMS',0,8,134,8,25,4,13
	.byte	'SR',0
	.word	10216
	.byte	4,2,35,0,0,14
	.word	67969
	.byte	33
	.byte	'Ifx_SRC_PMS_PMS',0,8,137,8,3
	.word	68005
	.byte	15,16
	.word	67969
	.byte	16,3,0,14
	.word	68035
	.byte	10
	.byte	'_Ifx_SRC_PMS',0,8,152,8,25,16,13
	.byte	'PMS',0
	.word	68044
	.byte	16,2,35,0,0,14
	.word	68049
	.byte	33
	.byte	'Ifx_SRC_PMS',0,8,155,8,3
	.word	68082
	.byte	15,12
	.word	10216
	.byte	16,2,0,10
	.byte	'_Ifx_SRC_SMU_SMU',0,8,170,8,25,12,13
	.byte	'SR',0
	.word	68108
	.byte	12,2,35,0,0,14
	.word	68117
	.byte	33
	.byte	'Ifx_SRC_SMU_SMU',0,8,173,8,3
	.word	68153
	.byte	15,12
	.word	68117
	.byte	16,0,0,14
	.word	68183
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,8,188,8,25,12,13
	.byte	'SMU',0
	.word	68192
	.byte	12,2,35,0,0,14
	.word	68197
	.byte	33
	.byte	'Ifx_SRC_SMU',0,8,191,8,3
	.word	68230
	.byte	15,32
	.word	10216
	.byte	16,7,0,10
	.byte	'_Ifx_SRC_PSI5_PSI5',0,8,206,8,25,32,13
	.byte	'SR',0
	.word	68256
	.byte	32,2,35,0,0,14
	.word	68265
	.byte	33
	.byte	'Ifx_SRC_PSI5_PSI5',0,8,209,8,3
	.word	68303
	.byte	15,32
	.word	68265
	.byte	16,0,0,14
	.word	68335
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,8,224,8,25,32,13
	.byte	'PSI5',0
	.word	68344
	.byte	32,2,35,0,0,14
	.word	68349
	.byte	33
	.byte	'Ifx_SRC_PSI5',0,8,227,8,3
	.word	68384
	.byte	10
	.byte	'_Ifx_SRC_HSPDM_HSPDM0',0,8,242,8,25,12,13
	.byte	'BFR',0
	.word	10216
	.byte	4,2,35,0,13
	.byte	'RAMP',0
	.word	10216
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10216
	.byte	4,2,35,8,0,14
	.word	68411
	.byte	33
	.byte	'Ifx_SRC_HSPDM_HSPDM0',0,8,247,8,3
	.word	68480
	.byte	14
	.word	68411
	.byte	10
	.byte	'_Ifx_SRC_HSPDM',0,8,134,9,25,12,13
	.byte	'HSPDM0',0
	.word	68515
	.byte	12,2,35,0,0,14
	.word	68520
	.byte	33
	.byte	'Ifx_SRC_HSPDM',0,8,137,9,3
	.word	68558
	.byte	10
	.byte	'_Ifx_SRC_DAM_DAM',0,8,152,9,25,24,13
	.byte	'LI0',0
	.word	10216
	.byte	4,2,35,0,13
	.byte	'RI0',0
	.word	10216
	.byte	4,2,35,4,13
	.byte	'LI1',0
	.word	10216
	.byte	4,2,35,8,13
	.byte	'RI1',0
	.word	10216
	.byte	4,2,35,12,13
	.byte	'DR',0
	.word	10216
	.byte	4,2,35,16,13
	.byte	'ERR',0
	.word	10216
	.byte	4,2,35,20,0,14
	.word	68586
	.byte	33
	.byte	'Ifx_SRC_DAM_DAM',0,8,160,9,3
	.word	68687
	.byte	15,48
	.word	68586
	.byte	16,1,0,14
	.word	68717
	.byte	10
	.byte	'_Ifx_SRC_DAM',0,8,175,9,25,48,13
	.byte	'DAM',0
	.word	68726
	.byte	48,2,35,0,0,14
	.word	68731
	.byte	33
	.byte	'Ifx_SRC_DAM',0,8,178,9,3
	.word	68764
	.byte	10
	.byte	'_Ifx_SRC_PSI5S_PSI5S',0,8,193,9,25,32,13
	.byte	'SR',0
	.word	68256
	.byte	32,2,35,0,0,14
	.word	68790
	.byte	33
	.byte	'Ifx_SRC_PSI5S_PSI5S',0,8,196,9,3
	.word	68830
	.byte	15,32
	.word	68790
	.byte	16,0,0,14
	.word	68864
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,8,211,9,25,32,13
	.byte	'PSI5S',0
	.word	68873
	.byte	32,2,35,0,0,14
	.word	68878
	.byte	33
	.byte	'Ifx_SRC_PSI5S',0,8,214,9,3
	.word	68915
	.byte	10
	.byte	'_Ifx_SRC_RIF_RIF',0,8,229,9,25,8,13
	.byte	'ERR',0
	.word	10216
	.byte	4,2,35,0,13
	.byte	'INT',0
	.word	10216
	.byte	4,2,35,4,0,14
	.word	68943
	.byte	33
	.byte	'Ifx_SRC_RIF_RIF',0,8,233,9,3
	.word	68993
	.byte	15,16
	.word	68943
	.byte	16,1,0,14
	.word	69023
	.byte	10
	.byte	'_Ifx_SRC_RIF',0,8,248,9,25,16,13
	.byte	'RIF',0
	.word	69032
	.byte	16,2,35,0,0,14
	.word	69037
	.byte	33
	.byte	'Ifx_SRC_RIF',0,8,251,9,3
	.word	69070
	.byte	10
	.byte	'_Ifx_SRC_SPU_SPU',0,8,138,10,25,8,13
	.byte	'INT',0
	.word	10216
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	10216
	.byte	4,2,35,4,0,14
	.word	69096
	.byte	33
	.byte	'Ifx_SRC_SPU_SPU',0,8,142,10,3
	.word	69146
	.byte	15,16
	.word	69096
	.byte	16,1,0,14
	.word	69176
	.byte	10
	.byte	'_Ifx_SRC_SPU',0,8,157,10,25,16,13
	.byte	'SPU',0
	.word	69185
	.byte	16,2,35,0,0,14
	.word	69190
	.byte	33
	.byte	'Ifx_SRC_SPU',0,8,160,10,3
	.word	69223
	.byte	10
	.byte	'_Ifx_SRC_GPSR_GPSR',0,8,175,10,25,32,13
	.byte	'SR',0
	.word	68256
	.byte	32,2,35,0,0,14
	.word	69249
	.byte	33
	.byte	'Ifx_SRC_GPSR_GPSR',0,8,178,10,3
	.word	69287
	.byte	15,192,1
	.word	69249
	.byte	16,5,0,14
	.word	69319
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,8,193,10,25,192,1,13
	.byte	'GPSR',0
	.word	69329
	.byte	192,1,2,35,0,0,14
	.word	69334
	.byte	33
	.byte	'Ifx_SRC_GPSR',0,8,196,10,3
	.word	69371
	.byte	10
	.byte	'_Ifx_CPU_A_Bits',0,22,68,16,4,11
	.byte	'ADDR',0,4
	.word	463
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_A_Bits',0,22,71,3
	.word	69398
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,22,74,16,4,11
	.byte	'VSS',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	463
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_BIV_Bits',0,22,78,3
	.word	69459
	.byte	10
	.byte	'_Ifx_CPU_BLK_OMASK_Bits',0,22,81,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	5,27,2,35,0,11
	.byte	'OMASK',0,4
	.word	463
	.byte	12,15,2,35,0,11
	.byte	'ONE',0,4
	.word	463
	.byte	11,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	463
	.byte	4,0,2,35,0,0,33
	.byte	'Ifx_CPU_BLK_OMASK_Bits',0,22,87,3
	.word	69538
	.byte	10
	.byte	'_Ifx_CPU_BLK_OTAR_Bits',0,22,90,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	5,27,2,35,0,11
	.byte	'TBASE',0,4
	.word	463
	.byte	23,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	463
	.byte	4,0,2,35,0,0,33
	.byte	'Ifx_CPU_BLK_OTAR_Bits',0,22,95,3
	.word	69676
	.byte	10
	.byte	'_Ifx_CPU_BLK_RABR_Bits',0,22,98,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	5,27,2,35,0,11
	.byte	'OBASE',0,4
	.word	463
	.byte	17,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	463
	.byte	2,8,2,35,0,11
	.byte	'OMEM',0,4
	.word	463
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	463
	.byte	3,1,2,35,0,11
	.byte	'OVEN',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_BLK_RABR_Bits',0,22,106,3
	.word	69797
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,22,109,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	463
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_BTV_Bits',0,22,113,3
	.word	69973
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,22,116,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	463
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_CCNT_Bits',0,22,120,3
	.word	70059
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,22,123,16,4,11
	.byte	'CM',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	463
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	463
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	463
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	463
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_CPU_CCTRL_Bits',0,22,131,1,3
	.word	70148
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,22,134,1,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	463
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_COMPAT_Bits',0,22,140,1,3
	.word	70295
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,22,143,1,16,4,11
	.byte	'CORE_ID',0,4
	.word	463
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	463
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_CPU_CORE_ID_Bits',0,22,147,1,3
	.word	70424
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,22,150,1,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	5,27,2,35,0,11
	.byte	'LOWBND',0,4
	.word	463
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_CPR_L_Bits',0,22,154,1,3
	.word	70524
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,22,157,1,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	5,27,2,35,0,11
	.byte	'UPPBND',0,4
	.word	463
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_CPR_U_Bits',0,22,161,1,3
	.word	70619
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,22,164,1,16,4,11
	.byte	'MOD_REV',0,4
	.word	463
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	463
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	463
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_CPU_ID_Bits',0,22,169,1,3
	.word	70714
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,22,172,1,16,4,11
	.byte	'XE_N',0,4
	.word	463
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	463
	.byte	22,0,2,35,0,0,33
	.byte	'Ifx_CPU_CPXE_Bits',0,22,176,1,3
	.word	70824
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,22,179,1,16,4,11
	.byte	'EVTA',0,4
	.word	463
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	463
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	463
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_CPU_CREVT_Bits',0,22,187,1,3
	.word	70916
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,22,190,1,16,4,11
	.byte	'CID',0,4
	.word	463
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	463
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_CPU_CUS_ID_Bits',0,22,194,1,3
	.word	71070
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,22,197,1,16,4,11
	.byte	'DATA',0,4
	.word	463
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_D_Bits',0,22,200,1,3
	.word	71164
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,22,203,1,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	463
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	463
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	463
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_DATR_Bits',0,22,214,1,3
	.word	71227
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,22,217,1,16,4,11
	.byte	'DE',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	463
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	463
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	463
	.byte	19,0,2,35,0,0,33
	.byte	'Ifx_CPU_DBGSR_Bits',0,22,228,1,3
	.word	71453
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,22,231,1,16,4,11
	.byte	'DTA',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	463
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_DBGTCR_Bits',0,22,235,1,3
	.word	71668
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,22,238,1,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	463
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_CPU_DCON0_Bits',0,22,243,1,3
	.word	71762
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,22,246,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	463
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	463
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_DCON2_Bits',0,22,250,1,3
	.word	71878
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,22,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	6,26,2,35,0,11
	.byte	'DCXVALUE',0,4
	.word	463
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_CPU_DCX_Bits',0,22,129,2,3
	.word	71979
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,22,132,2,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	463
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_DEADD_Bits',0,22,135,2,3
	.word	72072
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,22,138,2,16,4,11
	.byte	'TA',0,4
	.word	463
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_DIEAR_Bits',0,22,141,2,3
	.word	72152
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,22,144,2,16,4,11
	.byte	'IED',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	463
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'IE_DLMU',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	463
	.byte	15,0,2,35,0,0,33
	.byte	'Ifx_CPU_DIETR_Bits',0,22,159,2,3
	.word	72221
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,22,162,2,16,4,11
	.byte	'EN0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	463
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	463
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	463
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,22,196,2,3
	.word	72505
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,22,199,2,16,4,11
	.byte	'EN0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	463
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	463
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	463
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,22,233,2,3
	.word	73096
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,22,236,2,16,4,11
	.byte	'EN32',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	463
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	463
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	463
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,22,142,3,3
	.word	73687
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,22,145,3,16,4,11
	.byte	'EN32',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	463
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	463
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	463
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,22,179,3,3
	.word	74288
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,22,182,3,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	463
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,22,186,3,3
	.word	74889
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,22,189,3,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	463
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,22,193,3,3
	.word	75004
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,22,196,3,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'DMSVALUE',0,4
	.word	463
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_DMS_Bits',0,22,200,3,3
	.word	75119
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,22,203,3,16,4,11
	.byte	'RE_N',0,4
	.word	463
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	463
	.byte	14,0,2,35,0,0,33
	.byte	'Ifx_CPU_DPRE_Bits',0,22,207,3,3
	.word	75212
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,22,210,3,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	463
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_CPU_DPR_L_Bits',0,22,214,3,3
	.word	75304
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,22,217,3,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	463
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_CPU_DPR_U_Bits',0,22,221,3,3
	.word	75399
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,22,224,3,16,4,11
	.byte	'WE_N',0,4
	.word	463
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	463
	.byte	14,0,2,35,0,0,33
	.byte	'Ifx_CPU_DPWE_Bits',0,22,228,3,3
	.word	75494
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,22,231,3,16,4,11
	.byte	'SRE',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'DRE',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	463
	.byte	2,26,2,35,0,11
	.byte	'CRE',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	463
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	463
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	463
	.byte	7,0,2,35,0,0,33
	.byte	'Ifx_CPU_DSTR_Bits',0,22,250,3,3
	.word	75586
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,22,253,3,16,4,11
	.byte	'EVTA',0,4
	.word	463
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	463
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	463
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_CPU_EXEVT_Bits',0,22,133,4,3
	.word	75925
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,22,136,4,16,4,11
	.byte	'FCXO',0,4
	.word	463
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	463
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	463
	.byte	12,0,2,35,0,0,33
	.byte	'Ifx_CPU_FCX_Bits',0,22,141,4,3
	.word	76079
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON0_Bits',0,22,144,4,16,4,11
	.byte	'TAG1',0,4
	.word	463
	.byte	6,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	463
	.byte	2,24,2,35,0,11
	.byte	'TAG2',0,4
	.word	463
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	463
	.byte	2,16,2,35,0,11
	.byte	'TAG3',0,4
	.word	463
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	463
	.byte	2,8,2,35,0,11
	.byte	'TAG4',0,4
	.word	463
	.byte	6,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	463
	.byte	2,0,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON0_Bits',0,22,154,4,3
	.word	76185
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON1_Bits',0,22,157,4,16,4,11
	.byte	'STALL',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	463
	.byte	15,16,2,35,0,11
	.byte	'MASKUECC',0,4
	.word	463
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	463
	.byte	6,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	463
	.byte	2,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	463
	.byte	6,0,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON1_Bits',0,22,165,4,3
	.word	76403
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON2_Bits',0,22,168,4,16,4,11
	.byte	'RECDIS',0,4
	.word	463
	.byte	2,30,2,35,0,11
	.byte	'ECCCORDIS',0,4
	.word	463
	.byte	2,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	463
	.byte	4,24,2,35,0,11
	.byte	'HMARGIN',0,4
	.word	463
	.byte	2,22,2,35,0,11
	.byte	'MSEL',0,4
	.word	463
	.byte	2,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	463
	.byte	4,16,2,35,0,11
	.byte	'ECCSCLR',0,4
	.word	463
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	463
	.byte	6,8,2,35,0,11
	.byte	'SBABCLR',0,4
	.word	463
	.byte	2,6,2,35,0,11
	.byte	'DBABCLR',0,4
	.word	463
	.byte	2,4,2,35,0,11
	.byte	'MBABCLR',0,4
	.word	463
	.byte	2,2,2,35,0,11
	.byte	'ZBABCLR',0,4
	.word	463
	.byte	2,0,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON2_Bits',0,22,182,4,3
	.word	76594
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON3_Bits',0,22,185,4,16,4,11
	.byte	'ECCERRINJ',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'EDCERRINJ',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'SBABERRINJ',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'DBABERRINJ',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'MBABERRINJ',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'ZBABERRINJ',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'SBERERRINJ',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'DBERERRINJ',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'NVMCERRINJ',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'FLCONERRINJ',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	463
	.byte	22,0,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON3_Bits',0,22,198,4,3
	.word	76894
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON4_Bits',0,22,201,4,16,4,11
	.byte	'DDIS',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	463
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON4_Bits',0,22,205,4,3
	.word	77199
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,22,208,4,16,4,11
	.byte	'TST',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	463
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	463
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	463
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	463
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	463
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,22,227,4,3
	.word	77300
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,22,230,4,16,4,11
	.byte	'OPC',0,4
	.word	463
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	463
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	463
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	463
	.byte	12,0,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,22,237,4,3
	.word	77649
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,22,240,4,16,4,11
	.byte	'PC',0,4
	.word	463
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,22,243,4,3
	.word	77809
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,22,246,4,16,4,11
	.byte	'SRC1',0,4
	.word	463
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,22,249,4,3
	.word	77890
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,22,252,4,16,4,11
	.byte	'SRC2',0,4
	.word	463
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,22,255,4,3
	.word	77977
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,22,130,5,16,4,11
	.byte	'SRC3',0,4
	.word	463
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,22,133,5,3
	.word	78064
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,22,136,5,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	463
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_ICNT_Bits',0,22,140,5,3
	.word	78151
	.byte	10
	.byte	'_Ifx_CPU_ICR_Bits',0,22,143,5,16,4,11
	.byte	'CCPN',0,4
	.word	463
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	463
	.byte	7,17,2,35,0,11
	.byte	'IE',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	463
	.byte	8,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	463
	.byte	8,0,2,35,0,0,33
	.byte	'Ifx_CPU_ICR_Bits',0,22,150,5,3
	.word	78242
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,22,153,5,16,4,11
	.byte	'ISP',0,4
	.word	463
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_ISP_Bits',0,22,156,5,3
	.word	78384
	.byte	10
	.byte	'_Ifx_CPU_KRST0_Bits',0,22,159,5,16,4,11
	.byte	'RST',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'RSTSTAT',0,4
	.word	463
	.byte	2,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	463
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_CPU_KRST0_Bits',0,22,164,5,3
	.word	78450
	.byte	10
	.byte	'_Ifx_CPU_KRST1_Bits',0,22,167,5,16,4,11
	.byte	'RST',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	463
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_KRST1_Bits',0,22,171,5,3
	.word	78561
	.byte	10
	.byte	'_Ifx_CPU_KRSTCLR_Bits',0,22,174,5,16,4,11
	.byte	'CLR',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	463
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_KRSTCLR_Bits',0,22,178,5,3
	.word	78653
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,22,181,5,16,4,11
	.byte	'LCXO',0,4
	.word	463
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	463
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	463
	.byte	12,0,2,35,0,0,33
	.byte	'Ifx_CPU_LCX_Bits',0,22,186,5,3
	.word	78749
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,22,189,5,16,4,11
	.byte	'EN0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	463
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	463
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	463
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,22,223,5,3
	.word	78855
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,22,226,5,16,4,11
	.byte	'EN32',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	463
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	463
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	463
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,22,132,6,3
	.word	79438
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,22,135,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	463
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_M1CNT_Bits',0,22,139,6,3
	.word	80031
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,22,142,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	463
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_M2CNT_Bits',0,22,146,6,3
	.word	80124
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,22,149,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	463
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_M3CNT_Bits',0,22,153,6,3
	.word	80217
	.byte	10
	.byte	'_Ifx_CPU_OSEL_Bits',0,22,156,6,16,4,11
	.byte	'SHOVEN_X',0,4
	.word	463
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_OSEL_Bits',0,22,159,6,3
	.word	80310
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,22,162,6,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	463
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_PC_Bits',0,22,166,6,3
	.word	80383
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,22,169,6,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	463
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_CPU_PCON0_Bits',0,22,174,6,3
	.word	80468
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,22,177,6,16,4,11
	.byte	'PCINV',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	463
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_CPU_PCON1_Bits',0,22,182,6,3
	.word	80584
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,22,185,6,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	463
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	463
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_PCON2_Bits',0,22,189,6,3
	.word	80695
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,22,192,6,16,4,11
	.byte	'PCXO',0,4
	.word	463
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	463
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	463
	.byte	8,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	463
	.byte	2,0,2,35,0,0,33
	.byte	'Ifx_CPU_PCXI_Bits',0,22,200,6,3
	.word	80796
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,22,203,6,16,4,11
	.byte	'TA',0,4
	.word	463
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_PIEAR_Bits',0,22,206,6,3
	.word	80949
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,22,209,6,16,4,11
	.byte	'IED',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	463
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'IE_ADDR',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	463
	.byte	15,0,2,35,0,0,33
	.byte	'Ifx_CPU_PIETR_Bits',0,22,224,6,3
	.word	81018
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,22,227,6,16,4,11
	.byte	'DAC',0,4
	.word	463
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	463
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_PMA0_Bits',0,22,231,6,3
	.word	81302
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,22,234,6,16,4,11
	.byte	'CAC',0,4
	.word	463
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	463
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_PMA1_Bits',0,22,238,6,3
	.word	81393
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,22,241,6,16,4,11
	.byte	'PSI',0,4
	.word	463
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	463
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_PMA2_Bits',0,22,245,6,3
	.word	81484
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,22,248,6,16,4,11
	.byte	'FRE',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	463
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	463
	.byte	17,0,2,35,0,0,33
	.byte	'Ifx_CPU_PSTR_Bits',0,22,130,7,3
	.word	81575
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,22,133,7,16,4,11
	.byte	'CDC',0,4
	.word	463
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	463
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	463
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'PRS2',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	463
	.byte	8,8,2,35,0,11
	.byte	'USB',0,4
	.word	463
	.byte	8,0,2,35,0,0,33
	.byte	'Ifx_CPU_PSW_Bits',0,22,145,7,3
	.word	81778
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENA_Bits',0,22,148,7,16,4,11
	.byte	'EN0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	463
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	463
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	463
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_RGN_ACCENA_Bits',0,22,182,7,3
	.word	81983
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENB_Bits',0,22,185,7,16,4,11
	.byte	'EN32',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	463
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	463
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	463
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_RGN_ACCENB_Bits',0,22,219,7,3
	.word	82550
	.byte	10
	.byte	'_Ifx_CPU_RGN_LA_Bits',0,22,222,7,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	463
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_RGN_LA_Bits',0,22,226,7,3
	.word	83127
	.byte	10
	.byte	'_Ifx_CPU_RGN_UA_Bits',0,22,229,7,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	463
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_RGN_UA_Bits',0,22,233,7,3
	.word	83222
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,22,236,7,16,4,11
	.byte	'ADFLIP',0,4
	.word	463
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	463
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	463
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_SEGEN_Bits',0,22,242,7,3
	.word	83317
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,22,245,7,16,4,11
	.byte	'EN0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	463
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	463
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	463
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,22,151,8,3
	.word	83445
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,22,154,8,16,4,11
	.byte	'EN32',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	463
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	463
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	463
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,22,188,8,3
	.word	84028
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,22,191,8,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	24,8,2,35,0,11
	.byte	'IODT',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	463
	.byte	7,0,2,35,0,0,33
	.byte	'Ifx_CPU_SMACON_Bits',0,22,196,8,3
	.word	84621
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,22,199,8,16,4,11
	.byte	'EN0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	463
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	463
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	463
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,22,233,8,3
	.word	84739
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,22,236,8,16,4,11
	.byte	'EN32',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	463
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	463
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	463
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,22,142,9,3
	.word	85328
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,22,145,9,16,4,11
	.byte	'EVTA',0,4
	.word	463
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	463
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	463
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_CPU_SWEVT_Bits',0,22,153,9,3
	.word	85927
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,22,156,9,16,4,11
	.byte	'FCDSF',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'TS',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	463
	.byte	3,24,2,35,0,11
	.byte	'ESDIS',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	463
	.byte	7,16,2,35,0,11
	.byte	'U1_IED',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'U1_IOS',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	463
	.byte	6,8,2,35,0,11
	.byte	'BHALT',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	463
	.byte	7,0,2,35,0,0,33
	.byte	'Ifx_CPU_SYSCON_Bits',0,22,171,9,3
	.word	86081
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,22,174,9,16,4,11
	.byte	'ASI',0,4
	.word	463
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	463
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,22,178,9,3
	.word	86380
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,22,181,9,16,4,11
	.byte	'TEXP0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	463
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	463
	.byte	15,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_CON_Bits',0,22,189,9,3
	.word	86478
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,22,192,9,16,4,11
	.byte	'EXTIM_CLASS_EN',0,4
	.word	463
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	463
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,22,196,9,3
	.word	86650
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,22,199,9,16,4,11
	.byte	'ENTRY_CVAL',0,4
	.word	463
	.byte	12,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	463
	.byte	20,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,22,203,9,3
	.word	86779
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,22,206,9,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	4,28,2,35,0,11
	.byte	'ENTRY_LVAL',0,4
	.word	463
	.byte	8,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	463
	.byte	20,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,22,211,9,3
	.word	86909
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,22,214,9,16,4,11
	.byte	'EXIT_CVAL',0,4
	.word	463
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	463
	.byte	8,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,22,218,9,3
	.word	87061
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,22,221,9,16,4,11
	.byte	'reserved_0',0,4
	.word	463
	.byte	4,28,2,35,0,11
	.byte	'EXIT_LVAL',0,4
	.word	463
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	463
	.byte	8,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,22,226,9,3
	.word	87188
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_FCX_Bits',0,22,229,9,16,4,11
	.byte	'EXIT_FCX',0,4
	.word	463
	.byte	20,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	463
	.byte	12,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_FCX_Bits',0,22,233,9,3
	.word	87337
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_STAT_Bits',0,22,236,9,16,4,11
	.byte	'EXIT_TIN',0,4
	.word	463
	.byte	8,24,2,35,0,11
	.byte	'EXIT_CLASS',0,4
	.word	463
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	463
	.byte	4,17,2,35,0,11
	.byte	'EXIT_AT',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'ENTRY_TIN',0,4
	.word	463
	.byte	8,8,2,35,0,11
	.byte	'ENTRY_CLASS',0,4
	.word	463
	.byte	3,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	463
	.byte	4,1,2,35,0,11
	.byte	'ENTRY_AT',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_STAT_Bits',0,22,246,9,3
	.word	87451
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,22,249,9,16,4,11
	.byte	'TIMER',0,4
	.word	463
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,22,252,9,3
	.word	87695
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,22,255,9,16,4,11
	.byte	'T0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	463
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,22,138,10,3
	.word	87775
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,22,141,10,16,4,11
	.byte	'ADDR',0,4
	.word	463
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_TR_ADR_Bits',0,22,144,10,3
	.word	87970
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,22,147,10,16,4,11
	.byte	'EVTA',0,4
	.word	463
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	463
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	463
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	463
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	463
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	463
	.byte	3,0,2,35,0,0,33
	.byte	'Ifx_CPU_TR_EVT_Bits',0,22,164,10,3
	.word	88043
	.byte	12,22,172,10,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69398
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_A',0,22,177,10,3
	.word	88361
	.byte	12,22,180,10,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69459
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_BIV',0,22,185,10,3
	.word	88420
	.byte	12,22,188,10,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69538
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_BLK_OMASK',0,22,193,10,3
	.word	88481
	.byte	12,22,196,10,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69676
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_BLK_OTAR',0,22,201,10,3
	.word	88548
	.byte	12,22,204,10,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69797
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_BLK_RABR',0,22,209,10,3
	.word	88614
	.byte	12,22,212,10,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69973
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_BTV',0,22,217,10,3
	.word	88680
	.byte	12,22,220,10,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70059
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CCNT',0,22,225,10,3
	.word	88741
	.byte	12,22,228,10,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70148
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CCTRL',0,22,233,10,3
	.word	88803
	.byte	12,22,236,10,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70295
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_COMPAT',0,22,241,10,3
	.word	88866
	.byte	12,22,244,10,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70424
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CORE_ID',0,22,249,10,3
	.word	88930
	.byte	12,22,252,10,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70524
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CPR_L',0,22,129,11,3
	.word	88995
	.byte	12,22,132,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70619
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CPR_U',0,22,137,11,3
	.word	89058
	.byte	12,22,140,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70714
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CPU_ID',0,22,145,11,3
	.word	89121
	.byte	12,22,148,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70824
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CPXE',0,22,153,11,3
	.word	89185
	.byte	12,22,156,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70916
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CREVT',0,22,161,11,3
	.word	89247
	.byte	12,22,164,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71070
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CUS_ID',0,22,169,11,3
	.word	89310
	.byte	12,22,172,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71164
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_D',0,22,177,11,3
	.word	89374
	.byte	12,22,180,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71227
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DATR',0,22,185,11,3
	.word	89433
	.byte	12,22,188,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71453
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DBGSR',0,22,193,11,3
	.word	89495
	.byte	12,22,196,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71668
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DBGTCR',0,22,201,11,3
	.word	89558
	.byte	12,22,204,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71762
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DCON0',0,22,209,11,3
	.word	89622
	.byte	12,22,212,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71878
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DCON2',0,22,217,11,3
	.word	89685
	.byte	12,22,220,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71979
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DCX',0,22,225,11,3
	.word	89748
	.byte	12,22,228,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72072
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DEADD',0,22,233,11,3
	.word	89809
	.byte	12,22,236,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72152
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DIEAR',0,22,241,11,3
	.word	89872
	.byte	12,22,244,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72221
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DIETR',0,22,249,11,3
	.word	89935
	.byte	12,22,252,11,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72505
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R',0,22,129,12,3
	.word	89998
	.byte	12,22,132,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73096
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W',0,22,137,12,3
	.word	90078
	.byte	12,22,140,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73687
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R',0,22,145,12,3
	.word	90158
	.byte	12,22,148,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74288
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W',0,22,153,12,3
	.word	90238
	.byte	12,22,156,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74889
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA',0,22,161,12,3
	.word	90318
	.byte	12,22,164,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75004
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA',0,22,169,12,3
	.word	90392
	.byte	12,22,172,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75119
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DMS',0,22,177,12,3
	.word	90466
	.byte	12,22,180,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75212
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DPRE',0,22,185,12,3
	.word	90527
	.byte	12,22,188,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75304
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DPR_L',0,22,193,12,3
	.word	90589
	.byte	12,22,196,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75399
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DPR_U',0,22,201,12,3
	.word	90652
	.byte	12,22,204,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75494
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DPWE',0,22,209,12,3
	.word	90715
	.byte	12,22,212,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75586
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DSTR',0,22,217,12,3
	.word	90777
	.byte	12,22,220,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75925
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_EXEVT',0,22,225,12,3
	.word	90839
	.byte	12,22,228,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76079
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FCX',0,22,233,12,3
	.word	90902
	.byte	12,22,236,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76185
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON0',0,22,241,12,3
	.word	90963
	.byte	12,22,244,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76403
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON1',0,22,249,12,3
	.word	91030
	.byte	12,22,252,12,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76594
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON2',0,22,129,13,3
	.word	91097
	.byte	12,22,132,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76894
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON3',0,22,137,13,3
	.word	91164
	.byte	12,22,140,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77199
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON4',0,22,145,13,3
	.word	91231
	.byte	12,22,148,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77300
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,22,153,13,3
	.word	91298
	.byte	12,22,156,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77649
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,22,161,13,3
	.word	91368
	.byte	12,22,164,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77809
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,22,169,13,3
	.word	91438
	.byte	12,22,172,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77890
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,22,177,13,3
	.word	91507
	.byte	12,22,180,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77977
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,22,185,13,3
	.word	91578
	.byte	12,22,188,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78064
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,22,193,13,3
	.word	91649
	.byte	12,22,196,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78151
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_ICNT',0,22,201,13,3
	.word	91720
	.byte	12,22,204,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78242
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_ICR',0,22,209,13,3
	.word	91782
	.byte	12,22,212,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78384
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_ISP',0,22,217,13,3
	.word	91843
	.byte	12,22,220,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78450
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_KRST0',0,22,225,13,3
	.word	91904
	.byte	12,22,228,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78561
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_KRST1',0,22,233,13,3
	.word	91967
	.byte	12,22,236,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78653
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_KRSTCLR',0,22,241,13,3
	.word	92030
	.byte	12,22,244,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78749
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_LCX',0,22,249,13,3
	.word	92095
	.byte	12,22,252,13,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78855
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R',0,22,129,14,3
	.word	92156
	.byte	12,22,132,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79438
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R',0,22,137,14,3
	.word	92232
	.byte	12,22,140,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80031
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_M1CNT',0,22,145,14,3
	.word	92308
	.byte	12,22,148,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80124
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_M2CNT',0,22,153,14,3
	.word	92371
	.byte	12,22,156,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80217
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_M3CNT',0,22,161,14,3
	.word	92434
	.byte	12,22,164,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80310
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_OSEL',0,22,169,14,3
	.word	92497
	.byte	12,22,172,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80383
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PC',0,22,177,14,3
	.word	92559
	.byte	12,22,180,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80468
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PCON0',0,22,185,14,3
	.word	92619
	.byte	12,22,188,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80584
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PCON1',0,22,193,14,3
	.word	92682
	.byte	12,22,196,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80695
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PCON2',0,22,201,14,3
	.word	92745
	.byte	12,22,204,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80796
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PCXI',0,22,209,14,3
	.word	92808
	.byte	12,22,212,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80949
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PIEAR',0,22,217,14,3
	.word	92870
	.byte	12,22,220,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81018
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PIETR',0,22,225,14,3
	.word	92933
	.byte	12,22,228,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81302
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PMA0',0,22,233,14,3
	.word	92996
	.byte	12,22,236,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81393
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PMA1',0,22,241,14,3
	.word	93058
	.byte	12,22,244,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81484
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PMA2',0,22,249,14,3
	.word	93120
	.byte	12,22,252,14,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81575
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PSTR',0,22,129,15,3
	.word	93182
	.byte	12,22,132,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81778
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PSW',0,22,137,15,3
	.word	93244
	.byte	12,22,140,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81983
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_RGN_ACCENA',0,22,145,15,3
	.word	93305
	.byte	12,22,148,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82550
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_RGN_ACCENB',0,22,153,15,3
	.word	93373
	.byte	12,22,156,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83127
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_RGN_LA',0,22,161,15,3
	.word	93441
	.byte	12,22,164,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83222
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_RGN_UA',0,22,169,15,3
	.word	93505
	.byte	12,22,172,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83317
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SEGEN',0,22,177,15,3
	.word	93569
	.byte	12,22,180,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83445
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W',0,22,185,15,3
	.word	93632
	.byte	12,22,188,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	84028
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W',0,22,193,15,3
	.word	93708
	.byte	12,22,196,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	84621
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SMACON',0,22,201,15,3
	.word	93784
	.byte	12,22,204,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	84739
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R',0,22,209,15,3
	.word	93848
	.byte	12,22,212,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85328
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R',0,22,217,15,3
	.word	93927
	.byte	12,22,220,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85927
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SWEVT',0,22,225,15,3
	.word	94006
	.byte	12,22,228,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86081
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SYSCON',0,22,233,15,3
	.word	94069
	.byte	12,22,236,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86380
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TASK_ASI',0,22,241,15,3
	.word	94133
	.byte	12,22,244,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86478
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_CON',0,22,249,15,3
	.word	94199
	.byte	12,22,252,15,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86650
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN',0,22,129,16,3
	.word	94264
	.byte	12,22,132,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86779
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL',0,22,137,16,3
	.word	94340
	.byte	12,22,140,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86909
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL',0,22,145,16,3
	.word	94418
	.byte	12,22,148,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87061
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL',0,22,153,16,3
	.word	94496
	.byte	12,22,156,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87188
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL',0,22,161,16,3
	.word	94573
	.byte	12,22,164,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87337
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_FCX',0,22,169,16,3
	.word	94650
	.byte	12,22,172,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87451
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_STAT',0,22,177,16,3
	.word	94721
	.byte	12,22,180,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87695
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_TIMER',0,22,185,16,3
	.word	94793
	.byte	12,22,188,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87775
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TRIG_ACC',0,22,193,16,3
	.word	94860
	.byte	12,22,196,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87970
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TR_ADR',0,22,201,16,3
	.word	94926
	.byte	12,22,204,16,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88043
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TR_EVT',0,22,209,16,3
	.word	94990
	.byte	10
	.byte	'_Ifx_CPU_RGN',0,22,221,16,25,16,13
	.byte	'LA',0
	.word	93441
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	93505
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	93305
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	93373
	.byte	4,2,35,12,0,14
	.word	95054
	.byte	33
	.byte	'Ifx_CPU_RGN',0,22,227,16,3
	.word	95130
	.byte	10
	.byte	'_Ifx_CPU_BLK',0,22,242,16,25,12,13
	.byte	'RABR',0
	.word	88614
	.byte	4,2,35,0,13
	.byte	'OTAR',0
	.word	88548
	.byte	4,2,35,4,13
	.byte	'OMASK',0
	.word	88481
	.byte	4,2,35,8,0,14
	.word	95156
	.byte	33
	.byte	'Ifx_CPU_BLK',0,22,247,16,3
	.word	95219
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP',0,22,134,17,25,28,13
	.byte	'CON',0
	.word	91298
	.byte	4,2,35,0,13
	.byte	'PC',0
	.word	91438
	.byte	4,2,35,4,13
	.byte	'OPC',0
	.word	91368
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2636
	.byte	4,2,35,12,13
	.byte	'SRC1',0
	.word	91507
	.byte	4,2,35,16,13
	.byte	'SRC2',0
	.word	91578
	.byte	4,2,35,20,13
	.byte	'SRC3',0
	.word	91649
	.byte	4,2,35,24,0,14
	.word	95245
	.byte	33
	.byte	'Ifx_CPU_FPU_TRAP',0,22,143,17,3
	.word	95370
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,22,158,17,25,8,13
	.byte	'L',0
	.word	90589
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	90652
	.byte	4,2,35,4,0,14
	.word	95401
	.byte	33
	.byte	'Ifx_CPU_DPR',0,22,162,17,3
	.word	95443
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,22,177,17,25,8,13
	.byte	'L',0
	.word	88995
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	89058
	.byte	4,2,35,4,0,14
	.word	95469
	.byte	33
	.byte	'Ifx_CPU_CPR',0,22,181,17,3
	.word	95511
	.byte	15,12
	.word	94793
	.byte	16,2,0,10
	.byte	'_Ifx_CPU_TPS',0,22,196,17,25,16,13
	.byte	'CON',0
	.word	94199
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	95537
	.byte	12,2,35,4,0,14
	.word	95546
	.byte	33
	.byte	'Ifx_CPU_TPS',0,22,200,17,3
	.word	95594
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM',0,22,215,17,25,28,13
	.byte	'ENTRY_LVAL',0
	.word	94418
	.byte	4,2,35,0,13
	.byte	'ENTRY_CVAL',0
	.word	94340
	.byte	4,2,35,4,13
	.byte	'EXIT_LVAL',0
	.word	94573
	.byte	4,2,35,8,13
	.byte	'EXIT_CVAL',0
	.word	94496
	.byte	4,2,35,12,13
	.byte	'CLASS_EN',0
	.word	94264
	.byte	4,2,35,16,13
	.byte	'STAT',0
	.word	94721
	.byte	4,2,35,20,13
	.byte	'FCX',0
	.word	94650
	.byte	4,2,35,24,0,14
	.word	95620
	.byte	33
	.byte	'Ifx_CPU_TPS_EXTIM',0,22,224,17,3
	.word	95769
	.byte	10
	.byte	'_Ifx_CPU_TR',0,22,239,17,25,8,13
	.byte	'EVT',0
	.word	94990
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	94926
	.byte	4,2,35,4,0,14
	.word	95801
	.byte	33
	.byte	'Ifx_CPU_TR',0,22,243,17,3
	.word	95846
	.byte	15,128,34
	.word	615
	.byte	16,255,33,0,15,236,253,2
	.word	615
	.byte	16,235,253,2,0,15,244,31
	.word	615
	.byte	16,243,31,0,15,128,1
	.word	95054
	.byte	16,7,0,14
	.word	95906
	.byte	15,232,1
	.word	615
	.byte	16,231,1,0,15,128,48
	.word	615
	.byte	16,255,47,0,15,128,3
	.word	95156
	.byte	16,31,0,14
	.word	95943
	.byte	15,160,39
	.word	615
	.byte	16,159,39,0,15,208,223,1
	.word	615
	.byte	16,207,223,1,0,15,248,1
	.word	615
	.byte	16,247,1,0,15,244,29
	.word	615
	.byte	16,243,29,0,15,188,3
	.word	615
	.byte	16,187,3,0,15,232,3
	.word	615
	.byte	16,231,3,0,15,252,23
	.word	615
	.byte	16,251,23,0,14
	.word	95245
	.byte	15,228,63
	.word	615
	.byte	16,227,63,0,15,144,1
	.word	95401
	.byte	16,17,0,14
	.word	96053
	.byte	15,240,30
	.word	615
	.byte	16,239,30,0,15,80
	.word	95469
	.byte	16,9,0,14
	.word	96079
	.byte	15,176,31
	.word	615
	.byte	16,175,31,0,15,152,7
	.word	615
	.byte	16,151,7,0,14
	.word	95546
	.byte	15,48
	.word	615
	.byte	16,47,0,14
	.word	95620
	.byte	15,164,23
	.word	615
	.byte	16,163,23,0,15,64
	.word	95801
	.byte	16,7,0,14
	.word	96145
	.byte	15,192,23
	.word	615
	.byte	16,191,23,0,15,28
	.word	615
	.byte	16,27,0,15,172,1
	.word	615
	.byte	16,171,1,0,15,64
	.word	89374
	.byte	16,15,0,15,64
	.word	615
	.byte	16,63,0,15,64
	.word	88361
	.byte	16,15,0,10
	.byte	'_Ifx_CPU',0,22,130,18,25,128,128,8,13
	.byte	'reserved_0',0
	.word	95871
	.byte	128,34,2,35,0,13
	.byte	'FLASHCON0',0
	.word	90963
	.byte	4,3,35,128,34,13
	.byte	'FLASHCON1',0
	.word	91030
	.byte	4,3,35,132,34,13
	.byte	'FLASHCON2',0
	.word	91097
	.byte	4,3,35,136,34,13
	.byte	'FLASHCON3',0
	.word	91164
	.byte	4,3,35,140,34,13
	.byte	'FLASHCON4',0
	.word	91231
	.byte	4,3,35,144,34,13
	.byte	'reserved_1114',0
	.word	95882
	.byte	236,253,2,3,35,148,34,13
	.byte	'KRST0',0
	.word	91904
	.byte	4,4,35,128,160,3,13
	.byte	'KRST1',0
	.word	91967
	.byte	4,4,35,132,160,3,13
	.byte	'KRSTCLR',0
	.word	92030
	.byte	4,4,35,136,160,3,13
	.byte	'reserved_D00C',0
	.word	95895
	.byte	244,31,4,35,140,160,3,13
	.byte	'RGN',0
	.word	95916
	.byte	128,1,4,35,128,192,3,13
	.byte	'reserved_E080',0
	.word	4456
	.byte	8,4,35,128,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R0',0
	.word	93848
	.byte	4,4,35,136,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R0',0
	.word	93927
	.byte	4,4,35,140,193,3,13
	.byte	'reserved_E090',0
	.word	4456
	.byte	8,4,35,144,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R1',0
	.word	93848
	.byte	4,4,35,152,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R1',0
	.word	93927
	.byte	4,4,35,156,193,3,13
	.byte	'reserved_E0A0',0
	.word	4456
	.byte	8,4,35,160,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R2',0
	.word	93848
	.byte	4,4,35,168,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R2',0
	.word	93927
	.byte	4,4,35,172,193,3,13
	.byte	'reserved_E0B0',0
	.word	4456
	.byte	8,4,35,176,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R3',0
	.word	93848
	.byte	4,4,35,184,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R3',0
	.word	93927
	.byte	4,4,35,188,193,3,13
	.byte	'reserved_E0C0',0
	.word	4456
	.byte	8,4,35,192,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R4',0
	.word	93848
	.byte	4,4,35,200,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R4',0
	.word	93927
	.byte	4,4,35,204,193,3,13
	.byte	'reserved_E0D0',0
	.word	4456
	.byte	8,4,35,208,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R5',0
	.word	93848
	.byte	4,4,35,216,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R5',0
	.word	93927
	.byte	4,4,35,220,193,3,13
	.byte	'reserved_E0E0',0
	.word	4456
	.byte	8,4,35,224,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R6',0
	.word	93848
	.byte	4,4,35,232,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R6',0
	.word	93927
	.byte	4,4,35,236,193,3,13
	.byte	'reserved_E0F0',0
	.word	4456
	.byte	8,4,35,240,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R7',0
	.word	93848
	.byte	4,4,35,248,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R7',0
	.word	93927
	.byte	4,4,35,252,193,3,13
	.byte	'SFR_SPROT_ACCENA_W',0
	.word	93632
	.byte	4,4,35,128,194,3,13
	.byte	'SFR_SPROT_ACCENB_W',0
	.word	93708
	.byte	4,4,35,132,194,3,13
	.byte	'reserved_E108',0
	.word	4456
	.byte	8,4,35,136,194,3,13
	.byte	'LPB_SPROT_ACCENA_R',0
	.word	92156
	.byte	4,4,35,144,194,3,13
	.byte	'LPB_SPROT_ACCENB_R',0
	.word	92232
	.byte	4,4,35,148,194,3,13
	.byte	'reserved_E118',0
	.word	95921
	.byte	232,1,4,35,152,194,3,13
	.byte	'DLMU_SPROT_RGNLA0',0
	.word	90318
	.byte	4,4,35,128,196,3,13
	.byte	'DLMU_SPROT_RGNUA0',0
	.word	90392
	.byte	4,4,35,132,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W0',0
	.word	90078
	.byte	4,4,35,136,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W0',0
	.word	90238
	.byte	4,4,35,140,196,3,13
	.byte	'DLMU_SPROT_RGNLA1',0
	.word	90318
	.byte	4,4,35,144,196,3,13
	.byte	'DLMU_SPROT_RGNUA1',0
	.word	90392
	.byte	4,4,35,148,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W1',0
	.word	90078
	.byte	4,4,35,152,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W1',0
	.word	90238
	.byte	4,4,35,156,196,3,13
	.byte	'DLMU_SPROT_RGNLA2',0
	.word	90318
	.byte	4,4,35,160,196,3,13
	.byte	'DLMU_SPROT_RGNUA2',0
	.word	90392
	.byte	4,4,35,164,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W2',0
	.word	90078
	.byte	4,4,35,168,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W2',0
	.word	90238
	.byte	4,4,35,172,196,3,13
	.byte	'DLMU_SPROT_RGNLA3',0
	.word	90318
	.byte	4,4,35,176,196,3,13
	.byte	'DLMU_SPROT_RGNUA3',0
	.word	90392
	.byte	4,4,35,180,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W3',0
	.word	90078
	.byte	4,4,35,184,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W3',0
	.word	90238
	.byte	4,4,35,188,196,3,13
	.byte	'DLMU_SPROT_RGNLA4',0
	.word	90318
	.byte	4,4,35,192,196,3,13
	.byte	'DLMU_SPROT_RGNUA4',0
	.word	90392
	.byte	4,4,35,196,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W4',0
	.word	90078
	.byte	4,4,35,200,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W4',0
	.word	90238
	.byte	4,4,35,204,196,3,13
	.byte	'DLMU_SPROT_RGNLA5',0
	.word	90318
	.byte	4,4,35,208,196,3,13
	.byte	'DLMU_SPROT_RGNUA5',0
	.word	90392
	.byte	4,4,35,212,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W5',0
	.word	90078
	.byte	4,4,35,216,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W5',0
	.word	90238
	.byte	4,4,35,220,196,3,13
	.byte	'DLMU_SPROT_RGNLA6',0
	.word	90318
	.byte	4,4,35,224,196,3,13
	.byte	'DLMU_SPROT_RGNUA6',0
	.word	90392
	.byte	4,4,35,228,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W6',0
	.word	90078
	.byte	4,4,35,232,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W6',0
	.word	90238
	.byte	4,4,35,236,196,3,13
	.byte	'DLMU_SPROT_RGNLA7',0
	.word	90318
	.byte	4,4,35,240,196,3,13
	.byte	'DLMU_SPROT_RGNUA7',0
	.word	90392
	.byte	4,4,35,244,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W7',0
	.word	90078
	.byte	4,4,35,248,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W7',0
	.word	90238
	.byte	4,4,35,252,196,3,13
	.byte	'reserved_E280',0
	.word	4456
	.byte	8,4,35,128,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R0',0
	.word	89998
	.byte	4,4,35,136,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R0',0
	.word	90158
	.byte	4,4,35,140,197,3,13
	.byte	'reserved_E290',0
	.word	4456
	.byte	8,4,35,144,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R1',0
	.word	89998
	.byte	4,4,35,152,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R1',0
	.word	90158
	.byte	4,4,35,156,197,3,13
	.byte	'reserved_E2A0',0
	.word	4456
	.byte	8,4,35,160,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R2',0
	.word	89998
	.byte	4,4,35,168,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R2',0
	.word	90158
	.byte	4,4,35,172,197,3,13
	.byte	'reserved_E2B0',0
	.word	4456
	.byte	8,4,35,176,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R3',0
	.word	89998
	.byte	4,4,35,184,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R3',0
	.word	90158
	.byte	4,4,35,188,197,3,13
	.byte	'reserved_E2C0',0
	.word	4456
	.byte	8,4,35,192,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R4',0
	.word	89998
	.byte	4,4,35,200,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R4',0
	.word	90158
	.byte	4,4,35,204,197,3,13
	.byte	'reserved_E2D0',0
	.word	4456
	.byte	8,4,35,208,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R5',0
	.word	89998
	.byte	4,4,35,216,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R5',0
	.word	90158
	.byte	4,4,35,220,197,3,13
	.byte	'reserved_E2E0',0
	.word	4456
	.byte	8,4,35,224,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R6',0
	.word	89998
	.byte	4,4,35,232,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R6',0
	.word	90158
	.byte	4,4,35,236,197,3,13
	.byte	'reserved_E2F0',0
	.word	4456
	.byte	8,4,35,240,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R7',0
	.word	89998
	.byte	4,4,35,248,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R7',0
	.word	90158
	.byte	4,4,35,252,197,3,13
	.byte	'reserved_E300',0
	.word	95932
	.byte	128,48,4,35,128,198,3,13
	.byte	'OSEL',0
	.word	92497
	.byte	4,4,35,128,246,3,13
	.byte	'reserved_FB04',0
	.word	4796
	.byte	12,4,35,132,246,3,13
	.byte	'BLK',0
	.word	95953
	.byte	128,3,4,35,144,246,3,13
	.byte	'reserved_FC90',0
	.word	95958
	.byte	160,39,4,35,144,249,3,13
	.byte	'SEGEN',0
	.word	93569
	.byte	4,4,35,176,160,4,13
	.byte	'reserved_11034',0
	.word	95969
	.byte	208,223,1,4,35,180,160,4,13
	.byte	'TASK_ASI',0
	.word	94133
	.byte	4,4,35,132,128,6,13
	.byte	'reserved_18008',0
	.word	95982
	.byte	248,1,4,35,136,128,6,13
	.byte	'PMA0',0
	.word	92996
	.byte	4,4,35,128,130,6,13
	.byte	'PMA1',0
	.word	93058
	.byte	4,4,35,132,130,6,13
	.byte	'PMA2',0
	.word	93120
	.byte	4,4,35,136,130,6,13
	.byte	'reserved_1810C',0
	.word	95993
	.byte	244,29,4,35,140,130,6,13
	.byte	'DCON2',0
	.word	89685
	.byte	4,4,35,128,160,6,13
	.byte	'reserved_19004',0
	.word	4456
	.byte	8,4,35,132,160,6,13
	.byte	'SMACON',0
	.word	93784
	.byte	4,4,35,140,160,6,13
	.byte	'DSTR',0
	.word	90777
	.byte	4,4,35,144,160,6,13
	.byte	'reserved_19014',0
	.word	2636
	.byte	4,4,35,148,160,6,13
	.byte	'DATR',0
	.word	89433
	.byte	4,4,35,152,160,6,13
	.byte	'DEADD',0
	.word	89809
	.byte	4,4,35,156,160,6,13
	.byte	'DIEAR',0
	.word	89872
	.byte	4,4,35,160,160,6,13
	.byte	'DIETR',0
	.word	89935
	.byte	4,4,35,164,160,6,13
	.byte	'reserved_19028',0
	.word	3827
	.byte	24,4,35,168,160,6,13
	.byte	'DCON0',0
	.word	89622
	.byte	4,4,35,192,160,6,13
	.byte	'reserved_19044',0
	.word	96004
	.byte	188,3,4,35,196,160,6,13
	.byte	'PSTR',0
	.word	93182
	.byte	4,4,35,128,164,6,13
	.byte	'PCON1',0
	.word	92682
	.byte	4,4,35,132,164,6,13
	.byte	'PCON2',0
	.word	92745
	.byte	4,4,35,136,164,6,13
	.byte	'PCON0',0
	.word	92619
	.byte	4,4,35,140,164,6,13
	.byte	'PIEAR',0
	.word	92870
	.byte	4,4,35,144,164,6,13
	.byte	'PIETR',0
	.word	92933
	.byte	4,4,35,148,164,6,13
	.byte	'reserved_19218',0
	.word	96015
	.byte	232,3,4,35,152,164,6,13
	.byte	'COMPAT',0
	.word	88866
	.byte	4,4,35,128,168,6,13
	.byte	'reserved_19404',0
	.word	96026
	.byte	252,23,4,35,132,168,6,13
	.byte	'FPU_TRAP',0
	.word	96037
	.byte	28,4,35,128,192,6,13
	.byte	'reserved_1A01C',0
	.word	96042
	.byte	228,63,4,35,156,192,6,13
	.byte	'DPR',0
	.word	96063
	.byte	144,1,4,35,128,128,7,13
	.byte	'reserved_1C090',0
	.word	96068
	.byte	240,30,4,35,144,129,7,13
	.byte	'CPR',0
	.word	96088
	.byte	80,4,35,128,160,7,13
	.byte	'reserved_1D050',0
	.word	96093
	.byte	176,31,4,35,208,160,7,13
	.byte	'CPXE_0',0
	.word	89185
	.byte	4,4,35,128,192,7,13
	.byte	'CPXE_1',0
	.word	89185
	.byte	4,4,35,132,192,7,13
	.byte	'CPXE_2',0
	.word	89185
	.byte	4,4,35,136,192,7,13
	.byte	'CPXE_3',0
	.word	89185
	.byte	4,4,35,140,192,7,13
	.byte	'DPRE_0',0
	.word	90527
	.byte	4,4,35,144,192,7,13
	.byte	'DPRE_1',0
	.word	90527
	.byte	4,4,35,148,192,7,13
	.byte	'DPRE_2',0
	.word	90527
	.byte	4,4,35,152,192,7,13
	.byte	'DPRE_3',0
	.word	90527
	.byte	4,4,35,156,192,7,13
	.byte	'DPWE_0',0
	.word	90715
	.byte	4,4,35,160,192,7,13
	.byte	'DPWE_1',0
	.word	90715
	.byte	4,4,35,164,192,7,13
	.byte	'DPWE_2',0
	.word	90715
	.byte	4,4,35,168,192,7,13
	.byte	'DPWE_3',0
	.word	90715
	.byte	4,4,35,172,192,7,13
	.byte	'reserved_1E030',0
	.word	60760
	.byte	16,4,35,176,192,7,13
	.byte	'CPXE_4',0
	.word	89185
	.byte	4,4,35,192,192,7,13
	.byte	'CPXE_5',0
	.word	89185
	.byte	4,4,35,196,192,7,13
	.byte	'reserved_1E048',0
	.word	4456
	.byte	8,4,35,200,192,7,13
	.byte	'DPRE_4',0
	.word	90527
	.byte	4,4,35,208,192,7,13
	.byte	'DPRE_5',0
	.word	90527
	.byte	4,4,35,212,192,7,13
	.byte	'reserved_1E058',0
	.word	4456
	.byte	8,4,35,216,192,7,13
	.byte	'DPWE_4',0
	.word	90715
	.byte	4,4,35,224,192,7,13
	.byte	'DPWE_5',0
	.word	90715
	.byte	4,4,35,228,192,7,13
	.byte	'reserved_1E068',0
	.word	96104
	.byte	152,7,4,35,232,192,7,13
	.byte	'TPS',0
	.word	96115
	.byte	16,4,35,128,200,7,13
	.byte	'reserved_1E410',0
	.word	96120
	.byte	48,4,35,144,200,7,13
	.byte	'TPS_EXTIM',0
	.word	96129
	.byte	28,4,35,192,200,7,13
	.byte	'reserved_1E45C',0
	.word	96134
	.byte	164,23,4,35,220,200,7,13
	.byte	'TR',0
	.word	96154
	.byte	64,4,35,128,224,7,13
	.byte	'reserved_1F040',0
	.word	96159
	.byte	192,23,4,35,192,224,7,13
	.byte	'CCTRL',0
	.word	88803
	.byte	4,4,35,128,248,7,13
	.byte	'CCNT',0
	.word	88741
	.byte	4,4,35,132,248,7,13
	.byte	'ICNT',0
	.word	91720
	.byte	4,4,35,136,248,7,13
	.byte	'M1CNT',0
	.word	92308
	.byte	4,4,35,140,248,7,13
	.byte	'M2CNT',0
	.word	92371
	.byte	4,4,35,144,248,7,13
	.byte	'M3CNT',0
	.word	92434
	.byte	4,4,35,148,248,7,13
	.byte	'reserved_1FC18',0
	.word	95921
	.byte	232,1,4,35,152,248,7,13
	.byte	'DBGSR',0
	.word	89495
	.byte	4,4,35,128,250,7,13
	.byte	'reserved_1FD04',0
	.word	2636
	.byte	4,4,35,132,250,7,13
	.byte	'EXEVT',0
	.word	90839
	.byte	4,4,35,136,250,7,13
	.byte	'CREVT',0
	.word	89247
	.byte	4,4,35,140,250,7,13
	.byte	'SWEVT',0
	.word	94006
	.byte	4,4,35,144,250,7,13
	.byte	'reserved_1FD14',0
	.word	96170
	.byte	28,4,35,148,250,7,13
	.byte	'TRIG_ACC',0
	.word	94860
	.byte	4,4,35,176,250,7,13
	.byte	'reserved_1FD34',0
	.word	4796
	.byte	12,4,35,180,250,7,13
	.byte	'DMS',0
	.word	90466
	.byte	4,4,35,192,250,7,13
	.byte	'DCX',0
	.word	89748
	.byte	4,4,35,196,250,7,13
	.byte	'DBGTCR',0
	.word	89558
	.byte	4,4,35,200,250,7,13
	.byte	'reserved_1FD4C',0
	.word	20099
	.byte	180,1,4,35,204,250,7,13
	.byte	'PCXI',0
	.word	92808
	.byte	4,4,35,128,252,7,13
	.byte	'PSW',0
	.word	93244
	.byte	4,4,35,132,252,7,13
	.byte	'PC',0
	.word	92559
	.byte	4,4,35,136,252,7,13
	.byte	'reserved_1FE0C',0
	.word	4456
	.byte	8,4,35,140,252,7,13
	.byte	'SYSCON',0
	.word	94069
	.byte	4,4,35,148,252,7,13
	.byte	'CPU_ID',0
	.word	89121
	.byte	4,4,35,152,252,7,13
	.byte	'CORE_ID',0
	.word	88930
	.byte	4,4,35,156,252,7,13
	.byte	'BIV',0
	.word	88420
	.byte	4,4,35,160,252,7,13
	.byte	'BTV',0
	.word	88680
	.byte	4,4,35,164,252,7,13
	.byte	'ISP',0
	.word	91843
	.byte	4,4,35,168,252,7,13
	.byte	'ICR',0
	.word	91782
	.byte	4,4,35,172,252,7,13
	.byte	'reserved_1FE30',0
	.word	4456
	.byte	8,4,35,176,252,7,13
	.byte	'FCX',0
	.word	90902
	.byte	4,4,35,184,252,7,13
	.byte	'LCX',0
	.word	92095
	.byte	4,4,35,188,252,7,13
	.byte	'reserved_1FE40',0
	.word	60760
	.byte	16,4,35,192,252,7,13
	.byte	'CUS_ID',0
	.word	89310
	.byte	4,4,35,208,252,7,13
	.byte	'reserved_1FE54',0
	.word	96179
	.byte	172,1,4,35,212,252,7,13
	.byte	'D',0
	.word	96190
	.byte	64,4,35,128,254,7,13
	.byte	'reserved_1FF40',0
	.word	96199
	.byte	64,4,35,192,254,7,13
	.byte	'A',0
	.word	96208
	.byte	64,4,35,128,255,7,13
	.byte	'reserved_1FFC0',0
	.word	96199
	.byte	64,4,35,192,255,7,0,14
	.word	96217
	.byte	33
	.byte	'Ifx_CPU',0,22,210,19,3
	.word	101315
	.byte	17,10,124,9,1,18
	.byte	'IfxCpu_Id_0',0,0,18
	.byte	'IfxCpu_Id_1',0,1,18
	.byte	'IfxCpu_Id_2',0,2,18
	.byte	'IfxCpu_Id_3',0,3,18
	.byte	'IfxCpu_Id_4',0,4,18
	.byte	'IfxCpu_Id_6',0,6,18
	.byte	'IfxCpu_Id_none',0,7,0,33
	.byte	'IfxCpu_Id',0,10,133,1,3
	.word	101337
	.byte	33
	.byte	'IfxCpu_ResourceCpu',0,10,170,1,3
	.word	10308
	.byte	10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,23,68,16,4,11
	.byte	'EN0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	615
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_STM_ACCEN0_Bits',0,23,102,3
	.word	101491
	.byte	10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,23,105,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_ACCEN1_Bits',0,23,108,3
	.word	102048
	.byte	10
	.byte	'_Ifx_STM_CAP_Bits',0,23,111,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_CAP_Bits',0,23,114,3
	.word	102125
	.byte	10
	.byte	'_Ifx_STM_CAPSV_Bits',0,23,117,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_CAPSV_Bits',0,23,120,3
	.word	102198
	.byte	10
	.byte	'_Ifx_STM_CLC_Bits',0,23,123,16,4,11
	.byte	'DISR',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	440
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_STM_CLC_Bits',0,23,130,1,3
	.word	102275
	.byte	10
	.byte	'_Ifx_STM_CMCON_Bits',0,23,133,1,16,4,11
	.byte	'MSIZE0',0,1
	.word	615
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	615
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	615
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	615
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	615
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	615
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	615
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	615
	.byte	3,0,2,35,3,0,33
	.byte	'Ifx_STM_CMCON_Bits',0,23,143,1,3
	.word	102417
	.byte	10
	.byte	'_Ifx_STM_CMP_Bits',0,23,146,1,16,4,11
	.byte	'CMPVAL',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_CMP_Bits',0,23,149,1,3
	.word	102637
	.byte	10
	.byte	'_Ifx_STM_ICR_Bits',0,23,152,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	440
	.byte	25,0,2,35,0,0,33
	.byte	'Ifx_STM_ICR_Bits',0,23,162,1,3
	.word	102706
	.byte	10
	.byte	'_Ifx_STM_ID_Bits',0,23,165,1,16,4,11
	.byte	'MODREV',0,1
	.word	615
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	615
	.byte	8,0,2,35,1,11
	.byte	'MODNUM',0,2
	.word	632
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_STM_ID_Bits',0,23,170,1,3
	.word	102909
	.byte	10
	.byte	'_Ifx_STM_ISCR_Bits',0,23,173,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	440
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_STM_ISCR_Bits',0,23,180,1,3
	.word	103013
	.byte	10
	.byte	'_Ifx_STM_KRST0_Bits',0,23,183,1,16,4,11
	.byte	'RST',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	440
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_STM_KRST0_Bits',0,23,188,1,3
	.word	103164
	.byte	10
	.byte	'_Ifx_STM_KRST1_Bits',0,23,191,1,16,4,11
	.byte	'RST',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	440
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_STM_KRST1_Bits',0,23,195,1,3
	.word	103275
	.byte	10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,23,198,1,16,4,11
	.byte	'CLR',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	440
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_STM_KRSTCLR_Bits',0,23,202,1,3
	.word	103367
	.byte	10
	.byte	'_Ifx_STM_OCS_Bits',0,23,205,1,16,4,11
	.byte	'reserved_0',0,1
	.word	615
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	440
	.byte	21,8,2,35,0,11
	.byte	'SUS',0,1
	.word	615
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	615
	.byte	2,0,2,35,3,0,33
	.byte	'Ifx_STM_OCS_Bits',0,23,213,1,3
	.word	103463
	.byte	10
	.byte	'_Ifx_STM_TIM0_Bits',0,23,216,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM0_Bits',0,23,219,1,3
	.word	103631
	.byte	10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,23,222,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM0SV_Bits',0,23,225,1,3
	.word	103704
	.byte	10
	.byte	'_Ifx_STM_TIM1_Bits',0,23,228,1,16,4,11
	.byte	'STM_35_4',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM1_Bits',0,23,231,1,3
	.word	103781
	.byte	10
	.byte	'_Ifx_STM_TIM2_Bits',0,23,234,1,16,4,11
	.byte	'STM_39_8',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM2_Bits',0,23,237,1,3
	.word	103854
	.byte	10
	.byte	'_Ifx_STM_TIM3_Bits',0,23,240,1,16,4,11
	.byte	'STM_43_12',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM3_Bits',0,23,243,1,3
	.word	103927
	.byte	10
	.byte	'_Ifx_STM_TIM4_Bits',0,23,246,1,16,4,11
	.byte	'STM_47_16',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM4_Bits',0,23,249,1,3
	.word	104001
	.byte	10
	.byte	'_Ifx_STM_TIM5_Bits',0,23,252,1,16,4,11
	.byte	'STM_51_20',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM5_Bits',0,23,255,1,3
	.word	104075
	.byte	10
	.byte	'_Ifx_STM_TIM6_Bits',0,23,130,2,16,4,11
	.byte	'STM_63_32',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM6_Bits',0,23,133,2,3
	.word	104149
	.byte	12,23,141,2,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101491
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_ACCEN0',0,23,146,2,3
	.word	104223
	.byte	12,23,149,2,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102048
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_ACCEN1',0,23,154,2,3
	.word	104287
	.byte	12,23,157,2,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102125
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_CAP',0,23,162,2,3
	.word	104351
	.byte	12,23,165,2,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102198
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_CAPSV',0,23,170,2,3
	.word	104412
	.byte	12,23,173,2,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102275
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_CLC',0,23,178,2,3
	.word	104475
	.byte	12,23,181,2,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102417
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_CMCON',0,23,186,2,3
	.word	104536
	.byte	12,23,189,2,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102637
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_CMP',0,23,194,2,3
	.word	104599
	.byte	12,23,197,2,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102706
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_ICR',0,23,202,2,3
	.word	104660
	.byte	12,23,205,2,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102909
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_ID',0,23,210,2,3
	.word	104721
	.byte	12,23,213,2,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103013
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_ISCR',0,23,218,2,3
	.word	104781
	.byte	12,23,221,2,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103164
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_KRST0',0,23,226,2,3
	.word	104843
	.byte	12,23,229,2,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103275
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_KRST1',0,23,234,2,3
	.word	104906
	.byte	12,23,237,2,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103367
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_KRSTCLR',0,23,242,2,3
	.word	104969
	.byte	12,23,245,2,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103463
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_OCS',0,23,250,2,3
	.word	105034
	.byte	12,23,253,2,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103631
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM0',0,23,130,3,3
	.word	105095
	.byte	12,23,133,3,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103704
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM0SV',0,23,138,3,3
	.word	105157
	.byte	12,23,141,3,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103781
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM1',0,23,146,3,3
	.word	105221
	.byte	12,23,149,3,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103854
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM2',0,23,154,3,3
	.word	105283
	.byte	12,23,157,3,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103927
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM3',0,23,162,3,3
	.word	105345
	.byte	12,23,165,3,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104001
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM4',0,23,170,3,3
	.word	105407
	.byte	12,23,173,3,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104075
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM5',0,23,178,3,3
	.word	105469
	.byte	12,23,181,3,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104149
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM6',0,23,186,3,3
	.word	105531
	.byte	17,9,141,1,9,1,18
	.byte	'IfxCpu_CounterMode_normal',0,0,18
	.byte	'IfxCpu_CounterMode_task',0,1,0,33
	.byte	'IfxCpu_CounterMode',0,9,145,1,3
	.word	105593
	.byte	20,9,198,1,9,6,13
	.byte	'counter',0
	.word	10555
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	615
	.byte	1,2,35,4,0,33
	.byte	'IfxCpu_Counter',0,9,202,1,3
	.word	105682
	.byte	20,9,210,1,9,32,13
	.byte	'instruction',0
	.word	105682
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	105682
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	105682
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	105682
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	105682
	.byte	6,2,35,24,0,33
	.byte	'IfxCpu_Perf',0,9,217,1,3
	.word	105748
	.byte	10
	.byte	'_Ifx_SMU_ACCEN0_Bits',0,24,68,16,4,11
	.byte	'EN0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	615
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SMU_ACCEN0_Bits',0,24,102,3
	.word	105866
	.byte	10
	.byte	'_Ifx_SMU_ACCEN1_Bits',0,24,105,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SMU_ACCEN1_Bits',0,24,108,3
	.word	106423
	.byte	10
	.byte	'_Ifx_SMU_AD_Bits',0,24,111,16,4,11
	.byte	'DF0',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'DF1',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'DF2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'DF3',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'DF4',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'DF5',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'DF6',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'DF7',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'DF8',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'DF9',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'DF10',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'DF11',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'DF12',0,1
	.word	615
	.byte	1,3,2,35,1,11
	.byte	'DF13',0,1
	.word	615
	.byte	1,2,2,35,1,11
	.byte	'DF14',0,1
	.word	615
	.byte	1,1,2,35,1,11
	.byte	'DF15',0,1
	.word	615
	.byte	1,0,2,35,1,11
	.byte	'DF16',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'DF17',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'DF18',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'DF19',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'DF20',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'DF21',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'DF22',0,1
	.word	615
	.byte	1,1,2,35,2,11
	.byte	'DF23',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'DF24',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'DF25',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'DF26',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'DF27',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'DF28',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'DF29',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'DF30',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'DF31',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SMU_AD_Bits',0,24,145,1,3
	.word	106500
	.byte	10
	.byte	'_Ifx_SMU_AEX_Bits',0,24,148,1,16,4,11
	.byte	'IRQ0STS',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'IRQ1STS',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'IRQ2STS',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'RST0STS',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'RST1STS',0,1
	.word	615
	.byte	1,3,2,35,0,11
	.byte	'RST2STS',0,1
	.word	615
	.byte	1,2,2,35,0,11
	.byte	'RST3STS',0,1
	.word	615
	.byte	1,1,2,35,0,11
	.byte	'RST4STS',0,1
	.word	615
	.byte	1,0,2,35,0,11
	.byte	'RST5STS',0,1
	.word	615
	.byte	1,7,2,35,1,11
	.byte	'NMISTS',0,1
	.word	615
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	615
	.byte	1,5,2,35,1,11
	.byte	'EMSSTS',0,1
	.word	615
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	615
	.byte	4,0,2,35,1,11
	.byte	'IRQ0AEM',0,1
	.word	615
	.byte	1,7,2,35,2,11
	.byte	'IRQ1AEM',0,1
	.word	615
	.byte	1,6,2,35,2,11
	.byte	'IRQ2AEM',0,1
	.word	615
	.byte	1,5,2,35,2,11
	.byte	'RST0AEM',0,1
	.word	615
	.byte	1,4,2,35,2,11
	.byte	'RST1AEM',0,1
	.word	615
	.byte	1,3,2,35,2,11
	.byte	'RST2AEM',0,1
	.word	615
	.byte	1,2,2,35,2,11
	.byte	'RST3AEM',0,1
	.word	615
	.byte	1,1,2,35,2,11
	.byte	'RST4AEM',0,1
	.word	615
	.byte	1,0,2,35,2,11
	.byte	'RST5AEM',0,1
	.word	615
	.byte	1,7,2,35,3,11
	.byte	'NMIAEM',0,1
	.word	615
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	615
	.byte	1,5,2,35,3,11
	.byte	'EMSAEM',0,1
	.word	615
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	615
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SMU_AEX_Bits',0,24,176,1,3
	.word	107050
	.byte	10
	.byte	'_Ifx_SMU_AEXCLR_Bits',0,24,179,1,16,4,11
	.byte	'IRQ0CLR',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'IRQ1CLR',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'IRQ2CLR',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'RST0CLR',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'RST1CLR',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'RST2CLR',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'RST3CLR',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'RST4CLR',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'RST5CLR',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'NMICLR',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'EMSCLR',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	463
	.byte	4,16,2,35,0,11
	.byte	'IRQ0AEMCLR',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'IRQ1AEMCLR',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'IRQ2AEMCLR',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'RST0AEMCLR',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'RST1AEMCLR',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'RST2AEMCLR',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'RST3AEMCLR',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'RST4AEMCLR',0,4
	.word	463
	.byte	1,8,2,35,0,11
	.byte	'RST5AEMCLR',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'NMIAEMCLR',0,4
	.word	463
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'EMSAEMCLR',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	463
	.byte	4,0,2,35,0,0,33
	.byte	'Ifx_SMU_AEXCLR_Bits',0,24,207,1,3
	.word	107607
	.byte	10
	.byte	'_Ifx_SMU_AFCNT_Bits',0,24,210,1,16,4,11
	.byte	'FCNT',0,1
	.word	615
	.byte	4,4,2,35,0,11
	.byte	'ACNT',0,2
	.word	632
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	632
	.byte	14,2,2,35,2,11
	.byte	'FCO',0,1
	.word	615
	.byte	1,1,2,35,3,11
	.byte	'ACO',0,1
	.word	615
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SMU_AFCNT_Bits',0,24,217,1,3
	.word	108203
	.byte	10
	.byte	'_Ifx_SMU_AG_Bits',0,24,220,1,16,4,11
	.byte	'SF0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'SF1',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'SF2',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'SF3',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'SF4',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'SF5',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'SF6',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'SF7',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'SF8',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'SF9',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'SF10',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'SF11',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'SF12',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'SF13',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'SF14',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'SF15',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'SF16',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'SF17',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'SF18',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'SF19',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'SF20',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'SF21',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'SF22',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'SF23',0,4
	.word	463
	.byte	1,8,2,35,0,11
	.byte	'SF24',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'SF25',0,4
	.word	463
	.byte	1,6,2,35,0,11
	.byte	'SF26',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'SF27',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'SF28',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'SF29',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'SF30',0,4
	.word	463
	.byte	1,1,2,35,0,11
	.byte	'SF31',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_SMU_AG_Bits',0,24,254,1,3
	.word	108343
	.byte	10
	.byte	'_Ifx_SMU_AGC_Bits',0,24,129,2,16,4,11
	.byte	'IGCS0',0,4
	.word	463
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'IGCS1',0,4
	.word	463
	.byte	3,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'IGCS2',0,4
	.word	463
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	463
	.byte	5,16,2,35,0,11
	.byte	'RCS',0,4
	.word	463
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	463
	.byte	2,8,2,35,0,11
	.byte	'PES',0,4
	.word	463
	.byte	5,3,2,35,0,11
	.byte	'EFRST',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	463
	.byte	2,0,2,35,0,0,33
	.byte	'Ifx_SMU_AGC_Bits',0,24,142,2,3
	.word	108894
	.byte	10
	.byte	'_Ifx_SMU_AGCF_Bits',0,24,145,2,16,4,11
	.byte	'CF0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'CF1',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'CF2',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'CF3',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'CF4',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'CF5',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'CF6',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'CF7',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'CF8',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'CF9',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'CF10',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'CF11',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'CF12',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'CF13',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'CF14',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'CF15',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'CF16',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'CF17',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'CF18',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'CF19',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'CF20',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'CF21',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'CF22',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'CF23',0,4
	.word	463
	.byte	1,8,2,35,0,11
	.byte	'CF24',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'CF25',0,4
	.word	463
	.byte	1,6,2,35,0,11
	.byte	'CF26',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'CF27',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'CF28',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'CF29',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'CF30',0,4
	.word	463
	.byte	1,1,2,35,0,11
	.byte	'CF31',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_SMU_AGCF_Bits',0,24,179,2,3
	.word	109156
	.byte	10
	.byte	'_Ifx_SMU_AGFSP_Bits',0,24,182,2,16,4,11
	.byte	'FE0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'FE1',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'FE2',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'FE3',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'FE4',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'FE5',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'FE6',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'FE7',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'FE8',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'FE9',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'FE10',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'FE11',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'FE12',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'FE13',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'FE14',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'FE15',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'FE16',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'FE17',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'FE18',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'FE19',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'FE20',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'FE21',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'FE22',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'FE23',0,4
	.word	463
	.byte	1,8,2,35,0,11
	.byte	'FE24',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'FE25',0,4
	.word	463
	.byte	1,6,2,35,0,11
	.byte	'FE26',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'FE27',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'FE28',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'FE29',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'FE30',0,4
	.word	463
	.byte	1,1,2,35,0,11
	.byte	'FE31',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_SMU_AGFSP_Bits',0,24,216,2,3
	.word	109711
	.byte	10
	.byte	'_Ifx_SMU_CLC_Bits',0,24,219,2,16,4,11
	.byte	'DISR',0,1
	.word	615
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	615
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	440
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SMU_CLC_Bits',0,24,226,2,3
	.word	110268
	.byte	10
	.byte	'_Ifx_SMU_CMD_Bits',0,24,229,2,16,4,11
	.byte	'CMD',0,4
	.word	463
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	463
	.byte	4,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	463
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SMU_CMD_Bits',0,24,234,2,3
	.word	110411
	.byte	10
	.byte	'_Ifx_SMU_DBG_Bits',0,24,237,2,16,4,11
	.byte	'SSM',0,1
	.word	615
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	440
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SMU_DBG_Bits',0,24,241,2,3
	.word	110514
	.byte	10
	.byte	'_Ifx_SMU_FSP_Bits',0,24,244,2,16,4,11
	.byte	'PRE1',0,4
	.word	463
	.byte	3,29,2,35,0,11
	.byte	'PRE2',0,4
	.word	463
	.byte	2,27,2,35,0,11
	.byte	'MODE',0,4
	.word	463
	.byte	2,25,2,35,0,11
	.byte	'PES',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'TFSP_LOW',0,4
	.word	463
	.byte	14,10,2,35,0,11
	.byte	'TFSP_HIGH',0,4
	.word	463
	.byte	10,0,2,35,0,0,33
	.byte	'Ifx_SMU_FSP_Bits',0,24,252,2,3
	.word	110602
	.byte	10
	.byte	'_Ifx_SMU_ID_Bits',0,24,255,2,16,4,11
	.byte	'MOD_REV',0,1
	.word	615
	.byte	8,0,2,35,0,11
	.byte	'MOD_TYPE',0,1
	.word	615
	.byte	8,0,2,35,1,11
	.byte	'MOD_NUMBER',0,2
	.word	632
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SMU_ID_Bits',0,24,132,3,3
	.word	110757
	.byte	10
	.byte	'_Ifx_SMU_KEYS_Bits',0,24,135,3,16,4,11
	.byte	'CFGLCK',0,4
	.word	463
	.byte	8,24,2,35,0,11
	.byte	'PERLCK',0,4
	.word	463
	.byte	8,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	463
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_SMU_KEYS_Bits',0,24,140,3,3
	.word	110867
	.byte	10
	.byte	'_Ifx_SMU_OCS_Bits',0,24,143,3,16,4,11
	.byte	'TGS',0,1
	.word	615
	.byte	2,6,2,35,0,11
	.byte	'TGB',0,1
	.word	615
	.byte	1,5,2,35,0,11
	.byte	'TG_P',0,1
	.word	615
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	440
	.byte	20,8,2,35,0,11
	.byte	'SUS',0,1
	.word	615
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	615
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	615
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	615
	.byte	2,0,2,35,3,0,33
	.byte	'Ifx_SMU_OCS_Bits',0,24,153,3,3
	.word	110979
	.byte	10
	.byte	'_Ifx_SMU_PCTL_Bits',0,24,156,3,16,4,11
	.byte	'HWDIR',0,4
	.word	463
	.byte	2,30,2,35,0,11
	.byte	'HWEN',0,4
	.word	463
	.byte	2,28,2,35,0,11
	.byte	'GFSCU_EN',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'GFSTS_EN',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'PCS',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	463
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	463
	.byte	9,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	463
	.byte	9,0,2,35,0,0,33
	.byte	'Ifx_SMU_PCTL_Bits',0,24,167,3,3
	.word	111171
	.byte	10
	.byte	'_Ifx_SMU_RMCTL_Bits',0,24,170,3,16,4,11
	.byte	'TE0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'TE1',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'TE2',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'TE3',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'TE4',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'TE5',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'TE6',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'TE7',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'TE8',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'TE9',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'TE10',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	463
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	463
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	463
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_SMU_RMCTL_Bits',0,24,204,3,3
	.word	111402
	.byte	10
	.byte	'_Ifx_SMU_RMEF_Bits',0,24,207,3,16,4,11
	.byte	'EF0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'EF1',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'EF2',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'EF3',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'EF4',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'EF5',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'EF6',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'EF7',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'EF8',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'EF9',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'EF10',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	463
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	463
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	463
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_SMU_RMEF_Bits',0,24,241,3,3
	.word	112106
	.byte	10
	.byte	'_Ifx_SMU_RMSTS_Bits',0,24,244,3,16,4,11
	.byte	'STS0',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'STS1',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'STS2',0,4
	.word	463
	.byte	1,29,2,35,0,11
	.byte	'STS3',0,4
	.word	463
	.byte	1,28,2,35,0,11
	.byte	'STS4',0,4
	.word	463
	.byte	1,27,2,35,0,11
	.byte	'STS5',0,4
	.word	463
	.byte	1,26,2,35,0,11
	.byte	'STS6',0,4
	.word	463
	.byte	1,25,2,35,0,11
	.byte	'STS7',0,4
	.word	463
	.byte	1,24,2,35,0,11
	.byte	'STS8',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'STS9',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'STS10',0,4
	.word	463
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	463
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	463
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	463
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	463
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	463
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	463
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	463
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	463
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	463
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	463
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	463
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	463
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	463
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	463
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	463
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	463
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_SMU_RMSTS_Bits',0,24,150,4,3
	.word	112808
	.byte	10
	.byte	'_Ifx_SMU_RTAC00_Bits',0,24,153,4,16,4,11
	.byte	'GID0',0,4
	.word	463
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	463
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	463
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	463
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	463
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	463
	.byte	7,0,2,35,0,0,33
	.byte	'Ifx_SMU_RTAC00_Bits',0,24,161,4,3
	.word	113523
	.byte	10
	.byte	'_Ifx_SMU_RTAC01_Bits',0,24,164,4,16,4,11
	.byte	'GID2',0,4
	.word	463
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	463
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	463
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	463
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	463
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	463
	.byte	7,0,2,35,0,0,33
	.byte	'Ifx_SMU_RTAC01_Bits',0,24,172,4,3
	.word	113691
	.byte	10
	.byte	'_Ifx_SMU_RTAC10_Bits',0,24,175,4,16,4,11
	.byte	'GID0',0,4
	.word	463
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	463
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	463
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	463
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	463
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	463
	.byte	7,0,2,35,0,0,33
	.byte	'Ifx_SMU_RTAC10_Bits',0,24,183,4,3
	.word	113859
	.byte	10
	.byte	'_Ifx_SMU_RTAC11_Bits',0,24,186,4,16,4,11
	.byte	'GID2',0,4
	.word	463
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	463
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	463
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	463
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	463
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	463
	.byte	7,0,2,35,0,0,33
	.byte	'Ifx_SMU_RTAC11_Bits',0,24,194,4,3
	.word	114027
	.byte	10
	.byte	'_Ifx_SMU_RTC_Bits',0,24,197,4,16,4,11
	.byte	'RT0E',0,4
	.word	463
	.byte	1,31,2,35,0,11
	.byte	'RT1E',0,4
	.word	463
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	463
	.byte	6,24,2,35,0,11
	.byte	'RTD',0,4
	.word	463
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SMU_RTC_Bits',0,24,203,4,3
	.word	114195
	.byte	10
	.byte	'_Ifx_SMU_STS_Bits',0,24,206,4,16,4,11
	.byte	'CMD',0,4
	.word	463
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	463
	.byte	4,24,2,35,0,11
	.byte	'RES',0,4
	.word	463
	.byte	1,23,2,35,0,11
	.byte	'ASCE',0,4
	.word	463
	.byte	1,22,2,35,0,11
	.byte	'FSP',0,4
	.word	463
	.byte	2,20,2,35,0,11
	.byte	'FSTS',0,4
	.word	463
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	463
	.byte	3,16,2,35,0,11
	.byte	'RTS0',0,4
	.word	463
	.byte	1,15,2,35,0,11
	.byte	'RTME0',0,4
	.word	463
	.byte	1,14,2,35,0,11
	.byte	'RTS1',0,4
	.word	463
	.byte	1,13,2,35,0,11
	.byte	'RTME1',0,4
	.word	463
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	463
	.byte	12,0,2,35,0,0,33
	.byte	'Ifx_SMU_STS_Bits',0,24,220,4,3
	.word	114315
	.byte	12,24,228,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105866
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_ACCEN0',0,24,233,4,3
	.word	114570
	.byte	12,24,236,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106423
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_ACCEN1',0,24,241,4,3
	.word	114634
	.byte	12,24,244,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106500
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_AD',0,24,249,4,3
	.word	114698
	.byte	12,24,252,4,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107050
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_AEX',0,24,129,5,3
	.word	114758
	.byte	12,24,132,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107607
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_AEXCLR',0,24,137,5,3
	.word	114819
	.byte	12,24,140,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108203
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_AFCNT',0,24,145,5,3
	.word	114883
	.byte	12,24,148,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108343
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_AG',0,24,153,5,3
	.word	114946
	.byte	12,24,156,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108894
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_AGC',0,24,161,5,3
	.word	115006
	.byte	12,24,164,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109156
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_AGCF',0,24,169,5,3
	.word	115067
	.byte	12,24,172,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109711
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_AGFSP',0,24,177,5,3
	.word	115129
	.byte	12,24,180,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110268
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_CLC',0,24,185,5,3
	.word	115192
	.byte	12,24,188,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110411
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_CMD',0,24,193,5,3
	.word	115253
	.byte	12,24,196,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110514
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_DBG',0,24,201,5,3
	.word	115314
	.byte	12,24,204,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110602
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_FSP',0,24,209,5,3
	.word	115375
	.byte	12,24,212,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110757
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_ID',0,24,217,5,3
	.word	115436
	.byte	12,24,220,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110867
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_KEYS',0,24,225,5,3
	.word	115496
	.byte	12,24,228,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110979
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_OCS',0,24,233,5,3
	.word	115558
	.byte	12,24,236,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111171
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_PCTL',0,24,241,5,3
	.word	115619
	.byte	12,24,244,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111402
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_RMCTL',0,24,249,5,3
	.word	115681
	.byte	12,24,252,5,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112106
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_RMEF',0,24,129,6,3
	.word	115744
	.byte	12,24,132,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112808
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_RMSTS',0,24,137,6,3
	.word	115806
	.byte	12,24,140,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113523
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_RTAC00',0,24,145,6,3
	.word	115869
	.byte	12,24,148,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113691
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_RTAC01',0,24,153,6,3
	.word	115933
	.byte	12,24,156,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113859
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_RTAC10',0,24,161,6,3
	.word	115997
	.byte	12,24,164,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114027
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_RTAC11',0,24,169,6,3
	.word	116061
	.byte	12,24,172,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114195
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_RTC',0,24,177,6,3
	.word	116125
	.byte	12,24,180,6,9,4,13
	.byte	'U',0
	.word	440
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	456
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114315
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_STS',0,24,185,6,3
	.word	116186
	.byte	17,11,210,2,9,1,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy30',0,1,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy60',0,2,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy120',0,3,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy240',0,4,0,33
	.byte	'IfxScuCcu_LowPowerDivRatio',0,11,216,2,3
	.word	116247
	.byte	17,11,220,2,9,1,18
	.byte	'IfxScuCcu_ModulationAmplitude_0p5',0,0,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p0',0,1,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p25',0,2,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p5',0,3,18
	.byte	'IfxScuCcu_ModulationAmplitude_2p0',0,4,18
	.byte	'IfxScuCcu_ModulationAmplitude_2p5',0,5,18
	.byte	'IfxScuCcu_ModulationAmplitude_count',0,6,0,33
	.byte	'IfxScuCcu_ModulationAmplitude',0,11,229,2,3
	.word	116440
	.byte	17,11,254,3,9,1,18
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc1',0,0,18
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc0',0,1,18
	.byte	'IfxScuCcu_PllInputClockSelection_fSysclk',0,2,0,33
	.byte	'IfxScuCcu_PllInputClockSelection',0,11,131,4,3
	.word	116741
	.byte	17,11,135,4,9,1,18
	.byte	'IfxScuCcu_Traprequest_esr0',0,0,18
	.byte	'IfxScuCcu_Traprequest_esr1',0,1,18
	.byte	'IfxScuCcu_Traprequest_trap2',0,2,18
	.byte	'IfxScuCcu_Traprequest_smu',0,3,0,33
	.byte	'IfxScuCcu_Traprequest',0,11,141,4,3
	.word	116915
	.byte	17,11,147,4,9,1,18
	.byte	'IfxScuCcu_ModEn_disabled',0,0,18
	.byte	'IfxScuCcu_ModEn_enabled',0,1,0,33
	.byte	'IfxScuCcu_ModEn',0,11,151,4,3
	.word	117069
	.byte	20,11,162,4,9,6,13
	.byte	'pDivider',0
	.word	615
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	615
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	615
	.byte	1,2,35,2,13
	.byte	'k3Divider',0
	.word	615
	.byte	1,2,35,3,13
	.byte	'k3DividerBypass',0
	.word	615
	.byte	1,2,35,4,0,33
	.byte	'IfxScuCcu_PerPllConfig',0,11,171,4,3
	.word	117154
	.byte	20,11,176,4,9,4,13
	.byte	'pDivider',0
	.word	615
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	615
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	615
	.byte	1,2,35,2,0,33
	.byte	'IfxScuCcu_SysPllConfig',0,11,181,4,3
	.word	117292
	.byte	20,11,189,4,9,8,13
	.byte	'value',0
	.word	10555
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	10555
	.byte	4,2,35,4,0,33
	.byte	'IfxScuCcu_CcuconRegConfig',0,11,193,4,3
	.word	117386
	.byte	20,11,197,4,9,6,13
	.byte	'k2Step',0
	.word	615
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	236
	.byte	4,2,35,2,0,33
	.byte	'IfxScuCcu_PllStepConfig',0,11,201,4,3
	.word	117457
	.byte	20,11,205,4,9,16,13
	.byte	'xtalFrequency',0
	.word	10555
	.byte	4,2,35,0,13
	.byte	'pllInputClockSelection',0
	.word	116741
	.byte	1,2,35,4,13
	.byte	'sysPllConfig',0
	.word	117292
	.byte	4,2,35,6,13
	.byte	'perPllConfig',0
	.word	117154
	.byte	6,2,35,10,0,33
	.byte	'IfxScuCcu_pllsParameterConfig',0,11,211,4,3
	.word	117531
	.byte	20,11,219,4,9,8,13
	.byte	'value',0
	.word	10555
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	10555
	.byte	4,2,35,4,0,33
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,11,223,4,3
	.word	117676
	.byte	20,11,231,4,9,80,13
	.byte	'ccucon0',0
	.word	117386
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	117386
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	117386
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	117386
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	117386
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	117386
	.byte	8,2,35,40,13
	.byte	'ccucon8',0
	.word	117386
	.byte	8,2,35,48,13
	.byte	'ccucon9',0
	.word	117386
	.byte	8,2,35,56,13
	.byte	'ccucon10',0
	.word	117386
	.byte	8,2,35,64,13
	.byte	'ccucon11',0
	.word	117386
	.byte	8,2,35,72,0,33
	.byte	'IfxScuCcu_ClockDistributionConfig',0,11,243,4,3
	.word	117752
	.byte	20,11,247,4,9,20,13
	.byte	'pllsParameters',0
	.word	117531
	.byte	16,2,35,0,13
	.byte	'waitTime',0
	.word	236
	.byte	4,2,35,16,0,33
	.byte	'IfxScuCcu_InitialStepConfig',0,11,251,4,3
	.word	117974
	.byte	21
	.word	117457
	.byte	3
	.word	118060
	.byte	20,11,255,4,9,8,13
	.byte	'numOfSteps',0
	.word	615
	.byte	1,2,35,0,13
	.byte	'pllSteps',0
	.word	118065
	.byte	4,2,35,4,0,33
	.byte	'IfxScuCcu_PllThrottleConfig',0,11,131,5,3
	.word	118070
	.byte	20,11,137,5,9,2,13
	.byte	'Mod_Enable',0
	.word	117069
	.byte	1,2,35,0,13
	.byte	'Mod_Amp',0
	.word	116440
	.byte	1,2,35,1,0,33
	.byte	'IfxScuCcu_Mod_Config',0,11,141,5,3
	.word	118152
	.byte	33
	.byte	'IfxPsi5s_AlternateInput',0,12,84,3
	.word	23246
	.byte	33
	.byte	'IfxPsi5s_AscBaudratePrescalar',0,12,92,3
	.word	25105
	.byte	33
	.byte	'IfxPsi5s_AscMode',0,12,104,3
	.word	26219
	.byte	33
	.byte	'IfxPsi5s_AscStopBits',0,12,112,3
	.word	26163
	.byte	33
	.byte	'IfxPsi5s_ChannelId',0,12,127,3
	.word	27473
	.byte	33
	.byte	'IfxPsi5s_ClockType',0,12,137,1,3
	.word	25676
	.byte	33
	.byte	'IfxPsi5s_CrcOrParity',0,12,145,1,3
	.word	28056
	.byte	33
	.byte	'IfxPsi5s_DividerMode',0,12,155,1,3
	.word	25551
	.byte	33
	.byte	'IfxPsi5s_EnhancedProtocol',0,12,164,1,3
	.word	29014
	.byte	33
	.byte	'IfxPsi5s_FrameId',0,12,172,1,3
	.word	28277
	.byte	17,12,198,1,9,1,18
	.byte	'IfxPsi5s_InterruptRequest_disabled',0,0,18
	.byte	'IfxPsi5s_InterruptRequest_enabled',0,1,0,33
	.byte	'IfxPsi5s_InterruptRequest',0,12,202,1,3
	.word	118526
	.byte	17,12,207,1,9,1,18
	.byte	'IfxPsi5s_InterruptSource_rsi',0,0,18
	.byte	'IfxPsi5s_InterruptSource_rdi',0,1,18
	.byte	'IfxPsi5s_InterruptSource_rbi',0,2,18
	.byte	'IfxPsi5s_InterruptSource_tei',0,3,18
	.byte	'IfxPsi5s_InterruptSource_chci',0,4,18
	.byte	'IfxPsi5s_InterruptSource_crci',0,5,18
	.byte	'IfxPsi5s_InterruptSource_tpi',0,6,18
	.byte	'IfxPsi5s_InterruptSource_tpoi',0,7,18
	.byte	'IfxPsi5s_InterruptSource_hdi',0,8,0,33
	.byte	'IfxPsi5s_InterruptSource',0,12,218,1,3
	.word	118641
	.byte	33
	.byte	'IfxPsi5s_LoopBackMode',0,12,226,1,3
	.word	23423
	.byte	33
	.byte	'IfxPsi5s_NumberExpectedFrames',0,12,246,1,3
	.word	28557
	.byte	17,12,251,1,9,1,18
	.byte	'IfxPsi5s_SleepMode_enable',0,0,18
	.byte	'IfxPsi5s_SleepMode_disable',0,1,0,33
	.byte	'IfxPsi5s_SleepMode',0,12,255,1,3
	.word	119034
	.byte	17,12,131,2,9,1,18
	.byte	'IfxPsi5s_SuspendMode_none',0,0,18
	.byte	'IfxPsi5s_SuspendMode_hard',0,1,18
	.byte	'IfxPsi5s_SuspendMode_soft',0,2,0,33
	.byte	'IfxPsi5s_SuspendMode',0,12,136,2,3
	.word	119126
	.byte	33
	.byte	'IfxPsi5s_TimeBase',0,12,144,2,3
	.word	26035
	.byte	17,12,148,2,9,1,18
	.byte	'IfxPsi5s_TimeStampCount_stopped',0,0,18
	.byte	'IfxPsi5s_TimeStampCount_started',0,1,0,33
	.byte	'IfxPsi5s_TimeStampCount',0,12,152,2,3
	.word	119274
	.byte	33
	.byte	'IfxPsi5s_TimestampRegister',0,12,160,2,3
	.word	28129
	.byte	33
	.byte	'IfxPsi5s_TimestampTrigger',0,12,168,2,3
	.word	28198
	.byte	33
	.byte	'IfxPsi5s_Trigger',0,12,182,2,3
	.word	25860
	.byte	33
	.byte	'IfxPsi5s_TriggerType',0,12,204,2,3
	.word	27746
	.byte	33
	.byte	'IfxPsi5s_UartFrameCount',0,12,214,2,3
	.word	28429
	.byte	33
	.byte	'IfxPsi5s_WatchdogTimerMode',0,12,222,2,3
	.word	28348
	.byte	17,12,228,2,9,1,18
	.byte	'IfxPsi5s_GlobalInterruptSource_tir',0,0,18
	.byte	'IfxPsi5s_GlobalInterruptSource_rir',0,1,18
	.byte	'IfxPsi5s_GlobalInterruptSource_eir',0,2,18
	.byte	'IfxPsi5s_GlobalInterruptSource_tbir',0,3,18
	.byte	'IfxPsi5s_GlobalInterruptSource_xcrci',0,4,18
	.byte	'IfxPsi5s_GlobalInterruptSource_foi',0,5,0,33
	.byte	'IfxPsi5s_GlobalInterruptSource',0,12,236,2,3
	.word	119578
	.byte	33
	.byte	'IfxPsi5s_Psi5s_Clock',0,16,184,1,3
	.word	25806
	.byte	33
	.byte	'IfxPsi5s_Psi5s_ReceivedBits',0,16,206,1,3
	.word	29607
	.byte	33
	.byte	'IfxPsi5s_Psi5s_ReceivedData',0,16,214,1,3
	.word	29512
	.byte	33
	.byte	'IfxPsi5s_Psi5s_Timestamp',0,16,222,1,3
	.word	30064
	.byte	33
	.byte	'IfxPsi5s_Psi5s',0,16,233,1,3
	.word	25524
	.byte	33
	.byte	'IfxPsi5s_Psi5s_AscConfig',0,16,252,1,3
	.word	26449
	.byte	33
	.byte	'IfxPsi5s_Psi5s_ChannelTrigger',0,16,132,2,3
	.word	27980
	.byte	33
	.byte	'IfxPsi5s_Psi5s_GlobalControlConfig',0,16,148,2,3
	.word	26808
	.byte	33
	.byte	'IfxPsi5s_Psi5s_Pins',0,16,161,2,3
	.word	27156
	.byte	33
	.byte	'IfxPsi5s_Psi5s_PulseGeneration',0,16,173,2,3
	.word	27817
	.byte	33
	.byte	'IfxPsi5s_Psi5s_ReceiveControl',0,16,188,2,3
	.word	28768
	.byte	33
	.byte	'IfxPsi5s_Psi5s_ReceiveData',0,16,196,2,3
	.word	29565
	.byte	33
	.byte	'IfxPsi5s_Psi5s_ReceiveStatus',0,16,204,2,3
	.word	30022
	.byte	33
	.byte	'IfxPsi5s_Psi5s_ReceiveTimestamp',0,16,212,2,3
	.word	30120
	.byte	33
	.byte	'IfxPsi5s_Psi5s_TimeStampConfig',0,16,220,2,3
	.word	26100
	.byte	33
	.byte	'IfxPsi5s_Psi5s_TransmitControl',0,16,231,2,3
	.word	29173
	.byte	33
	.byte	'IfxPsi5s_Psi5s_Channel',0,16,243,2,3
	.word	27689
	.byte	33
	.byte	'IfxPsi5s_Psi5s_ChannelConfig',0,16,128,3,3
	.word	29333
	.byte	33
	.byte	'IfxPsi5s_Psi5s_Config',0,16,142,3,3
	.word	27278
	.byte	33
	.byte	'IfxPsi5s_Psi5s_Frame',0,16,151,3,3
	.word	30159
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L97:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,11,1,0,0,20,19,1,58,15,59,15,57,15,11,15,0,0,21,38,0,73,19
	.byte	0,0,22,46,1,3,8,54,15,39,12,63,12,60,12,0,0,23,5,0,73,19,0,0,24,46,1,3,8,73,19,54,15,39,12,63,12,60,12
	.byte	0,0,25,5,0,3,8,73,19,0,0,26,46,1,49,19,0,0,27,5,0,49,19,0,0,28,46,1,3,8,58,15,59,15,57,15,54,15,39,12
	.byte	63,12,60,12,0,0,29,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,30,29,1,49,19,0,0,31,11
	.byte	0,49,19,0,0,32,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,33,22,0,3,8,58,15,59,15,57
	.byte	15,73,19,0,0,34,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L98:
	.word	.L496-.L495
.L495:
	.half	3
	.word	.L498-.L497
.L497:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxScuWdt.h',0,2,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxPort.h',0,4,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxSrc.h',0,5,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,6,0,0
	.byte	'IfxScuCcu.h',0,2,0,0
	.byte	'IfxPsi5s.h',0,7,0,0
	.byte	'IfxPsi5s_PinMap.h',0,8,0,0
	.byte	'IfxPsi5s_regdef.h',0,3,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.h',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0,0,0,0
	.byte	'Ifx_TypesReg.h',0,3,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'IfxScu_cfg.h',0,6,0,0
	.byte	'IfxSrc_cfg.h',0,6,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxSmu_regdef.h',0,3,0,0,0
.L498:
.L496:
	.sdecl	'.debug_info',debug,cluster('IfxPsi5s_Psi5s_deInitModule')
	.sect	'.debug_info'
.L99:
	.word	257
	.half	3
	.word	.L100
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L102,.L101
	.byte	2
	.word	.L95
	.byte	3
	.byte	'IfxPsi5s_Psi5s_deInitModule',0,1,84,6,1,1,1
	.word	.L63,.L184,.L62
	.byte	4
	.byte	'psi5s',0,1,84,50
	.word	.L185,.L186
	.byte	5
	.word	.L63,.L184
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPsi5s_Psi5s_deInitModule')
	.sect	'.debug_abbrev'
.L100:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPsi5s_Psi5s_deInitModule')
	.sect	'.debug_line'
.L101:
	.word	.L500-.L499
.L499:
	.half	3
	.word	.L502-.L501
.L501:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0,0,0,0,0
.L502:
	.byte	5,32,7,0,5,2
	.word	.L63
	.byte	3,213,0,1,5,1,9
	.half	.L103-.L63
	.byte	3,2,0,1,1
.L500:
	.sdecl	'.debug_ranges',debug,cluster('IfxPsi5s_Psi5s_deInitModule')
	.sect	'.debug_ranges'
.L102:
	.word	-1,.L63,0,.L103-.L63,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPsi5s_Psi5s_initModule')
	.sect	'.debug_info'
.L104:
	.word	1129
	.half	3
	.word	.L105
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L107,.L106
	.byte	2
	.word	.L95
	.byte	3
	.byte	'IfxPsi5s_Psi5s_initModule',0,1,151,2,9
	.word	.L187
	.byte	1,1,1
	.word	.L78,.L188,.L77
	.byte	4
	.byte	'psi5s',0,1,151,2,51
	.word	.L185,.L189
	.byte	4
	.byte	'config',0,1,151,2,87
	.word	.L190,.L191
	.byte	5
	.word	.L78,.L188
	.byte	6
	.byte	'status',0,1,153,2,16
	.word	.L187,.L192
	.byte	6
	.byte	'psi5sSFR',0,1,155,2,16
	.word	.L193,.L194
	.byte	5
	.word	.L195,.L188
	.byte	6
	.byte	'passwd',0,1,158,2,16
	.word	.L196,.L197
	.byte	5
	.word	.L198,.L188
	.byte	6
	.byte	'tempCON',0,1,178,2,19
	.word	.L199,.L200
	.byte	7
	.word	.L201,.L202,.L203
	.byte	8
	.word	.L204,.L205
	.byte	8
	.word	.L206,.L207
	.byte	9
	.word	.L208,.L202,.L203
	.byte	0,5
	.word	.L23,.L188
	.byte	6
	.byte	'tempTSCNTA',0,1,210,2,22
	.word	.L209,.L210
	.byte	10
	.word	.L211
	.byte	6
	.byte	'tempTSCNTB',0,1,216,2,22
	.word	.L215,.L216
	.byte	10
	.word	.L217
	.byte	6
	.byte	'tempGCR',0,1,222,2,19
	.word	.L219,.L220
	.byte	5
	.word	.L221,.L188
	.byte	6
	.byte	'pins',0,1,239,2,32
	.word	.L222,.L223
	.byte	5
	.word	.L224,.L24
	.byte	6
	.byte	'rx',0,1,243,2,31
	.word	.L225,.L226
	.byte	7
	.word	.L227,.L228,.L229
	.byte	8
	.word	.L230,.L231
	.byte	8
	.word	.L232,.L233
	.byte	8
	.word	.L234,.L235
	.byte	11
	.word	.L236,.L237
	.byte	7
	.word	.L239,.L240,.L241
	.byte	8
	.word	.L242,.L243
	.byte	8
	.word	.L244,.L245
	.byte	8
	.word	.L246,.L247
	.byte	9
	.word	.L248,.L240,.L241
	.byte	0,7
	.word	.L249,.L250,.L26
	.byte	8
	.word	.L251,.L252
	.byte	8
	.word	.L253,.L254
	.byte	9
	.word	.L255,.L250,.L26
	.byte	0,0,0,7
	.word	.L227,.L238,.L26
	.byte	8
	.word	.L230,.L231
	.byte	8
	.word	.L232,.L233
	.byte	8
	.word	.L234,.L235
	.byte	0,5
	.word	.L26,.L24
	.byte	6
	.byte	'tx',0,1,250,2,32
	.word	.L256,.L257
	.byte	7
	.word	.L258,.L259,.L260
	.byte	8
	.word	.L261,.L262
	.byte	8
	.word	.L263,.L264
	.byte	8
	.word	.L265,.L266
	.byte	11
	.word	.L267,.L268
	.byte	7
	.word	.L270,.L271,.L272
	.byte	8
	.word	.L273,.L274
	.byte	8
	.word	.L275,.L276
	.byte	8
	.word	.L277,.L278
	.byte	8
	.word	.L279,.L280
	.byte	9
	.word	.L281,.L271,.L272
	.byte	0,0,0,7
	.word	.L258,.L269,.L28
	.byte	8
	.word	.L261,.L262
	.byte	8
	.word	.L263,.L264
	.byte	8
	.word	.L265,.L266
	.byte	0,5
	.word	.L28,.L24
	.byte	6
	.byte	'clk',0,1,129,3,33
	.word	.L282,.L283
	.byte	7
	.word	.L284,.L285,.L286
	.byte	8
	.word	.L287,.L288
	.byte	8
	.word	.L289,.L290
	.byte	8
	.word	.L291,.L292
	.byte	11
	.word	.L293,.L294
	.byte	7
	.word	.L270,.L296,.L297
	.byte	8
	.word	.L273,.L274
	.byte	8
	.word	.L275,.L276
	.byte	8
	.word	.L277,.L278
	.byte	8
	.word	.L279,.L280
	.byte	9
	.word	.L281,.L296,.L297
	.byte	0,0,0,7
	.word	.L284,.L295,.L24
	.byte	8
	.word	.L287,.L288
	.byte	8
	.word	.L289,.L290
	.byte	8
	.word	.L291,.L292
	.byte	0,0,0,0,0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPsi5s_Psi5s_initModule')
	.sect	'.debug_abbrev'
.L105:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,10,11,1,85,6,0,0,11,11,1,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPsi5s_Psi5s_initModule')
	.sect	'.debug_line'
.L106:
	.word	.L504-.L503
.L503:
	.half	3
	.word	.L506-.L505
.L505:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0,0,0,0
	.byte	'IfxPsi5s.h',0,1,0,0
	.byte	'IfxPort.h',0,2,0,0,0
.L506:
	.byte	5,9,7,0,5,2
	.word	.L78
	.byte	3,150,2,1,5,25,9
	.half	.L412-.L78
	.byte	3,2,1,5,33,3,2,1,5,18,9
	.half	.L414-.L412
	.byte	3,1,1,5,57,9
	.half	.L195-.L414
	.byte	3,2,1,5,23,9
	.half	.L411-.L195
	.byte	1,5,31,9
	.half	.L417-.L411
	.byte	3,1,1,5,33,9
	.half	.L416-.L417
	.byte	3,1,1,5,57,9
	.half	.L419-.L416
	.byte	3,2,1,5,5,9
	.half	.L421-.L419
	.byte	1,5,57,7,9
	.half	.L507-.L421
	.byte	3,8,1,5,5,9
	.half	.L423-.L507
	.byte	1,5,36,7,9
	.half	.L198-.L423
	.byte	3,9,1,5,40,9
	.half	.L424-.L198
	.byte	3,1,1,5,119,9
	.half	.L508-.L424
	.byte	3,13,1,5,21,9
	.half	.L509-.L508
	.byte	3,115,1,5,40,3,1,1,5,83,9
	.half	.L510-.L509
	.byte	3,12,1,5,21,9
	.half	.L425-.L510
	.byte	3,116,1,5,40,3,1,1,5,21,9
	.half	.L511-.L425
	.byte	1,5,40,3,1,1,5,21,9
	.half	.L512-.L511
	.byte	1,5,40,3,1,1,5,21,9
	.half	.L513-.L512
	.byte	1,5,40,3,1,1,5,21,9
	.half	.L514-.L513
	.byte	1,5,40,3,1,1,5,21,9
	.half	.L515-.L514
	.byte	1,5,40,3,1,1,5,21,9
	.half	.L516-.L515
	.byte	1,5,40,3,1,1,5,21,9
	.half	.L517-.L516
	.byte	1,5,40,3,1,1,5,21,9
	.half	.L518-.L517
	.byte	1,3,1,1,5,57,9
	.half	.L519-.L518
	.byte	3,1,1,4,2,5,17,9
	.half	.L202-.L519
	.byte	3,209,3,1,5,21,9
	.half	.L520-.L202
	.byte	1,4,1,5,63,9
	.half	.L203-.L520
	.byte	3,177,124,1,5,83,9
	.half	.L521-.L203
	.byte	1,5,5,9
	.half	.L426-.L521
	.byte	1,5,57,7,9
	.half	.L522-.L426
	.byte	3,9,1,5,68,9
	.half	.L523-.L522
	.byte	1,5,5,9
	.half	.L428-.L523
	.byte	1,5,16,7,9
	.half	.L20-.L428
	.byte	3,2,1,5,9,3,1,1,5,42,9
	.half	.L23-.L20
	.byte	3,6,1,5,51,9
	.half	.L429-.L23
	.byte	3,1,1,5,29,9
	.half	.L212-.L429
	.byte	3,24,1,5,24,9
	.half	.L213-.L212
	.byte	3,104,1,5,51,3,1,1,5,24,9
	.half	.L524-.L213
	.byte	1,3,1,1,5,42,9
	.half	.L214-.L524
	.byte	3,3,1,5,51,9
	.half	.L430-.L214
	.byte	3,1,1,5,24,9
	.half	.L525-.L430
	.byte	1,5,51,3,1,1,5,24,9
	.half	.L526-.L525
	.byte	1,3,1,1,5,36,9
	.half	.L218-.L526
	.byte	3,3,1,5,50,9
	.half	.L431-.L218
	.byte	3,1,1,5,21,9
	.half	.L527-.L431
	.byte	1,5,50,3,1,1,5,21,9
	.half	.L528-.L527
	.byte	1,5,50,3,1,1,5,21,9
	.half	.L529-.L528
	.byte	1,5,50,3,1,1,5,21,9
	.half	.L530-.L529
	.byte	1,5,50,3,1,1,5,21,9
	.half	.L531-.L530
	.byte	1,5,50,3,1,1,5,21,9
	.half	.L532-.L531
	.byte	1,5,50,3,1,1,5,21,9
	.half	.L533-.L532
	.byte	1,5,50,3,1,1,5,21,9
	.half	.L534-.L533
	.byte	1,5,50,3,1,1,5,21,9
	.half	.L535-.L534
	.byte	1,5,50,3,1,1,5,21,9
	.half	.L536-.L535
	.byte	1,3,1,1,5,29,9
	.half	.L537-.L536
	.byte	3,2,1,5,45,9
	.half	.L221-.L537
	.byte	3,3,1,5,5,9
	.half	.L413-.L221
	.byte	3,2,1,5,40,7,9
	.half	.L224-.L413
	.byte	3,2,1,5,9,9
	.half	.L415-.L224
	.byte	3,2,1,4,2,5,16,7,9
	.half	.L228-.L415
	.byte	3,238,2,1,4,1,5,40,9
	.half	.L229-.L228
	.byte	3,148,125,1,5,54,9
	.half	.L432-.L229
	.byte	1,4,2,5,5,9
	.half	.L238-.L432
	.byte	3,236,2,1,5,54,7,9
	.half	.L240-.L238
	.byte	3,2,1,4,3,5,40,9
	.half	.L538-.L240
	.byte	3,186,127,1,4,2,9
	.half	.L241-.L538
	.byte	3,199,0,1,5,54,9
	.half	.L539-.L241
	.byte	1,5,65,9
	.half	.L540-.L539
	.byte	1,5,31,9
	.half	.L541-.L540
	.byte	3,1,1,5,68,9
	.half	.L542-.L541
	.byte	1,5,18,9
	.half	.L250-.L542
	.byte	3,47,1,5,24,9
	.half	.L543-.L250
	.byte	1,4,1,5,41,9
	.half	.L26-.L543
	.byte	3,228,124,1,5,9,9
	.half	.L433-.L26
	.byte	3,2,1,4,2,5,16,7,9
	.half	.L259-.L433
	.byte	3,242,2,1,4,1,5,40,9
	.half	.L260-.L259
	.byte	3,144,125,1,5,54,9
	.half	.L544-.L260
	.byte	1,4,2,5,5,9
	.half	.L269-.L544
	.byte	3,240,2,1,5,80,7,9
	.half	.L271-.L269
	.byte	3,2,1,5,55,9
	.half	.L545-.L271
	.byte	1,4,3,5,61,9
	.half	.L546-.L545
	.byte	3,181,127,1,5,40,1,4,2,9
	.half	.L272-.L546
	.byte	3,204,0,1,5,54,9
	.half	.L547-.L272
	.byte	1,5,65,9
	.half	.L548-.L547
	.byte	1,4,1,5,43,9
	.half	.L28-.L548
	.byte	3,144,125,1,5,9,9
	.half	.L434-.L28
	.byte	3,2,1,4,2,5,17,7,9
	.half	.L285-.L434
	.byte	3,214,2,1,4,1,5,42,9
	.half	.L286-.L285
	.byte	3,172,125,1,5,57,9
	.half	.L549-.L286
	.byte	1,4,2,5,5,9
	.half	.L295-.L549
	.byte	3,212,2,1,5,83,7,9
	.half	.L296-.L295
	.byte	3,2,1,5,57,9
	.half	.L550-.L296
	.byte	1,4,3,5,61,9
	.half	.L551-.L550
	.byte	3,74,1,5,40,1,4,2,5,41,9
	.half	.L297-.L551
	.byte	3,55,1,5,56,9
	.half	.L552-.L297
	.byte	1,5,67,9
	.half	.L553-.L552
	.byte	1,4,1,5,5,9
	.half	.L24-.L553
	.byte	3,173,125,1,5,1,3,1,1,7,9
	.half	.L108-.L24
	.byte	0,1,1
.L504:
	.sdecl	'.debug_ranges',debug,cluster('IfxPsi5s_Psi5s_initModule')
	.sect	'.debug_ranges'
.L107:
	.word	-1,.L78,0,.L108-.L78,0,0
.L211:
	.word	-1,.L78,.L212-.L78,.L213-.L78,.L214-.L78,.L188-.L78,0,0
.L217:
	.word	-1,.L78,.L212-.L78,.L213-.L78,.L218-.L78,.L188-.L78,0,0
.L237:
	.word	-1,.L78,.L228-.L78,.L229-.L78,.L238-.L78,.L26-.L78,0,0
.L268:
	.word	-1,.L78,.L259-.L78,.L260-.L78,.L269-.L78,.L28-.L78,0,0
.L294:
	.word	-1,.L78,.L285-.L78,.L286-.L78,.L295-.L78,.L24-.L78,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPsi5s_Psi5s_initModuleConfig')
	.sect	'.debug_info'
.L109:
	.word	310
	.half	3
	.word	.L110
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L112,.L111
	.byte	2
	.word	.L95
	.byte	3
	.byte	'IfxPsi5s_Psi5s_initModuleConfig',0,1,141,3,6,1,1,1
	.word	.L80,.L298,.L79
	.byte	4
	.byte	'config',0,1,141,3,61
	.word	.L299,.L300
	.byte	4
	.byte	'psi5s',0,1,141,3,80
	.word	.L193,.L301
	.byte	5
	.word	.L80,.L298
	.byte	6
	.byte	'spbFrequency',0,1,143,3,12
	.word	.L302,.L303
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPsi5s_Psi5s_initModuleConfig')
	.sect	'.debug_abbrev'
.L110:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPsi5s_Psi5s_initModuleConfig')
	.sect	'.debug_line'
.L111:
	.word	.L555-.L554
.L554:
	.half	3
	.word	.L557-.L556
.L556:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0,0,0,0,0
.L557:
	.byte	5,6,7,0,5,2
	.word	.L80
	.byte	3,140,3,1,5,52,9
	.half	.L437-.L80
	.byte	3,2,1,5,68,9
	.half	.L435-.L437
	.byte	3,1,1,5,70,9
	.half	.L438-.L435
	.byte	3,2,1,5,68,3,127,1,5,70,9
	.half	.L558-.L438
	.byte	3,2,1,5,68,3,127,1,9
	.half	.L559-.L558
	.byte	3,1,1,9
	.half	.L560-.L559
	.byte	3,1,1,9
	.half	.L561-.L560
	.byte	3,1,1,9
	.half	.L562-.L561
	.byte	3,1,1,9
	.half	.L563-.L562
	.byte	3,1,1,9
	.half	.L564-.L563
	.byte	3,1,1,9
	.half	.L565-.L564
	.byte	3,1,1,9
	.half	.L566-.L565
	.byte	3,1,1,5,70,9
	.half	.L567-.L566
	.byte	3,26,1,9
	.half	.L568-.L567
	.byte	3,103,1,5,68,9
	.half	.L569-.L568
	.byte	1,9
	.half	.L570-.L569
	.byte	3,1,1,5,70,9
	.half	.L571-.L570
	.byte	3,2,1,5,68,3,127,1,9
	.half	.L439-.L571
	.byte	3,1,1,9
	.half	.L572-.L439
	.byte	3,1,1,9
	.half	.L573-.L572
	.byte	3,1,1,9
	.half	.L574-.L573
	.byte	3,1,1,9
	.half	.L575-.L574
	.byte	3,1,1,9
	.half	.L576-.L575
	.byte	3,1,1,9
	.half	.L577-.L576
	.byte	3,1,1,9
	.half	.L578-.L577
	.byte	3,1,1,9
	.half	.L579-.L578
	.byte	3,1,1,9
	.half	.L580-.L579
	.byte	3,1,1,9
	.half	.L581-.L580
	.byte	3,1,1,9
	.half	.L582-.L581
	.byte	3,1,1,9
	.half	.L583-.L582
	.byte	3,1,1,9
	.half	.L584-.L583
	.byte	3,1,1,9
	.half	.L585-.L584
	.byte	3,1,1,9
	.half	.L586-.L585
	.byte	3,1,1,9
	.half	.L587-.L586
	.byte	3,1,1,9
	.half	.L588-.L587
	.byte	3,1,1,9
	.half	.L589-.L588
	.byte	3,1,1,9
	.half	.L590-.L589
	.byte	3,1,1,9
	.half	.L591-.L590
	.byte	3,1,1,9
	.half	.L592-.L591
	.byte	3,1,1,9
	.half	.L593-.L592
	.byte	3,1,1,5,1,9
	.half	.L594-.L593
	.byte	3,1,1,7,9
	.half	.L113-.L594
	.byte	0,1,1
.L555:
	.sdecl	'.debug_ranges',debug,cluster('IfxPsi5s_Psi5s_initModuleConfig')
	.sect	'.debug_ranges'
.L112:
	.word	-1,.L80,0,.L113-.L80,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPsi5s_Psi5s_initChannel')
	.sect	'.debug_info'
.L114:
	.word	487
	.half	3
	.word	.L115
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L117,.L116
	.byte	2
	.word	.L95
	.byte	3
	.byte	'IfxPsi5s_Psi5s_initChannel',0,1,132,1,9
	.word	.L187
	.byte	1,1,1
	.word	.L71,.L304,.L70
	.byte	4
	.byte	'channel',0,1,132,1,60
	.word	.L305,.L306
	.byte	4
	.byte	'config',0,1,132,1,105
	.word	.L307,.L308
	.byte	5
	.word	.L71,.L304
	.byte	6
	.byte	'passwd',0,1,136,1,19
	.word	.L196,.L309
	.byte	5
	.word	.L310,.L304
	.byte	6
	.byte	'psi5s',0,1,139,1,19
	.word	.L193,.L311
	.byte	7
	.word	.L312
	.byte	6
	.byte	'tempPGC',0,1,143,1,19
	.word	.L314,.L315
	.byte	5
	.word	.L316,.L304
	.byte	6
	.byte	'tempCTV',0,1,166,1,19
	.word	.L317,.L318
	.byte	5
	.word	.L319,.L304
	.byte	6
	.byte	'tempRCRA',0,1,174,1,20
	.word	.L320,.L321
	.byte	5
	.word	.L322,.L304
	.byte	6
	.byte	'tempRCRB',0,1,195,1,20
	.word	.L323,.L324
	.byte	5
	.word	.L325,.L304
	.byte	6
	.byte	'tempSCR',0,1,207,1,19
	.word	.L326,.L327
	.byte	0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPsi5s_Psi5s_initChannel')
	.sect	'.debug_abbrev'
.L115:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPsi5s_Psi5s_initChannel')
	.sect	'.debug_line'
.L116:
	.word	.L596-.L595
.L595:
	.half	3
	.word	.L598-.L597
.L597:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0,0,0,0,0
.L598:
	.byte	5,9,7,0,5,2
	.word	.L71
	.byte	3,131,1,1,5,60,9
	.half	.L390-.L71
	.byte	3,4,1,5,26,9
	.half	.L387-.L390
	.byte	1,5,31,9
	.half	.L391-.L387
	.byte	3,1,1,5,33,9
	.half	.L310-.L391
	.byte	3,2,1,5,41,9
	.half	.L599-.L310
	.byte	1,5,24,9
	.half	.L392-.L599
	.byte	3,1,1,5,32,9
	.half	.L600-.L392
	.byte	3,1,1,5,24,9
	.half	.L601-.L600
	.byte	1,5,41,9
	.half	.L313-.L601
	.byte	3,3,1,5,53,9
	.half	.L602-.L313
	.byte	1,5,47,9
	.half	.L393-.L602
	.byte	3,1,1,5,22,9
	.half	.L603-.L393
	.byte	1,5,47,3,1,1,5,22,9
	.half	.L604-.L603
	.byte	1,5,47,3,1,1,5,22,9
	.half	.L605-.L604
	.byte	1,5,47,3,1,1,5,22,9
	.half	.L606-.L605
	.byte	1,5,47,3,1,1,5,22,9
	.half	.L607-.L606
	.byte	1,5,36,3,2,1,5,10,9
	.half	.L608-.L607
	.byte	3,2,1,7,9
	.half	.L609-.L608
	.byte	3,5,1,7,9
	.half	.L610-.L609
	.byte	1,5,18,9
	.half	.L12-.L610
	.byte	3,124,1,5,23,9
	.half	.L611-.L12
	.byte	1,9
	.half	.L612-.L611
	.byte	3,1,1,5,9,3,1,1,5,18,9
	.half	.L13-.L612
	.byte	3,3,1,5,23,9
	.half	.L613-.L13
	.byte	1,9
	.half	.L614-.L613
	.byte	3,1,1,5,22,9
	.half	.L14-.L614
	.byte	3,4,1,5,37,9
	.half	.L615-.L14
	.byte	1,5,56,9
	.half	.L316-.L615
	.byte	3,3,1,5,68,9
	.half	.L616-.L316
	.byte	1,5,61,9
	.half	.L394-.L616
	.byte	3,1,1,5,37,9
	.half	.L617-.L394
	.byte	1,5,61,3,1,1,5,37,9
	.half	.L618-.L617
	.byte	1,3,1,1,5,22,9
	.half	.L389-.L618
	.byte	3,2,1,5,45,9
	.half	.L395-.L389
	.byte	1,5,37,9
	.half	.L619-.L395
	.byte	1,5,58,9
	.half	.L319-.L619
	.byte	3,3,1,5,70,9
	.half	.L620-.L319
	.byte	1,5,74,9
	.half	.L397-.L620
	.byte	3,1,1,5,38,9
	.half	.L396-.L397
	.byte	1,5,74,3,1,1,5,38,9
	.half	.L621-.L396
	.byte	1,5,74,3,1,1,5,38,9
	.half	.L622-.L621
	.byte	1,5,74,3,1,1,5,38,9
	.half	.L623-.L622
	.byte	1,5,74,3,1,1,5,38,9
	.half	.L624-.L623
	.byte	1,5,74,3,1,1,5,38,9
	.half	.L625-.L624
	.byte	1,5,62,3,1,1,5,38,9
	.half	.L626-.L625
	.byte	1,5,62,3,1,1,5,38,9
	.half	.L627-.L626
	.byte	1,5,62,3,1,1,5,38,9
	.half	.L628-.L627
	.byte	1,5,62,3,1,1,5,38,9
	.half	.L629-.L628
	.byte	1,5,62,3,1,1,5,38,9
	.half	.L630-.L629
	.byte	1,5,77,3,1,1,5,38,9
	.half	.L631-.L630
	.byte	1,5,77,3,1,1,5,38,9
	.half	.L632-.L631
	.byte	1,5,77,3,1,1,5,38,9
	.half	.L633-.L632
	.byte	1,5,77,3,1,1,5,38,9
	.half	.L634-.L633
	.byte	1,5,77,3,1,1,5,38,9
	.half	.L635-.L634
	.byte	1,5,77,3,1,1,5,38,9
	.half	.L636-.L635
	.byte	1,3,1,1,5,58,9
	.half	.L322-.L636
	.byte	3,3,1,5,70,9
	.half	.L399-.L322
	.byte	1,5,76,9
	.half	.L400-.L399
	.byte	3,1,1,5,38,9
	.half	.L637-.L400
	.byte	1,5,76,3,1,1,5,38,9
	.half	.L638-.L637
	.byte	1,5,76,3,1,1,5,38,9
	.half	.L639-.L638
	.byte	1,5,76,3,1,1,5,38,9
	.half	.L640-.L639
	.byte	1,5,76,3,1,1,5,38,9
	.half	.L641-.L640
	.byte	1,5,76,3,1,1,5,38,9
	.half	.L642-.L641
	.byte	1,3,1,1,5,97,9
	.half	.L643-.L642
	.byte	3,2,1,5,63,9
	.half	.L644-.L643
	.byte	1,5,109,9
	.half	.L401-.L644
	.byte	1,5,87,9
	.half	.L645-.L401
	.byte	1,5,38,1,5,56,9
	.half	.L325-.L645
	.byte	3,3,1,5,68,9
	.half	.L402-.L325
	.byte	1,5,58,9
	.half	.L404-.L402
	.byte	3,1,1,5,29,9
	.half	.L646-.L404
	.byte	3,7,1,5,37,9
	.half	.L405-.L646
	.byte	3,121,1,5,58,3,1,1,5,37,9
	.half	.L647-.L405
	.byte	1,5,58,3,1,1,5,37,9
	.half	.L648-.L647
	.byte	1,5,58,3,1,1,5,37,9
	.half	.L649-.L648
	.byte	1,5,58,3,1,1,5,37,9
	.half	.L650-.L649
	.byte	1,3,1,1,5,29,9
	.half	.L651-.L650
	.byte	3,2,1,5,12,9
	.half	.L403-.L651
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L118-.L403
	.byte	0,1,1
.L596:
	.sdecl	'.debug_ranges',debug,cluster('IfxPsi5s_Psi5s_initChannel')
	.sect	'.debug_ranges'
.L117:
	.word	-1,.L71,0,.L118-.L71,0,0
.L312:
	.word	-1,.L71,.L313-.L71,.L304-.L71,-1,.L73,0,.L173-.L73,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPsi5s_Psi5s_initChannelConfig')
	.sect	'.debug_info'
.L119:
	.word	280
	.half	3
	.word	.L120
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L122,.L121
	.byte	2
	.word	.L95
	.byte	3
	.byte	'IfxPsi5s_Psi5s_initChannelConfig',0,1,222,1,6,1,1,1
	.word	.L75,.L328,.L74
	.byte	4
	.byte	'config',0,1,222,1,69
	.word	.L329,.L330
	.byte	4
	.byte	'psi5s',0,1,222,1,93
	.word	.L185,.L331
	.byte	5
	.word	.L332
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPsi5s_Psi5s_initChannelConfig')
	.sect	'.debug_abbrev'
.L120:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPsi5s_Psi5s_initChannelConfig')
	.sect	'.debug_line'
.L121:
	.word	.L653-.L652
.L652:
	.half	3
	.word	.L655-.L654
.L654:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0,0,0,0,0
.L655:
	.byte	5,6,7,0,5,2
	.word	.L75
	.byte	3,221,1,1,5,39,9
	.half	.L410-.L75
	.byte	3,7,1,5,6,3,45,1,5,72,9
	.half	.L656-.L410
	.byte	3,78,1,5,6,9
	.half	.L657-.L656
	.byte	3,50,1,5,72,9
	.half	.L407-.L657
	.byte	3,78,1,5,6,9
	.half	.L658-.L407
	.byte	3,50,1,5,72,9
	.half	.L659-.L658
	.byte	3,78,1,5,6,9
	.half	.L660-.L659
	.byte	3,50,1,5,72,9
	.half	.L661-.L660
	.byte	3,78,1,5,6,9
	.half	.L662-.L661
	.byte	3,50,1,5,1,9
	.half	.L663-.L662
	.byte	3,2,1,9
	.half	.L123-.L663
	.byte	0,1,1
.L653:
	.sdecl	'.debug_ranges',debug,cluster('IfxPsi5s_Psi5s_initChannelConfig')
	.sect	'.debug_ranges'
.L122:
	.word	-1,.L75,0,.L123-.L75,0,0
.L332:
	.word	-1,.L75,0,.L328-.L75,-1,.L17,0,.L183-.L17,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPsi5s_Psi5s_readFrame')
	.sect	'.debug_info'
.L124:
	.word	273
	.half	3
	.word	.L125
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L127,.L126
	.byte	2
	.word	.L95
	.byte	3
	.byte	'IfxPsi5s_Psi5s_readFrame',0,1,163,4,6,1,1,1
	.word	.L86,.L333,.L85
	.byte	4
	.byte	'channel',0,1,163,4,55
	.word	.L305,.L334
	.byte	4
	.byte	'frame',0,1,163,4,86
	.word	.L335,.L336
	.byte	5
	.word	.L337
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPsi5s_Psi5s_readFrame')
	.sect	'.debug_abbrev'
.L125:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPsi5s_Psi5s_readFrame')
	.sect	'.debug_line'
.L126:
	.word	.L665-.L664
.L664:
	.half	3
	.word	.L667-.L666
.L666:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0,0,0,0,0
.L667:
	.byte	5,68,7,0,5,2
	.word	.L86
	.byte	3,164,4,1,5,76,9
	.half	.L668-.L86
	.byte	1,5,88,9
	.half	.L669-.L668
	.byte	1,5,59,9
	.half	.L670-.L669
	.byte	1,5,68,9
	.half	.L671-.L670
	.byte	3,1,1,5,76,9
	.half	.L672-.L671
	.byte	1,5,88,9
	.half	.L673-.L672
	.byte	1,5,59,9
	.half	.L674-.L673
	.byte	1,5,68,9
	.half	.L675-.L674
	.byte	3,1,1,5,76,9
	.half	.L676-.L675
	.byte	1,5,88,9
	.half	.L677-.L676
	.byte	1,5,59,9
	.half	.L678-.L677
	.byte	1,5,12,9
	.half	.L679-.L678
	.byte	3,2,1,5,55,9
	.half	.L680-.L679
	.byte	1,5,58,9
	.half	.L681-.L680
	.byte	1,5,1,9
	.half	.L682-.L681
	.byte	3,1,1,7,9
	.half	.L128-.L682
	.byte	0,1,1
.L665:
	.sdecl	'.debug_ranges',debug,cluster('IfxPsi5s_Psi5s_readFrame')
	.sect	'.debug_ranges'
.L127:
	.word	-1,.L86,0,.L128-.L86,0,0
.L337:
	.word	-1,.L86,0,.L333-.L86,-1,.L88,0,.L178-.L88,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPsi5s_Psi5s_sendChannelData')
	.sect	'.debug_info'
.L129:
	.word	286
	.half	3
	.word	.L130
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L132,.L131
	.byte	2
	.word	.L95
	.byte	3
	.byte	'IfxPsi5s_Psi5s_sendChannelData',0,1,190,4,9
	.word	.L187
	.byte	1,1,1
	.word	.L92,.L338,.L91
	.byte	4
	.byte	'channel',0,1,190,4,64
	.word	.L305,.L339
	.byte	4
	.byte	'data',0,1,190,4,80
	.word	.L302,.L340
	.byte	5
	.word	.L92,.L338
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPsi5s_Psi5s_sendChannelData')
	.sect	'.debug_abbrev'
.L130:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPsi5s_Psi5s_sendChannelData')
	.sect	'.debug_line'
.L131:
	.word	.L684-.L683
.L683:
	.half	3
	.word	.L686-.L685
.L685:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0,0,0,0,0
.L686:
	.byte	5,12,7,0,5,2
	.word	.L92
	.byte	3,191,4,1,5,62,9
	.half	.L470-.L92
	.byte	1,5,55,1,5,16,9
	.half	.L471-.L470
	.byte	3,2,1,5,62,9
	.half	.L472-.L471
	.byte	1,5,1,9
	.half	.L687-.L472
	.byte	3,8,1,7,9
	.half	.L133-.L687
	.byte	0,1,1
.L684:
	.sdecl	'.debug_ranges',debug,cluster('IfxPsi5s_Psi5s_sendChannelData')
	.sect	'.debug_ranges'
.L132:
	.word	-1,.L92,0,.L133-.L92,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPsi5s_Psi5s_enableModule')
	.sect	'.debug_info'
.L134:
	.word	257
	.half	3
	.word	.L135
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L137,.L136
	.byte	2
	.word	.L95
	.byte	3
	.byte	'IfxPsi5s_Psi5s_enableModule',0,1,91,6,1,1,1
	.word	.L65,.L341,.L64
	.byte	4
	.byte	'psi5s',0,1,91,45
	.word	.L193,.L342
	.byte	5
	.word	.L65,.L341
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPsi5s_Psi5s_enableModule')
	.sect	'.debug_abbrev'
.L135:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPsi5s_Psi5s_enableModule')
	.sect	'.debug_line'
.L136:
	.word	.L689-.L688
.L688:
	.half	3
	.word	.L691-.L690
.L690:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0,0,0,0,0
.L691:
	.byte	5,20,7,0,5,2
	.word	.L65
	.byte	3,220,0,1,5,18,1,5,1,9
	.half	.L692-.L65
	.byte	3,1,1,7,9
	.half	.L138-.L692
	.byte	0,1,1
.L689:
	.sdecl	'.debug_ranges',debug,cluster('IfxPsi5s_Psi5s_enableModule')
	.sect	'.debug_ranges'
.L137:
	.word	-1,.L65,0,.L138-.L65,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPsi5s_Psi5s_getBaudrate')
	.sect	'.debug_info'
.L139:
	.word	278
	.half	3
	.word	.L140
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L142,.L141
	.byte	2
	.word	.L95
	.byte	3
	.byte	'IfxPsi5s_Psi5s_getBaudrate',0,1,97,6,1,1,1
	.word	.L67,.L343,.L66
	.byte	4
	.byte	'psi5s',0,1,97,44
	.word	.L193,.L344
	.byte	4
	.byte	'ascConfig',0,1,97,77
	.word	.L345,.L346
	.byte	5
	.word	.L67,.L343
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPsi5s_Psi5s_getBaudrate')
	.sect	'.debug_abbrev'
.L140:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPsi5s_Psi5s_getBaudrate')
	.sect	'.debug_line'
.L141:
	.word	.L694-.L693
.L693:
	.half	3
	.word	.L696-.L695
.L695:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0,0,0,0,0
.L696:
	.byte	5,35,7,0,5,2
	.word	.L67
	.byte	3,226,0,1,5,75,9
	.half	.L697-.L67
	.byte	1,5,25,9
	.half	.L698-.L697
	.byte	1,5,88,7,9
	.half	.L699-.L698
	.byte	1,5,103,9
	.half	.L700-.L699
	.byte	1,5,75,7,9
	.half	.L2-.L700
	.byte	1,5,35,9
	.half	.L3-.L2
	.byte	3,1,1,5,62,9
	.half	.L701-.L3
	.byte	3,1,1,9
	.half	.L702-.L701
	.byte	3,127,1,9
	.half	.L703-.L702
	.byte	3,1,1,5,1,7,9
	.half	.L143-.L703
	.byte	3,1,0,1,1
.L694:
	.sdecl	'.debug_ranges',debug,cluster('IfxPsi5s_Psi5s_getBaudrate')
	.sect	'.debug_ranges'
.L142:
	.word	-1,.L67,0,.L143-.L67,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPsi5s_Psi5s_resetModule')
	.sect	'.debug_info'
.L144:
	.word	279
	.half	3
	.word	.L145
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L147,.L146
	.byte	2
	.word	.L95
	.byte	3
	.byte	'IfxPsi5s_Psi5s_resetModule',0,1,173,4,6,1,1,1
	.word	.L90,.L347,.L89
	.byte	4
	.byte	'psi5s',0,1,173,4,44
	.word	.L193,.L348
	.byte	5
	.word	.L90,.L347
	.byte	6
	.byte	'passwd',0,1,175,4,12
	.word	.L196,.L349
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPsi5s_Psi5s_resetModule')
	.sect	'.debug_abbrev'
.L145:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPsi5s_Psi5s_resetModule')
	.sect	'.debug_line'
.L146:
	.word	.L705-.L704
.L704:
	.half	3
	.word	.L707-.L706
.L706:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0,0,0,0,0
.L707:
	.byte	5,6,7,0,5,2
	.word	.L90
	.byte	3,172,4,1,5,53,9
	.half	.L466-.L90
	.byte	3,2,1,5,19,9
	.half	.L465-.L466
	.byte	1,5,34,9
	.half	.L468-.L465
	.byte	3,1,1,5,19,9
	.half	.L467-.L468
	.byte	3,1,1,5,17,9
	.half	.L708-.L467
	.byte	3,3,1,5,24,9
	.half	.L709-.L708
	.byte	3,125,1,5,19,9
	.half	.L710-.L709
	.byte	3,1,1,5,24,9
	.half	.L711-.L710
	.byte	1,5,26,9
	.half	.L52-.L711
	.byte	3,2,1,5,39,9
	.half	.L712-.L52
	.byte	1,5,32,7,9
	.half	.L713-.L712
	.byte	3,6,1,5,21,3,127,1,5,26,9
	.half	.L469-.L713
	.byte	1,5,32,9
	.half	.L714-.L469
	.byte	3,1,1,5,1,7,9
	.half	.L148-.L714
	.byte	3,1,0,1,1
.L705:
	.sdecl	'.debug_ranges',debug,cluster('IfxPsi5s_Psi5s_resetModule')
	.sect	'.debug_ranges'
.L147:
	.word	-1,.L90,0,.L148-.L90,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPsi5s_Psi5s_getFracDivClock')
	.sect	'.debug_info'
.L149:
	.word	302
	.half	3
	.word	.L150
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L152,.L151
	.byte	2
	.word	.L95
	.byte	3
	.byte	'IfxPsi5s_Psi5s_getFracDivClock',0,1,105,19
	.word	.L302
	.byte	1,1
	.word	.L69,.L350,.L68
	.byte	4
	.byte	'psi5s',0,1,105,61
	.word	.L193,.L351
	.byte	5
	.word	.L69,.L350
	.byte	6
	.byte	'result',0,1,107,12
	.word	.L302,.L352
	.byte	6
	.byte	'fPsi5s',0,1,108,12
	.word	.L302,.L353
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPsi5s_Psi5s_getFracDivClock')
	.sect	'.debug_abbrev'
.L150:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPsi5s_Psi5s_getFracDivClock')
	.sect	'.debug_line'
.L151:
	.word	.L716-.L715
.L715:
	.half	3
	.word	.L718-.L717
.L717:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0,0,0,0,0
.L718:
	.byte	5,19,7,0,5,2
	.word	.L69
	.byte	3,232,0,1,5,46,9
	.half	.L385-.L69
	.byte	3,3,1,5,25,9
	.half	.L384-.L385
	.byte	3,2,1,5,46,9
	.half	.L719-.L384
	.byte	3,126,1,5,25,9
	.half	.L386-.L719
	.byte	3,2,1,5,10,9
	.half	.L720-.L386
	.byte	3,2,1,7,9
	.half	.L721-.L720
	.byte	3,3,1,7,9
	.half	.L722-.L721
	.byte	3,3,1,7,9
	.half	.L723-.L722
	.byte	1,5,62,9
	.half	.L5-.L723
	.byte	3,126,1,5,28,9
	.half	.L724-.L5
	.byte	1,5,62,9
	.half	.L725-.L724
	.byte	1,5,48,9
	.half	.L726-.L725
	.byte	1,5,25,9
	.half	.L727-.L726
	.byte	1,5,1,9
	.half	.L8-.L727
	.byte	3,13,1,5,63,7,9
	.half	.L6-.L8
	.byte	3,118,1,5,19,9
	.half	.L728-.L6
	.byte	1,5,63,9
	.half	.L729-.L728
	.byte	1,5,49,9
	.half	.L730-.L729
	.byte	1,5,1,3,10,1,5,16,7,9
	.half	.L7-.L730
	.byte	3,124,1,5,1,3,4,1,7,9
	.half	.L153-.L7
	.byte	0,1,1
.L716:
	.sdecl	'.debug_ranges',debug,cluster('IfxPsi5s_Psi5s_getFracDivClock')
	.sect	'.debug_ranges'
.L152:
	.word	-1,.L69,0,.L153-.L69,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPsi5s_Psi5s_initializeClock')
	.sect	'.debug_info'
.L154:
	.word	498
	.half	3
	.word	.L155
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L157,.L156
	.byte	2
	.word	.L95
	.byte	3
	.byte	'IfxPsi5s_Psi5s_initializeClock',0,1,184,3,19
	.word	.L302
	.byte	1,1
	.word	.L82,.L354,.L81
	.byte	4
	.byte	'psi5s',0,1,184,3,61
	.word	.L193,.L355
	.byte	4
	.byte	'clock',0,1,184,3,96
	.word	.L356,.L357
	.byte	5
	.word	.L358
	.byte	6
	.byte	'step',0,1,186,3,26
	.word	.L359,.L360
	.byte	6
	.byte	'stepRange',0,1,187,3,26
	.word	.L302,.L361
	.byte	6
	.byte	'result',0,1,188,3,26
	.word	.L302,.L362
	.byte	6
	.byte	'divMode',0,1,189,3,26
	.word	.L363,.L364
	.byte	6
	.byte	'clockType',0,1,190,3,26
	.word	.L365,.L366
	.byte	6
	.byte	'clockFrequency',0,1,191,3,26
	.word	.L302,.L367
	.byte	6
	.byte	'fInput',0,1,192,3,26
	.word	.L302,.L368
	.byte	6
	.byte	'tempFDR',0,1,193,3,26
	.word	.L369,.L370
	.byte	6
	.byte	'tempFDRT',0,1,194,3,26
	.word	.L371,.L372
	.byte	6
	.byte	'tempFDO',0,1,195,3,26
	.word	.L373,.L374
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPsi5s_Psi5s_initializeClock')
	.sect	'.debug_abbrev'
.L155:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPsi5s_Psi5s_initializeClock')
	.sect	'.debug_line'
.L156:
	.word	.L732-.L731
.L731:
	.half	3
	.word	.L734-.L733
.L733:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0,0,0,0,0
.L734:
	.byte	5,19,7,0,5,2
	.word	.L82
	.byte	3,183,3,1,5,41,9
	.half	.L441-.L82
	.byte	3,3,1,5,48,3,2,1,9
	.half	.L443-.L441
	.byte	3,1,1,9
	.half	.L444-.L443
	.byte	3,1,1,5,5,9
	.half	.L445-.L444
	.byte	3,6,1,5,10,7,9
	.half	.L735-.L445
	.byte	3,4,1,5,19,7,9
	.half	.L736-.L735
	.byte	3,3,1,5,46,9
	.half	.L34-.L736
	.byte	3,127,1,5,48,9
	.half	.L440-.L34
	.byte	1,5,49,9
	.half	.L35-.L440
	.byte	3,5,1,5,16,9
	.half	.L446-.L35
	.byte	1,5,9,9
	.half	.L447-.L446
	.byte	3,2,1,5,20,7,9
	.half	.L737-.L447
	.byte	3,2,1,5,1,3,204,0,1,5,10,7,9
	.half	.L36-.L737
	.byte	3,189,127,1,7,9
	.half	.L738-.L36
	.byte	3,15,1,7,9
	.half	.L739-.L738
	.byte	1,5,36,9
	.half	.L39-.L739
	.byte	3,114,1,5,26,9
	.half	.L740-.L39
	.byte	1,5,31,9
	.half	.L741-.L740
	.byte	3,2,1,5,18,9
	.half	.L442-.L741
	.byte	1,5,27,9
	.half	.L450-.L442
	.byte	3,9,1,5,37,9
	.half	.L453-.L450
	.byte	1,5,47,9
	.half	.L455-.L453
	.byte	1,5,34,9
	.half	.L742-.L455
	.byte	1,5,9,9
	.half	.L454-.L742
	.byte	3,1,1,5,25,9
	.half	.L40-.L454
	.byte	3,3,1,5,50,9
	.half	.L456-.L40
	.byte	1,5,48,9
	.half	.L743-.L456
	.byte	1,5,63,9
	.half	.L744-.L743
	.byte	1,5,61,9
	.half	.L745-.L744
	.byte	1,5,31,9
	.half	.L451-.L745
	.byte	3,2,1,5,51,9
	.half	.L458-.L451
	.byte	3,9,1,5,60,9
	.half	.L459-.L458
	.byte	1,5,16,9
	.half	.L746-.L459
	.byte	1,5,9,3,1,1,5,18,9
	.half	.L41-.L746
	.byte	3,4,1,5,16,9
	.half	.L460-.L41
	.byte	3,1,1,5,5,9
	.half	.L42-.L460
	.byte	3,4,1,5,14,7,9
	.half	.L461-.L42
	.byte	3,4,1,7,9
	.half	.L747-.L461
	.byte	3,7,1,7,9
	.half	.L748-.L747
	.byte	3,7,1,5,1,7,9
	.half	.L44-.L748
	.byte	3,12,1,5,28,7,9
	.half	.L45-.L44
	.byte	3,103,1,9
	.half	.L462-.L45
	.byte	3,1,1,9
	.half	.L749-.L462
	.byte	3,1,1,3,1,1,5,1,9
	.half	.L750-.L749
	.byte	3,22,1,5,29,7,9
	.half	.L46-.L750
	.byte	3,110,1,9
	.half	.L463-.L46
	.byte	3,1,1,9
	.half	.L751-.L463
	.byte	3,1,1,3,1,1,5,1,9
	.half	.L752-.L751
	.byte	3,15,1,5,28,7,9
	.half	.L47-.L752
	.byte	3,117,1,9
	.half	.L464-.L47
	.byte	3,1,1,9
	.half	.L753-.L464
	.byte	3,1,1,3,1,1,5,1,9
	.half	.L754-.L753
	.byte	3,8,1,7,9
	.half	.L158-.L754
	.byte	0,1,1
.L732:
	.sdecl	'.debug_ranges',debug,cluster('IfxPsi5s_Psi5s_initializeClock')
	.sect	'.debug_ranges'
.L157:
	.word	-1,.L82,0,.L158-.L82,0,0
.L358:
	.word	-1,.L82,0,.L354-.L82,-1,.L84,0,.L168-.L84,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPsi5s_Psi5s_setBaudrate')
	.sect	'.debug_info'
.L159:
	.word	389
	.half	3
	.word	.L160
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L162,.L161
	.byte	2
	.word	.L95
	.byte	3
	.byte	'IfxPsi5s_Psi5s_setBaudrate',0,1,205,4,19
	.word	.L302
	.byte	1,1
	.word	.L94,.L375,.L93
	.byte	4
	.byte	'psi5s',0,1,205,4,57
	.word	.L193,.L376
	.byte	4
	.byte	'baudrate',0,1,205,4,71
	.word	.L302,.L377
	.byte	4
	.byte	'ascConfig',0,1,205,4,107
	.word	.L345,.L378
	.byte	5
	.word	.L94,.L375
	.byte	6
	.byte	'bgValue',0,1,207,4,12
	.word	.L302,.L379
	.byte	6
	.byte	'fdValue',0,1,208,4,12
	.word	.L302,.L380
	.byte	6
	.byte	'result',0,1,209,4,12
	.word	.L302,.L381
	.byte	6
	.byte	'fInput',0,1,210,4,12
	.word	.L302,.L382
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPsi5s_Psi5s_setBaudrate')
	.sect	'.debug_abbrev'
.L160:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPsi5s_Psi5s_setBaudrate')
	.sect	'.debug_line'
.L161:
	.word	.L756-.L755
.L755:
	.half	3
	.word	.L758-.L757
.L757:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0,0,0,0,0
.L758:
	.byte	5,19,7,0,5,2
	.word	.L94
	.byte	3,204,4,1,5,18,9
	.half	.L474-.L94
	.byte	3,7,1,5,20,9
	.half	.L475-.L474
	.byte	3,124,1,5,19,3,125,1,9
	.half	.L477-.L475
	.byte	3,14,1,5,5,9
	.half	.L759-.L477
	.byte	3,121,1,5,48,7,9
	.half	.L760-.L759
	.byte	3,7,1,5,21,9
	.half	.L473-.L760
	.byte	1,5,79,9
	.half	.L761-.L473
	.byte	3,1,1,5,21,9
	.half	.L478-.L761
	.byte	3,127,1,5,48,3,1,1,5,42,9
	.half	.L480-.L478
	.byte	3,2,1,5,68,9
	.half	.L762-.L480
	.byte	3,126,1,5,28,9
	.half	.L763-.L762
	.byte	1,5,73,9
	.half	.L764-.L763
	.byte	1,5,79,9
	.half	.L765-.L764
	.byte	1,5,77,1,5,35,9
	.half	.L766-.L765
	.byte	1,5,97,9
	.half	.L767-.L766
	.byte	1,5,21,9
	.half	.L768-.L767
	.byte	3,2,1,5,78,9
	.half	.L482-.L768
	.byte	3,9,1,5,67,9
	.half	.L769-.L482
	.byte	1,5,25,9
	.half	.L770-.L769
	.byte	1,5,83,1,5,23,9
	.half	.L54-.L770
	.byte	3,2,1,5,10,9
	.half	.L771-.L54
	.byte	1,5,48,7,9
	.half	.L772-.L771
	.byte	3,2,1,5,21,9
	.half	.L483-.L772
	.byte	1,5,80,9
	.half	.L773-.L483
	.byte	3,1,1,5,21,9
	.half	.L484-.L773
	.byte	3,127,1,5,48,3,1,1,5,42,9
	.half	.L486-.L484
	.byte	3,2,1,5,68,9
	.half	.L774-.L486
	.byte	3,126,1,5,28,9
	.half	.L775-.L774
	.byte	1,5,73,9
	.half	.L776-.L775
	.byte	1,5,80,9
	.half	.L777-.L776
	.byte	1,5,78,1,5,35,9
	.half	.L778-.L777
	.byte	1,5,98,9
	.half	.L779-.L778
	.byte	1,5,21,9
	.half	.L780-.L779
	.byte	3,2,1,5,79,9
	.half	.L488-.L780
	.byte	3,9,1,5,68,9
	.half	.L781-.L488
	.byte	1,5,25,9
	.half	.L782-.L781
	.byte	1,5,84,1,5,48,9
	.half	.L56-.L782
	.byte	3,4,1,5,21,9
	.half	.L489-.L56
	.byte	1,9
	.half	.L783-.L489
	.byte	3,1,1,9
	.half	.L784-.L783
	.byte	3,127,1,9
	.half	.L492-.L784
	.byte	3,1,1,5,59,9
	.half	.L785-.L492
	.byte	1,5,68,9
	.half	.L491-.L785
	.byte	1,5,66,9
	.half	.L786-.L491
	.byte	1,5,43,9
	.half	.L787-.L786
	.byte	3,2,1,5,9,9
	.half	.L788-.L787
	.byte	1,5,79,7,9
	.half	.L789-.L788
	.byte	3,3,1,5,71,9
	.half	.L476-.L789
	.byte	1,5,21,9
	.half	.L790-.L476
	.byte	3,127,1,5,71,9
	.half	.L791-.L790
	.byte	3,1,1,5,24,1,5,71,9
	.half	.L792-.L791
	.byte	1,5,92,9
	.half	.L793-.L792
	.byte	1,5,90,9
	.half	.L794-.L793
	.byte	1,5,46,9
	.half	.L795-.L794
	.byte	3,2,1,5,90,9
	.half	.L796-.L795
	.byte	3,126,1,5,13,9
	.half	.L493-.L796
	.byte	3,2,1,5,25,7,9
	.half	.L797-.L493
	.byte	3,2,1,5,13,3,2,1,5,21,9
	.half	.L58-.L797
	.byte	3,7,1,5,19,9
	.half	.L59-.L58
	.byte	3,3,1,5,36,9
	.half	.L798-.L59
	.byte	1,5,19,9
	.half	.L799-.L798
	.byte	1,5,83,9
	.half	.L800-.L799
	.byte	1,5,66,9
	.half	.L801-.L800
	.byte	1,5,56,9
	.half	.L802-.L801
	.byte	1,5,18,9
	.half	.L55-.L802
	.byte	3,3,1,9
	.half	.L803-.L55
	.byte	3,1,1,5,5,9
	.half	.L494-.L803
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L163-.L494
	.byte	0,1,1
.L756:
	.sdecl	'.debug_ranges',debug,cluster('IfxPsi5s_Psi5s_setBaudrate')
	.sect	'.debug_ranges'
.L162:
	.word	-1,.L94,0,.L163-.L94,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_5')
	.sect	'.debug_info'
.L164:
	.word	211
	.half	3
	.word	.L165
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L167,.L166
	.byte	2
	.word	.L95
	.byte	3
	.byte	'.cocofun_5',0,1,184,3,19,1
	.word	.L84,.L168,.L83
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_5')
	.sect	'.debug_abbrev'
.L165:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_5')
	.sect	'.debug_line'
.L166:
	.word	.L805-.L804
.L804:
	.half	3
	.word	.L807-.L806
.L806:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0,0,0,0,0
.L807:
	.byte	5,31,7,0,5,2
	.word	.L84
	.byte	3,223,3,1,5,18,9
	.half	.L808-.L84
	.byte	1,9
	.half	.L168-.L808
	.byte	0,1,1,5,31,0,5,2
	.word	.L84
	.byte	3,238,3,1,5,18,9
	.half	.L808-.L84
	.byte	1,9
	.half	.L452-.L808
	.byte	3,113,1,7,9
	.half	.L168-.L452
	.byte	0,1,1
.L805:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_5')
	.sect	'.debug_ranges'
.L167:
	.word	-1,.L84,0,.L168-.L84,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_6')
	.sect	'.debug_info'
.L169:
	.word	211
	.half	3
	.word	.L170
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L172,.L171
	.byte	2
	.word	.L95
	.byte	3
	.byte	'.cocofun_6',0,1,132,1,9,1
	.word	.L73,.L173,.L72
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_6')
	.sect	'.debug_abbrev'
.L170:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_6')
	.sect	'.debug_line'
.L171:
	.word	.L810-.L809
.L809:
	.half	3
	.word	.L812-.L811
.L811:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0,0,0,0,0
.L812:
	.byte	5,41,7,0,5,2
	.word	.L73
	.byte	3,143,1,1,5,34,9
	.half	.L398-.L73
	.byte	1,9
	.half	.L173-.L398
	.byte	0,1,1,5,22,0,5,2
	.word	.L73
	.byte	3,163,1,1,5,15,9
	.half	.L398-.L73
	.byte	1,5,34,9
	.half	.L813-.L398
	.byte	3,108,1,7,9
	.half	.L173-.L813
	.byte	0,1,1,5,56,0,5,2
	.word	.L73
	.byte	3,166,1,1,5,49,9
	.half	.L398-.L73
	.byte	1,5,34,9
	.half	.L813-.L398
	.byte	3,105,1,7,9
	.half	.L173-.L813
	.byte	0,1,1,5,22,0,5,2
	.word	.L73
	.byte	3,171,1,1,5,15,9
	.half	.L398-.L73
	.byte	1,5,34,9
	.half	.L813-.L398
	.byte	3,100,1,7,9
	.half	.L173-.L813
	.byte	0,1,1,5,58,0,5,2
	.word	.L73
	.byte	3,174,1,1,5,51,9
	.half	.L398-.L73
	.byte	1,5,34,9
	.half	.L813-.L398
	.byte	3,97,1,7,9
	.half	.L173-.L813
	.byte	0,1,1,5,58,0,5,2
	.word	.L73
	.byte	3,195,1,1,5,51,9
	.half	.L398-.L73
	.byte	1,5,34,9
	.half	.L813-.L398
	.byte	3,76,1,7,9
	.half	.L173-.L813
	.byte	0,1,1,5,56,0,5,2
	.word	.L73
	.byte	3,207,1,1,5,49,9
	.half	.L398-.L73
	.byte	1,5,34,9
	.half	.L813-.L398
	.byte	3,64,1,7,9
	.half	.L173-.L813
	.byte	0,1,1
.L810:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_6')
	.sect	'.debug_ranges'
.L172:
	.word	-1,.L73,0,.L173-.L73,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_7')
	.sect	'.debug_info'
.L174:
	.word	211
	.half	3
	.word	.L175
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L177,.L176
	.byte	2
	.word	.L95
	.byte	3
	.byte	'.cocofun_7',0,1,163,4,6,1
	.word	.L88,.L178,.L87
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_7')
	.sect	'.debug_abbrev'
.L175:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_7')
	.sect	'.debug_line'
.L176:
	.word	.L815-.L814
.L814:
	.half	3
	.word	.L817-.L816
.L816:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0,0,0,0,0
.L817:
	.byte	5,12,7,0,5,2
	.word	.L88
	.byte	3,168,4,1,5,20,9
	.half	.L818-.L88
	.byte	1,5,43,9
	.half	.L819-.L818
	.byte	1,5,35,9
	.half	.L820-.L819
	.byte	1,9
	.half	.L178-.L820
	.byte	0,1,1,5,12,0,5,2
	.word	.L88
	.byte	3,191,4,1,5,20,9
	.half	.L818-.L88
	.byte	1,5,40,9
	.half	.L819-.L818
	.byte	1,5,32,9
	.half	.L820-.L819
	.byte	1,5,35,9
	.half	.L821-.L820
	.byte	3,105,1,7,9
	.half	.L178-.L821
	.byte	0,1,1,5,16,0,5,2
	.word	.L88
	.byte	3,193,4,1,5,24,9
	.half	.L818-.L88
	.byte	1,5,48,9
	.half	.L819-.L818
	.byte	1,5,40,9
	.half	.L820-.L819
	.byte	1,5,35,9
	.half	.L821-.L820
	.byte	3,103,1,7,9
	.half	.L178-.L821
	.byte	0,1,1
.L815:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_7')
	.sect	'.debug_ranges'
.L177:
	.word	-1,.L88,0,.L178-.L88,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_8')
	.sect	'.debug_info'
.L179:
	.word	211
	.half	3
	.word	.L180
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L182,.L181
	.byte	2
	.word	.L95
	.byte	3
	.byte	'.cocofun_8',0,1,222,1,6,1
	.word	.L17,.L183,.L76
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_8')
	.sect	'.debug_abbrev'
.L180:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_8')
	.sect	'.debug_line'
.L181:
	.word	.L823-.L822
.L822:
	.half	3
	.word	.L825-.L824
.L824:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s\\IfxPsi5s_Psi5s.c',0,0,0,0,0
.L825:
	.byte	5,6,7,0,5,2
	.word	.L17
	.byte	3,145,2,1,9
	.half	.L183-.L17
	.byte	0,1,1,5,6,0,5,2
	.word	.L17
	.byte	3,145,2,1,9
	.half	.L183-.L17
	.byte	0,1,1,5,6,0,5,2
	.word	.L17
	.byte	3,145,2,1,9
	.half	.L183-.L17
	.byte	0,1,1
.L823:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_8')
	.sect	'.debug_ranges'
.L182:
	.word	-1,.L17,0,.L183-.L17,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_5')
	.sect	'.debug_loc'
.L83:
	.word	-1,.L84,0,.L168-.L84
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_6')
	.sect	'.debug_loc'
.L72:
	.word	-1,.L73,0,.L173-.L73
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_7')
	.sect	'.debug_loc'
.L87:
	.word	-1,.L88,0,.L178-.L88
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_8')
	.sect	'.debug_loc'
.L76:
	.word	-1,.L17,0,.L183-.L17
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPsi5s_Psi5s_deInitModule')
	.sect	'.debug_loc'
.L62:
	.word	-1,.L63,0,.L184-.L63
	.half	2
	.byte	138,0
	.word	0,0
.L186:
	.word	-1,.L63,0,.L383-.L63
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPsi5s_Psi5s_enableModule')
	.sect	'.debug_loc'
.L64:
	.word	-1,.L65,0,.L341-.L65
	.half	2
	.byte	138,0
	.word	0,0
.L342:
	.word	-1,.L65,0,.L341-.L65
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPsi5s_Psi5s_getBaudrate')
	.sect	'.debug_loc'
.L66:
	.word	-1,.L67,0,.L343-.L67
	.half	2
	.byte	138,0
	.word	0,0
.L346:
	.word	-1,.L67,0,.L343-.L67
	.half	1
	.byte	101
	.word	0,0
.L344:
	.word	-1,.L67,0,.L343-.L67
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPsi5s_Psi5s_getFracDivClock')
	.sect	'.debug_loc'
.L68:
	.word	-1,.L69,0,.L350-.L69
	.half	2
	.byte	138,0
	.word	0,0
.L353:
	.word	-1,.L69,.L386-.L69,.L350-.L69
	.half	1
	.byte	82
	.word	0,0
.L351:
	.word	-1,.L69,0,.L384-.L69
	.half	1
	.byte	100
	.word	.L385-.L69,.L350-.L69
	.half	1
	.byte	111
	.word	0,0
.L352:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPsi5s_Psi5s_initChannel')
	.sect	'.debug_loc'
.L70:
	.word	-1,.L71,0,.L304-.L71
	.half	2
	.byte	138,0
	.word	0,0
.L306:
	.word	-1,.L71,0,.L387-.L71
	.half	1
	.byte	100
	.word	.L73-.L71,.L173-.L71
	.half	1
	.byte	108
	.word	.L388-.L71,.L389-.L71
	.half	1
	.byte	108
	.word	.L395-.L71,.L322-.L71
	.half	1
	.byte	108
	.word	.L399-.L71,.L325-.L71
	.half	1
	.byte	108
	.word	.L402-.L71,.L304-.L71
	.half	1
	.byte	108
	.word	0,0
.L308:
	.word	-1,.L71,0,.L387-.L71
	.half	1
	.byte	101
	.word	.L73-.L71,.L173-.L71
	.half	1
	.byte	111
	.word	.L390-.L71,.L389-.L71
	.half	1
	.byte	111
	.word	.L395-.L71,.L322-.L71
	.half	1
	.byte	111
	.word	.L399-.L71,.L325-.L71
	.half	1
	.byte	111
	.word	.L402-.L71,.L304-.L71
	.half	1
	.byte	111
	.word	0,0
.L309:
	.word	-1,.L71,.L387-.L71,.L310-.L71
	.half	1
	.byte	82
	.word	.L73-.L71,.L173-.L71
	.half	1
	.byte	88
	.word	.L391-.L71,.L389-.L71
	.half	1
	.byte	88
	.word	.L395-.L71,.L322-.L71
	.half	1
	.byte	88
	.word	.L399-.L71,.L325-.L71
	.half	1
	.byte	88
	.word	.L402-.L71,.L304-.L71
	.half	1
	.byte	88
	.word	.L405-.L71,.L403-.L71
	.half	1
	.byte	84
	.word	0,0
.L311:
	.word	-1,.L71,.L73-.L71,.L173-.L71
	.half	1
	.byte	100
	.word	.L392-.L71,.L389-.L71
	.half	1
	.byte	100
	.word	.L395-.L71,.L322-.L71
	.half	1
	.byte	100
	.word	.L399-.L71,.L325-.L71
	.half	1
	.byte	100
	.word	.L402-.L71,.L403-.L71
	.half	1
	.byte	100
	.word	0,0
.L318:
	.word	-1,.L71,.L394-.L71,.L389-.L71
	.half	5
	.byte	144,32,157,32,0
	.word	.L73-.L71,.L173-.L71
	.half	5
	.byte	144,32,157,32,0
	.word	.L395-.L71,.L396-.L71
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L315:
	.word	-1,.L71,.L73-.L71,.L173-.L71
	.half	5
	.byte	144,32,157,32,0
	.word	.L393-.L71,.L394-.L71
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L321:
	.word	-1,.L71,.L397-.L71,.L322-.L71
	.half	1
	.byte	95
	.word	.L73-.L71,.L398-.L71
	.half	1
	.byte	95
	.word	0,0
.L324:
	.word	-1,.L71,.L400-.L71,.L401-.L71
	.half	1
	.byte	95
	.word	0,0
.L327:
	.word	-1,.L71,.L404-.L71,.L304-.L71
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPsi5s_Psi5s_initChannelConfig')
	.sect	'.debug_loc'
.L74:
	.word	-1,.L75,0,.L328-.L75
	.half	2
	.byte	138,0
	.word	0,0
.L330:
	.word	-1,.L75,0,.L406-.L75
	.half	1
	.byte	100
	.word	.L17-.L75,.L408-.L75
	.half	1
	.byte	111
	.word	.L17-.L75,.L183-.L75
	.half	1
	.byte	111
	.word	.L409-.L75,.L328-.L75
	.half	1
	.byte	111
	.word	0,0
.L331:
	.word	-1,.L75,0,.L407-.L75
	.half	1
	.byte	101
	.word	.L17-.L75,.L408-.L75
	.half	1
	.byte	102
	.word	.L17-.L75,.L183-.L75
	.half	1
	.byte	102
	.word	.L410-.L75,.L328-.L75
	.half	1
	.byte	102
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPsi5s_Psi5s_initModule')
	.sect	'.debug_loc'
.L77:
	.word	-1,.L78,0,.L188-.L78
	.half	2
	.byte	138,0
	.word	0,0
.L254:
	.word	0,0
.L283:
	.word	-1,.L78,.L434-.L78,.L24-.L78
	.half	1
	.byte	111
	.word	0,0
.L288:
	.word	0,0
.L191:
	.word	-1,.L78,0,.L411-.L78
	.half	1
	.byte	101
	.word	.L412-.L78,.L413-.L78
	.half	1
	.byte	108
	.word	0,0
.L207:
	.word	0,0
.L280:
	.word	0,0
.L233:
	.word	0,0
.L247:
	.word	0,0
.L278:
	.word	0,0
.L290:
	.word	0,0
.L264:
	.word	0,0
.L292:
	.word	0,0
.L235:
	.word	0,0
.L266:
	.word	0,0
.L197:
	.word	-1,.L78,.L411-.L78,.L416-.L78
	.half	1
	.byte	82
	.word	.L417-.L78,.L238-.L78
	.half	1
	.byte	89
	.word	.L213-.L78,.L221-.L78
	.half	1
	.byte	84
	.word	0,0
.L245:
	.word	0,0
.L276:
	.word	0,0
.L223:
	.word	-1,.L78,.L413-.L78,.L24-.L78
	.half	1
	.byte	108
	.word	0,0
.L243:
	.word	0,0
.L274:
	.word	0,0
.L189:
	.word	-1,.L78,0,.L411-.L78
	.half	1
	.byte	100
	.word	0,0
.L205:
	.word	0,0
.L252:
	.word	0,0
.L194:
	.word	-1,.L78,.L414-.L78,.L415-.L78
	.half	1
	.byte	111
	.word	.L418-.L78,.L419-.L78
	.half	1
	.byte	100
	.word	.L420-.L78,.L421-.L78
	.half	1
	.byte	100
	.word	.L422-.L78,.L423-.L78
	.half	1
	.byte	100
	.word	.L425-.L78,.L426-.L78
	.half	1
	.byte	100
	.word	.L427-.L78,.L428-.L78
	.half	1
	.byte	100
	.word	0,0
.L226:
	.word	-1,.L78,.L415-.L78,.L433-.L78
	.half	1
	.byte	111
	.word	0,0
.L231:
	.word	0,0
.L192:
	.word	-1,.L78,.L414-.L78,.L188-.L78
	.half	1
	.byte	88
	.word	0,0
.L200:
	.word	-1,.L78,.L424-.L78,.L202-.L78
	.half	1
	.byte	95
	.word	0,0
.L220:
	.word	-1,.L78,.L431-.L78,.L432-.L78
	.half	1
	.byte	95
	.word	0,0
.L210:
	.word	-1,.L78,.L429-.L78,.L430-.L78
	.half	1
	.byte	95
	.word	0,0
.L216:
	.word	-1,.L78,.L430-.L78,.L431-.L78
	.half	1
	.byte	95
	.word	0,0
.L257:
	.word	-1,.L78,.L433-.L78,.L434-.L78
	.half	1
	.byte	111
	.word	0,0
.L262:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPsi5s_Psi5s_initModuleConfig')
	.sect	'.debug_loc'
.L79:
	.word	-1,.L80,0,.L298-.L80
	.half	2
	.byte	138,0
	.word	0,0
.L300:
	.word	-1,.L80,0,.L435-.L80
	.half	1
	.byte	100
	.word	.L436-.L80,.L298-.L80
	.half	1
	.byte	111
	.word	0,0
.L301:
	.word	-1,.L80,0,.L435-.L80
	.half	1
	.byte	101
	.word	.L437-.L80,.L298-.L80
	.half	1
	.byte	108
	.word	0,0
.L303:
	.word	-1,.L80,.L438-.L80,.L439-.L80
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPsi5s_Psi5s_initializeClock')
	.sect	'.debug_loc'
.L81:
	.word	-1,.L82,0,.L354-.L82
	.half	2
	.byte	138,0
	.word	0,0
.L357:
	.word	-1,.L82,0,.L440-.L82
	.half	1
	.byte	101
	.word	.L35-.L82,.L446-.L82
	.half	1
	.byte	101
	.word	0,0
.L367:
	.word	-1,.L82,.L445-.L82,.L442-.L82
	.half	1
	.byte	95
	.word	.L448-.L82,.L449-.L82
	.half	1
	.byte	95
	.word	.L40-.L82,.L451-.L82
	.half	1
	.byte	95
	.word	.L456-.L82,.L457-.L82
	.half	1
	.byte	84
	.word	.L41-.L82,.L42-.L82
	.half	1
	.byte	95
	.word	0,0
.L366:
	.word	-1,.L82,.L444-.L82,.L442-.L82
	.half	1
	.byte	90
	.word	.L448-.L82,.L168-.L82
	.half	1
	.byte	90
	.word	.L450-.L82,.L451-.L82
	.half	1
	.byte	90
	.word	.L458-.L82,.L354-.L82
	.half	1
	.byte	90
	.word	0,0
.L364:
	.word	-1,.L82,.L443-.L82,.L442-.L82
	.half	1
	.byte	89
	.word	.L448-.L82,.L168-.L82
	.half	1
	.byte	89
	.word	.L450-.L82,.L451-.L82
	.half	1
	.byte	89
	.word	.L458-.L82,.L354-.L82
	.half	1
	.byte	89
	.word	0,0
.L368:
	.word	-1,.L82,.L446-.L82,.L36-.L82
	.half	1
	.byte	82
	.word	.L447-.L82,.L442-.L82
	.half	1
	.byte	91
	.word	.L448-.L82,.L168-.L82
	.half	1
	.byte	91
	.word	.L450-.L82,.L451-.L82
	.half	1
	.byte	91
	.word	.L453-.L82,.L454-.L82
	.half	1
	.byte	84
	.word	.L458-.L82,.L459-.L82
	.half	1
	.byte	91
	.word	.L41-.L82,.L42-.L82
	.half	1
	.byte	91
	.word	0,0
.L355:
	.word	-1,.L82,0,.L440-.L82
	.half	1
	.byte	100
	.word	.L441-.L82,.L442-.L82
	.half	1
	.byte	111
	.word	.L35-.L82,.L446-.L82
	.half	1
	.byte	100
	.word	.L448-.L82,.L168-.L82
	.half	1
	.byte	111
	.word	.L450-.L82,.L451-.L82
	.half	1
	.byte	111
	.word	.L458-.L82,.L354-.L82
	.half	1
	.byte	111
	.word	0,0
.L362:
	.word	-1,.L82,.L42-.L82,.L461-.L82
	.half	1
	.byte	82
	.word	0,0
.L360:
	.word	-1,.L82,.L452-.L82,.L168-.L82
	.half	2
	.byte	144,38
	.word	.L450-.L82,.L40-.L82
	.half	2
	.byte	144,38
	.word	.L460-.L82,.L42-.L82
	.half	2
	.byte	144,38
	.word	0,0
.L361:
	.word	-1,.L82,.L443-.L82,.L442-.L82
	.half	1
	.byte	88
	.word	.L448-.L82,.L168-.L82
	.half	1
	.byte	88
	.word	.L450-.L82,.L451-.L82
	.half	1
	.byte	88
	.word	.L455-.L82,.L454-.L82
	.half	5
	.byte	144,32,157,32,0
	.word	.L458-.L82,.L354-.L82
	.half	1
	.byte	88
	.word	0,0
.L374:
	.word	-1,.L82,.L464-.L82,.L354-.L82
	.half	1
	.byte	95
	.word	0,0
.L370:
	.word	-1,.L82,.L462-.L82,.L46-.L82
	.half	1
	.byte	95
	.word	0,0
.L372:
	.word	-1,.L82,.L463-.L82,.L47-.L82
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPsi5s_Psi5s_readFrame')
	.sect	'.debug_loc'
.L85:
	.word	-1,.L86,0,.L333-.L86
	.half	2
	.byte	138,0
	.word	0,0
.L334:
	.word	-1,.L86,.L88-.L86,.L178-.L86
	.half	1
	.byte	100
	.word	0,.L333-.L86
	.half	1
	.byte	100
	.word	0,0
.L336:
	.word	-1,.L86,.L88-.L86,.L178-.L86
	.half	1
	.byte	101
	.word	0,.L333-.L86
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPsi5s_Psi5s_resetModule')
	.sect	'.debug_loc'
.L89:
	.word	-1,.L90,0,.L347-.L90
	.half	2
	.byte	138,0
	.word	0,0
.L349:
	.word	-1,.L90,.L465-.L90,.L467-.L90
	.half	1
	.byte	82
	.word	.L468-.L90,.L347-.L90
	.half	1
	.byte	88
	.word	.L469-.L90,.L347-.L90
	.half	1
	.byte	84
	.word	0,0
.L348:
	.word	-1,.L90,0,.L465-.L90
	.half	1
	.byte	100
	.word	.L466-.L90,.L347-.L90
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPsi5s_Psi5s_sendChannelData')
	.sect	'.debug_loc'
.L91:
	.word	-1,.L92,0,.L338-.L92
	.half	2
	.byte	138,0
	.word	0,0
.L339:
	.word	-1,.L92,.L88-.L92,.L178-.L92
	.half	1
	.byte	100
	.word	.L470-.L92,.L471-.L92
	.half	1
	.byte	100
	.word	.L472-.L92,.L338-.L92
	.half	1
	.byte	100
	.word	0,0
.L340:
	.word	-1,.L92,.L88-.L92,.L178-.L92
	.half	1
	.byte	84
	.word	.L470-.L92,.L471-.L92
	.half	1
	.byte	84
	.word	.L472-.L92,.L338-.L92
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPsi5s_Psi5s_setBaudrate')
	.sect	'.debug_loc'
.L93:
	.word	-1,.L94,0,.L375-.L94
	.half	2
	.byte	138,0
	.word	0,0
.L378:
	.word	-1,.L94,0,.L473-.L94
	.half	1
	.byte	101
	.word	.L474-.L94,.L375-.L94
	.half	1
	.byte	111
	.word	.L54-.L94,.L483-.L94
	.half	1
	.byte	101
	.word	.L56-.L94,.L489-.L94
	.half	1
	.byte	101
	.word	0,0
.L377:
	.word	-1,.L94,0,.L473-.L94
	.half	1
	.byte	84
	.word	.L475-.L94,.L476-.L94
	.half	1
	.byte	91
	.word	.L478-.L94,.L479-.L94
	.half	1
	.byte	86
	.word	.L54-.L94,.L483-.L94
	.half	1
	.byte	84
	.word	.L484-.L94,.L485-.L94
	.half	1
	.byte	86
	.word	.L56-.L94,.L489-.L94
	.half	1
	.byte	84
	.word	.L490-.L94,.L491-.L94
	.half	5
	.byte	144,32,157,32,0
	.word	.L58-.L94,.L59-.L94
	.half	1
	.byte	91
	.word	0,0
.L379:
	.word	-1,.L94,.L482-.L94,.L54-.L94
	.half	1
	.byte	82
	.word	.L488-.L94,.L56-.L94
	.half	1
	.byte	82
	.word	.L493-.L94,.L58-.L94
	.half	1
	.byte	82
	.word	.L59-.L94,.L375-.L94
	.half	1
	.byte	82
	.word	0,0
.L382:
	.word	-1,.L94,.L480-.L94,.L54-.L94
	.half	1
	.byte	89
	.word	.L481-.L94,.L54-.L94
	.half	1
	.byte	92
	.word	.L486-.L94,.L56-.L94
	.half	1
	.byte	90
	.word	.L487-.L94,.L56-.L94
	.half	1
	.byte	92
	.word	.L492-.L94,.L55-.L94
	.half	1
	.byte	88
	.word	0,0
.L380:
	.word	-1,.L94,.L477-.L94,.L375-.L94
	.half	1
	.byte	94
	.word	0,0
.L376:
	.word	-1,.L94,0,.L473-.L94
	.half	1
	.byte	100
	.word	.L477-.L94,.L375-.L94
	.half	1
	.byte	108
	.word	.L54-.L94,.L483-.L94
	.half	1
	.byte	100
	.word	.L56-.L94,.L489-.L94
	.half	1
	.byte	100
	.word	0,0
.L381:
	.word	-1,.L94,.L494-.L94,.L375-.L94
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L826:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxPsi5s_Psi5s_deInitModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L826,.L63,.L184-.L63
	.sdecl	'.debug_frame',debug,cluster('IfxPsi5s_Psi5s_enableModule')
	.sect	'.debug_frame'
	.word	24
	.word	.L826,.L65,.L341-.L65
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxPsi5s_Psi5s_getBaudrate')
	.sect	'.debug_frame'
	.word	12
	.word	.L826,.L67,.L343-.L67
	.sdecl	'.debug_frame',debug,cluster('IfxPsi5s_Psi5s_getFracDivClock')
	.sect	'.debug_frame'
	.word	12
	.word	.L826,.L69,.L350-.L69
	.sdecl	'.debug_frame',debug,cluster('IfxPsi5s_Psi5s_initChannel')
	.sect	'.debug_frame'
	.word	12
	.word	.L826,.L71,.L304-.L71
	.sdecl	'.debug_frame',debug,cluster('IfxPsi5s_Psi5s_initChannelConfig')
	.sect	'.debug_frame'
	.word	12
	.word	.L826,.L75,.L328-.L75
	.sdecl	'.debug_frame',debug,cluster('IfxPsi5s_Psi5s_initModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L826,.L78,.L188-.L78
	.sdecl	'.debug_frame',debug,cluster('IfxPsi5s_Psi5s_initModuleConfig')
	.sect	'.debug_frame'
	.word	12
	.word	.L826,.L80,.L298-.L80
	.sdecl	'.debug_frame',debug,cluster('IfxPsi5s_Psi5s_initializeClock')
	.sect	'.debug_frame'
	.word	12
	.word	.L826,.L82,.L354-.L82
	.sdecl	'.debug_frame',debug,cluster('IfxPsi5s_Psi5s_readFrame')
	.sect	'.debug_frame'
	.word	20
	.word	.L826,.L86,.L333-.L86
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxPsi5s_Psi5s_resetModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L826,.L90,.L347-.L90
	.sdecl	'.debug_frame',debug,cluster('IfxPsi5s_Psi5s_sendChannelData')
	.sect	'.debug_frame'
	.word	24
	.word	.L826,.L92,.L338-.L92
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxPsi5s_Psi5s_setBaudrate')
	.sect	'.debug_frame'
	.word	12
	.word	.L826,.L94,.L375-.L94
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L827:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_6')
	.sect	'.debug_frame'
	.word	24
	.word	.L827,.L73,.L173-.L73
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_8')
	.sect	'.debug_frame'
	.word	24
	.word	.L827,.L17,.L183-.L17
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_5')
	.sect	'.debug_frame'
	.word	24
	.word	.L827,.L84,.L168-.L84
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_7')
	.sect	'.debug_frame'
	.word	24
	.word	.L827,.L88,.L178-.L88
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
