	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\4_McHal\\Tricore\\Iom\\Std\\.IfxIom.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include\\libc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\4_McHal\\Tricore\\Iom\\Std\\IfxIom.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\4_McHal\\Tricore\\Iom\\Std\\IfxIom.src ..\\0_Src\\4_McHal\\Tricore\\Iom\\Std\\IfxIom.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\4_McHal\\Tricore\\Iom\\Std\\IfxIom.c'

	
$TC162
	
	.sdecl	'.text.IfxIom.IfxIom_getFrequency',code,cluster('IfxIom_getFrequency')
	.sect	'.text.IfxIom.IfxIom_getFrequency'
	.align	2
	
	.global	IfxIom_getFrequency

; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	     1  /**
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	     2   * \file IfxIom.c
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	     3   * \brief IOM  basic functionality
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	     4   *
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	     6   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	     7   *
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	     8   *
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    10   *
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    15   *
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    17   *
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    23   * do so, all subject to the following:
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    24   *
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    30   * language processor.
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    31   *
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    39   *
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    40   */
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    41  
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    42  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    43  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    44  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    45  
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    46  #include "IfxIom.h"
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    47  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    48  
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    49  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    50  /*-------------------------Function Implementations---------------------------*/
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    51  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    52  
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    53  float32 IfxIom_getFrequency(Ifx_IOM *iom)
; Function IfxIom_getFrequency
.L11:
IfxIom_getFrequency:	.type	func

; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    54  {
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    55      IFX_UNUSED_PARAMETER(iom)
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    56      float32 fspb;
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    57      float32 fgtm;
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    58  
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    59      fspb = IfxScuCcu_getSpbFrequency();
	call	IfxScuCcu_getSpbFrequency
.L34:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     2   * \file IfxScuCcu.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     3   * \brief SCU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     4   * \ingroup IfxLld_Scu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    42   * \defgroup IfxLld_Scu SCU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    43   * \addtogroup IfxLld_Scu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    44   * \{
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    45   * \defgroup IfxLld_ScuCcu How to use the Scu Clock driver?
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    46   * \addtogroup IfxLld_ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    47   * \{
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    48   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    49   * The Scu Clock control unit driver provides a default configuration for pll and Clock initialisation and set of peripheral clock configuration functions.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    50   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    51   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    52   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    53   * \section IfxLld_ScuCcu_Std_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    54   * \subsection IfxLld_ScuCcu_Std_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    55   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    56   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    57   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    58   * #include <Scu/Std/IfxScuCcu.h>
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    59   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    60   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    61   * \subsection IfxLld_ScuCcu_Std_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    62   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    63   * Declare the Clock Configuration variables in your C code:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    64   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    65   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    66   * // used globally
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    67   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    68   * // configuration for the PLL  steps
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    69   * static IfxScuCcu_PllStepsConfig IfxScuCcu_testPllConfigSteps[] = {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    70   *     IFXSCU_CFG_PLL_STEPS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    71   * };
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    73   * static const IfxScuCcu_FlashWaitstateConfig IfxScuCcu_defaultFlashWaitstateConfig = IFXSCU_CFG_FLASH_WAITSTATE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    74   * // Default configuration for the Clock Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    75   * IfxScuCcu_Config                      IfxScuCcu_testClockConfig = {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    76   *     // IfxScuCcu_InitialStepConfig: Configuration of first step which is same as internal osc frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    77   *     IFXSCU_CFG_PLL_INITIAL_STEP,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    78   *     //IfxScuCcu_PllThrottleConfig: Configuration of PLL throttling.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    79   *     {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    80   *         sizeof(IfxScuCcu_defaultPllConfigSteps) / sizeof(IfxScuCcu_PllStepConfig),
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    81   *         IfxScuCcu_defaultPllConfigSteps
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    82   *     },
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    83   *     IFXSCU_CFG_CLK_DISTRIBUTION,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    84   *     &IfxScuCcu_defaultFlashWaitstateConfig,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    85   *     &IfxScuCcu_defaultModConfig
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    86   * };
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    87   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    88   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    89   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    90   * \subsection IfxLld_ScuCcu_Std_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    91   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    92   * The module initialisation can be done in the same function. Here an example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    93   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    94   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    95   *        // standard PLL & clock initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    96   *         IfxScuCcu_init(&IfxScuCcu_testClockConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    97   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    98   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    99   *    The SYS PLL, PER PLL1 , PLL2 and clocks are now initialised based on the XTAL and PLL values configured in Ifx_Cfg.h and are ready for use now!
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   100   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   101   * Alternately the PLL and clocks can be initialised using below method which provides greater control on the configuration.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   102   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   103   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   104   * static const IfxScuCcu_PllStepConfig IfxScuCcu_defaultPllConfigSteps[] = {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   105   *     {                   //Step 0 Config: 150MHz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   106   *         (4 - 1),        //uint8 k2Step;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   107   *         0.000100,       //float32 waitTime;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   108   *     },
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   109   *     {                   //Step 1 Config: 200MHz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   110   *         (3 - 1),       //uint8 k2Step;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   111   *         0.000100,       //float32 waitTime;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   112   *     },
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   113   *     {                   //Step 2 Config: 300MHz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   114   *         (2 - 1),        //uint8 k2Step;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   115   *         0.000100,       //float32 waitTime;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   116   *     }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   117   * };
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   118   *     IfxScuCcu_Config        IfxScuCcu_sampleClockConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   119   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   120   *     IfxScuCcu_initConfig(&IfxScuCcu_sampleClockConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   121   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   122   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   123   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   124   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.pllsParameters.pllInputClockSelection = IfxScuCcu_PllInputClockSelection_fOsc0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   125   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   126   *     //SYS PLL = 300Mhz, XTAL = 20Mhz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   127   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.pllsParameters.sysPllConfig.k2Divider = IfxScuCcu_K2divider_2;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   128   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.pllsParameters.sysPllConfig.nDivider = IfxScuCcu_Ndivider_60;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   129   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.pllsParameters.sysPllConfig.pDivider = IfxScuCcu_Pdivider_2;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   130   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.waitTime = 0.000200F;  // wait time
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   131   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   132   *     IfxScuCcu_sampleClockConfig.sysPllThrottleConfig.numOfSteps = sizeof(IfxScuCcu_defaultPllConfigSteps) / sizeof(IfxScuCcu_PllStepConfig); //  step clock incr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   133   *     IfxScuCcu_sampleClockConfig.sysPllThrottleConfig.pllSteps = IfxScuCcu_defaultPllConfigSteps;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   134   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   135   *     // PER PLL1 = 240Mhz, PERPLL2 = 50Mhz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   136   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.pllsParameters.perPllConfig.k2Divider = IfxScuCcu_K2divider_2;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   137   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.pllsParameters.perPllConfig.k3Divider = IfxScuCcu_K3divider_6;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   138   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.pllsParameters.perPllConfig.k3DividerBypass = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   139   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.pllsParameters.perPllConfig.nDivider = IfxScuCcu_Ndivider_24;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   140   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.pllsParameters.perPllConfig.pDivider = IfxScuCcu_Pdivider_1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   141   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   142   *     // update CCUCON Config use mask and value as below
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   143   *     IfxScuCcu_sampleClockConfig.clockDistribution.ccucon0.mask =IFXSCU_CFG_CCUCON0_MASK;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   144   *     IfxScuCcu_sampleClockConfig.clockDistribution.ccucon0.value = IFXSCU_CFG_CCUCON0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   145   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   146   *     // standard PLL & clock initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   147   *     IfxScuCcu_init(&IfxScuCcu_sampleClockConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   149   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   150   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   151   * ** Modulation Configuration **
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   152   * The SCU CCU module also provides an option to Frequency Modulate the clock.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   153   * The Modulation configuration can be done as follows:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   154   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   155   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   156   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   157   * //define your modulation configuration structure:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   158   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   159   *  IFX_CONST IfxScuCcu_Mod_Config IfxScuCcu_SampleModConfig = {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   160   *          IfxScuCcu_ModEn_disabled,          // disable is default //enable / disable modulation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   161   *          IfxScuCcu_ModulationAmplitude_0p5, // default 0 value  // specify the modulation amplitude %
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   162   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   163   *  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   164   *  // put this as part of the CCU configuration:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   165   *  IfxScuCcu_sampleClockConfig.modulationConfig = &IfxScuCcu_SampleModConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   166   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   167   *  // now initalize the CCU PLL and clock with the init function
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   168   *  IfxScuCcu_init(&IfxScuCcu_sampleClockConfig)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   169   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   170   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   171   * \}
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   172   * \}
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   173   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   174   * \defgroup IfxLld_Scu_Std_Ccu Ccu Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   175   * \ingroup IfxLld_Scu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   176   * \defgroup IfxLld_Scu_Std_Ccu_Ccu Clock Control Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   177   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   178   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Operative Clock Control Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   179   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   180   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Configuration Clock Control Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   181   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   182   * \defgroup IfxLld_Scu_Std_Ccu_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   183   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   184   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   186  #ifndef IFXSCUCCU_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   187  #define IFXSCUCCU_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   189  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   190  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   191  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   192  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   193  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   194  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   195  #include "Cpu/Std/IfxCpu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   196  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   197  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   198  #include "_PinMap/IfxScu_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   199  #include "IfxSmu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   201  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   202  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   203  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   205  /** \brief Oscillator stability check timeout count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   206   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   207  #ifndef IFXSCUCCU_OSC_STABLECHK_TIME
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   208  #define IFXSCUCCU_OSC_STABLECHK_TIME               (640)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   209  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   210  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   211  /** \brief
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   212   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   213  #define IFXSCUCCU_SMUALARM_MASK                    (0x1DU)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   214  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   215  /** \brief ~40uS max wait time
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   216   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   217  #ifndef IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   218  #define IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT     (0x1000U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   219  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   221  /** \brief ~122uS max wait time for PLL locking
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   223  #define IFXSCUCCU_PLL_LOCK_TIMEOUT_COUNT           (0x3000U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   224  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   225  /** \brief ~122uS max wait time for PLL power down/up state update
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   226   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   227  #define IFXSCUCCU_SYSPLLSTAT_PWDSTAT_TIMEOUT_COUNT (0x3000U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   228  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   229  /** \brief ~244uS max wait time
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   230   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   231  #define IFXSCUCCU_PLL_KRDY_TIMEOUT_COUNT           (0x6000U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   232  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   233  /** \brief 3mS max wait time for PLL power down/up state update
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   234   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   235  #define IFXSCUCCU_OSCCON_PLLLV_OR_HV_TIMEOUT_COUNT (0x493E0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   236  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   237  #define IFXSCUCCU_LOOP_TIMEOUT_CHECK(tVar, tErr) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   238      {                                            \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   239          if (((sint32)--tVar) <= 0)               \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   240          {                                        \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   241              tErr = (uint8)1;                     \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   242              break;                               \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   243          }                                        \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   244          else                                     \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   245          {                                        \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   246          }                                        \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   247      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   248  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   249  /** \brief Modulation frequency
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   250   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   251  #define IFXSCUCCU_MODULATION_FREQ_HZ               (3600000)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   252  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   253  /** \brief MODCFG shift value for SYSPLLCON2
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   254   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   255  #define IFXSCUCCU_MODCFG_DEFAULT_SHIFT             (10)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   257  /** \brief MODCFG default value - for SYSPLLCON2[15:10]
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   258   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   259  #define IFXSCUCCU_MODCFG_DEFAULT_VAL               ((uint32)0x3D)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   260  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   261  /** \brief get Rgain from MA and FDco
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   262   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   263  #define IFXSCUCCU_GET_RGAIN_NOM(MA, FDco)  ((2 * (MA / 100) * (FDco / IFXSCUCCU_MODULATION_FREQ_HZ)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   264  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   265  /** \brief Get RGAin HEX from RGain Nominal value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   266   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   267  #define IFXSCUCCU_GET_RGAIN_HEX(RGain_Nom) ((uint16)((RGain_Nom * 32) + 0.5))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   269  /** \brief Get MODCFG from RGAIN_HEX
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   270   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   271  #define IFXSCUCCU_GET_MODCFG(RGain_Hex)    ((uint16)(IFXSCUCCU_MODCFG_DEFAULT_VAL << IFXSCUCCU_MODCFG_DEFAULT_SHIFT) | (uint16)(RGain_Hex))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   272  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   273  /** \brief Define to include the flash wait state check in ScuCcu_init()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   275  #define IFXSCUCCU_FLASHWAITSTATECHECK (0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   277  /** \brief 10 microsecond wait time between steps to jump back to normal mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   278   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   279  #ifndef IFXSCUCCU_LPTONORMAL_WAITTIME
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   280  #define IFXSCUCCU_LPTONORMAL_WAITTIME (0.00001f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   281  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   283  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   284  /*------------------------------Type Definitions------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   285  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   287  /** \brief Function pointer type for the hooks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   288   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   289   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   290  typedef void (*IfxScuCcu_PllStepsFunctionHook)(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   291  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   292  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   293  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   294  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   295  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   296  /** \addtogroup IfxLld_Scu_Std_Ccu_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   297   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   298  /** \brief clock source selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   300  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   301  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   302      IfxScuCcu_Fsource_0 = 0,      /**< \brief fSource0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   303      IfxScuCcu_Fsource_1,          /**< \brief fSource1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   304      IfxScuCcu_Fsource_2           /**< \brief fSource2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   305  } IfxScuCcu_Fsource;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   306  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   307  /** \brief MODULE_SCU.PLLCON1.B.K2DIV, specifies the K2-Divider
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   308   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   309  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   310  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   311      IfxScuCcu_K2divider_1 = 0,      /**< \brief K2-Divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   312      IfxScuCcu_K2divider_2,          /**< \brief K2-Divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   313      IfxScuCcu_K2divider_3,          /**< \brief K2-Divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   314      IfxScuCcu_K2divider_4,          /**< \brief K2-Divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   315      IfxScuCcu_K2divider_5,          /**< \brief K2-Divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   316      IfxScuCcu_K2divider_6,          /**< \brief K2-Divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   317      IfxScuCcu_K2divider_7,          /**< \brief K2-Divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   318      IfxScuCcu_K2divider_8           /**< \brief K2-Divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   319  } IfxScuCcu_K2divider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   321  /** \brief MODULE_SCU.PLLCON1.B.K3DIV, specifies the K3-Divider
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   323  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   324  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   325      IfxScuCcu_K3divider_1 = 0,      /**< \brief K3-Divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   326      IfxScuCcu_K3divider_2,          /**< \brief K3-Divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   327      IfxScuCcu_K3divider_3,          /**< \brief K3-Divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   328      IfxScuCcu_K3divider_4,          /**< \brief K3-Divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   329      IfxScuCcu_K3divider_5,          /**< \brief K3-Divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   330      IfxScuCcu_K3divider_6,          /**< \brief K3-Divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   331      IfxScuCcu_K3divider_7,          /**< \brief K3-Divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   332      IfxScuCcu_K3divider_8           /**< \brief K3-Divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   333  } IfxScuCcu_K3divider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   334  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   335  /** \brief Low Power Division Ratios.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   336   * Corresponds to values of LPDIV in CCUCON0.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   337   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   338  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   339  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   340      IfxScuCcu_LowPowerDivRatio_divBy30 = 1,  /**< \brief Divide by 30 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   341      IfxScuCcu_LowPowerDivRatio_divBy60,      /**< \brief Divide by 60 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   342      IfxScuCcu_LowPowerDivRatio_divBy120,     /**< \brief Divide by 120 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   343      IfxScuCcu_LowPowerDivRatio_divBy240      /**< \brief Divide by 240 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   344  } IfxScuCcu_LowPowerDivRatio;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   346  /** \brief ENUM for MA (%) values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   347   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   348  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   349  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   350      IfxScuCcu_ModulationAmplitude_0p5 = 0,      /**< \brief 0.5%  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   351      IfxScuCcu_ModulationAmplitude_1p0,          /**< \brief 1.0%  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   352      IfxScuCcu_ModulationAmplitude_1p25,         /**< \brief 1.25%  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   353      IfxScuCcu_ModulationAmplitude_1p5,          /**< \brief 1.5%  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   354      IfxScuCcu_ModulationAmplitude_2p0,          /**< \brief 2%  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   355      IfxScuCcu_ModulationAmplitude_2p5,          /**< \brief 2.5%  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   356      IfxScuCcu_ModulationAmplitude_count,        /**< \brief range  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   357  } IfxScuCcu_ModulationAmplitude;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   358  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   359  /** \brief MODULE_SCU.PLLCON0.B.NDIV, specifies the N-Divider
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   360   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   361  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   362  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   363      IfxScuCcu_Ndivider_1 = 0,      /**< \brief  N-divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   364      IfxScuCcu_Ndivider_2,          /**< \brief  N-divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   365      IfxScuCcu_Ndivider_3,          /**< \brief  N-divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   366      IfxScuCcu_Ndivider_4,          /**< \brief  N-divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   367      IfxScuCcu_Ndivider_5,          /**< \brief  N-divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   368      IfxScuCcu_Ndivider_6,          /**< \brief  N-divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   369      IfxScuCcu_Ndivider_7,          /**< \brief  N-divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   370      IfxScuCcu_Ndivider_8,          /**< \brief  N-divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   371      IfxScuCcu_Ndivider_9,          /**< \brief  N-divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   372      IfxScuCcu_Ndivider_10,         /**< \brief  N-divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   373      IfxScuCcu_Ndivider_11,         /**< \brief  N-divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   374      IfxScuCcu_Ndivider_12,         /**< \brief  N-divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   375      IfxScuCcu_Ndivider_13,         /**< \brief  N-divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   376      IfxScuCcu_Ndivider_14,         /**< \brief  N-divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   377      IfxScuCcu_Ndivider_15,         /**< \brief  N-divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   378      IfxScuCcu_Ndivider_16,         /**< \brief  N-divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   379      IfxScuCcu_Ndivider_17,         /**< \brief  N-divider 17  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   380      IfxScuCcu_Ndivider_18,         /**< \brief  N-divider 18  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   381      IfxScuCcu_Ndivider_19,         /**< \brief  N-divider 19  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   382      IfxScuCcu_Ndivider_20,         /**< \brief  N-divider 20  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   383      IfxScuCcu_Ndivider_21,         /**< \brief  N-divider 21  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   384      IfxScuCcu_Ndivider_22,         /**< \brief  N-divider 22  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   385      IfxScuCcu_Ndivider_23,         /**< \brief  N-divider 23  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   386      IfxScuCcu_Ndivider_24,         /**< \brief  N-divider 24  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   387      IfxScuCcu_Ndivider_25,         /**< \brief  N-divider 25  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   388      IfxScuCcu_Ndivider_26,         /**< \brief  N-divider 26  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   389      IfxScuCcu_Ndivider_27,         /**< \brief  N-divider 27  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   390      IfxScuCcu_Ndivider_28,         /**< \brief  N-divider 28  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   391      IfxScuCcu_Ndivider_29,         /**< \brief  N-divider 29  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   392      IfxScuCcu_Ndivider_30,         /**< \brief  N-divider 30  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   393      IfxScuCcu_Ndivider_31,         /**< \brief  N-divider 31  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   394      IfxScuCcu_Ndivider_32,         /**< \brief  N-divider 32  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   395      IfxScuCcu_Ndivider_33,         /**< \brief  N-divider 33  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   396      IfxScuCcu_Ndivider_34,         /**< \brief  N-divider 34  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   397      IfxScuCcu_Ndivider_35,         /**< \brief  N-divider 35  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   398      IfxScuCcu_Ndivider_36,         /**< \brief  N-divider 36  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   399      IfxScuCcu_Ndivider_37,         /**< \brief  N-divider 37  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   400      IfxScuCcu_Ndivider_38,         /**< \brief  N-divider 38  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   401      IfxScuCcu_Ndivider_39,         /**< \brief  N-divider 39  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   402      IfxScuCcu_Ndivider_40,         /**< \brief  N-divider 40  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   403      IfxScuCcu_Ndivider_41,         /**< \brief  N-divider 41  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   404      IfxScuCcu_Ndivider_42,         /**< \brief  N-divider 42  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   405      IfxScuCcu_Ndivider_43,         /**< \brief  N-divider 43  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   406      IfxScuCcu_Ndivider_44,         /**< \brief  N-divider 44  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   407      IfxScuCcu_Ndivider_45,         /**< \brief  N-divider 45  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   408      IfxScuCcu_Ndivider_46,         /**< \brief  N-divider 46  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   409      IfxScuCcu_Ndivider_47,         /**< \brief  N-divider 47  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   410      IfxScuCcu_Ndivider_48,         /**< \brief  N-divider 48  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   411      IfxScuCcu_Ndivider_49,         /**< \brief  N-divider 49  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   412      IfxScuCcu_Ndivider_50,         /**< \brief  N-divider 50  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   413      IfxScuCcu_Ndivider_51,         /**< \brief  N-divider 51  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   414      IfxScuCcu_Ndivider_52,         /**< \brief  N-divider 52  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   415      IfxScuCcu_Ndivider_53,         /**< \brief  N-divider 53  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   416      IfxScuCcu_Ndivider_54,         /**< \brief  N-divider 54  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   417      IfxScuCcu_Ndivider_55,         /**< \brief  N-divider 55  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   418      IfxScuCcu_Ndivider_56,         /**< \brief  N-divider 56  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   419      IfxScuCcu_Ndivider_57,         /**< \brief  N-divider 57  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   420      IfxScuCcu_Ndivider_58,         /**< \brief  N-divider 58  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   421      IfxScuCcu_Ndivider_59,         /**< \brief  N-divider 59  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   422      IfxScuCcu_Ndivider_60,         /**< \brief  N-divider 60  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   423      IfxScuCcu_Ndivider_61,         /**< \brief  N-divider 61  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   424      IfxScuCcu_Ndivider_62,         /**< \brief  N-divider 62  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   425      IfxScuCcu_Ndivider_63,         /**< \brief  N-divider 63  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   426      IfxScuCcu_Ndivider_64,         /**< \brief  N-divider 64  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   427      IfxScuCcu_Ndivider_65,         /**< \brief  N-divider 65  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   428      IfxScuCcu_Ndivider_66,         /**< \brief  N-divider 66  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   429      IfxScuCcu_Ndivider_67,         /**< \brief  N-divider 67  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   430      IfxScuCcu_Ndivider_68,         /**< \brief  N-divider 68  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   431      IfxScuCcu_Ndivider_69,         /**< \brief  N-divider 69  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   432      IfxScuCcu_Ndivider_70,         /**< \brief  N-divider 70  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   433      IfxScuCcu_Ndivider_71,         /**< \brief  N-divider 71  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   434      IfxScuCcu_Ndivider_72,         /**< \brief  N-divider 72  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   435      IfxScuCcu_Ndivider_73,         /**< \brief  N-divider 73  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   436      IfxScuCcu_Ndivider_74,         /**< \brief  N-divider 74  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   437      IfxScuCcu_Ndivider_75,         /**< \brief  N-divider 75  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   438      IfxScuCcu_Ndivider_76,         /**< \brief  N-divider 76  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   439      IfxScuCcu_Ndivider_77,         /**< \brief  N-divider 77  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   440      IfxScuCcu_Ndivider_78,         /**< \brief  N-divider 78  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   441      IfxScuCcu_Ndivider_79,         /**< \brief  N-divider 79  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   442      IfxScuCcu_Ndivider_80,         /**< \brief  N-divider 80  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   443      IfxScuCcu_Ndivider_81,         /**< \brief  N-divider 81  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   444      IfxScuCcu_Ndivider_82,         /**< \brief  N-divider 82  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   445      IfxScuCcu_Ndivider_83,         /**< \brief  N-divider 83  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   446      IfxScuCcu_Ndivider_84,         /**< \brief  N-divider 84  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   447      IfxScuCcu_Ndivider_85,         /**< \brief  N-divider 85  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   448      IfxScuCcu_Ndivider_86,         /**< \brief  N-divider 86  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   449      IfxScuCcu_Ndivider_87,         /**< \brief  N-divider 87  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   450      IfxScuCcu_Ndivider_88,         /**< \brief  N-divider 88  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   451      IfxScuCcu_Ndivider_89,         /**< \brief  N-divider 89  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   452      IfxScuCcu_Ndivider_90,         /**< \brief  N-divider 90  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   453      IfxScuCcu_Ndivider_91,         /**< \brief  N-divider 91  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   454      IfxScuCcu_Ndivider_92,         /**< \brief  N-divider 92  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   455      IfxScuCcu_Ndivider_93,         /**< \brief  N-divider 93  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   456      IfxScuCcu_Ndivider_94,         /**< \brief  N-divider 94  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   457      IfxScuCcu_Ndivider_95,         /**< \brief  N-divider 95  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   458      IfxScuCcu_Ndivider_96,         /**< \brief  N-divider 96  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   459      IfxScuCcu_Ndivider_97,         /**< \brief  N-divider 97  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   460      IfxScuCcu_Ndivider_98,         /**< \brief  N-divider 98  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   461      IfxScuCcu_Ndivider_99,         /**< \brief  N-divider 99  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   462      IfxScuCcu_Ndivider_100,        /**< \brief  N-divider 100  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   463      IfxScuCcu_Ndivider_101,        /**< \brief  N-divider 101  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   464      IfxScuCcu_Ndivider_102,        /**< \brief  N-divider 102  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   465      IfxScuCcu_Ndivider_103,        /**< \brief  N-divider 103  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   466      IfxScuCcu_Ndivider_104,        /**< \brief  N-divider 104  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   467      IfxScuCcu_Ndivider_105,        /**< \brief  N-divider 105  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   468      IfxScuCcu_Ndivider_106,        /**< \brief  N-divider 106  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   469      IfxScuCcu_Ndivider_107,        /**< \brief  N-divider 107  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   470      IfxScuCcu_Ndivider_108,        /**< \brief  N-divider 108  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   471      IfxScuCcu_Ndivider_109,        /**< \brief  N-divider 109  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   472      IfxScuCcu_Ndivider_110,        /**< \brief  N-divider 110  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   473      IfxScuCcu_Ndivider_111,        /**< \brief  N-divider 111  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   474      IfxScuCcu_Ndivider_112,        /**< \brief  N-divider 112  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   475      IfxScuCcu_Ndivider_113,        /**< \brief  N-divider 113  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   476      IfxScuCcu_Ndivider_114,        /**< \brief  N-divider 114  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   477      IfxScuCcu_Ndivider_115,        /**< \brief  N-divider 115  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   478      IfxScuCcu_Ndivider_116,        /**< \brief  N-divider 116  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   479      IfxScuCcu_Ndivider_117,        /**< \brief  N-divider 117  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   480      IfxScuCcu_Ndivider_118,        /**< \brief  N-divider 118  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   481      IfxScuCcu_Ndivider_119,        /**< \brief  N-divider 119  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   482      IfxScuCcu_Ndivider_120,        /**< \brief  N-divider 120  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   483      IfxScuCcu_Ndivider_121,        /**< \brief  N-divider 121  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   484      IfxScuCcu_Ndivider_122,        /**< \brief  N-divider 122  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   485      IfxScuCcu_Ndivider_123,        /**< \brief  N-divider 123  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   486      IfxScuCcu_Ndivider_124,        /**< \brief  N-divider 124  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   487      IfxScuCcu_Ndivider_125,        /**< \brief  N-divider 125  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   488      IfxScuCcu_Ndivider_126,        /**< \brief  N-divider 126  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   489      IfxScuCcu_Ndivider_127,        /**< \brief  N-divider 127  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   490      IfxScuCcu_Ndivider_128         /**< \brief  N-divider 128  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   491  } IfxScuCcu_Ndivider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   492  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   493  /** \brief MODULE_SCU.PLLCON0.B.PDIV, specifies the P-Divider
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   494   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   495  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   496  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   497      IfxScuCcu_Pdivider_1 = 0,      /**< \brief  P-divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   498      IfxScuCcu_Pdivider_2,          /**< \brief  P-divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   499      IfxScuCcu_Pdivider_3,          /**< \brief  P-divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   500      IfxScuCcu_Pdivider_4,          /**< \brief  P-divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   501      IfxScuCcu_Pdivider_5,          /**< \brief  P-divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   502      IfxScuCcu_Pdivider_6,          /**< \brief  P-divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   503      IfxScuCcu_Pdivider_7,          /**< \brief  P-divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   504      IfxScuCcu_Pdivider_8           /**< \brief  P-divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   505  } IfxScuCcu_Pdivider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   506  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   507  /** \brief SysPll & Per Pll input clock selection.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   508   * SYSPLLCON0.B.INSEL
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   510  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   511  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   512      IfxScuCcu_PllInputClockSelection_fOsc1   = 0, /**< \brief Backup clock select */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   513      IfxScuCcu_PllInputClockSelection_fOsc0   = 1, /**< \brief fOsc0 or XTAL clock select */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   514      IfxScuCcu_PllInputClockSelection_fSysclk = 2  /**< \brief fOsc1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   515  } IfxScuCcu_PllInputClockSelection;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   516  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   517  /** \brief trap request type
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   518   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   519  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   520  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   521      IfxScuCcu_Traprequest_esr0 = 0,  /**< \brief external service request 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   522      IfxScuCcu_Traprequest_esr1,      /**< \brief external service request 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   523      IfxScuCcu_Traprequest_trap2,     /**< \brief trap2 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   524      IfxScuCcu_Traprequest_smu        /**< \brief safety management unit */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   525  } IfxScuCcu_Traprequest;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   526  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   527  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   529  /** \brief modulation enable
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   530   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   531  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   532  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   533      IfxScuCcu_ModEn_disabled = 0,  /**< \brief disable modulation */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   534      IfxScuCcu_ModEn_enabled  = 1   /**< \brief enable modulation */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   535  } IfxScuCcu_ModEn;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   536  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   537  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   538  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   539  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   541  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   542   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   543  /** \brief Configuration structure type for the Per Pll step.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   544   * This structure must be used to configure the P, N and K2, K3 dividers .
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   545   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   546  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   547  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   548      uint8 pDivider;              /**< \brief P divider value for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   549      uint8 nDivider;              /**< \brief N divider value for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   550      uint8 k2Divider;             /**< \brief K2 divider value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   551      uint8 k3Divider;             /**< \brief K3 divider value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   552      uint8 k3DividerBypass;       /**< \brief Divider Bypass
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   553                                    * 0 - The divide by block in front of the K3-Divider is not bypassed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   554                                    * 1-  The divide by block in front of the K3-Divider is bypassed. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   555  } IfxScuCcu_PerPllConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   556  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   557  /** \brief Configuration structure type for the Pll initial step.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   558   * This structure must be used to configure the P, N and K2 dividers for initial step.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   559   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   560  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   562      uint8 pDivider;        /**< \brief P divider value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   563      uint8 nDivider;        /**< \brief N divider value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   564      uint8 k2Divider;       /**< \brief K2 divider value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   565  } IfxScuCcu_SysPllConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   566  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   567  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   568  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   569  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   570   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   571  /** \brief Configuration structure type for CCUCON registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   572   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   573  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   574  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   575      uint32 value;       /**< \brief CCUCON Register value to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   576      uint32 mask;        /**< \brief CCUCON Mask to select the bit fields to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   577  } IfxScuCcu_CcuconRegConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   578  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   579  /** \brief Configuration structure type for the Pll Steps for current jump control.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   580   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   581  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   582  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   583      uint8   k2Step;         /**< \brief K2 divider value for this step. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   584      float32 waitTime;       /**< \brief Wait time for for this step. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   585  } IfxScuCcu_PllStepConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   587  /** \brief Configuration structure type for the Pll Parameters.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   588   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   589  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   590  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   591      uint32                           xtalFrequency;                /**< \brief Xtal frequency */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   592      IfxScuCcu_PllInputClockSelection pllInputClockSelection;       /**< \brief Pll input clock selection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   593      IfxScuCcu_SysPllConfig           sysPllConfig;                 /**< \brief System PLL Configurations */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   594      IfxScuCcu_PerPllConfig           perPllConfig;                 /**< \brief Peripheral PLL Configurations */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   595  } IfxScuCcu_pllsParameterConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   596  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   597  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   598  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   599  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   600   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   601  /** \brief Configuration structure type for the Flash waitstate configuration.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   602   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   603  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   604  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   605      uint32 value;       /**< \brief FLASH.FCON Register value to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   606      uint32 mask;        /**< \brief FLASH.FCON Mask to select the bit fields to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   607  } IfxScuCcu_FlashWaitstateConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   609  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   610  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   611  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   612   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   613  /** \brief Configuration structure type for all the CCUCON registers to configure clock distribution.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   614   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   615  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   616  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   617      IfxScuCcu_CcuconRegConfig ccucon0;        /**< \brief CCUCON0 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   618      IfxScuCcu_CcuconRegConfig ccucon1;        /**< \brief CCUCON1 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   619      IfxScuCcu_CcuconRegConfig ccucon2;        /**< \brief CCUCON2 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   620      IfxScuCcu_CcuconRegConfig ccucon5;        /**< \brief CCUCON5 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   621      IfxScuCcu_CcuconRegConfig ccucon6;        /**< \brief CCUCON6 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   622      IfxScuCcu_CcuconRegConfig ccucon7;        /**< \brief CCUCON7 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   623      IfxScuCcu_CcuconRegConfig ccucon8;        /**< \brief CCUCON8 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   624      IfxScuCcu_CcuconRegConfig ccucon9;        /**< \brief CCUCON9 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   625      IfxScuCcu_CcuconRegConfig ccucon10;       /**< \brief CCUCON10 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   626      IfxScuCcu_CcuconRegConfig ccucon11;       /**< \brief CCUCON11 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   627  } IfxScuCcu_ClockDistributionConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   628  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   629  /** \brief Configuration structure type for the Pll Initial Step Configuration.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   630   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   631  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   632  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   633      IfxScuCcu_pllsParameterConfig pllsParameters;       /**< \brief Configuration Parameters for both PLLs */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   634      float32                       waitTime;             /**< \brief Wait time for for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   635  } IfxScuCcu_InitialStepConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   637  /** \brief
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   638   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   639  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   640  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   641      uint8                              numOfSteps;       /**< \brief Number of PLL divider steps during clock throttling */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   642      IFX_CONST IfxScuCcu_PllStepConfig *pllSteps;         /**< \brief Pointer to the array of Pll divider step configuration. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   643  } IfxScuCcu_PllThrottleConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   644  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   645  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   646  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   647  /** \brief modulation config
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   648   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   649  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   650  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   651      IfxScuCcu_ModEn               Mod_Enable;       /**< \brief modulation enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   652      IfxScuCcu_ModulationAmplitude Mod_Amp;          /**< \brief modulation amplitude */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   653  } IfxScuCcu_Mod_Config;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   655  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   656   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   657  /** \brief Configuration structure SCU module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   658   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   659  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   660  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   661      IfxScuCcu_InitialStepConfig               pllInitialStepConfig;           /**< \brief Configuration of first step which is same as internal osc frequency. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   662      IfxScuCcu_PllThrottleConfig               sysPllThrottleConfig;           /**< \brief Configuration of PLL throttling. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   663      IfxScuCcu_ClockDistributionConfig         clockDistribution;              /**< \brief Configuration of of bus clocks and other module clock distribution. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   664      IFX_CONST IfxScuCcu_FlashWaitstateConfig *flashFconWaitStateConfig;       /**< \brief Configuration of flash waitstate */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   665      IFX_CONST IfxScuCcu_Mod_Config           *modulationConfig;               /**< \brief modulation configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   666  } IfxScuCcu_Config;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   668  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   669  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   670  /** \brief structure holding the RGain parameters for modulation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   671   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   672  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   673  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   674      float32 RGainNom;       /**< \brief RGain Nominal value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   675      uint16  RGainHex;       /**< \brief RGain Hex value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   676  } IfxScuCcu_RGain_Values;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   677  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   678  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   679   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   681  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   682  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   683  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   684  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   685  /** \brief API to wait for requested duration.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   686   * Note: IfxScuCcu_wait shall not use STM in future, because we can guarantee that STM is enabled after reset but  If PLL init is called for changing the frequency during runtime, there is no guarantee that STM is enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   687   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   688   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   689  IFX_INLINE void IfxScuCcu_wait(float32 timeSec);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   690  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   691  /** \brief API to wait for requested duration along with watchdog service to avoid any reset case during startup of the chip.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   692   * Note: IfxScuCcu_wait shall not use STM in future, because we can guarantee that STM is enabled after reset but  If PLL init is called for changing the frequency during runtime, there is no guarantee that STM is enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   693   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   694   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   695  IFX_INLINE void IfxScuCcu_waitWithWdtService(float32 timeSec);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   696  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   697  /** \brief API to configure the LPDIV value to enter into Low Power mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   698   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   699   * Caution:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   700   * write to LPDIV with non-zero division ratio will cause system to enter low power mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   701   * Low power mode will affect different SPBDIV and SRIDIV ratios.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   702   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   703   * The original CCUCON0 ratios should be preserved by user prior to calling this function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   704   * The "normal" CCUCON0 ratios have to be passed to API: "IfxScuCcu_switchToNormalMode" to go back to the original division ratios.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   705   * \param lpDiv Low Power Division Ratio
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   706   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   707   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   708  IFX_INLINE void IfxScuCcu_switchToLowPowerMode(IfxScuCcu_LowPowerDivRatio lpDiv);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   709  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   710  /** \brief API to switch back to normal mode from low power mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   711   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   712   * Caution:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   713   * The original CCUCON0 setting has to be saved by user prior to entering Low Power mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   714   * Pass the original CCUCON0 register as a whole word to this function to restore the normal settings.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   715   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   716   * Ramp back to normal mode is done in steps to avoid sudden jump in frequency and power usage.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   717   * \param ccucon0 CCUCON0 values at normal mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   718   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   719   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   720   * Switch to low power mode and back using iLLD functions as below
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   721   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   722   *     uint32 ccucon0 = SCU_CCUCON0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   723   *     IfxScuCcu_LowPowerDivRatio lpDiv = IfxScuCcu_LowPowerDivRatio_divBy30;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   724   *     IfxScuCcu_switchToLowPowerMode(lpDiv);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   725   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   726   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   727   * Switch back to normal mode  with the saved ccucon0 value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   728   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   729   *     IfxScuCcu_switchToNormalMode(ccucon0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   730   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   731   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   732   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   733  IFX_INLINE void IfxScuCcu_switchToNormalMode(const uint32 ccucon0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   735  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   737  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Operative
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   738   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   739  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   740  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   741  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   742  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   743  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   744  /** \brief API to get ADAS divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   745   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   746   * \return ADAS frequency (fADAS) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   747   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   748  IFX_INLINE float32 IfxScuCcu_getAdasFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   749  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   750  /** \brief API to get Adc (EVADC, EDSADC)  frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   751   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   752   * \return Adc frequency (fADC) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   753   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   754  IFX_INLINE float32 IfxScuCcu_getAdcFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   755  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   756  /** \brief API to get ASCLINF divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   757   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   758   * \return AsclinF frequency (fASCLINF) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   759   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   760  IFX_INLINE float32 IfxScuCcu_getAsclinFFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   761  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   762  /** \brief API to get EBU frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   763   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   764   * \return EBU frequency (fEBU) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   765   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   766  IFX_INLINE float32 IfxScuCcu_getEbuFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   768  /** \brief API to get EVR Oscillator frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   769   * This API returns the constant which is specific to the ScuCcu of the controller.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   770   * \return EVR Oscillator frequency (fBACK or fEVR) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   771   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   772  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   773  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   774  /** \brief API to get GETH divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   775   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   776   * \return GETH frequency (fGETH) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   777   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   778  IFX_INLINE float32 IfxScuCcu_getGethFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   779  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   780  /** \brief API to get GTMdivider frequency
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   781   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   782   * return GTM frequency (fGTM) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   783   * \return Gtm Frequency
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   784   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   785  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   786  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   787  /** \brief API to get I2C frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   788   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   789   * \return I2C frequency (fI2C) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   790   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   791  IFX_INLINE float32 IfxScuCcu_getI2cFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   792  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   793  /** \brief API to get MCANH divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   794   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   795   * \return MCANH frequency (fMCANH) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   796   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   797  IFX_INLINE float32 IfxScuCcu_getMcanhFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   798  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   799  /** \brief API to get Oscillator 0 frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   800   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   801   * \return Osc0 frequency (fOSC0) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   802   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   803  IFX_INLINE float32 IfxScuCcu_getOsc0Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   804  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   805  /** \brief API to get Oscillator 0 frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   806   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   807   * \return Osc frequency (fOSC) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   808   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   809  IFX_INLINE float32 IfxScuCcu_getOscFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   810  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   811  /** \brief Returns the clock source selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   812   * \return Clock source selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   813   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   814  IFX_INLINE IfxScuCcu_PllInputClockSelection IfxScuCcu_getSourceSelection(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   815  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   816  /** \brief API to get STM divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   817   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   818   * \return STM frequency (fSTM) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   819   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   820  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   821  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   822  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   823  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   824  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   825  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   826  /** \brief API to get ASCLINS divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   827   * This API returns the ASCLINS frequency  based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   828   * \return AsclinS frequency (fASCLINS) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   829   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   830  IFX_EXTERN float32 IfxScuCcu_getAsclinSFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   831  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   832  /** \brief API to get BBB divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   833   * This API returns the BBBDivider frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   834   * \return BBB frequency (fBBB) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   835   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   836  IFX_EXTERN float32 IfxScuCcu_getBbbFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   837  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   838  /** \brief This API returns the Cpu frequency based on the divider value in CCUCON register and fSource frequency
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   839   * \param cpu CPU number for which effective fCPU is sought
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   840   * \return Cpu[x] frequency in Hz, where x is cpu number passed as parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   841   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   842  IFX_EXTERN float32 IfxScuCcu_getCpuFrequency(const IfxCpu_ResourceCpu cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   843  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   844  /** \brief API to get FSI2 divider frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   845   * This API returns the fFSI2 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   846   * \return FSI2 frequency (fFSI2) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   847   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   848  IFX_EXTERN float32 IfxScuCcu_getFsi2Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   849  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   850  /** \brief API to get FSI divider frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   851   * This API returns the fFSI based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   852   * \return FSI frequency (fFSI) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   853   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   854  IFX_EXTERN float32 IfxScuCcu_getFsiFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   855  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   856  /** \brief API to get MCAN divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   857   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   858   * \return Mcan frequency (fMCAN) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   859   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   860  IFX_EXTERN float32 IfxScuCcu_getMcanFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   861  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   862  /** \brief get source frequency fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   863   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   864   * \return Module frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   865   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   866  IFX_EXTERN float32 IfxScuCcu_getModuleFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   867  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   868  /** \brief API to get MSC divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   869   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   870   * \return Msc frequency (fMSC) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   871   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   872  IFX_EXTERN float32 IfxScuCcu_getMscFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   873  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   874  /** \brief API to get actual PER PLL1  frequency
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   875   * This API returns the PER PLL1 frequency based on the K2 divider value in PLLCON and the VCO frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   876   * Fpll1= (Fosc*N)/(P*K2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   877   * \return PER PLL1 (K2 Divider) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   878   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   879  IFX_EXTERN float32 IfxScuCcu_getPerPllFrequency1(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   880  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   881  /** \brief API to get actual PER PLL2 (K3 Divider) frequency
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   882   * This API returns the PER PLL2 frequency based on the K3 divider value in PLLCON and the VCO frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   883   * Fpll2= (Fosc*N)/(P*K3*1.6)  // DIVBY = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   884   * Fpll2= (Fosc*N)/(P*K3*2)  // DIVBY = 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   885   * \return PER PLL2 (K3 Divider ) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   886   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   887  IFX_EXTERN float32 IfxScuCcu_getPerPllFrequency2(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   889  /** \brief API to get actual Sys PLL output frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   890   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   891   * \return System Pll (fSysPLL) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   892   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   893  IFX_EXTERN float32 IfxScuCcu_getPllFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   894  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   895  /** \brief API to get Qspi divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   896   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   897   * \return Qspi frequency (fQspi) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   898   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   899  IFX_EXTERN float32 IfxScuCcu_getQspiFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   900  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   901  /** \brief get source frequency fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   902   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   903   * \param fsource fsource selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   904   * \return Effective fSOURCE in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   905   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   906  IFX_EXTERN float32 IfxScuCcu_getSourceFrequency(IfxScuCcu_Fsource fsource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   907  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   908  /** \brief API to get SPB divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   909   * This API returns the based on fSOURCE and also on Low power divider mode and/or SPBDIV divider value in CCUCON registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   910   * \return SPB frequency (fSPB) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   911   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   912  IFX_EXTERN float32 IfxScuCcu_getSpbFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   913  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   914  /** \brief API to get SRI divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   915   * This API returns the Sri frequency based on the divider values in CCUCON registers and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   916   * \return Sri frequency (fSRI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   917   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   918  IFX_EXTERN float32 IfxScuCcu_getSriFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   919  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   920  /** \brief API to set ADAS frequency (with ADAS divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   921   * This API configure adas divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   922   * \param adasFreq ADAS frequency (fADAS) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   923   * \return Actual Adas frequency (fADAS) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   924   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   925  IFX_EXTERN float32 IfxScuCcu_setAdasFrequency(float32 adasFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   926  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   927  /** \brief API to set ASCLINF frequency (with ASCLINF divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   928   * This API configure ASCLINF divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   929   * \param asclinFFreq AsclinF frequency (fASCLINF) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   930   * \return Actual AsclinF frequency (fASCLINF) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   931   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   932  IFX_EXTERN float32 IfxScuCcu_setAsclinFFrequency(float32 asclinFFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   933  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   934  /** \brief API to set ASCLINS frequency (with ASCLINS divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   935   * This API configure ASCLINS divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   936   * \param asclinSFreq Desired AscLinS frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   937   * \return Actual AsclinS frequency (fASCLINS) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   938   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   939  IFX_EXTERN float32 IfxScuCcu_setAsclinSFrequency(float32 asclinSFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   940  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   941  /** \brief API to set BBB frequency (with Bbb divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   942   * This API configure Bbb divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   943   * \param bbbFreq Bbb frequency (fBBB) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   944   * \return Actual Bbb frequency (fBBB) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   945   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   946  IFX_EXTERN float32 IfxScuCcu_setBbbFrequency(float32 bbbFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   947  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   948  /** \brief API to set CPU frequency (with CPU divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   949   * This API configure CPU divider values in CCUCON registers. The actual frequency is always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   950   * \param cpu CPU number for which fCPU to be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   951   * \param cpuFreq Desired CPU frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   952   * \return Actual CPU[x] frequency in Hz, where x is the cpu number passed as parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   953   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   954  IFX_EXTERN float32 IfxScuCcu_setCpuFrequency(IfxCpu_ResourceCpu cpu, float32 cpuFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   955  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   956  /** \brief API to set FSI2 frequency (with FSI2 divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   957   * This API configure Fsi2 divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   958   * \param fsi2Freq FSI2 frequency (fFSI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   959   * \return Actual Fsi2 frequency (fFSI2) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   960   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   961  IFX_EXTERN float32 IfxScuCcu_setFsi2Frequency(float32 fsi2Freq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   962  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   963  /** \brief API to set FSI frequency (with FSI divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   964   * This API configure Fsi divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   965   * \param fsiFreq FSI frequency (fFSI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   966   * \return Actual Fsi frequency (fFSI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   967   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   968  IFX_EXTERN float32 IfxScuCcu_setFsiFrequency(float32 fsiFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   969  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   970  /** \brief API to set GETH frequency (with GETH divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   971   * This API configure geth divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   972   * \param gethFreq GETH frequency (fGETH) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   973   * \return Actual Geth frequency (fGETH) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   974   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   975  IFX_EXTERN float32 IfxScuCcu_setGethFrequency(float32 gethFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   976  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   977  /** \brief API to set GTM frequency (with GTM divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   978   * This API configure GTM divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   979   * \param gtmFreq Desired GTM frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   980   * \return Actual GTM frequency in HZ
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   981   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   982  IFX_EXTERN float32 IfxScuCcu_setGtmFrequency(float32 gtmFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   983  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   984  /** \brief API to set I2C frequency (with I2C divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   985   * This API configure adas divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   986   * \param i2cFreq I2C frequency (fI2C) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   987   * \return Actual I2C frequency (fI2C) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   988   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   989  IFX_EXTERN float32 IfxScuCcu_setI2cFrequency(float32 i2cFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   990  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   991  /** \brief API to set MCAN frequency (with MCAN divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   992   * This API configure MCAN divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   993   * \param mcanFreq Desired MSC frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   994   * \return Actual Mcan frequency (fMCAN) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   995   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   996  IFX_EXTERN float32 IfxScuCcu_setMcanFrequency(float32 mcanFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   997  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   998  /** \brief API to set MCANH frequency (with MCANH divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   999   * This API configure mcanh divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1000   * \param mcanhFreq MCANH frequency (fMCANH) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1001   * \return Actual MCanh frequency (fMCANH) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1002   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1003  IFX_EXTERN float32 IfxScuCcu_setMcanhFrequency(float32 mcanhFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1004  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1005  /** \brief API to set MSC frequency (with MSC divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1006   * This API configure MSC divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1007   * \param mscFreq Desired MSC frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1008   * \return Actual Msc frequency (fMSC) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1009   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1010  IFX_EXTERN float32 IfxScuCcu_setMscFrequency(float32 mscFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1011  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1012  /** \brief API to set QSPI frequency (with QSPI divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1013   * This API configure Qspi divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1014   * \param qspiFreq Desired QSPI frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1015   * \return Actual Qspi frequency (fQspi) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1016   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1017  IFX_EXTERN float32 IfxScuCcu_setQspiFrequency(float32 qspiFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1018  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1019  /** \brief API to set SPB frequency (with SPB divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1020   * This API configure SPB divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1021   * \param spbFreq Desired SPB frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1022   * \return Actual SPB frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1023   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1024  IFX_EXTERN float32 IfxScuCcu_setSpbFrequency(float32 spbFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1025  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1026  /** \brief API to set SRI frequency (with SRI divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1027   * This API configure Sri divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1028   * \param sriFreq Sri frequency (fSRI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1029   * \return Actual Sri frequency (fSRI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1030   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1031  IFX_EXTERN float32 IfxScuCcu_setSriFrequency(float32 sriFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1032  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1033  /** \brief API to set STM frequency (with STM divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1034   * This API configure Stm divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1035   * \param stmFreq Stm frequency (fASCLINF) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1036   * \return Actual Stm frequency (fSTM) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1037   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1038  IFX_EXTERN float32 IfxScuCcu_setStmFrequency(float32 stmFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1039  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1040  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1041  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1042  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1043   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1044  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1045  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1046  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1047  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1048  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1049  /** \brief This inline function configures the Ccu SYS PLLs initial step and PER PLL.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1050   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1051  IFX_INLINE boolean IfxScuCcu_configureCcuInitialStep(const IfxScuCcu_InitialStepConfig *pllInitStepCfg);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1052  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1053  /** \brief Inlined API for clock distribution
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1054   * For each CCUCON register update the configured value with the mask.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1055   * \param clockDistributionConfig pointer to clock distribution structure
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1056   * \return TRUE: Operation successful, FALSE: Operation Failure
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1057   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1058  IFX_INLINE boolean IfxScuCcu_distributeClockInline(const IfxScuCcu_ClockDistributionConfig *clockDistributionConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1059  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1060  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1061  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1062  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1063  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1064  /** \brief API for clock distribution.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1065   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1066   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1067  IFX_EXTERN void IfxScuCcu_distributeClock(IfxScuCcu_ClockDistributionConfig *clockDistributionConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1068  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1069  /** \brief API to initialize the SCU Clock Control Unit.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1070   * This API initialize the Sys PLL with ramp steps, BUS dividers and Per PLL for the configuration provided by the configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1071   * FSyspll = (Fosc * Nsys)/(Psys * K2sys);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1072   * Fpll1= (Fosc * Nper)/(Pper * K2per);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1073   * Fpll2= (Fosc * Nper)/(Pper * K3per * 1.6); // if DIVBY = 0, else Fpll2= (Fosc * Nper)/(Pper * K3per * 2) // if DIVBY = 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1074   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1075   * Note: Following SMU alarms are disabled before the PLL configuration and Enabled at the end of PLL lock in the function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1076   * PLL0,1,2 clock out of range frequency
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1077   * PLL0,1 VCO loss of lock event
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1078   * System PLL Oscillator Watchdog, input clock out of range
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1079   * The application should store/restore these alarm configurations if required.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1080   * \param config Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1081   * \return Error status of the ScuCcu initialization process.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1082   * \retval TRUE: If an error occurred during initialization.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1083   * \retval FALSE: If initialization was successful.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1084   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1085  IFX_EXTERN boolean IfxScuCcu_init(const IfxScuCcu_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1086  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1087  /** \brief Initializes the clock configuration with default values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1088   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1089   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1090   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1091  IFX_EXTERN void IfxScuCcu_initConfig(IfxScuCcu_Config *cfg);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1092  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1093  /** \brief API to switch to Backup clock from the current PLL frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1094   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1095   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1096   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1097  IFX_EXTERN void IfxScuCcu_switchToBackupClock(const IfxScuCcu_Config *cfg);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1098  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1099  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1100  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1101  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1102  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1103  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1104  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1105  /** \brief Clear the trap status flag.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1106   * \param request Trap request type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1107   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1108   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1109  IFX_INLINE void IfxScuCcu_clearTrapStatusFlag(IfxScuCcu_Traprequest request);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1110  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1111  /** \brief Get trap disable flag.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1112   * \param cpuIndex Cpu index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1113   * \param request Trap request type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1114   * \return Trap request can be generated or not.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1115   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1116  IFX_INLINE boolean IfxScuCcu_getTrapDisableFlag(IfxCpu_ResourceCpu cpuIndex, IfxScuCcu_Traprequest request);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1117  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1118  /** \brief Get the trap status.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1119   * \param request Trap request type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1120   * \return Trap was requested or not.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1121   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1122  IFX_INLINE boolean IfxScuCcu_getTrapStatusFlag(IfxScuCcu_Traprequest request);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1123  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1124  /** \brief Set the trap disable flag
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1125   * \param cpuIndex Cpu index.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1126   * \param request Trap request type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1127   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1128   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1129  IFX_INLINE void IfxScuCcu_setTrapDisableFlag(IfxCpu_ResourceCpu cpuIndex, IfxScuCcu_Traprequest request);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1130  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1131  /** \brief Set the trap status flag.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1132   * \param request Trap request type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1133   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1134   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1135  IFX_INLINE void IfxScuCcu_setTrapStatusFlag(IfxScuCcu_Traprequest request);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1136  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1137  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1139  IFX_INLINE boolean IfxScuCcu_throttleSysPllClockInline(const IfxScuCcu_PllThrottleConfig *pllThrottleConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1140  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1141  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1142  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1143  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1144  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1145  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1146   * \param modamp modulation amplitude
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1147   * \param RGain_P RGain values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1148   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1149   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1150  IFX_EXTERN void IfxScuCcu_calRGainParameters(IfxScuCcu_ModulationAmplitude modamp, IfxScuCcu_RGain_Values *RGain_P);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1151  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1152  /** \brief initialize modulation parameters
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1153   * \param Mod_Cfg modulation configuration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1154   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1155   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1156  IFX_EXTERN void IfxScuCcu_modulation_init(const IfxScuCcu_Mod_Config *Mod_Cfg);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1157  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1158  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1159   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1160   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1161  IFX_EXTERN void IfxScuCcu_throttleSysPllClock(IfxScuCcu_PllThrottleConfig *pllThrottleConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1162  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1164  /*-------------------Global Exported Variables/Constants----------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1165  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1166  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1167  /** \brief maps to the IfxScuCcu_ModulationAmplitude enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1169  IFX_EXTERN IFX_CONST float32 IfxScuCcu_MA_percent[IfxScuCcu_ModulationAmplitude_count];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1170  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1171  /** \brief Configuration structure for SCU CCU driver.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1172   * The values of this structure are defined as # defined macros in the implementation of Scu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1173   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1174  IFX_EXTERN IFX_CONST IfxScuCcu_Config     IfxScuCcu_defaultClockConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1175  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1176  /** \brief default modulation config
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1177   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1178  IFX_EXTERN IFX_CONST IfxScuCcu_Mod_Config IfxScuCcu_defaultModConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1179  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1180  IFX_EXTERN uint32                         IfxScuCcu_xtalFrequency;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1181  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1182  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1183  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1184  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1185  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1186  IFX_INLINE void IfxScuCcu_clearTrapStatusFlag(IfxScuCcu_Traprequest request)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1187  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1188      uint32 trapclear = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1189      SCU_TRAPCLR.U |= (trapclear << request);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1190  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1191  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1192  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1193  IFX_INLINE boolean IfxScuCcu_configureCcuInitialStep(const IfxScuCcu_InitialStepConfig *pllInitStepCfg)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1194  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1195      uint8                                initError = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1196      uint16                               endinitSfty_pw;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1197  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1198      uint32                               timeoutCycleCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1199      const IfxScuCcu_pllsParameterConfig *pllsParamCfg;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1200      pllsParamCfg   = &pllInitStepCfg->pllsParameters;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1201      /*get the watch-dog passwords for usage with this function*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1202      endinitSfty_pw = IfxScuWdt_getSafetyWatchdogPasswordInline();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1203  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1204      /* Reset Safety ENDINIT, SCU_CCUCON registers are protected*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1205      IfxScuWdt_clearSafetyEndinitInline(endinitSfty_pw);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1206  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1207      timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1208  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1209      while (SCU_CCUCON0.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1210      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1211          IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1212      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1213  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1214      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1215          Ifx_SCU_CCUCON0 scuCcucon0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1216          scuCcucon0.U        = SCU_CCUCON0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1217          scuCcucon0.B.CLKSEL = 0; /*Select the EVR as fsource0/1/2 for the clock distribution */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1218          scuCcucon0.B.UP     = 1; /*Update the ccucon0 register */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1219          SCU_CCUCON0.U       = scuCcucon0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1220      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1221  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1222      timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1223  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1224      while (SCU_CCUCON0.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1225      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1226          IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1227      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1228  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1229      /*Disable SMU Alarms */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1230      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1231          SMU_KEYS.U    = (uint32)0xBCU;        /* Enable access to SMU registers */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1232          SMU_AG8CF0.U &= ~IFXSCUCCU_SMUALARM_MASK;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1233          SMU_AG8CF1.U &= ~IFXSCUCCU_SMUALARM_MASK;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1234          SMU_AG8CF2.U &= ~IFXSCUCCU_SMUALARM_MASK;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1235          SMU_KEYS.U    = (uint32)0U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1236      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1237  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1238      /* Power down the both the PLLs before configuring registers*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1239      /* Both the PLLs are powered down to be sure for asynchronous PLL registers update cause no glitches */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1240      SCU_SYSPLLCON0.B.PLLPWD = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1241      SCU_PERPLLCON0.B.PLLPWD = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1242  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1243      timeoutCycleCount       = IFXSCUCCU_SYSPLLSTAT_PWDSTAT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1244  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1245      while ((SCU_SYSPLLSTAT.B.PWDSTAT == 0) || (SCU_PERPLLSTAT.B.PWDSTAT == 0))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1246      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1247          IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1248      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1249  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1250      /* Now configure the oscillator, required oscillator mode is external crystal */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1251  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1252      if ((pllsParamCfg->pllInputClockSelection == IfxScuCcu_PllInputClockSelection_fOsc0) || (pllsParamCfg->pllInputClockSelection == IfxScuCcu_PllInputClockSelection_fSysclk))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1253  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1254      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1255          Ifx_SCU_OSCCON scuOsccon;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1256          scuOsccon.U      = SCU_OSCCON.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1257  #if (IFX_CFG_SCU_EXT_CLOCK == 1)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1258          scuOsccon.B.MODE = 2U;   /* external clock selected */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1259  #else
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1260          scuOsccon.B.MODE = 0U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1261  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1262  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1263          scuOsccon.B.OSCVAL = (uint32)(pllsParamCfg->xtalFrequency / 1000000U) - 15; /*XTAL range 16MHz to 40MHz*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1264          /*Note: Oscillator Watchdog Reset (OSCRES) is not required when the PLLs are powered down*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1265          SCU_OSCCON.U       = scuOsccon.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1266      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1267  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1268      /* Configure the initial steps for the system PLL*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1269      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1270          Ifx_SCU_SYSPLLCON0 sysPllCon0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1271          sysPllCon0.U       = SCU_SYSPLLCON0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1272          sysPllCon0.B.PDIV  = pllsParamCfg->sysPllConfig.pDivider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1273          sysPllCon0.B.NDIV  = pllsParamCfg->sysPllConfig.nDivider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1274          sysPllCon0.B.INSEL = pllsParamCfg->pllInputClockSelection;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1275          SCU_SYSPLLCON0.U   = sysPllCon0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1276      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1277  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1278      /* Configure the initial steps for the peripheral PLL*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1279      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1280          Ifx_SCU_PERPLLCON0 scuPerPllCon0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1281          scuPerPllCon0.U       = SCU_PERPLLCON0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1282          scuPerPllCon0.B.DIVBY = pllsParamCfg->perPllConfig.k3DividerBypass;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1283          scuPerPllCon0.B.PDIV  = pllsParamCfg->perPllConfig.pDivider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1284          scuPerPllCon0.B.NDIV  = pllsParamCfg->perPllConfig.nDivider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1285          SCU_PERPLLCON0.U      = scuPerPllCon0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1286      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1287  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1288      /* Power up the both the PLLs before configuring registers*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1289      SCU_SYSPLLCON0.B.PLLPWD = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1290      SCU_PERPLLCON0.B.PLLPWD = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1291  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1292      timeoutCycleCount       = IFXSCUCCU_SYSPLLSTAT_PWDSTAT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1293  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1294      while ((SCU_SYSPLLSTAT.B.PWDSTAT == 1) || (SCU_PERPLLSTAT.B.PWDSTAT == 1))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1295      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1296          IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1297      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1298  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1299      timeoutCycleCount = IFXSCUCCU_PLL_KRDY_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1300  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1301      while ((SCU_SYSPLLSTAT.B.K2RDY == 0U) ||
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1302             (SCU_PERPLLSTAT.B.K2RDY == 0U) ||
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1303             (SCU_PERPLLSTAT.B.K3RDY == 0U))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1304      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1305          IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1306      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1307  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1308      SCU_SYSPLLCON1.B.K2DIV = pllsParamCfg->sysPllConfig.k2Divider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1309      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1310          Ifx_SCU_PERPLLCON1 scuPerPllCon1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1311          scuPerPllCon1.U       = SCU_PERPLLCON1.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1312          scuPerPllCon1.B.K2DIV = pllsParamCfg->perPllConfig.k2Divider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1313          scuPerPllCon1.B.K3DIV = pllsParamCfg->perPllConfig.k3Divider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1314          SCU_PERPLLCON1.U      = scuPerPllCon1.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1315      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1316  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1317      timeoutCycleCount = IFXSCUCCU_PLL_KRDY_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1318  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1319      while ((SCU_SYSPLLSTAT.B.K2RDY == 0U) ||
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1320             (SCU_PERPLLSTAT.B.K2RDY == 0U) ||
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1321             (SCU_PERPLLSTAT.B.K3RDY == 0U))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1322      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1323          IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1324      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1325  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1326      /*Check if the OSC frequencies are in the limit*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1327      timeoutCycleCount = IFXSCUCCU_OSCCON_PLLLV_OR_HV_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1328  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1329      while ((SCU_OSCCON.B.PLLLV == 0) && (SCU_OSCCON.B.PLLHV == 0))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1330      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1331          IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1332      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1333  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1334      /* Now start PLL locking for latest set values*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1335      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1336          SCU_SYSPLLCON0.B.RESLD = 1;             /* Restart Sys PLL lock detection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1337          SCU_PERPLLCON0.B.RESLD = 1;             /* Restart Per PLL lock detection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1338  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1339          timeoutCycleCount      = IFXSCUCCU_PLL_LOCK_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1340  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1341          while ((SCU_SYSPLLSTAT.B.LOCK == 0) || (SCU_PERPLLSTAT.B.LOCK == 0))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1342          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1343              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1344          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1345      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1346      /*Enable SMU Alarms */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1347      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1348          SMU_KEYS.U = (uint32)0xBCU;           /* Enable access to SMU registers */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1349          SMU_CMD.U  = (uint32)0x00000005;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1350          SMU_AG8.U  = IFXSCUCCU_SMUALARM_MASK; /* Clear SMU Alarms*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1351          SMU_KEYS.U = (uint32)0U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1352      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1353      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1354          Ifx_SCU_CCUCON0 scu_ccucon0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1355          scu_ccucon0.U        = SCU_CCUCON0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1356          scu_ccucon0.B.CLKSEL = 1; /*Select the PLLs for fsource0/1/2 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1357          scu_ccucon0.B.UP     = 1; /*Update the ccucon0 register */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1358  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1359          timeoutCycleCount    = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1360  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1361          while (SCU_CCUCON0.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1362          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1363              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1364          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1365  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1366          SCU_CCUCON0.U     = scu_ccucon0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1367  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1368          timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1369  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1370          while (SCU_CCUCON0.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1371          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1372              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1373          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1374      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1375  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1376      IfxScuWdt_setSafetyEndinitInline(endinitSfty_pw);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1377      return (boolean)initError;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1378  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1379  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1380  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1381  IFX_INLINE boolean IfxScuCcu_distributeClockInline(const IfxScuCcu_ClockDistributionConfig *clockDistributionConfig)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1382  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1383      uint16 endinitSfty_pw;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1384      uint32 timeoutCycleCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1385      uint32 initError = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1386  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1387      /*get the watch-dog passwords for usage with this function*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1388      endinitSfty_pw = IfxScuWdt_getSafetyWatchdogPasswordInline();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1389  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1390      /* Reset Safety ENDINIT, SCU_CCUCON registers are protected*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1391      IfxScuWdt_clearSafetyEndinitInline(endinitSfty_pw);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1392  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1393      /*Configure the clock distribution */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1394      {                                                    /*Write CCUCON0 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1395          Ifx_SCU_CCUCON0 ccucon0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1396          ccucon0.U         = SCU_CCUCON0.U & ~clockDistributionConfig->ccucon0.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1397          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1398          ccucon0.U        |= (clockDistributionConfig->ccucon0.mask & clockDistributionConfig->ccucon0.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1399          timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1400  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1401          while (SCU_CCUCON0.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1402          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1403              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1404          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1405  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1406          SCU_CCUCON0.U     = ccucon0.U;      /*Set update bit explicitly to make above configurations effective */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1407          timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1408  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1409          while (SCU_CCUCON0.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1410          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1411              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1412          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1413      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1414      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1415          /*Write CCUCON1 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1416          Ifx_SCU_CCUCON1 ccucon1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1417          ccucon1.U = SCU_CCUCON1.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1418  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1419          if (ccucon1.B.CLKSELMCAN
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1420              || ccucon1.B.CLKSELMSC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1421              || ccucon1.B.CLKSELQSPI)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1422          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1423              /* Non Zero ClockSel exists - set to Zero */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1424              /* CAUTION: this would briefly reset and set all clocks in CCUCON1! */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1425              ccucon1.U  = SCU_CCUCON1.U & ~clockDistributionConfig->ccucon1.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1426              /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1427              ccucon1.U |= (clockDistributionConfig->ccucon1.mask & clockDistributionConfig->ccucon1.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1428  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1429              /* set Clock selects to 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1430              ccucon1.B.CLKSELMCAN = (uint32)0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1431              ccucon1.B.CLKSELMSC  = (uint32)0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1432              ccucon1.B.CLKSELQSPI = (uint32)0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1433  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1434              timeoutCycleCount    = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1435  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1436              while (SCU_CCUCON1.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1437              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1438                  IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1439              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1441              SCU_CCUCON1.U     = ccucon1.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1442  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1443              timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1444  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1445              while (SCU_CCUCON1.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1446              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1447                  IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1448              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1449          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1450  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1451          ccucon1.U         = SCU_CCUCON1.U & ~clockDistributionConfig->ccucon1.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1452          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1453          ccucon1.U        |= (clockDistributionConfig->ccucon1.mask & clockDistributionConfig->ccucon1.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1454  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1455          timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1456  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1457          while (SCU_CCUCON1.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1458          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1459              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1460          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1461  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1462          SCU_CCUCON1.U     = ccucon1.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1464          timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1465  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1466          while (SCU_CCUCON1.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1467          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1468              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1469          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1470      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1471  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1472      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1473          /*Write CCUCON2 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1474          Ifx_SCU_CCUCON2 ccucon2;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1475          ccucon2.U = SCU_CCUCON2.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1476  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1477          if (ccucon2.B.CLKSELASCLINS)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1478          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1479              /* Non Zero ClockSel exists - set to Zero */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1480              /* CAUTION: this would briefly reset and set ASCLINS clock in CCUCON2! */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1481              ccucon2.U               = SCU_CCUCON2.U & ~clockDistributionConfig->ccucon2.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1482              /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1483              ccucon2.U              |= (clockDistributionConfig->ccucon2.mask & clockDistributionConfig->ccucon2.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1484  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1485              ccucon2.B.CLKSELASCLINS = (uint32)0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1486  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1487              timeoutCycleCount       = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1488  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1489              while (SCU_CCUCON2.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1490              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1491                  IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1492              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1493  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1494              SCU_CCUCON2.U     = ccucon2.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1496              timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1497  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1498              while (SCU_CCUCON2.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1499              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1500                  IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1501              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1502          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1503  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1504          ccucon2.U         = SCU_CCUCON2.U & ~clockDistributionConfig->ccucon2.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1505          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1506          ccucon2.U        |= (clockDistributionConfig->ccucon2.mask & clockDistributionConfig->ccucon2.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1507  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1508          timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1509  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1510          while (SCU_CCUCON2.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1511          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1512              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1513          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1514  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1515          SCU_CCUCON2.U     = ccucon2.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1516  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1517          timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1518  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1519          while (SCU_CCUCON2.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1520          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1521              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1522          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1523      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1524      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1525          /*Write CCUCON5 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1526          Ifx_SCU_CCUCON5 ccucon5;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1527          ccucon5.U         = SCU_CCUCON5.U & ~clockDistributionConfig->ccucon5.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1528          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1529          ccucon5.U        |= (clockDistributionConfig->ccucon5.mask & clockDistributionConfig->ccucon5.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1530          ccucon5.B.UP      = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1531          timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1532  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1533          while (SCU_CCUCON5.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1534          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1535              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1536          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1537  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1538          SCU_CCUCON5.U     = ccucon5.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1539          timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1540  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1541          while (SCU_CCUCON5.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1542          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1543              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1544          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1545      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1546      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1547          /*Write CCUCON6 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1548          Ifx_SCU_CCUCON6 ccucon6;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1549          ccucon6.U     = SCU_CCUCON6.U & ~clockDistributionConfig->ccucon6.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1550          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1551          ccucon6.U    |= (clockDistributionConfig->ccucon6.mask & clockDistributionConfig->ccucon6.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1552          SCU_CCUCON6.U = ccucon6.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1553      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1554  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1555      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1556          /*Write CCUCON7 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1557          Ifx_SCU_CCUCON7 ccucon7;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1558          ccucon7.U     = SCU_CCUCON7.U & ~clockDistributionConfig->ccucon7.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1559          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1560          ccucon7.U    |= (clockDistributionConfig->ccucon7.mask & clockDistributionConfig->ccucon7.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1561          SCU_CCUCON7.U = ccucon7.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1562      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1563  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1564      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1565          /*Write CCUCON8 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1566          Ifx_SCU_CCUCON8 ccucon8;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1567          ccucon8.U     = SCU_CCUCON8.U & ~clockDistributionConfig->ccucon8.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1568          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1569          ccucon8.U    |= (clockDistributionConfig->ccucon8.mask & clockDistributionConfig->ccucon8.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1570          SCU_CCUCON8.U = ccucon8.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1571      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1572      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1573          /*Write CCUCON9 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1574          Ifx_SCU_CCUCON9 ccucon9;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1575          ccucon9.U     = SCU_CCUCON9.U & ~clockDistributionConfig->ccucon9.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1576          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1577          ccucon9.U    |= (clockDistributionConfig->ccucon9.mask & clockDistributionConfig->ccucon9.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1578          SCU_CCUCON9.U = ccucon9.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1579      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1580      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1581          /*Write CCUCON10 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1582          Ifx_SCU_CCUCON10 ccucon10;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1583          ccucon10.U     = SCU_CCUCON10.U & ~clockDistributionConfig->ccucon10.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1584          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1585          ccucon10.U    |= (clockDistributionConfig->ccucon10.mask & clockDistributionConfig->ccucon10.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1586          SCU_CCUCON10.U = ccucon10.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1587      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1588      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1589          /*Write CCUCON11 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1590          Ifx_SCU_CCUCON11 ccucon11;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1591          ccucon11.U     = SCU_CCUCON11.U & ~clockDistributionConfig->ccucon11.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1592          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1593          ccucon11.U    |= (clockDistributionConfig->ccucon11.mask & clockDistributionConfig->ccucon11.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1594          SCU_CCUCON11.U = ccucon11.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1595      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1596      IfxScuWdt_setSafetyEndinitInline(endinitSfty_pw);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1597      return (boolean)initError;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1598  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1599  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1600  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1601  IFX_INLINE float32 IfxScuCcu_getAdasFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1602  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1603      uint32 adasDiv = SCU_CCUCON5.B.ADASDIV;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1604  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1605      return (adasDiv == (uint32)0) ? 0 : IfxScuCcu_getSourceFrequency(IfxScuCcu_Fsource_0) / adasDiv;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1606  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1607  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1608  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1609  IFX_INLINE float32 IfxScuCcu_getAdcFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1610  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1611      return IfxScuCcu_getSourceFrequency(IfxScuCcu_Fsource_1);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1612  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1613  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1614  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1615  IFX_INLINE float32 IfxScuCcu_getAsclinFFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1616  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1617      float32 freq          = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1618  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1619      uint8   asclindiv[16] = {1, 1, 2, 3, 4, 5, 6, 6, 8, 8, 10, 10, 12, 12, 12, 15};
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1620  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1621      if (SCU_CCUCON2.B.ASCLINFDIV)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1622      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1623          freq = IfxScuCcu_getSourceFrequency(IfxScuCcu_Fsource_2) / asclindiv[SCU_CCUCON2.B.ASCLINFDIV];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1624      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1625  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1626      return freq;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1627  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1628  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1629  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1630  IFX_INLINE float32 IfxScuCcu_getEbuFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1631  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1632      return IfxScuCcu_getSourceFrequency(IfxScuCcu_Fsource_1);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1633  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1634  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1635  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1636  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1637  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1638      return IFXSCU_EVR_OSC_FREQUENCY;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1639  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1640  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1641  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1642  IFX_INLINE float32 IfxScuCcu_getGethFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1643  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1644      return IfxScuCcu_getSourceFrequency(IfxScuCcu_Fsource_0) / SCU_CCUCON5.B.GETHDIV;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1645  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1646  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1647  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1648  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1649  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1650      /* fGTM = fSOURCEGTM / GTMDIV ;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1651       * fSOURCEGTM = fSPB *2
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1652       */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1653      uint8   gtmDiv  = SCU_CCUCON0.B.GTMDIV;
	movh.a	a15,#61443
	ld.bu	d15,[a15]@los(0xf0036030)
.L35:
	mov	d8,d2
.L38:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     2   * \file IfxScuCcu.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     3   * \brief SCU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     4   * \ingroup IfxLld_Scu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    42   * \defgroup IfxLld_Scu SCU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    43   * \addtogroup IfxLld_Scu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    44   * \{
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    45   * \defgroup IfxLld_ScuCcu How to use the Scu Clock driver?
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    46   * \addtogroup IfxLld_ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    47   * \{
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    48   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    49   * The Scu Clock control unit driver provides a default configuration for pll and Clock initialisation and set of peripheral clock configuration functions.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    50   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    51   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    52   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    53   * \section IfxLld_ScuCcu_Std_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    54   * \subsection IfxLld_ScuCcu_Std_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    55   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    56   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    57   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    58   * #include <Scu/Std/IfxScuCcu.h>
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    59   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    60   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    61   * \subsection IfxLld_ScuCcu_Std_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    62   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    63   * Declare the Clock Configuration variables in your C code:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    64   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    65   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    66   * // used globally
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    67   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    68   * // configuration for the PLL  steps
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    69   * static IfxScuCcu_PllStepsConfig IfxScuCcu_testPllConfigSteps[] = {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    70   *     IFXSCU_CFG_PLL_STEPS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    71   * };
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    73   * static const IfxScuCcu_FlashWaitstateConfig IfxScuCcu_defaultFlashWaitstateConfig = IFXSCU_CFG_FLASH_WAITSTATE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    74   * // Default configuration for the Clock Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    75   * IfxScuCcu_Config                      IfxScuCcu_testClockConfig = {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    76   *     // IfxScuCcu_InitialStepConfig: Configuration of first step which is same as internal osc frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    77   *     IFXSCU_CFG_PLL_INITIAL_STEP,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    78   *     //IfxScuCcu_PllThrottleConfig: Configuration of PLL throttling.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    79   *     {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    80   *         sizeof(IfxScuCcu_defaultPllConfigSteps) / sizeof(IfxScuCcu_PllStepConfig),
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    81   *         IfxScuCcu_defaultPllConfigSteps
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    82   *     },
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    83   *     IFXSCU_CFG_CLK_DISTRIBUTION,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    84   *     &IfxScuCcu_defaultFlashWaitstateConfig,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    85   *     &IfxScuCcu_defaultModConfig
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    86   * };
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    87   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    88   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    89   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    90   * \subsection IfxLld_ScuCcu_Std_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    91   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    92   * The module initialisation can be done in the same function. Here an example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    93   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    94   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    95   *        // standard PLL & clock initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    96   *         IfxScuCcu_init(&IfxScuCcu_testClockConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    97   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    98   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    99   *    The SYS PLL, PER PLL1 , PLL2 and clocks are now initialised based on the XTAL and PLL values configured in Ifx_Cfg.h and are ready for use now!
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   100   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   101   * Alternately the PLL and clocks can be initialised using below method which provides greater control on the configuration.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   102   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   103   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   104   * static const IfxScuCcu_PllStepConfig IfxScuCcu_defaultPllConfigSteps[] = {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   105   *     {                   //Step 0 Config: 150MHz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   106   *         (4 - 1),        //uint8 k2Step;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   107   *         0.000100,       //float32 waitTime;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   108   *     },
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   109   *     {                   //Step 1 Config: 200MHz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   110   *         (3 - 1),       //uint8 k2Step;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   111   *         0.000100,       //float32 waitTime;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   112   *     },
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   113   *     {                   //Step 2 Config: 300MHz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   114   *         (2 - 1),        //uint8 k2Step;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   115   *         0.000100,       //float32 waitTime;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   116   *     }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   117   * };
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   118   *     IfxScuCcu_Config        IfxScuCcu_sampleClockConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   119   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   120   *     IfxScuCcu_initConfig(&IfxScuCcu_sampleClockConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   121   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   122   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   123   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   124   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.pllsParameters.pllInputClockSelection = IfxScuCcu_PllInputClockSelection_fOsc0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   125   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   126   *     //SYS PLL = 300Mhz, XTAL = 20Mhz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   127   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.pllsParameters.sysPllConfig.k2Divider = IfxScuCcu_K2divider_2;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   128   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.pllsParameters.sysPllConfig.nDivider = IfxScuCcu_Ndivider_60;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   129   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.pllsParameters.sysPllConfig.pDivider = IfxScuCcu_Pdivider_2;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   130   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.waitTime = 0.000200F;  // wait time
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   131   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   132   *     IfxScuCcu_sampleClockConfig.sysPllThrottleConfig.numOfSteps = sizeof(IfxScuCcu_defaultPllConfigSteps) / sizeof(IfxScuCcu_PllStepConfig); //  step clock incr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   133   *     IfxScuCcu_sampleClockConfig.sysPllThrottleConfig.pllSteps = IfxScuCcu_defaultPllConfigSteps;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   134   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   135   *     // PER PLL1 = 240Mhz, PERPLL2 = 50Mhz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   136   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.pllsParameters.perPllConfig.k2Divider = IfxScuCcu_K2divider_2;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   137   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.pllsParameters.perPllConfig.k3Divider = IfxScuCcu_K3divider_6;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   138   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.pllsParameters.perPllConfig.k3DividerBypass = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   139   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.pllsParameters.perPllConfig.nDivider = IfxScuCcu_Ndivider_24;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   140   *     IfxScuCcu_sampleClockConfig.pllInitialStepConfig.pllsParameters.perPllConfig.pDivider = IfxScuCcu_Pdivider_1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   141   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   142   *     // update CCUCON Config use mask and value as below
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   143   *     IfxScuCcu_sampleClockConfig.clockDistribution.ccucon0.mask =IFXSCU_CFG_CCUCON0_MASK;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   144   *     IfxScuCcu_sampleClockConfig.clockDistribution.ccucon0.value = IFXSCU_CFG_CCUCON0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   145   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   146   *     // standard PLL & clock initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   147   *     IfxScuCcu_init(&IfxScuCcu_sampleClockConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   149   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   150   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   151   * ** Modulation Configuration **
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   152   * The SCU CCU module also provides an option to Frequency Modulate the clock.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   153   * The Modulation configuration can be done as follows:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   154   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   155   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   156   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   157   * //define your modulation configuration structure:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   158   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   159   *  IFX_CONST IfxScuCcu_Mod_Config IfxScuCcu_SampleModConfig = {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   160   *          IfxScuCcu_ModEn_disabled,          // disable is default //enable / disable modulation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   161   *          IfxScuCcu_ModulationAmplitude_0p5, // default 0 value  // specify the modulation amplitude %
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   162   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   163   *  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   164   *  // put this as part of the CCU configuration:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   165   *  IfxScuCcu_sampleClockConfig.modulationConfig = &IfxScuCcu_SampleModConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   166   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   167   *  // now initalize the CCU PLL and clock with the init function
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   168   *  IfxScuCcu_init(&IfxScuCcu_sampleClockConfig)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   169   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   170   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   171   * \}
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   172   * \}
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   173   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   174   * \defgroup IfxLld_Scu_Std_Ccu Ccu Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   175   * \ingroup IfxLld_Scu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   176   * \defgroup IfxLld_Scu_Std_Ccu_Ccu Clock Control Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   177   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   178   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Operative Clock Control Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   179   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   180   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Configuration Clock Control Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   181   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   182   * \defgroup IfxLld_Scu_Std_Ccu_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   183   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   184   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   186  #ifndef IFXSCUCCU_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   187  #define IFXSCUCCU_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   189  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   190  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   191  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   192  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   193  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   194  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   195  #include "Cpu/Std/IfxCpu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   196  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   197  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   198  #include "_PinMap/IfxScu_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   199  #include "IfxSmu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   201  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   202  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   203  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   205  /** \brief Oscillator stability check timeout count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   206   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   207  #ifndef IFXSCUCCU_OSC_STABLECHK_TIME
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   208  #define IFXSCUCCU_OSC_STABLECHK_TIME               (640)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   209  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   210  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   211  /** \brief
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   212   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   213  #define IFXSCUCCU_SMUALARM_MASK                    (0x1DU)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   214  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   215  /** \brief ~40uS max wait time
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   216   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   217  #ifndef IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   218  #define IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT     (0x1000U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   219  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   221  /** \brief ~122uS max wait time for PLL locking
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   223  #define IFXSCUCCU_PLL_LOCK_TIMEOUT_COUNT           (0x3000U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   224  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   225  /** \brief ~122uS max wait time for PLL power down/up state update
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   226   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   227  #define IFXSCUCCU_SYSPLLSTAT_PWDSTAT_TIMEOUT_COUNT (0x3000U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   228  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   229  /** \brief ~244uS max wait time
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   230   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   231  #define IFXSCUCCU_PLL_KRDY_TIMEOUT_COUNT           (0x6000U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   232  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   233  /** \brief 3mS max wait time for PLL power down/up state update
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   234   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   235  #define IFXSCUCCU_OSCCON_PLLLV_OR_HV_TIMEOUT_COUNT (0x493E0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   236  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   237  #define IFXSCUCCU_LOOP_TIMEOUT_CHECK(tVar, tErr) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   238      {                                            \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   239          if (((sint32)--tVar) <= 0)               \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   240          {                                        \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   241              tErr = (uint8)1;                     \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   242              break;                               \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   243          }                                        \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   244          else                                     \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   245          {                                        \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   246          }                                        \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   247      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   248  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   249  /** \brief Modulation frequency
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   250   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   251  #define IFXSCUCCU_MODULATION_FREQ_HZ               (3600000)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   252  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   253  /** \brief MODCFG shift value for SYSPLLCON2
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   254   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   255  #define IFXSCUCCU_MODCFG_DEFAULT_SHIFT             (10)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   257  /** \brief MODCFG default value - for SYSPLLCON2[15:10]
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   258   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   259  #define IFXSCUCCU_MODCFG_DEFAULT_VAL               ((uint32)0x3D)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   260  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   261  /** \brief get Rgain from MA and FDco
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   262   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   263  #define IFXSCUCCU_GET_RGAIN_NOM(MA, FDco)  ((2 * (MA / 100) * (FDco / IFXSCUCCU_MODULATION_FREQ_HZ)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   264  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   265  /** \brief Get RGAin HEX from RGain Nominal value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   266   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   267  #define IFXSCUCCU_GET_RGAIN_HEX(RGain_Nom) ((uint16)((RGain_Nom * 32) + 0.5))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   269  /** \brief Get MODCFG from RGAIN_HEX
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   270   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   271  #define IFXSCUCCU_GET_MODCFG(RGain_Hex)    ((uint16)(IFXSCUCCU_MODCFG_DEFAULT_VAL << IFXSCUCCU_MODCFG_DEFAULT_SHIFT) | (uint16)(RGain_Hex))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   272  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   273  /** \brief Define to include the flash wait state check in ScuCcu_init()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   275  #define IFXSCUCCU_FLASHWAITSTATECHECK (0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   277  /** \brief 10 microsecond wait time between steps to jump back to normal mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   278   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   279  #ifndef IFXSCUCCU_LPTONORMAL_WAITTIME
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   280  #define IFXSCUCCU_LPTONORMAL_WAITTIME (0.00001f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   281  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   283  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   284  /*------------------------------Type Definitions------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   285  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   287  /** \brief Function pointer type for the hooks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   288   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   289   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   290  typedef void (*IfxScuCcu_PllStepsFunctionHook)(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   291  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   292  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   293  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   294  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   295  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   296  /** \addtogroup IfxLld_Scu_Std_Ccu_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   297   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   298  /** \brief clock source selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   300  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   301  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   302      IfxScuCcu_Fsource_0 = 0,      /**< \brief fSource0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   303      IfxScuCcu_Fsource_1,          /**< \brief fSource1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   304      IfxScuCcu_Fsource_2           /**< \brief fSource2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   305  } IfxScuCcu_Fsource;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   306  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   307  /** \brief MODULE_SCU.PLLCON1.B.K2DIV, specifies the K2-Divider
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   308   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   309  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   310  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   311      IfxScuCcu_K2divider_1 = 0,      /**< \brief K2-Divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   312      IfxScuCcu_K2divider_2,          /**< \brief K2-Divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   313      IfxScuCcu_K2divider_3,          /**< \brief K2-Divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   314      IfxScuCcu_K2divider_4,          /**< \brief K2-Divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   315      IfxScuCcu_K2divider_5,          /**< \brief K2-Divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   316      IfxScuCcu_K2divider_6,          /**< \brief K2-Divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   317      IfxScuCcu_K2divider_7,          /**< \brief K2-Divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   318      IfxScuCcu_K2divider_8           /**< \brief K2-Divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   319  } IfxScuCcu_K2divider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   321  /** \brief MODULE_SCU.PLLCON1.B.K3DIV, specifies the K3-Divider
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   323  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   324  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   325      IfxScuCcu_K3divider_1 = 0,      /**< \brief K3-Divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   326      IfxScuCcu_K3divider_2,          /**< \brief K3-Divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   327      IfxScuCcu_K3divider_3,          /**< \brief K3-Divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   328      IfxScuCcu_K3divider_4,          /**< \brief K3-Divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   329      IfxScuCcu_K3divider_5,          /**< \brief K3-Divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   330      IfxScuCcu_K3divider_6,          /**< \brief K3-Divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   331      IfxScuCcu_K3divider_7,          /**< \brief K3-Divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   332      IfxScuCcu_K3divider_8           /**< \brief K3-Divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   333  } IfxScuCcu_K3divider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   334  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   335  /** \brief Low Power Division Ratios.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   336   * Corresponds to values of LPDIV in CCUCON0.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   337   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   338  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   339  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   340      IfxScuCcu_LowPowerDivRatio_divBy30 = 1,  /**< \brief Divide by 30 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   341      IfxScuCcu_LowPowerDivRatio_divBy60,      /**< \brief Divide by 60 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   342      IfxScuCcu_LowPowerDivRatio_divBy120,     /**< \brief Divide by 120 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   343      IfxScuCcu_LowPowerDivRatio_divBy240      /**< \brief Divide by 240 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   344  } IfxScuCcu_LowPowerDivRatio;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   346  /** \brief ENUM for MA (%) values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   347   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   348  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   349  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   350      IfxScuCcu_ModulationAmplitude_0p5 = 0,      /**< \brief 0.5%  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   351      IfxScuCcu_ModulationAmplitude_1p0,          /**< \brief 1.0%  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   352      IfxScuCcu_ModulationAmplitude_1p25,         /**< \brief 1.25%  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   353      IfxScuCcu_ModulationAmplitude_1p5,          /**< \brief 1.5%  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   354      IfxScuCcu_ModulationAmplitude_2p0,          /**< \brief 2%  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   355      IfxScuCcu_ModulationAmplitude_2p5,          /**< \brief 2.5%  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   356      IfxScuCcu_ModulationAmplitude_count,        /**< \brief range  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   357  } IfxScuCcu_ModulationAmplitude;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   358  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   359  /** \brief MODULE_SCU.PLLCON0.B.NDIV, specifies the N-Divider
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   360   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   361  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   362  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   363      IfxScuCcu_Ndivider_1 = 0,      /**< \brief  N-divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   364      IfxScuCcu_Ndivider_2,          /**< \brief  N-divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   365      IfxScuCcu_Ndivider_3,          /**< \brief  N-divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   366      IfxScuCcu_Ndivider_4,          /**< \brief  N-divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   367      IfxScuCcu_Ndivider_5,          /**< \brief  N-divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   368      IfxScuCcu_Ndivider_6,          /**< \brief  N-divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   369      IfxScuCcu_Ndivider_7,          /**< \brief  N-divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   370      IfxScuCcu_Ndivider_8,          /**< \brief  N-divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   371      IfxScuCcu_Ndivider_9,          /**< \brief  N-divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   372      IfxScuCcu_Ndivider_10,         /**< \brief  N-divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   373      IfxScuCcu_Ndivider_11,         /**< \brief  N-divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   374      IfxScuCcu_Ndivider_12,         /**< \brief  N-divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   375      IfxScuCcu_Ndivider_13,         /**< \brief  N-divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   376      IfxScuCcu_Ndivider_14,         /**< \brief  N-divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   377      IfxScuCcu_Ndivider_15,         /**< \brief  N-divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   378      IfxScuCcu_Ndivider_16,         /**< \brief  N-divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   379      IfxScuCcu_Ndivider_17,         /**< \brief  N-divider 17  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   380      IfxScuCcu_Ndivider_18,         /**< \brief  N-divider 18  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   381      IfxScuCcu_Ndivider_19,         /**< \brief  N-divider 19  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   382      IfxScuCcu_Ndivider_20,         /**< \brief  N-divider 20  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   383      IfxScuCcu_Ndivider_21,         /**< \brief  N-divider 21  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   384      IfxScuCcu_Ndivider_22,         /**< \brief  N-divider 22  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   385      IfxScuCcu_Ndivider_23,         /**< \brief  N-divider 23  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   386      IfxScuCcu_Ndivider_24,         /**< \brief  N-divider 24  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   387      IfxScuCcu_Ndivider_25,         /**< \brief  N-divider 25  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   388      IfxScuCcu_Ndivider_26,         /**< \brief  N-divider 26  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   389      IfxScuCcu_Ndivider_27,         /**< \brief  N-divider 27  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   390      IfxScuCcu_Ndivider_28,         /**< \brief  N-divider 28  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   391      IfxScuCcu_Ndivider_29,         /**< \brief  N-divider 29  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   392      IfxScuCcu_Ndivider_30,         /**< \brief  N-divider 30  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   393      IfxScuCcu_Ndivider_31,         /**< \brief  N-divider 31  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   394      IfxScuCcu_Ndivider_32,         /**< \brief  N-divider 32  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   395      IfxScuCcu_Ndivider_33,         /**< \brief  N-divider 33  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   396      IfxScuCcu_Ndivider_34,         /**< \brief  N-divider 34  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   397      IfxScuCcu_Ndivider_35,         /**< \brief  N-divider 35  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   398      IfxScuCcu_Ndivider_36,         /**< \brief  N-divider 36  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   399      IfxScuCcu_Ndivider_37,         /**< \brief  N-divider 37  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   400      IfxScuCcu_Ndivider_38,         /**< \brief  N-divider 38  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   401      IfxScuCcu_Ndivider_39,         /**< \brief  N-divider 39  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   402      IfxScuCcu_Ndivider_40,         /**< \brief  N-divider 40  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   403      IfxScuCcu_Ndivider_41,         /**< \brief  N-divider 41  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   404      IfxScuCcu_Ndivider_42,         /**< \brief  N-divider 42  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   405      IfxScuCcu_Ndivider_43,         /**< \brief  N-divider 43  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   406      IfxScuCcu_Ndivider_44,         /**< \brief  N-divider 44  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   407      IfxScuCcu_Ndivider_45,         /**< \brief  N-divider 45  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   408      IfxScuCcu_Ndivider_46,         /**< \brief  N-divider 46  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   409      IfxScuCcu_Ndivider_47,         /**< \brief  N-divider 47  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   410      IfxScuCcu_Ndivider_48,         /**< \brief  N-divider 48  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   411      IfxScuCcu_Ndivider_49,         /**< \brief  N-divider 49  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   412      IfxScuCcu_Ndivider_50,         /**< \brief  N-divider 50  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   413      IfxScuCcu_Ndivider_51,         /**< \brief  N-divider 51  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   414      IfxScuCcu_Ndivider_52,         /**< \brief  N-divider 52  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   415      IfxScuCcu_Ndivider_53,         /**< \brief  N-divider 53  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   416      IfxScuCcu_Ndivider_54,         /**< \brief  N-divider 54  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   417      IfxScuCcu_Ndivider_55,         /**< \brief  N-divider 55  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   418      IfxScuCcu_Ndivider_56,         /**< \brief  N-divider 56  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   419      IfxScuCcu_Ndivider_57,         /**< \brief  N-divider 57  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   420      IfxScuCcu_Ndivider_58,         /**< \brief  N-divider 58  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   421      IfxScuCcu_Ndivider_59,         /**< \brief  N-divider 59  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   422      IfxScuCcu_Ndivider_60,         /**< \brief  N-divider 60  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   423      IfxScuCcu_Ndivider_61,         /**< \brief  N-divider 61  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   424      IfxScuCcu_Ndivider_62,         /**< \brief  N-divider 62  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   425      IfxScuCcu_Ndivider_63,         /**< \brief  N-divider 63  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   426      IfxScuCcu_Ndivider_64,         /**< \brief  N-divider 64  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   427      IfxScuCcu_Ndivider_65,         /**< \brief  N-divider 65  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   428      IfxScuCcu_Ndivider_66,         /**< \brief  N-divider 66  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   429      IfxScuCcu_Ndivider_67,         /**< \brief  N-divider 67  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   430      IfxScuCcu_Ndivider_68,         /**< \brief  N-divider 68  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   431      IfxScuCcu_Ndivider_69,         /**< \brief  N-divider 69  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   432      IfxScuCcu_Ndivider_70,         /**< \brief  N-divider 70  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   433      IfxScuCcu_Ndivider_71,         /**< \brief  N-divider 71  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   434      IfxScuCcu_Ndivider_72,         /**< \brief  N-divider 72  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   435      IfxScuCcu_Ndivider_73,         /**< \brief  N-divider 73  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   436      IfxScuCcu_Ndivider_74,         /**< \brief  N-divider 74  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   437      IfxScuCcu_Ndivider_75,         /**< \brief  N-divider 75  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   438      IfxScuCcu_Ndivider_76,         /**< \brief  N-divider 76  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   439      IfxScuCcu_Ndivider_77,         /**< \brief  N-divider 77  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   440      IfxScuCcu_Ndivider_78,         /**< \brief  N-divider 78  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   441      IfxScuCcu_Ndivider_79,         /**< \brief  N-divider 79  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   442      IfxScuCcu_Ndivider_80,         /**< \brief  N-divider 80  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   443      IfxScuCcu_Ndivider_81,         /**< \brief  N-divider 81  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   444      IfxScuCcu_Ndivider_82,         /**< \brief  N-divider 82  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   445      IfxScuCcu_Ndivider_83,         /**< \brief  N-divider 83  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   446      IfxScuCcu_Ndivider_84,         /**< \brief  N-divider 84  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   447      IfxScuCcu_Ndivider_85,         /**< \brief  N-divider 85  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   448      IfxScuCcu_Ndivider_86,         /**< \brief  N-divider 86  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   449      IfxScuCcu_Ndivider_87,         /**< \brief  N-divider 87  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   450      IfxScuCcu_Ndivider_88,         /**< \brief  N-divider 88  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   451      IfxScuCcu_Ndivider_89,         /**< \brief  N-divider 89  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   452      IfxScuCcu_Ndivider_90,         /**< \brief  N-divider 90  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   453      IfxScuCcu_Ndivider_91,         /**< \brief  N-divider 91  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   454      IfxScuCcu_Ndivider_92,         /**< \brief  N-divider 92  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   455      IfxScuCcu_Ndivider_93,         /**< \brief  N-divider 93  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   456      IfxScuCcu_Ndivider_94,         /**< \brief  N-divider 94  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   457      IfxScuCcu_Ndivider_95,         /**< \brief  N-divider 95  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   458      IfxScuCcu_Ndivider_96,         /**< \brief  N-divider 96  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   459      IfxScuCcu_Ndivider_97,         /**< \brief  N-divider 97  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   460      IfxScuCcu_Ndivider_98,         /**< \brief  N-divider 98  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   461      IfxScuCcu_Ndivider_99,         /**< \brief  N-divider 99  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   462      IfxScuCcu_Ndivider_100,        /**< \brief  N-divider 100  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   463      IfxScuCcu_Ndivider_101,        /**< \brief  N-divider 101  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   464      IfxScuCcu_Ndivider_102,        /**< \brief  N-divider 102  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   465      IfxScuCcu_Ndivider_103,        /**< \brief  N-divider 103  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   466      IfxScuCcu_Ndivider_104,        /**< \brief  N-divider 104  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   467      IfxScuCcu_Ndivider_105,        /**< \brief  N-divider 105  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   468      IfxScuCcu_Ndivider_106,        /**< \brief  N-divider 106  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   469      IfxScuCcu_Ndivider_107,        /**< \brief  N-divider 107  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   470      IfxScuCcu_Ndivider_108,        /**< \brief  N-divider 108  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   471      IfxScuCcu_Ndivider_109,        /**< \brief  N-divider 109  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   472      IfxScuCcu_Ndivider_110,        /**< \brief  N-divider 110  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   473      IfxScuCcu_Ndivider_111,        /**< \brief  N-divider 111  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   474      IfxScuCcu_Ndivider_112,        /**< \brief  N-divider 112  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   475      IfxScuCcu_Ndivider_113,        /**< \brief  N-divider 113  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   476      IfxScuCcu_Ndivider_114,        /**< \brief  N-divider 114  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   477      IfxScuCcu_Ndivider_115,        /**< \brief  N-divider 115  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   478      IfxScuCcu_Ndivider_116,        /**< \brief  N-divider 116  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   479      IfxScuCcu_Ndivider_117,        /**< \brief  N-divider 117  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   480      IfxScuCcu_Ndivider_118,        /**< \brief  N-divider 118  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   481      IfxScuCcu_Ndivider_119,        /**< \brief  N-divider 119  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   482      IfxScuCcu_Ndivider_120,        /**< \brief  N-divider 120  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   483      IfxScuCcu_Ndivider_121,        /**< \brief  N-divider 121  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   484      IfxScuCcu_Ndivider_122,        /**< \brief  N-divider 122  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   485      IfxScuCcu_Ndivider_123,        /**< \brief  N-divider 123  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   486      IfxScuCcu_Ndivider_124,        /**< \brief  N-divider 124  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   487      IfxScuCcu_Ndivider_125,        /**< \brief  N-divider 125  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   488      IfxScuCcu_Ndivider_126,        /**< \brief  N-divider 126  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   489      IfxScuCcu_Ndivider_127,        /**< \brief  N-divider 127  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   490      IfxScuCcu_Ndivider_128         /**< \brief  N-divider 128  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   491  } IfxScuCcu_Ndivider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   492  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   493  /** \brief MODULE_SCU.PLLCON0.B.PDIV, specifies the P-Divider
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   494   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   495  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   496  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   497      IfxScuCcu_Pdivider_1 = 0,      /**< \brief  P-divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   498      IfxScuCcu_Pdivider_2,          /**< \brief  P-divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   499      IfxScuCcu_Pdivider_3,          /**< \brief  P-divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   500      IfxScuCcu_Pdivider_4,          /**< \brief  P-divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   501      IfxScuCcu_Pdivider_5,          /**< \brief  P-divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   502      IfxScuCcu_Pdivider_6,          /**< \brief  P-divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   503      IfxScuCcu_Pdivider_7,          /**< \brief  P-divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   504      IfxScuCcu_Pdivider_8           /**< \brief  P-divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   505  } IfxScuCcu_Pdivider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   506  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   507  /** \brief SysPll & Per Pll input clock selection.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   508   * SYSPLLCON0.B.INSEL
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   510  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   511  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   512      IfxScuCcu_PllInputClockSelection_fOsc1   = 0, /**< \brief Backup clock select */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   513      IfxScuCcu_PllInputClockSelection_fOsc0   = 1, /**< \brief fOsc0 or XTAL clock select */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   514      IfxScuCcu_PllInputClockSelection_fSysclk = 2  /**< \brief fOsc1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   515  } IfxScuCcu_PllInputClockSelection;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   516  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   517  /** \brief trap request type
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   518   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   519  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   520  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   521      IfxScuCcu_Traprequest_esr0 = 0,  /**< \brief external service request 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   522      IfxScuCcu_Traprequest_esr1,      /**< \brief external service request 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   523      IfxScuCcu_Traprequest_trap2,     /**< \brief trap2 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   524      IfxScuCcu_Traprequest_smu        /**< \brief safety management unit */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   525  } IfxScuCcu_Traprequest;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   526  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   527  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   529  /** \brief modulation enable
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   530   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   531  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   532  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   533      IfxScuCcu_ModEn_disabled = 0,  /**< \brief disable modulation */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   534      IfxScuCcu_ModEn_enabled  = 1   /**< \brief enable modulation */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   535  } IfxScuCcu_ModEn;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   536  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   537  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   538  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   539  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   541  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   542   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   543  /** \brief Configuration structure type for the Per Pll step.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   544   * This structure must be used to configure the P, N and K2, K3 dividers .
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   545   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   546  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   547  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   548      uint8 pDivider;              /**< \brief P divider value for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   549      uint8 nDivider;              /**< \brief N divider value for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   550      uint8 k2Divider;             /**< \brief K2 divider value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   551      uint8 k3Divider;             /**< \brief K3 divider value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   552      uint8 k3DividerBypass;       /**< \brief Divider Bypass
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   553                                    * 0 - The divide by block in front of the K3-Divider is not bypassed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   554                                    * 1-  The divide by block in front of the K3-Divider is bypassed. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   555  } IfxScuCcu_PerPllConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   556  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   557  /** \brief Configuration structure type for the Pll initial step.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   558   * This structure must be used to configure the P, N and K2 dividers for initial step.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   559   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   560  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   562      uint8 pDivider;        /**< \brief P divider value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   563      uint8 nDivider;        /**< \brief N divider value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   564      uint8 k2Divider;       /**< \brief K2 divider value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   565  } IfxScuCcu_SysPllConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   566  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   567  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   568  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   569  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   570   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   571  /** \brief Configuration structure type for CCUCON registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   572   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   573  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   574  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   575      uint32 value;       /**< \brief CCUCON Register value to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   576      uint32 mask;        /**< \brief CCUCON Mask to select the bit fields to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   577  } IfxScuCcu_CcuconRegConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   578  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   579  /** \brief Configuration structure type for the Pll Steps for current jump control.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   580   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   581  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   582  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   583      uint8   k2Step;         /**< \brief K2 divider value for this step. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   584      float32 waitTime;       /**< \brief Wait time for for this step. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   585  } IfxScuCcu_PllStepConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   587  /** \brief Configuration structure type for the Pll Parameters.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   588   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   589  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   590  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   591      uint32                           xtalFrequency;                /**< \brief Xtal frequency */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   592      IfxScuCcu_PllInputClockSelection pllInputClockSelection;       /**< \brief Pll input clock selection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   593      IfxScuCcu_SysPllConfig           sysPllConfig;                 /**< \brief System PLL Configurations */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   594      IfxScuCcu_PerPllConfig           perPllConfig;                 /**< \brief Peripheral PLL Configurations */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   595  } IfxScuCcu_pllsParameterConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   596  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   597  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   598  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   599  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   600   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   601  /** \brief Configuration structure type for the Flash waitstate configuration.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   602   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   603  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   604  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   605      uint32 value;       /**< \brief FLASH.FCON Register value to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   606      uint32 mask;        /**< \brief FLASH.FCON Mask to select the bit fields to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   607  } IfxScuCcu_FlashWaitstateConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   609  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   610  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   611  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   612   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   613  /** \brief Configuration structure type for all the CCUCON registers to configure clock distribution.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   614   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   615  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   616  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   617      IfxScuCcu_CcuconRegConfig ccucon0;        /**< \brief CCUCON0 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   618      IfxScuCcu_CcuconRegConfig ccucon1;        /**< \brief CCUCON1 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   619      IfxScuCcu_CcuconRegConfig ccucon2;        /**< \brief CCUCON2 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   620      IfxScuCcu_CcuconRegConfig ccucon5;        /**< \brief CCUCON5 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   621      IfxScuCcu_CcuconRegConfig ccucon6;        /**< \brief CCUCON6 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   622      IfxScuCcu_CcuconRegConfig ccucon7;        /**< \brief CCUCON7 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   623      IfxScuCcu_CcuconRegConfig ccucon8;        /**< \brief CCUCON8 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   624      IfxScuCcu_CcuconRegConfig ccucon9;        /**< \brief CCUCON9 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   625      IfxScuCcu_CcuconRegConfig ccucon10;       /**< \brief CCUCON10 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   626      IfxScuCcu_CcuconRegConfig ccucon11;       /**< \brief CCUCON11 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   627  } IfxScuCcu_ClockDistributionConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   628  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   629  /** \brief Configuration structure type for the Pll Initial Step Configuration.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   630   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   631  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   632  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   633      IfxScuCcu_pllsParameterConfig pllsParameters;       /**< \brief Configuration Parameters for both PLLs */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   634      float32                       waitTime;             /**< \brief Wait time for for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   635  } IfxScuCcu_InitialStepConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   637  /** \brief
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   638   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   639  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   640  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   641      uint8                              numOfSteps;       /**< \brief Number of PLL divider steps during clock throttling */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   642      IFX_CONST IfxScuCcu_PllStepConfig *pllSteps;         /**< \brief Pointer to the array of Pll divider step configuration. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   643  } IfxScuCcu_PllThrottleConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   644  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   645  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   646  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   647  /** \brief modulation config
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   648   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   649  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   650  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   651      IfxScuCcu_ModEn               Mod_Enable;       /**< \brief modulation enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   652      IfxScuCcu_ModulationAmplitude Mod_Amp;          /**< \brief modulation amplitude */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   653  } IfxScuCcu_Mod_Config;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   655  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   656   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   657  /** \brief Configuration structure SCU module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   658   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   659  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   660  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   661      IfxScuCcu_InitialStepConfig               pllInitialStepConfig;           /**< \brief Configuration of first step which is same as internal osc frequency. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   662      IfxScuCcu_PllThrottleConfig               sysPllThrottleConfig;           /**< \brief Configuration of PLL throttling. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   663      IfxScuCcu_ClockDistributionConfig         clockDistribution;              /**< \brief Configuration of of bus clocks and other module clock distribution. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   664      IFX_CONST IfxScuCcu_FlashWaitstateConfig *flashFconWaitStateConfig;       /**< \brief Configuration of flash waitstate */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   665      IFX_CONST IfxScuCcu_Mod_Config           *modulationConfig;               /**< \brief modulation configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   666  } IfxScuCcu_Config;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   668  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   669  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   670  /** \brief structure holding the RGain parameters for modulation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   671   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   672  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   673  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   674      float32 RGainNom;       /**< \brief RGain Nominal value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   675      uint16  RGainHex;       /**< \brief RGain Hex value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   676  } IfxScuCcu_RGain_Values;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   677  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   678  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   679   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   681  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   682  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   683  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   684  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   685  /** \brief API to wait for requested duration.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   686   * Note: IfxScuCcu_wait shall not use STM in future, because we can guarantee that STM is enabled after reset but  If PLL init is called for changing the frequency during runtime, there is no guarantee that STM is enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   687   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   688   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   689  IFX_INLINE void IfxScuCcu_wait(float32 timeSec);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   690  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   691  /** \brief API to wait for requested duration along with watchdog service to avoid any reset case during startup of the chip.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   692   * Note: IfxScuCcu_wait shall not use STM in future, because we can guarantee that STM is enabled after reset but  If PLL init is called for changing the frequency during runtime, there is no guarantee that STM is enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   693   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   694   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   695  IFX_INLINE void IfxScuCcu_waitWithWdtService(float32 timeSec);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   696  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   697  /** \brief API to configure the LPDIV value to enter into Low Power mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   698   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   699   * Caution:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   700   * write to LPDIV with non-zero division ratio will cause system to enter low power mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   701   * Low power mode will affect different SPBDIV and SRIDIV ratios.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   702   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   703   * The original CCUCON0 ratios should be preserved by user prior to calling this function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   704   * The "normal" CCUCON0 ratios have to be passed to API: "IfxScuCcu_switchToNormalMode" to go back to the original division ratios.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   705   * \param lpDiv Low Power Division Ratio
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   706   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   707   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   708  IFX_INLINE void IfxScuCcu_switchToLowPowerMode(IfxScuCcu_LowPowerDivRatio lpDiv);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   709  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   710  /** \brief API to switch back to normal mode from low power mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   711   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   712   * Caution:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   713   * The original CCUCON0 setting has to be saved by user prior to entering Low Power mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   714   * Pass the original CCUCON0 register as a whole word to this function to restore the normal settings.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   715   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   716   * Ramp back to normal mode is done in steps to avoid sudden jump in frequency and power usage.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   717   * \param ccucon0 CCUCON0 values at normal mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   718   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   719   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   720   * Switch to low power mode and back using iLLD functions as below
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   721   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   722   *     uint32 ccucon0 = SCU_CCUCON0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   723   *     IfxScuCcu_LowPowerDivRatio lpDiv = IfxScuCcu_LowPowerDivRatio_divBy30;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   724   *     IfxScuCcu_switchToLowPowerMode(lpDiv);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   725   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   726   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   727   * Switch back to normal mode  with the saved ccucon0 value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   728   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   729   *     IfxScuCcu_switchToNormalMode(ccucon0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   730   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   731   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   732   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   733  IFX_INLINE void IfxScuCcu_switchToNormalMode(const uint32 ccucon0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   735  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   737  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Operative
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   738   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   739  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   740  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   741  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   742  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   743  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   744  /** \brief API to get ADAS divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   745   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   746   * \return ADAS frequency (fADAS) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   747   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   748  IFX_INLINE float32 IfxScuCcu_getAdasFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   749  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   750  /** \brief API to get Adc (EVADC, EDSADC)  frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   751   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   752   * \return Adc frequency (fADC) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   753   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   754  IFX_INLINE float32 IfxScuCcu_getAdcFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   755  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   756  /** \brief API to get ASCLINF divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   757   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   758   * \return AsclinF frequency (fASCLINF) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   759   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   760  IFX_INLINE float32 IfxScuCcu_getAsclinFFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   761  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   762  /** \brief API to get EBU frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   763   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   764   * \return EBU frequency (fEBU) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   765   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   766  IFX_INLINE float32 IfxScuCcu_getEbuFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   768  /** \brief API to get EVR Oscillator frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   769   * This API returns the constant which is specific to the ScuCcu of the controller.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   770   * \return EVR Oscillator frequency (fBACK or fEVR) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   771   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   772  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   773  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   774  /** \brief API to get GETH divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   775   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   776   * \return GETH frequency (fGETH) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   777   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   778  IFX_INLINE float32 IfxScuCcu_getGethFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   779  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   780  /** \brief API to get GTMdivider frequency
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   781   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   782   * return GTM frequency (fGTM) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   783   * \return Gtm Frequency
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   784   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   785  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   786  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   787  /** \brief API to get I2C frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   788   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   789   * \return I2C frequency (fI2C) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   790   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   791  IFX_INLINE float32 IfxScuCcu_getI2cFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   792  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   793  /** \brief API to get MCANH divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   794   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   795   * \return MCANH frequency (fMCANH) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   796   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   797  IFX_INLINE float32 IfxScuCcu_getMcanhFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   798  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   799  /** \brief API to get Oscillator 0 frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   800   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   801   * \return Osc0 frequency (fOSC0) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   802   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   803  IFX_INLINE float32 IfxScuCcu_getOsc0Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   804  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   805  /** \brief API to get Oscillator 0 frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   806   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   807   * \return Osc frequency (fOSC) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   808   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   809  IFX_INLINE float32 IfxScuCcu_getOscFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   810  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   811  /** \brief Returns the clock source selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   812   * \return Clock source selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   813   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   814  IFX_INLINE IfxScuCcu_PllInputClockSelection IfxScuCcu_getSourceSelection(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   815  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   816  /** \brief API to get STM divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   817   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   818   * \return STM frequency (fSTM) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   819   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   820  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   821  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   822  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   823  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   824  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   825  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   826  /** \brief API to get ASCLINS divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   827   * This API returns the ASCLINS frequency  based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   828   * \return AsclinS frequency (fASCLINS) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   829   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   830  IFX_EXTERN float32 IfxScuCcu_getAsclinSFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   831  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   832  /** \brief API to get BBB divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   833   * This API returns the BBBDivider frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   834   * \return BBB frequency (fBBB) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   835   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   836  IFX_EXTERN float32 IfxScuCcu_getBbbFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   837  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   838  /** \brief This API returns the Cpu frequency based on the divider value in CCUCON register and fSource frequency
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   839   * \param cpu CPU number for which effective fCPU is sought
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   840   * \return Cpu[x] frequency in Hz, where x is cpu number passed as parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   841   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   842  IFX_EXTERN float32 IfxScuCcu_getCpuFrequency(const IfxCpu_ResourceCpu cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   843  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   844  /** \brief API to get FSI2 divider frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   845   * This API returns the fFSI2 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   846   * \return FSI2 frequency (fFSI2) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   847   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   848  IFX_EXTERN float32 IfxScuCcu_getFsi2Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   849  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   850  /** \brief API to get FSI divider frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   851   * This API returns the fFSI based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   852   * \return FSI frequency (fFSI) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   853   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   854  IFX_EXTERN float32 IfxScuCcu_getFsiFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   855  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   856  /** \brief API to get MCAN divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   857   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   858   * \return Mcan frequency (fMCAN) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   859   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   860  IFX_EXTERN float32 IfxScuCcu_getMcanFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   861  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   862  /** \brief get source frequency fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   863   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   864   * \return Module frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   865   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   866  IFX_EXTERN float32 IfxScuCcu_getModuleFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   867  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   868  /** \brief API to get MSC divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   869   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   870   * \return Msc frequency (fMSC) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   871   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   872  IFX_EXTERN float32 IfxScuCcu_getMscFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   873  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   874  /** \brief API to get actual PER PLL1  frequency
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   875   * This API returns the PER PLL1 frequency based on the K2 divider value in PLLCON and the VCO frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   876   * Fpll1= (Fosc*N)/(P*K2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   877   * \return PER PLL1 (K2 Divider) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   878   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   879  IFX_EXTERN float32 IfxScuCcu_getPerPllFrequency1(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   880  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   881  /** \brief API to get actual PER PLL2 (K3 Divider) frequency
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   882   * This API returns the PER PLL2 frequency based on the K3 divider value in PLLCON and the VCO frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   883   * Fpll2= (Fosc*N)/(P*K3*1.6)  // DIVBY = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   884   * Fpll2= (Fosc*N)/(P*K3*2)  // DIVBY = 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   885   * \return PER PLL2 (K3 Divider ) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   886   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   887  IFX_EXTERN float32 IfxScuCcu_getPerPllFrequency2(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   889  /** \brief API to get actual Sys PLL output frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   890   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   891   * \return System Pll (fSysPLL) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   892   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   893  IFX_EXTERN float32 IfxScuCcu_getPllFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   894  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   895  /** \brief API to get Qspi divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   896   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   897   * \return Qspi frequency (fQspi) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   898   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   899  IFX_EXTERN float32 IfxScuCcu_getQspiFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   900  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   901  /** \brief get source frequency fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   902   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   903   * \param fsource fsource selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   904   * \return Effective fSOURCE in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   905   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   906  IFX_EXTERN float32 IfxScuCcu_getSourceFrequency(IfxScuCcu_Fsource fsource);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   907  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   908  /** \brief API to get SPB divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   909   * This API returns the based on fSOURCE and also on Low power divider mode and/or SPBDIV divider value in CCUCON registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   910   * \return SPB frequency (fSPB) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   911   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   912  IFX_EXTERN float32 IfxScuCcu_getSpbFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   913  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   914  /** \brief API to get SRI divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   915   * This API returns the Sri frequency based on the divider values in CCUCON registers and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   916   * \return Sri frequency (fSRI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   917   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   918  IFX_EXTERN float32 IfxScuCcu_getSriFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   919  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   920  /** \brief API to set ADAS frequency (with ADAS divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   921   * This API configure adas divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   922   * \param adasFreq ADAS frequency (fADAS) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   923   * \return Actual Adas frequency (fADAS) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   924   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   925  IFX_EXTERN float32 IfxScuCcu_setAdasFrequency(float32 adasFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   926  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   927  /** \brief API to set ASCLINF frequency (with ASCLINF divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   928   * This API configure ASCLINF divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   929   * \param asclinFFreq AsclinF frequency (fASCLINF) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   930   * \return Actual AsclinF frequency (fASCLINF) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   931   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   932  IFX_EXTERN float32 IfxScuCcu_setAsclinFFrequency(float32 asclinFFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   933  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   934  /** \brief API to set ASCLINS frequency (with ASCLINS divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   935   * This API configure ASCLINS divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   936   * \param asclinSFreq Desired AscLinS frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   937   * \return Actual AsclinS frequency (fASCLINS) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   938   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   939  IFX_EXTERN float32 IfxScuCcu_setAsclinSFrequency(float32 asclinSFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   940  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   941  /** \brief API to set BBB frequency (with Bbb divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   942   * This API configure Bbb divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   943   * \param bbbFreq Bbb frequency (fBBB) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   944   * \return Actual Bbb frequency (fBBB) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   945   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   946  IFX_EXTERN float32 IfxScuCcu_setBbbFrequency(float32 bbbFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   947  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   948  /** \brief API to set CPU frequency (with CPU divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   949   * This API configure CPU divider values in CCUCON registers. The actual frequency is always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   950   * \param cpu CPU number for which fCPU to be configured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   951   * \param cpuFreq Desired CPU frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   952   * \return Actual CPU[x] frequency in Hz, where x is the cpu number passed as parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   953   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   954  IFX_EXTERN float32 IfxScuCcu_setCpuFrequency(IfxCpu_ResourceCpu cpu, float32 cpuFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   955  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   956  /** \brief API to set FSI2 frequency (with FSI2 divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   957   * This API configure Fsi2 divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   958   * \param fsi2Freq FSI2 frequency (fFSI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   959   * \return Actual Fsi2 frequency (fFSI2) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   960   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   961  IFX_EXTERN float32 IfxScuCcu_setFsi2Frequency(float32 fsi2Freq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   962  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   963  /** \brief API to set FSI frequency (with FSI divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   964   * This API configure Fsi divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   965   * \param fsiFreq FSI frequency (fFSI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   966   * \return Actual Fsi frequency (fFSI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   967   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   968  IFX_EXTERN float32 IfxScuCcu_setFsiFrequency(float32 fsiFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   969  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   970  /** \brief API to set GETH frequency (with GETH divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   971   * This API configure geth divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   972   * \param gethFreq GETH frequency (fGETH) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   973   * \return Actual Geth frequency (fGETH) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   974   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   975  IFX_EXTERN float32 IfxScuCcu_setGethFrequency(float32 gethFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   976  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   977  /** \brief API to set GTM frequency (with GTM divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   978   * This API configure GTM divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   979   * \param gtmFreq Desired GTM frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   980   * \return Actual GTM frequency in HZ
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   981   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   982  IFX_EXTERN float32 IfxScuCcu_setGtmFrequency(float32 gtmFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   983  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   984  /** \brief API to set I2C frequency (with I2C divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   985   * This API configure adas divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   986   * \param i2cFreq I2C frequency (fI2C) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   987   * \return Actual I2C frequency (fI2C) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   988   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   989  IFX_EXTERN float32 IfxScuCcu_setI2cFrequency(float32 i2cFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   990  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   991  /** \brief API to set MCAN frequency (with MCAN divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   992   * This API configure MCAN divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   993   * \param mcanFreq Desired MSC frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   994   * \return Actual Mcan frequency (fMCAN) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   995   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   996  IFX_EXTERN float32 IfxScuCcu_setMcanFrequency(float32 mcanFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   997  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   998  /** \brief API to set MCANH frequency (with MCANH divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   999   * This API configure mcanh divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1000   * \param mcanhFreq MCANH frequency (fMCANH) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1001   * \return Actual MCanh frequency (fMCANH) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1002   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1003  IFX_EXTERN float32 IfxScuCcu_setMcanhFrequency(float32 mcanhFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1004  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1005  /** \brief API to set MSC frequency (with MSC divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1006   * This API configure MSC divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1007   * \param mscFreq Desired MSC frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1008   * \return Actual Msc frequency (fMSC) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1009   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1010  IFX_EXTERN float32 IfxScuCcu_setMscFrequency(float32 mscFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1011  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1012  /** \brief API to set QSPI frequency (with QSPI divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1013   * This API configure Qspi divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1014   * \param qspiFreq Desired QSPI frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1015   * \return Actual Qspi frequency (fQspi) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1016   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1017  IFX_EXTERN float32 IfxScuCcu_setQspiFrequency(float32 qspiFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1018  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1019  /** \brief API to set SPB frequency (with SPB divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1020   * This API configure SPB divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1021   * \param spbFreq Desired SPB frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1022   * \return Actual SPB frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1023   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1024  IFX_EXTERN float32 IfxScuCcu_setSpbFrequency(float32 spbFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1025  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1026  /** \brief API to set SRI frequency (with SRI divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1027   * This API configure Sri divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1028   * \param sriFreq Sri frequency (fSRI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1029   * \return Actual Sri frequency (fSRI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1030   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1031  IFX_EXTERN float32 IfxScuCcu_setSriFrequency(float32 sriFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1032  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1033  /** \brief API to set STM frequency (with STM divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1034   * This API configure Stm divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1035   * \param stmFreq Stm frequency (fASCLINF) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1036   * \return Actual Stm frequency (fSTM) in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1037   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1038  IFX_EXTERN float32 IfxScuCcu_setStmFrequency(float32 stmFreq);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1039  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1040  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1041  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1042  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1043   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1044  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1045  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1046  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1047  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1048  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1049  /** \brief This inline function configures the Ccu SYS PLLs initial step and PER PLL.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1050   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1051  IFX_INLINE boolean IfxScuCcu_configureCcuInitialStep(const IfxScuCcu_InitialStepConfig *pllInitStepCfg);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1052  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1053  /** \brief Inlined API for clock distribution
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1054   * For each CCUCON register update the configured value with the mask.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1055   * \param clockDistributionConfig pointer to clock distribution structure
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1056   * \return TRUE: Operation successful, FALSE: Operation Failure
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1057   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1058  IFX_INLINE boolean IfxScuCcu_distributeClockInline(const IfxScuCcu_ClockDistributionConfig *clockDistributionConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1059  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1060  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1061  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1062  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1063  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1064  /** \brief API for clock distribution.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1065   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1066   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1067  IFX_EXTERN void IfxScuCcu_distributeClock(IfxScuCcu_ClockDistributionConfig *clockDistributionConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1068  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1069  /** \brief API to initialize the SCU Clock Control Unit.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1070   * This API initialize the Sys PLL with ramp steps, BUS dividers and Per PLL for the configuration provided by the configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1071   * FSyspll = (Fosc * Nsys)/(Psys * K2sys);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1072   * Fpll1= (Fosc * Nper)/(Pper * K2per);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1073   * Fpll2= (Fosc * Nper)/(Pper * K3per * 1.6); // if DIVBY = 0, else Fpll2= (Fosc * Nper)/(Pper * K3per * 2) // if DIVBY = 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1074   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1075   * Note: Following SMU alarms are disabled before the PLL configuration and Enabled at the end of PLL lock in the function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1076   * PLL0,1,2 clock out of range frequency
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1077   * PLL0,1 VCO loss of lock event
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1078   * System PLL Oscillator Watchdog, input clock out of range
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1079   * The application should store/restore these alarm configurations if required.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1080   * \param config Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1081   * \return Error status of the ScuCcu initialization process.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1082   * \retval TRUE: If an error occurred during initialization.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1083   * \retval FALSE: If initialization was successful.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1084   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1085  IFX_EXTERN boolean IfxScuCcu_init(const IfxScuCcu_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1086  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1087  /** \brief Initializes the clock configuration with default values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1088   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1089   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1090   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1091  IFX_EXTERN void IfxScuCcu_initConfig(IfxScuCcu_Config *cfg);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1092  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1093  /** \brief API to switch to Backup clock from the current PLL frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1094   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1095   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1096   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1097  IFX_EXTERN void IfxScuCcu_switchToBackupClock(const IfxScuCcu_Config *cfg);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1098  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1099  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1100  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1101  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1102  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1103  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1104  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1105  /** \brief Clear the trap status flag.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1106   * \param request Trap request type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1107   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1108   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1109  IFX_INLINE void IfxScuCcu_clearTrapStatusFlag(IfxScuCcu_Traprequest request);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1110  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1111  /** \brief Get trap disable flag.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1112   * \param cpuIndex Cpu index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1113   * \param request Trap request type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1114   * \return Trap request can be generated or not.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1115   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1116  IFX_INLINE boolean IfxScuCcu_getTrapDisableFlag(IfxCpu_ResourceCpu cpuIndex, IfxScuCcu_Traprequest request);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1117  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1118  /** \brief Get the trap status.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1119   * \param request Trap request type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1120   * \return Trap was requested or not.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1121   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1122  IFX_INLINE boolean IfxScuCcu_getTrapStatusFlag(IfxScuCcu_Traprequest request);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1123  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1124  /** \brief Set the trap disable flag
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1125   * \param cpuIndex Cpu index.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1126   * \param request Trap request type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1127   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1128   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1129  IFX_INLINE void IfxScuCcu_setTrapDisableFlag(IfxCpu_ResourceCpu cpuIndex, IfxScuCcu_Traprequest request);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1130  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1131  /** \brief Set the trap status flag.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1132   * \param request Trap request type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1133   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1134   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1135  IFX_INLINE void IfxScuCcu_setTrapStatusFlag(IfxScuCcu_Traprequest request);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1136  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1137  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1139  IFX_INLINE boolean IfxScuCcu_throttleSysPllClockInline(const IfxScuCcu_PllThrottleConfig *pllThrottleConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1140  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1141  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1142  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1143  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1144  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1145  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1146   * \param modamp modulation amplitude
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1147   * \param RGain_P RGain values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1148   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1149   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1150  IFX_EXTERN void IfxScuCcu_calRGainParameters(IfxScuCcu_ModulationAmplitude modamp, IfxScuCcu_RGain_Values *RGain_P);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1151  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1152  /** \brief initialize modulation parameters
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1153   * \param Mod_Cfg modulation configuration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1154   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1155   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1156  IFX_EXTERN void IfxScuCcu_modulation_init(const IfxScuCcu_Mod_Config *Mod_Cfg);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1157  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1158  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1159   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1160   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1161  IFX_EXTERN void IfxScuCcu_throttleSysPllClock(IfxScuCcu_PllThrottleConfig *pllThrottleConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1162  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1164  /*-------------------Global Exported Variables/Constants----------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1165  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1166  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1167  /** \brief maps to the IfxScuCcu_ModulationAmplitude enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1169  IFX_EXTERN IFX_CONST float32 IfxScuCcu_MA_percent[IfxScuCcu_ModulationAmplitude_count];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1170  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1171  /** \brief Configuration structure for SCU CCU driver.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1172   * The values of this structure are defined as # defined macros in the implementation of Scu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1173   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1174  IFX_EXTERN IFX_CONST IfxScuCcu_Config     IfxScuCcu_defaultClockConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1175  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1176  /** \brief default modulation config
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1177   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1178  IFX_EXTERN IFX_CONST IfxScuCcu_Mod_Config IfxScuCcu_defaultModConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1179  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1180  IFX_EXTERN uint32                         IfxScuCcu_xtalFrequency;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1181  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1182  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1183  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1184  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1185  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1186  IFX_INLINE void IfxScuCcu_clearTrapStatusFlag(IfxScuCcu_Traprequest request)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1187  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1188      uint32 trapclear = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1189      SCU_TRAPCLR.U |= (trapclear << request);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1190  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1191  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1192  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1193  IFX_INLINE boolean IfxScuCcu_configureCcuInitialStep(const IfxScuCcu_InitialStepConfig *pllInitStepCfg)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1194  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1195      uint8                                initError = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1196      uint16                               endinitSfty_pw;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1197  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1198      uint32                               timeoutCycleCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1199      const IfxScuCcu_pllsParameterConfig *pllsParamCfg;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1200      pllsParamCfg   = &pllInitStepCfg->pllsParameters;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1201      /*get the watch-dog passwords for usage with this function*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1202      endinitSfty_pw = IfxScuWdt_getSafetyWatchdogPasswordInline();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1203  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1204      /* Reset Safety ENDINIT, SCU_CCUCON registers are protected*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1205      IfxScuWdt_clearSafetyEndinitInline(endinitSfty_pw);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1206  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1207      timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1208  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1209      while (SCU_CCUCON0.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1210      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1211          IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1212      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1213  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1214      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1215          Ifx_SCU_CCUCON0 scuCcucon0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1216          scuCcucon0.U        = SCU_CCUCON0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1217          scuCcucon0.B.CLKSEL = 0; /*Select the EVR as fsource0/1/2 for the clock distribution */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1218          scuCcucon0.B.UP     = 1; /*Update the ccucon0 register */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1219          SCU_CCUCON0.U       = scuCcucon0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1220      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1221  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1222      timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1223  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1224      while (SCU_CCUCON0.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1225      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1226          IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1227      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1228  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1229      /*Disable SMU Alarms */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1230      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1231          SMU_KEYS.U    = (uint32)0xBCU;        /* Enable access to SMU registers */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1232          SMU_AG8CF0.U &= ~IFXSCUCCU_SMUALARM_MASK;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1233          SMU_AG8CF1.U &= ~IFXSCUCCU_SMUALARM_MASK;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1234          SMU_AG8CF2.U &= ~IFXSCUCCU_SMUALARM_MASK;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1235          SMU_KEYS.U    = (uint32)0U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1236      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1237  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1238      /* Power down the both the PLLs before configuring registers*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1239      /* Both the PLLs are powered down to be sure for asynchronous PLL registers update cause no glitches */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1240      SCU_SYSPLLCON0.B.PLLPWD = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1241      SCU_PERPLLCON0.B.PLLPWD = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1242  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1243      timeoutCycleCount       = IFXSCUCCU_SYSPLLSTAT_PWDSTAT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1244  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1245      while ((SCU_SYSPLLSTAT.B.PWDSTAT == 0) || (SCU_PERPLLSTAT.B.PWDSTAT == 0))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1246      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1247          IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1248      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1249  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1250      /* Now configure the oscillator, required oscillator mode is external crystal */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1251  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1252      if ((pllsParamCfg->pllInputClockSelection == IfxScuCcu_PllInputClockSelection_fOsc0) || (pllsParamCfg->pllInputClockSelection == IfxScuCcu_PllInputClockSelection_fSysclk))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1253  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1254      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1255          Ifx_SCU_OSCCON scuOsccon;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1256          scuOsccon.U      = SCU_OSCCON.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1257  #if (IFX_CFG_SCU_EXT_CLOCK == 1)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1258          scuOsccon.B.MODE = 2U;   /* external clock selected */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1259  #else
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1260          scuOsccon.B.MODE = 0U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1261  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1262  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1263          scuOsccon.B.OSCVAL = (uint32)(pllsParamCfg->xtalFrequency / 1000000U) - 15; /*XTAL range 16MHz to 40MHz*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1264          /*Note: Oscillator Watchdog Reset (OSCRES) is not required when the PLLs are powered down*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1265          SCU_OSCCON.U       = scuOsccon.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1266      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1267  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1268      /* Configure the initial steps for the system PLL*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1269      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1270          Ifx_SCU_SYSPLLCON0 sysPllCon0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1271          sysPllCon0.U       = SCU_SYSPLLCON0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1272          sysPllCon0.B.PDIV  = pllsParamCfg->sysPllConfig.pDivider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1273          sysPllCon0.B.NDIV  = pllsParamCfg->sysPllConfig.nDivider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1274          sysPllCon0.B.INSEL = pllsParamCfg->pllInputClockSelection;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1275          SCU_SYSPLLCON0.U   = sysPllCon0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1276      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1277  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1278      /* Configure the initial steps for the peripheral PLL*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1279      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1280          Ifx_SCU_PERPLLCON0 scuPerPllCon0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1281          scuPerPllCon0.U       = SCU_PERPLLCON0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1282          scuPerPllCon0.B.DIVBY = pllsParamCfg->perPllConfig.k3DividerBypass;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1283          scuPerPllCon0.B.PDIV  = pllsParamCfg->perPllConfig.pDivider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1284          scuPerPllCon0.B.NDIV  = pllsParamCfg->perPllConfig.nDivider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1285          SCU_PERPLLCON0.U      = scuPerPllCon0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1286      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1287  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1288      /* Power up the both the PLLs before configuring registers*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1289      SCU_SYSPLLCON0.B.PLLPWD = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1290      SCU_PERPLLCON0.B.PLLPWD = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1291  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1292      timeoutCycleCount       = IFXSCUCCU_SYSPLLSTAT_PWDSTAT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1293  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1294      while ((SCU_SYSPLLSTAT.B.PWDSTAT == 1) || (SCU_PERPLLSTAT.B.PWDSTAT == 1))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1295      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1296          IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1297      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1298  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1299      timeoutCycleCount = IFXSCUCCU_PLL_KRDY_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1300  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1301      while ((SCU_SYSPLLSTAT.B.K2RDY == 0U) ||
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1302             (SCU_PERPLLSTAT.B.K2RDY == 0U) ||
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1303             (SCU_PERPLLSTAT.B.K3RDY == 0U))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1304      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1305          IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1306      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1307  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1308      SCU_SYSPLLCON1.B.K2DIV = pllsParamCfg->sysPllConfig.k2Divider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1309      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1310          Ifx_SCU_PERPLLCON1 scuPerPllCon1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1311          scuPerPllCon1.U       = SCU_PERPLLCON1.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1312          scuPerPllCon1.B.K2DIV = pllsParamCfg->perPllConfig.k2Divider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1313          scuPerPllCon1.B.K3DIV = pllsParamCfg->perPllConfig.k3Divider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1314          SCU_PERPLLCON1.U      = scuPerPllCon1.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1315      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1316  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1317      timeoutCycleCount = IFXSCUCCU_PLL_KRDY_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1318  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1319      while ((SCU_SYSPLLSTAT.B.K2RDY == 0U) ||
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1320             (SCU_PERPLLSTAT.B.K2RDY == 0U) ||
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1321             (SCU_PERPLLSTAT.B.K3RDY == 0U))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1322      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1323          IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1324      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1325  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1326      /*Check if the OSC frequencies are in the limit*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1327      timeoutCycleCount = IFXSCUCCU_OSCCON_PLLLV_OR_HV_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1328  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1329      while ((SCU_OSCCON.B.PLLLV == 0) && (SCU_OSCCON.B.PLLHV == 0))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1330      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1331          IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1332      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1333  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1334      /* Now start PLL locking for latest set values*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1335      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1336          SCU_SYSPLLCON0.B.RESLD = 1;             /* Restart Sys PLL lock detection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1337          SCU_PERPLLCON0.B.RESLD = 1;             /* Restart Per PLL lock detection */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1338  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1339          timeoutCycleCount      = IFXSCUCCU_PLL_LOCK_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1340  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1341          while ((SCU_SYSPLLSTAT.B.LOCK == 0) || (SCU_PERPLLSTAT.B.LOCK == 0))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1342          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1343              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1344          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1345      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1346      /*Enable SMU Alarms */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1347      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1348          SMU_KEYS.U = (uint32)0xBCU;           /* Enable access to SMU registers */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1349          SMU_CMD.U  = (uint32)0x00000005;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1350          SMU_AG8.U  = IFXSCUCCU_SMUALARM_MASK; /* Clear SMU Alarms*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1351          SMU_KEYS.U = (uint32)0U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1352      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1353      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1354          Ifx_SCU_CCUCON0 scu_ccucon0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1355          scu_ccucon0.U        = SCU_CCUCON0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1356          scu_ccucon0.B.CLKSEL = 1; /*Select the PLLs for fsource0/1/2 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1357          scu_ccucon0.B.UP     = 1; /*Update the ccucon0 register */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1358  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1359          timeoutCycleCount    = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1360  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1361          while (SCU_CCUCON0.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1362          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1363              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1364          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1365  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1366          SCU_CCUCON0.U     = scu_ccucon0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1367  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1368          timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1369  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1370          while (SCU_CCUCON0.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1371          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1372              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1373          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1374      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1375  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1376      IfxScuWdt_setSafetyEndinitInline(endinitSfty_pw);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1377      return (boolean)initError;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1378  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1379  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1380  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1381  IFX_INLINE boolean IfxScuCcu_distributeClockInline(const IfxScuCcu_ClockDistributionConfig *clockDistributionConfig)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1382  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1383      uint16 endinitSfty_pw;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1384      uint32 timeoutCycleCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1385      uint32 initError = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1386  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1387      /*get the watch-dog passwords for usage with this function*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1388      endinitSfty_pw = IfxScuWdt_getSafetyWatchdogPasswordInline();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1389  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1390      /* Reset Safety ENDINIT, SCU_CCUCON registers are protected*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1391      IfxScuWdt_clearSafetyEndinitInline(endinitSfty_pw);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1392  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1393      /*Configure the clock distribution */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1394      {                                                    /*Write CCUCON0 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1395          Ifx_SCU_CCUCON0 ccucon0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1396          ccucon0.U         = SCU_CCUCON0.U & ~clockDistributionConfig->ccucon0.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1397          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1398          ccucon0.U        |= (clockDistributionConfig->ccucon0.mask & clockDistributionConfig->ccucon0.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1399          timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1400  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1401          while (SCU_CCUCON0.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1402          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1403              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1404          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1405  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1406          SCU_CCUCON0.U     = ccucon0.U;      /*Set update bit explicitly to make above configurations effective */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1407          timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1408  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1409          while (SCU_CCUCON0.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1410          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1411              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1412          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1413      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1414      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1415          /*Write CCUCON1 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1416          Ifx_SCU_CCUCON1 ccucon1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1417          ccucon1.U = SCU_CCUCON1.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1418  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1419          if (ccucon1.B.CLKSELMCAN
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1420              || ccucon1.B.CLKSELMSC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1421              || ccucon1.B.CLKSELQSPI)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1422          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1423              /* Non Zero ClockSel exists - set to Zero */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1424              /* CAUTION: this would briefly reset and set all clocks in CCUCON1! */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1425              ccucon1.U  = SCU_CCUCON1.U & ~clockDistributionConfig->ccucon1.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1426              /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1427              ccucon1.U |= (clockDistributionConfig->ccucon1.mask & clockDistributionConfig->ccucon1.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1428  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1429              /* set Clock selects to 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1430              ccucon1.B.CLKSELMCAN = (uint32)0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1431              ccucon1.B.CLKSELMSC  = (uint32)0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1432              ccucon1.B.CLKSELQSPI = (uint32)0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1433  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1434              timeoutCycleCount    = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1435  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1436              while (SCU_CCUCON1.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1437              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1438                  IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1439              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1441              SCU_CCUCON1.U     = ccucon1.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1442  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1443              timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1444  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1445              while (SCU_CCUCON1.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1446              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1447                  IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1448              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1449          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1450  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1451          ccucon1.U         = SCU_CCUCON1.U & ~clockDistributionConfig->ccucon1.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1452          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1453          ccucon1.U        |= (clockDistributionConfig->ccucon1.mask & clockDistributionConfig->ccucon1.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1454  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1455          timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1456  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1457          while (SCU_CCUCON1.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1458          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1459              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1460          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1461  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1462          SCU_CCUCON1.U     = ccucon1.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1464          timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1465  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1466          while (SCU_CCUCON1.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1467          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1468              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1469          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1470      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1471  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1472      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1473          /*Write CCUCON2 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1474          Ifx_SCU_CCUCON2 ccucon2;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1475          ccucon2.U = SCU_CCUCON2.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1476  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1477          if (ccucon2.B.CLKSELASCLINS)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1478          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1479              /* Non Zero ClockSel exists - set to Zero */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1480              /* CAUTION: this would briefly reset and set ASCLINS clock in CCUCON2! */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1481              ccucon2.U               = SCU_CCUCON2.U & ~clockDistributionConfig->ccucon2.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1482              /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1483              ccucon2.U              |= (clockDistributionConfig->ccucon2.mask & clockDistributionConfig->ccucon2.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1484  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1485              ccucon2.B.CLKSELASCLINS = (uint32)0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1486  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1487              timeoutCycleCount       = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1488  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1489              while (SCU_CCUCON2.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1490              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1491                  IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1492              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1493  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1494              SCU_CCUCON2.U     = ccucon2.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1496              timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1497  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1498              while (SCU_CCUCON2.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1499              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1500                  IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1501              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1502          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1503  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1504          ccucon2.U         = SCU_CCUCON2.U & ~clockDistributionConfig->ccucon2.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1505          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1506          ccucon2.U        |= (clockDistributionConfig->ccucon2.mask & clockDistributionConfig->ccucon2.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1507  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1508          timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1509  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1510          while (SCU_CCUCON2.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1511          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1512              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1513          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1514  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1515          SCU_CCUCON2.U     = ccucon2.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1516  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1517          timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1518  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1519          while (SCU_CCUCON2.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1520          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1521              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1522          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1523      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1524      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1525          /*Write CCUCON5 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1526          Ifx_SCU_CCUCON5 ccucon5;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1527          ccucon5.U         = SCU_CCUCON5.U & ~clockDistributionConfig->ccucon5.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1528          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1529          ccucon5.U        |= (clockDistributionConfig->ccucon5.mask & clockDistributionConfig->ccucon5.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1530          ccucon5.B.UP      = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1531          timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1532  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1533          while (SCU_CCUCON5.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1534          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1535              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1536          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1537  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1538          SCU_CCUCON5.U     = ccucon5.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1539          timeoutCycleCount = IFXSCUCCU_CCUCON_LCK_BIT_TIMEOUT_COUNT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1540  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1541          while (SCU_CCUCON5.B.LCK != 0U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1542          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1543              IFXSCUCCU_LOOP_TIMEOUT_CHECK(timeoutCycleCount, initError);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1544          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1545      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1546      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1547          /*Write CCUCON6 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1548          Ifx_SCU_CCUCON6 ccucon6;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1549          ccucon6.U     = SCU_CCUCON6.U & ~clockDistributionConfig->ccucon6.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1550          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1551          ccucon6.U    |= (clockDistributionConfig->ccucon6.mask & clockDistributionConfig->ccucon6.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1552          SCU_CCUCON6.U = ccucon6.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1553      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1554  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1555      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1556          /*Write CCUCON7 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1557          Ifx_SCU_CCUCON7 ccucon7;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1558          ccucon7.U     = SCU_CCUCON7.U & ~clockDistributionConfig->ccucon7.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1559          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1560          ccucon7.U    |= (clockDistributionConfig->ccucon7.mask & clockDistributionConfig->ccucon7.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1561          SCU_CCUCON7.U = ccucon7.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1562      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1563  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1564      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1565          /*Write CCUCON8 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1566          Ifx_SCU_CCUCON8 ccucon8;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1567          ccucon8.U     = SCU_CCUCON8.U & ~clockDistributionConfig->ccucon8.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1568          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1569          ccucon8.U    |= (clockDistributionConfig->ccucon8.mask & clockDistributionConfig->ccucon8.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1570          SCU_CCUCON8.U = ccucon8.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1571      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1572      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1573          /*Write CCUCON9 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1574          Ifx_SCU_CCUCON9 ccucon9;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1575          ccucon9.U     = SCU_CCUCON9.U & ~clockDistributionConfig->ccucon9.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1576          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1577          ccucon9.U    |= (clockDistributionConfig->ccucon9.mask & clockDistributionConfig->ccucon9.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1578          SCU_CCUCON9.U = ccucon9.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1579      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1580      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1581          /*Write CCUCON10 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1582          Ifx_SCU_CCUCON10 ccucon10;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1583          ccucon10.U     = SCU_CCUCON10.U & ~clockDistributionConfig->ccucon10.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1584          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1585          ccucon10.U    |= (clockDistributionConfig->ccucon10.mask & clockDistributionConfig->ccucon10.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1586          SCU_CCUCON10.U = ccucon10.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1587      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1588      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1589          /*Write CCUCON11 configuration */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1590          Ifx_SCU_CCUCON11 ccucon11;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1591          ccucon11.U     = SCU_CCUCON11.U & ~clockDistributionConfig->ccucon11.mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1592          /*update with configured value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1593          ccucon11.U    |= (clockDistributionConfig->ccucon11.mask & clockDistributionConfig->ccucon11.value);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1594          SCU_CCUCON11.U = ccucon11.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1595      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1596      IfxScuWdt_setSafetyEndinitInline(endinitSfty_pw);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1597      return (boolean)initError;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1598  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1599  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1600  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1601  IFX_INLINE float32 IfxScuCcu_getAdasFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1602  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1603      uint32 adasDiv = SCU_CCUCON5.B.ADASDIV;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1604  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1605      return (adasDiv == (uint32)0) ? 0 : IfxScuCcu_getSourceFrequency(IfxScuCcu_Fsource_0) / adasDiv;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1606  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1607  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1608  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1609  IFX_INLINE float32 IfxScuCcu_getAdcFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1610  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1611      return IfxScuCcu_getSourceFrequency(IfxScuCcu_Fsource_1);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1612  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1613  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1614  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1615  IFX_INLINE float32 IfxScuCcu_getAsclinFFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1616  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1617      float32 freq          = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1618  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1619      uint8   asclindiv[16] = {1, 1, 2, 3, 4, 5, 6, 6, 8, 8, 10, 10, 12, 12, 12, 15};
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1620  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1621      if (SCU_CCUCON2.B.ASCLINFDIV)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1622      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1623          freq = IfxScuCcu_getSourceFrequency(IfxScuCcu_Fsource_2) / asclindiv[SCU_CCUCON2.B.ASCLINFDIV];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1624      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1625  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1626      return freq;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1627  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1628  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1629  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1630  IFX_INLINE float32 IfxScuCcu_getEbuFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1631  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1632      return IfxScuCcu_getSourceFrequency(IfxScuCcu_Fsource_1);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1633  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1634  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1635  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1636  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1637  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1638      return IFXSCU_EVR_OSC_FREQUENCY;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1639  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1640  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1641  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1642  IFX_INLINE float32 IfxScuCcu_getGethFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1643  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1644      return IfxScuCcu_getSourceFrequency(IfxScuCcu_Fsource_0) / SCU_CCUCON5.B.GETHDIV;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1645  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1646  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1647  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1648  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1649  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1650      /* fGTM = fSOURCEGTM / GTMDIV ;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1651       * fSOURCEGTM = fSPB *2
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1652       */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1653      uint8   gtmDiv  = SCU_CCUCON0.B.GTMDIV;
	extr.u	d15,d15,#4,#4
.L48:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1656      if (gtmDiv == 0u)      (inlined)
	jne	d15,#0,.L2
.L66:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1654      float32 gtmFreq = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1655  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1656      if (gtmDiv == 0u)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1657      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1658          gtmFreq = 0.0;
	mov	d2,#0

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1658          gtmFreq = 0.0;      (inlined)
	j	.L3

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1656      if (gtmDiv == 0u)      (inlined)
.L2:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1660      else if (gtmDiv == 1U)      (inlined)
	jne	d15,#1,.L4
.L67:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1659      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1660      else if (gtmDiv == 1U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1661      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1662          gtmFreq = IfxScuCcu_getSpbFrequency() * 2;
	call	IfxScuCcu_getSpbFrequency
.L47:
	movh	d15,#16384
.L49:
	mul.f	d2,d2,d15

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1662          gtmFreq = IfxScuCcu_getSpbFrequency() * 2;      (inlined)
	j	.L5

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1660      else if (gtmDiv == 1U)      (inlined)
.L4:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1663      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1664      else
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1665  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1666      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1667          gtmFreq = IfxScuCcu_getSourceFrequency(IfxScuCcu_Fsource_0) / gtmDiv;
	mov	d4,#0
	call	IfxScuCcu_getSourceFrequency
.L50:
	utof	d15,d15
.L51:
	div.f	d2,d2,d15

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1664      else      (inlined)
.L5:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1660      else if (gtmDiv == 1U)      (inlined)
.L3:

; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    60      fgtm = IfxScuCcu_getGtmFrequency();
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    61  
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    62      return fspb > fgtm ? fspb : fgtm;
	cmp.f	d15,d2,d8
.L39:
	and	d15,#6
.L68:

; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    63  }
	cmovn	d2,d15,d8
	ret
.L29:
	
__IfxIom_getFrequency_function_end:
	.size	IfxIom_getFrequency,__IfxIom_getFrequency_function_end-IfxIom_getFrequency
.L22:
	; End of function
	
	.sdecl	'.text.IfxIom.IfxIom_resetModule',code,cluster('IfxIom_resetModule')
	.sect	'.text.IfxIom.IfxIom_resetModule'
	.align	2
	
	.global	IfxIom_resetModule

; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    64  
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    65  
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    66  void IfxIom_resetModule(Ifx_IOM *iom)
; Function IfxIom_resetModule
.L13:
IfxIom_resetModule:	.type	func
	mov.aa	a15,a4
.L53:

; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    67  {
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    68      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
	call	IfxScuWdt_getCpuWatchdogPassword
.L52:
	mov	d8,d2
.L55:

; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    69  
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    70      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L54:

; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    71      iom->KRST1.B.RST = 1;      /* Only if both Kernel reset bits are set a reset is executed */
	ld.bu	d15,[a15]32
.L73:

; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    72      iom->KRST0.B.RST = 1;
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    73      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d8
.L56:
	or	d15,#1
	st.b	[a15]32,d15
.L74:
	ld.bu	d15,[a15]36
.L75:
	or	d15,#1
	st.b	[a15]36,d15
.L76:
	call	IfxScuWdt_setCpuEndinit

; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    74  
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    75      while (iom->KRST0.B.RSTSTAT == 0)  /* Wait until reset is executed */
.L9:
	ld.bu	d15,[a15]36
.L77:
	jz.t	d15:1,.L9
.L78:

; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    76  
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    77      {}
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    78  
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    79      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L79:

; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    80      iom->KRSTCLR.B.CLR = 1;    /* Clear Kernel reset status bit */
; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    81      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d8
	ld.bu	d15,[a15]28
.L57:
	or	d15,#1
	st.b	[a15]28,d15
.L80:
	j	IfxScuWdt_setCpuEndinit
.L43:
	
__IfxIom_resetModule_function_end:
	.size	IfxIom_resetModule,__IfxIom_resetModule_function_end-IfxIom_resetModule
.L27:
	; End of function
	
	.calls	'IfxIom_getFrequency','IfxScuCcu_getSpbFrequency'
	.calls	'IfxIom_getFrequency','IfxScuCcu_getSourceFrequency'
	.calls	'IfxIom_resetModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxIom_resetModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxIom_resetModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxIom_getFrequency','',0
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxScuCcu_getSourceFrequency
	.extern	IfxScuCcu_getSpbFrequency
	.calls	'IfxIom_resetModule','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L15:
	.word	103803
	.half	3
	.word	.L16
	.byte	4
.L14:
	.byte	1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Iom\\Std\\IfxIom.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L17
	.byte	2,1,1,3
	.word	164
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,58,17,1,1,5
	.byte	'fun',0,1,58,43
	.word	167
	.byte	6,0,7
	.byte	'__fract',0,4,128,1
.L28:
	.byte	7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,149,2,18
	.word	212
	.byte	1,1,5
	.byte	'a',0,1,149,2,44
	.word	224
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,169,2,17,1,1,6,0,7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	336
	.byte	8
	.byte	'__ld64',0,3,2,132,1,19
	.word	310
	.byte	1,1,5
	.byte	'addr',0,2,132,1,32
	.word	342
	.byte	6,0,4
	.byte	'__st64',0,3,2,140,1,17,1,1,5
	.byte	'addr',0,2,140,1,30
	.word	342
	.byte	5
	.byte	'value',0,2,140,1,43
	.word	310
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,4,238,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	451
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	451
	.byte	16,0,2,35,0,0,12,4,189,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	467
	.byte	4,2,35,0,0
.L40:
	.byte	7
	.byte	'unsigned char',0,1,8
.L45:
	.byte	7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,4,247,9,16,4,11
	.byte	'reserved_0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	603
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	16,0,2,35,2,0,12,4,197,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	642
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,4,135,10,16,4,11
	.byte	'AE',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	603
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	620
	.byte	16,0,2,35,2,0,12,4,205,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	908
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,4,136,17,25,12,13
	.byte	'CON0',0
	.word	563
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	868
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1099
	.byte	4,2,35,8,0,14
	.word	1139
	.byte	3
	.word	1202
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,3,164,4,17,1,1,5
	.byte	'watchdog',0,3,164,4,65
	.word	1207
	.byte	5
	.byte	'password',0,3,164,4,82
	.word	620
	.byte	6,0,4
	.byte	'IfxScuWdt_clearSafetyEndinitInline',0,3,3,197,4,17,1,1,5
	.byte	'password',0,3,197,4,59
	.word	620
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,3,144,5,17,1,1,5
	.byte	'watchdog',0,3,144,5,63
	.word	1207
	.byte	5
	.byte	'password',0,3,144,5,80
	.word	620
	.byte	6,0,4
	.byte	'IfxScuWdt_setSafetyEndinitInline',0,3,3,177,5,17,1,1,5
	.byte	'password',0,3,177,5,57
	.word	620
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,3,220,4,19
	.word	620
	.byte	1,1,5
	.byte	'watchdog',0,3,220,4,74
	.word	1207
	.byte	6,0,8
	.byte	'IfxScuWdt_getSafetyWatchdogPasswordInline',0,3,3,129,5,19
	.word	620
	.byte	1,1,6,0,15,6,161,1,9,1,16
	.byte	'IfxCpu_ResourceCpu_0',0,0,16
	.byte	'IfxCpu_ResourceCpu_1',0,1,16
	.byte	'IfxCpu_ResourceCpu_2',0,2,16
	.byte	'IfxCpu_ResourceCpu_3',0,3,16
	.byte	'IfxCpu_ResourceCpu_4',0,4,16
	.byte	'IfxCpu_ResourceCpu_5',0,5,16
	.byte	'IfxCpu_ResourceCpu_none',0,6,0,8
	.byte	'IfxCpu_getCoreIndex',0,3,5,235,6,31
	.word	1617
	.byte	1,1,6,0,8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,5,233,5,20
	.word	603
	.byte	1,1,6,0,7
	.byte	'unsigned long int',0,4,7,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,5,255,6,19
	.word	1864
	.byte	1,1,5
	.byte	'address',0,5,255,6,55
	.word	620
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,5,156,7,20
	.word	603
	.byte	1,1,5
	.byte	'address',0,5,156,7,70
	.word	620
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,5,138,9,17,1,1,5
	.byte	'address',0,5,138,9,56
	.word	1864
	.byte	5
	.byte	'count',0,5,138,9,72
	.word	1864
	.byte	17,6,0,0,10
	.byte	'_Ifx_P_OUT_Bits',0,8,145,3,16,4,11
	.byte	'P0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	16,0,2,35,2,0,12,8,171,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2095
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,8,171,2,16,4,11
	.byte	'PS0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	603
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	603
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	603
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	603
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	603
	.byte	1,0,2,35,3,0,12,8,251,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2411
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,8,133,1,16,4,11
	.byte	'MODREV',0,1
	.word	603
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	603
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	620
	.byte	16,0,2,35,2,0,12,8,155,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2982
	.byte	4,2,35,0,0,18,4
	.word	603
	.byte	19,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,8,163,1,16,4,11
	.byte	'reserved_0',0,1
	.word	603
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	603
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	603
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	603
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	603
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	603
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	603
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	603
	.byte	5,0,2,35,3,0,12,8,171,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3111
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,8,189,1,16,4,11
	.byte	'reserved_0',0,1
	.word	603
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	603
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	603
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	603
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	603
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	603
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	603
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	603
	.byte	5,0,2,35,3,0,12,8,187,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3326
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,8,202,1,16,4,11
	.byte	'reserved_0',0,1
	.word	603
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	603
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	603
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	603
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	603
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	603
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	603
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	603
	.byte	5,0,2,35,3,0,12,8,195,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3541
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,8,176,1,16,4,11
	.byte	'reserved_0',0,1
	.word	603
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	603
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	603
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	603
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	603
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	603
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	603
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	603
	.byte	5,0,2,35,3,0,12,8,179,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3758
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,8,141,1,16,4,11
	.byte	'P0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	16,0,2,35,2,0,12,8,163,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3978
	.byte	4,2,35,0,0,18,24
	.word	603
	.byte	19,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,8,212,3,16,4,11
	.byte	'PD0',0,1
	.word	603
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	603
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	603
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	603
	.byte	2,0,2,35,0,11
	.byte	'PD2',0,1
	.word	603
	.byte	2,6,2,35,1,11
	.byte	'PL2',0,1
	.word	603
	.byte	2,4,2,35,1,11
	.byte	'PD3',0,1
	.word	603
	.byte	2,2,2,35,1,11
	.byte	'PL3',0,1
	.word	603
	.byte	2,0,2,35,1,11
	.byte	'PD4',0,1
	.word	603
	.byte	2,6,2,35,2,11
	.byte	'PL4',0,1
	.word	603
	.byte	2,4,2,35,2,11
	.byte	'PD5',0,1
	.word	603
	.byte	2,2,2,35,2,11
	.byte	'PL5',0,1
	.word	603
	.byte	2,0,2,35,2,11
	.byte	'PD6',0,1
	.word	603
	.byte	2,6,2,35,3,11
	.byte	'PL6',0,1
	.word	603
	.byte	2,4,2,35,3,11
	.byte	'PD7',0,1
	.word	603
	.byte	2,2,2,35,3,11
	.byte	'PL7',0,1
	.word	603
	.byte	2,0,2,35,3,0,12,8,195,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4302
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,8,233,3,16,4,11
	.byte	'PD8',0,1
	.word	603
	.byte	2,6,2,35,0,11
	.byte	'PL8',0,1
	.word	603
	.byte	2,4,2,35,0,11
	.byte	'PD9',0,1
	.word	603
	.byte	2,2,2,35,0,11
	.byte	'PL9',0,1
	.word	603
	.byte	2,0,2,35,0,11
	.byte	'PD10',0,1
	.word	603
	.byte	2,6,2,35,1,11
	.byte	'PL10',0,1
	.word	603
	.byte	2,4,2,35,1,11
	.byte	'PD11',0,1
	.word	603
	.byte	2,2,2,35,1,11
	.byte	'PL11',0,1
	.word	603
	.byte	2,0,2,35,1,11
	.byte	'PD12',0,1
	.word	603
	.byte	2,6,2,35,2,11
	.byte	'PL12',0,1
	.word	603
	.byte	2,4,2,35,2,11
	.byte	'PD13',0,1
	.word	603
	.byte	2,2,2,35,2,11
	.byte	'PL13',0,1
	.word	603
	.byte	2,0,2,35,2,11
	.byte	'PD14',0,1
	.word	603
	.byte	2,6,2,35,3,11
	.byte	'PL14',0,1
	.word	603
	.byte	2,4,2,35,3,11
	.byte	'PD15',0,1
	.word	603
	.byte	2,2,2,35,3,11
	.byte	'PL15',0,1
	.word	603
	.byte	2,0,2,35,3,0,12,8,203,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4606
	.byte	4,2,35,0,0,18,8
	.word	603
	.byte	19,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,8,111,16,4,11
	.byte	'EN0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	16,0,2,35,2,0,12,8,147,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4931
	.byte	4,2,35,0,0,18,12
	.word	603
	.byte	19,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,8,190,3,16,4,11
	.byte	'PDIS0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	16,0,2,35,2,0,12,8,187,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5271
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,8,167,3,16,4,11
	.byte	'SEL0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'SEL8',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'SEL9',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'SEL12',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'SEL13',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'SEL14',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'SEL15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	603
	.byte	1,0,2,35,3,0,12,8,179,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5637
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,8,230,2,16,4,11
	.byte	'PS0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	428
	.byte	28,0,2,35,0,0,12,8,139,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6001
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,8,251,2,16,4,11
	.byte	'reserved_0',0,1
	.word	603
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	428
	.byte	24,0,2,35,0,0,12,8,155,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6148
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,8,134,3,16,4,11
	.byte	'reserved_0',0,1
	.word	603
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	428
	.byte	20,0,2,35,0,0,12,8,163,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6317
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,8,240,2,16,4,11
	.byte	'reserved_0',0,2
	.word	620
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	16,0,2,35,2,0,12,8,147,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6489
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,8,128,2,16,4,11
	.byte	'reserved_0',0,2
	.word	620
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	620
	.byte	12,0,2,35,2,0,12,8,219,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6664
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,8,149,2,16,4,11
	.byte	'reserved_0',0,4
	.word	428
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	603
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	603
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	603
	.byte	8,0,2,35,3,0,12,8,235,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6838
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,8,160,2,16,4,11
	.byte	'reserved_0',0,4
	.word	428
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	603
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	603
	.byte	4,0,2,35,3,0,12,8,243,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7012
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,8,139,2,16,4,11
	.byte	'reserved_0',0,4
	.word	428
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	603
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	603
	.byte	1,0,2,35,3,0,12,8,227,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7188
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,8,208,2,16,4,11
	.byte	'PS0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	16,0,2,35,2,0,12,8,131,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7344
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,8,234,1,16,4,11
	.byte	'reserved_0',0,2
	.word	620
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	603
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	603
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	603
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	603
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	603
	.byte	1,0,2,35,3,0,12,8,211,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7677
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR_Bits',0,8,215,1,16,4,11
	.byte	'REN_CTRL',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'RX_EN',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	603
	.byte	3,2,2,35,0,11
	.byte	'LVDSM',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'PS',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'TEN_CTRL',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'TX_EN',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'VDIFFADJ',0,1
	.word	603
	.byte	2,4,2,35,1,11
	.byte	'VOSDYN',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'VOSEXT',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	16,0,2,35,2,0,12,8,203,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8025
	.byte	4,2,35,0,0,18,32
	.word	8305
	.byte	19,7,0,18,56
	.word	603
	.byte	19,55,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,8,105,16,4,11
	.byte	'reserved_0',0,4
	.word	428
	.byte	32,0,2,35,0,0,12,8,139,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8363
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,8,68,16,4,11
	.byte	'EN0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	603
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	603
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	603
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	603
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	603
	.byte	1,0,2,35,3,0,12,8,131,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8450
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,8,220,5,25,128,2,13
	.byte	'OUT',0
	.word	2371
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	2942
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	3062
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3102
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	3286
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	3501
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3718
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	3938
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	3102
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	4253
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4293
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	4566
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4882
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	4922
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	5222
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	5262
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5597
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5961
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	4922
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	6108
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	6277
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	6449
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	6624
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6798
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6972
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	7148
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	7304
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	7637
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	7985
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	4922
	.byte	8,3,35,152,1,13
	.byte	'LPCR',0
	.word	8345
	.byte	32,3,35,160,1,13
	.byte	'reserved_C0',0
	.word	8354
	.byte	56,3,35,192,1,13
	.byte	'ACCEN1',0
	.word	8410
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	8977
	.byte	4,3,35,252,1,0,14
	.word	9017
	.byte	3
	.word	9587
	.byte	15,7,187,1,9,4,16
	.byte	'IfxPort_State_notChanged',0,0,16
	.byte	'IfxPort_State_high',0,1,16
	.byte	'IfxPort_State_low',0,128,128,4,16
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,7,169,5,17,1,1,5
	.byte	'port',0,7,169,5,44
	.word	9592
	.byte	5
	.byte	'pinIndex',0,7,169,5,56
	.word	603
	.byte	5
	.byte	'action',0,7,169,5,80
	.word	9597
	.byte	6,0,4
	.byte	'IfxScuCcu_wait',0,3,9,157,14,17,1,1,5
	.byte	'timeSec',0,9,157,14,40
	.word	224
	.byte	17,6,0,0
.L33:
	.byte	8
	.byte	'IfxScuCcu_getGtmFrequency',0,3,9,240,12,20
	.word	224
	.byte	1,1
.L36:
	.byte	6,0,8
	.byte	'IfxScuCcu_getStmFrequency',0,3,9,188,13,20
	.word	224
	.byte	1,1,6,0,20
	.word	444
	.byte	21
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,22
	.word	9902
	.byte	0,14
	.word	428
	.byte	3
	.word	428
	.byte	23
	.byte	'__cmpswapw',0
	.word	9944
	.byte	1,1,1,1,24
	.byte	'p',0
	.word	9949
	.byte	24
	.byte	'value',0
	.word	428
	.byte	24
	.byte	'compare',0
	.word	428
	.byte	0,25
	.word	172
	.byte	26
	.word	198
	.byte	6,0,25
	.word	233
	.byte	26
	.word	265
	.byte	6,0,25
	.word	278
	.byte	6,0,25
	.word	347
	.byte	26
	.word	366
	.byte	6,0,25
	.word	382
	.byte	26
	.word	397
	.byte	26
	.word	411
	.byte	6,0,25
	.word	1212
	.byte	26
	.word	1252
	.byte	26
	.word	1270
	.byte	6,0,25
	.word	1290
	.byte	26
	.word	1333
	.byte	6,0,25
	.word	1353
	.byte	26
	.word	1391
	.byte	26
	.word	1409
	.byte	6,0,25
	.word	1429
	.byte	26
	.word	1470
	.byte	6,0,27
	.byte	'IfxScuWdt_clearCpuEndinit',0,3,237,1,17,1,1,1,1,5
	.byte	'password',0,3,237,1,50
	.word	620
	.byte	0,27
	.byte	'IfxScuWdt_setCpuEndinit',0,3,157,2,17,1,1,1,1,5
	.byte	'password',0,3,157,2,48
	.word	620
	.byte	0,25
	.word	1490
	.byte	26
	.word	1541
	.byte	6,0,25
	.word	1561
	.byte	6,0,28
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,3,215,3,19
	.word	620
	.byte	1,1,1,1,10
	.byte	'_Ifx_IOM_CLC_Bits',0,10,111,16,4,11
	.byte	'DISR',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	603
	.byte	4,0,2,35,0,11
	.byte	'RMC',0,1
	.word	603
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	16,0,2,35,2,0,12,10,135,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10295
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_IOM_ID_Bits',0,10,179,2,16,4,11
	.byte	'MOD_REV',0,1
	.word	603
	.byte	8,0,2,35,0,11
	.byte	'MOD_TYPE',0,1
	.word	603
	.byte	8,0,2,35,1,11
	.byte	'MOD_NUM',0,2
	.word	620
	.byte	16,0,2,35,2,0,12,10,207,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10489
	.byte	4,2,35,0,0,18,16
	.word	603
	.byte	19,15,0,10
	.byte	'_Ifx_IOM_KRSTCLR_Bits',0,10,202,2,16,4,11
	.byte	'CLR',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	428
	.byte	31,0,2,35,0,0,12,10,231,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10620
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_IOM_KRST1_Bits',0,10,195,2,16,4,11
	.byte	'RST',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	428
	.byte	31,0,2,35,0,0,12,10,223,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10726
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_IOM_KRST0_Bits',0,10,187,2,16,4,11
	.byte	'RST',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	428
	.byte	30,0,2,35,0,0,12,10,215,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10830
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_IOM_ACCEN1_Bits',0,10,105,16,4,11
	.byte	'reserved_0',0,4
	.word	428
	.byte	32,0,2,35,0,0,12,10,255,2,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10953
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_IOM_ACCEN0_Bits',0,10,68,16,4,11
	.byte	'EN0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	603
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	603
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	603
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	603
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	603
	.byte	1,0,2,35,3,0,12,10,247,2,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11042
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_IOM_ECMCCFG_Bits',0,10,123,16,4,11
	.byte	'SELC0',0,1
	.word	603
	.byte	4,4,2,35,0,11
	.byte	'THRC0',0,1
	.word	603
	.byte	4,0,2,35,0,11
	.byte	'SELC1',0,1
	.word	603
	.byte	4,4,2,35,1,11
	.byte	'THRC1',0,1
	.word	603
	.byte	4,0,2,35,1,11
	.byte	'SELC2',0,1
	.word	603
	.byte	4,4,2,35,2,11
	.byte	'THRC2',0,1
	.word	603
	.byte	4,0,2,35,2,11
	.byte	'SELC3',0,1
	.word	603
	.byte	4,4,2,35,3,11
	.byte	'THRC3',0,1
	.word	603
	.byte	4,0,2,35,3,0,12,10,143,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11611
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_IOM_ECMSELR_Bits',0,10,210,1,16,4,11
	.byte	'CES0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'CES1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'CES2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'CES3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'CES4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'CES5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'CES6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'CES7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'CES8',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'CES9',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'CES10',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'CES11',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'CES12',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'CES13',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'CES14',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'CES15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'CTS0',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'CTS1',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'CTS2',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'CTS3',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	620
	.byte	12,0,2,35,2,0,12,10,167,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11815
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_IOM_ECMETH0_Bits',0,10,136,1,16,4,11
	.byte	'ETA0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'ETA1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'ETA2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'ETA3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'ETA4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'ETA5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'ETA6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'ETA7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'ETA8',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'ETA9',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'ETA10',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'ETA11',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'ETA12',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'ETA13',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'ETA14',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'ETA15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'ETB0',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'ETB1',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'ETB2',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'ETB3',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'ETB4',0,1
	.word	603
	.byte	1,3,2,35,2,11
	.byte	'ETB5',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'ETB6',0,1
	.word	603
	.byte	1,1,2,35,2,11
	.byte	'ETB7',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'ETB8',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'ETB9',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'ETB10',0,1
	.word	603
	.byte	1,5,2,35,3,11
	.byte	'ETB11',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'ETB12',0,1
	.word	603
	.byte	1,3,2,35,3,11
	.byte	'ETB13',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'ETB14',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'ETB15',0,1
	.word	603
	.byte	1,0,2,35,3,0,12,10,151,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12233
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_IOM_ECMETH1_Bits',0,10,173,1,16,4,11
	.byte	'ETC0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'ETC1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'ETC2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'ETC3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'ETC4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'ETC5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'ETC6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'ETC7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'ETC8',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'ETC9',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'ETC10',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'ETC11',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'ETC12',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'ETC13',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'ETC14',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'ETC15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'ETD0',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'ETD1',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'ETD2',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'ETD3',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'ETD4',0,1
	.word	603
	.byte	1,3,2,35,2,11
	.byte	'ETD5',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'ETD6',0,1
	.word	603
	.byte	1,1,2,35,2,11
	.byte	'ETD7',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'ETD8',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'ETD9',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'ETD10',0,1
	.word	603
	.byte	1,5,2,35,3,11
	.byte	'ETD11',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'ETD12',0,1
	.word	603
	.byte	1,3,2,35,3,11
	.byte	'ETD13',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'ETD14',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'ETD15',0,1
	.word	603
	.byte	1,0,2,35,3,0,12,10,159,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12826
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_IOM_GTMEXR_Bits',0,10,165,2,16,4,11
	.byte	'EN0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	428
	.byte	24,0,2,35,0,0,12,10,199,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13419
	.byte	4,2,35,0,0,18,52
	.word	603
	.byte	19,51,0,10
	.byte	'_Ifx_IOM_FPCESR_Bits',0,10,249,1,16,4,11
	.byte	'FEG0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'FEG1',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'FEG2',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'FEG3',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'FEG4',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'FEG5',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'FEG6',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'FEG7',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'FEG8',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'FEG9',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'FEG10',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'FEG11',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'FEG12',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'FEG13',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'FEG14',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'FEG15',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'REG0',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'REG1',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'REG2',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'REG3',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'REG4',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'REG5',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'REG6',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'REG7',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'REG8',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'REG9',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'REG10',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'REG11',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'REG12',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'REG13',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'REG14',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'REG15',0,4
	.word	451
	.byte	1,0,2,35,0,0,12,10,183,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13638
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_IOM_FPCCTR_Bits',0,10,236,1,16,4,11
	.byte	'CMP',0,2
	.word	620
	.byte	16,0,2,35,0,11
	.byte	'MOD',0,1
	.word	603
	.byte	3,5,2,35,2,11
	.byte	'ISM',0,1
	.word	603
	.byte	2,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'RTG',0,1
	.word	603
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'ISR',0,1
	.word	603
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	603
	.byte	5,0,2,35,3,0,12,10,175,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14230
	.byte	4,2,35,0,0,18,64
	.word	14402
	.byte	19,15,0,10
	.byte	'_Ifx_IOM_FPCTIM_Bits',0,10,158,2,16,4,11
	.byte	'TIM',0,2
	.word	620
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	16,0,2,35,2,0,12,10,191,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14451
	.byte	4,2,35,0,0,18,64
	.word	14517
	.byte	19,15,0,10
	.byte	'_Ifx_IOM_LAMEWC_Bits',0,10,227,2,16,4,11
	.byte	'CNT',0,4
	.word	428
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	603
	.byte	7,1,2,35,3,11
	.byte	'CNTO',0,1
	.word	603
	.byte	1,0,2,35,3,0,12,10,247,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14566
	.byte	4,2,35,0,0,18,64
	.word	14648
	.byte	19,15,0,18,64
	.word	603
	.byte	19,63,0,10
	.byte	'_Ifx_IOM_LAMCFG_Bits',0,10,209,2,16,4,11
	.byte	'IVR',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'IVM',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'MOS',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'RMS',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'EWS',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'DISEV',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	603
	.byte	2,0,2,35,0,11
	.byte	'EDS',0,1
	.word	603
	.byte	4,4,2,35,1,11
	.byte	'IVW',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	603
	.byte	3,0,2,35,1,11
	.byte	'MCS',0,1
	.word	603
	.byte	4,4,2,35,2,11
	.byte	'RCS',0,1
	.word	603
	.byte	4,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	603
	.byte	8,0,2,35,3,0,12,10,239,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14706
	.byte	4,2,35,0,0,18,64
	.word	14954
	.byte	19,15,0,10
	.byte	'_Ifx_IOM_LAMEWS_Bits',0,10,235,2,16,4,11
	.byte	'THR',0,4
	.word	428
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	603
	.byte	8,0,2,35,3,0,12,10,255,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15003
	.byte	4,2,35,0,0,18,64
	.word	15069
	.byte	19,15,0,10
	.byte	'_Ifx_IOM',0,10,144,4,25,128,4,13
	.byte	'CLC',0
	.word	10449
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	3102
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	10571
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	10611
	.byte	16,2,35,12,13
	.byte	'KRSTCLR',0
	.word	10686
	.byte	4,2,35,28,13
	.byte	'KRST1',0
	.word	10790
	.byte	4,2,35,32,13
	.byte	'KRST0',0
	.word	10913
	.byte	4,2,35,36,13
	.byte	'ACCEN1',0
	.word	11002
	.byte	4,2,35,40,13
	.byte	'ACCEN0',0
	.word	11571
	.byte	4,2,35,44,13
	.byte	'ECMCCFG',0
	.word	11775
	.byte	4,2,35,48,13
	.byte	'ECMSELR',0
	.word	12193
	.byte	4,2,35,52,13
	.byte	'ECMETH0',0
	.word	12786
	.byte	4,2,35,56,13
	.byte	'ECMETH1',0
	.word	13379
	.byte	4,2,35,60,13
	.byte	'GTMEXR',0
	.word	13589
	.byte	4,2,35,64,13
	.byte	'reserved_44',0
	.word	13629
	.byte	52,2,35,68,13
	.byte	'FPCESR',0
	.word	14190
	.byte	4,2,35,120,13
	.byte	'reserved_7C',0
	.word	3102
	.byte	4,2,35,124,13
	.byte	'FPCCTR',0
	.word	14442
	.byte	64,3,35,128,1,13
	.byte	'FPCTIM',0
	.word	14557
	.byte	64,3,35,192,1,13
	.byte	'LAMEWC',0
	.word	14688
	.byte	64,3,35,128,2,13
	.byte	'reserved_140',0
	.word	14697
	.byte	64,3,35,192,2,13
	.byte	'LAMCFG',0
	.word	14994
	.byte	64,3,35,128,3,13
	.byte	'LAMEWS',0
	.word	15109
	.byte	64,3,35,192,3,0,14
	.word	15118
.L30:
	.byte	3
	.word	15529
	.byte	25
	.word	1788
	.byte	6,0,25
	.word	1822
	.byte	6,0,25
	.word	1885
	.byte	26
	.word	1926
	.byte	6,0,25
	.word	1945
	.byte	26
	.word	2000
	.byte	6,0,25
	.word	2019
	.byte	26
	.word	2059
	.byte	26
	.word	2076
	.byte	17,6,0,0,25
	.word	9700
	.byte	26
	.word	9728
	.byte	26
	.word	9742
	.byte	26
	.word	9760
	.byte	6,0,25
	.word	9778
	.byte	26
	.word	9801
	.byte	17,29
	.word	9862
	.byte	30
	.word	9900
	.byte	0,6,0,0,25
	.word	9822
	.byte	6,0,25
	.word	9862
	.byte	6,0,15,9,172,2,9,1,16
	.byte	'IfxScuCcu_Fsource_0',0,0,16
	.byte	'IfxScuCcu_Fsource_1',0,1,16
	.byte	'IfxScuCcu_Fsource_2',0,2,0,31
	.byte	'IfxScuCcu_getSourceFrequency',0,9,138,7,20
	.word	224
	.byte	1,1,1,1,5
	.byte	'fsource',0,9,138,7,67
	.word	15657
	.byte	0,28
	.byte	'IfxScuCcu_getSpbFrequency',0,9,144,7,20
	.word	224
	.byte	1,1,1,1,7
	.byte	'short int',0,2,5,32
	.byte	'__wchar_t',0,11,1,1
	.word	15829
	.byte	32
	.byte	'__size_t',0,11,1,1
	.word	428
	.byte	32
	.byte	'__ptrdiff_t',0,11,1,1
	.word	444
	.byte	33,1,3
	.word	15897
	.byte	32
	.byte	'__codeptr',0,11,1,1
	.word	15899
	.byte	32
	.byte	'Ifx_UReg_8Bit',0,12,96,24
	.word	603
	.byte	32
	.byte	'Ifx_UReg_32Bit',0,12,98,24
	.word	428
	.byte	32
	.byte	'Ifx_SReg_32Bit',0,12,101,24
	.word	444
	.byte	32
	.byte	'Ifx_IOM_ACCEN0_Bits',0,10,102,3
	.word	11042
	.byte	32
	.byte	'Ifx_IOM_ACCEN1_Bits',0,10,108,3
	.word	10953
	.byte	32
	.byte	'Ifx_IOM_CLC_Bits',0,10,120,3
	.word	10295
	.byte	32
	.byte	'Ifx_IOM_ECMCCFG_Bits',0,10,133,1,3
	.word	11611
	.byte	32
	.byte	'Ifx_IOM_ECMETH0_Bits',0,10,170,1,3
	.word	12233
	.byte	32
	.byte	'Ifx_IOM_ECMETH1_Bits',0,10,207,1,3
	.word	12826
	.byte	32
	.byte	'Ifx_IOM_ECMSELR_Bits',0,10,233,1,3
	.word	11815
	.byte	32
	.byte	'Ifx_IOM_FPCCTR_Bits',0,10,246,1,3
	.word	14230
	.byte	32
	.byte	'Ifx_IOM_FPCESR_Bits',0,10,155,2,3
	.word	13638
	.byte	32
	.byte	'Ifx_IOM_FPCTIM_Bits',0,10,162,2,3
	.word	14451
	.byte	32
	.byte	'Ifx_IOM_GTMEXR_Bits',0,10,176,2,3
	.word	13419
	.byte	32
	.byte	'Ifx_IOM_ID_Bits',0,10,184,2,3
	.word	10489
	.byte	32
	.byte	'Ifx_IOM_KRST0_Bits',0,10,192,2,3
	.word	10830
	.byte	32
	.byte	'Ifx_IOM_KRST1_Bits',0,10,199,2,3
	.word	10726
	.byte	32
	.byte	'Ifx_IOM_KRSTCLR_Bits',0,10,206,2,3
	.word	10620
	.byte	32
	.byte	'Ifx_IOM_LAMCFG_Bits',0,10,224,2,3
	.word	14706
	.byte	32
	.byte	'Ifx_IOM_LAMEWC_Bits',0,10,232,2,3
	.word	14566
	.byte	32
	.byte	'Ifx_IOM_LAMEWS_Bits',0,10,239,2,3
	.word	15003
	.byte	32
	.byte	'Ifx_IOM_ACCEN0',0,10,252,2,3
	.word	11571
	.byte	32
	.byte	'Ifx_IOM_ACCEN1',0,10,132,3,3
	.word	11002
	.byte	32
	.byte	'Ifx_IOM_CLC',0,10,140,3,3
	.word	10449
	.byte	32
	.byte	'Ifx_IOM_ECMCCFG',0,10,148,3,3
	.word	11775
	.byte	32
	.byte	'Ifx_IOM_ECMETH0',0,10,156,3,3
	.word	12786
	.byte	32
	.byte	'Ifx_IOM_ECMETH1',0,10,164,3,3
	.word	13379
	.byte	32
	.byte	'Ifx_IOM_ECMSELR',0,10,172,3,3
	.word	12193
	.byte	32
	.byte	'Ifx_IOM_FPCCTR',0,10,180,3,3
	.word	14402
	.byte	32
	.byte	'Ifx_IOM_FPCESR',0,10,188,3,3
	.word	14190
	.byte	32
	.byte	'Ifx_IOM_FPCTIM',0,10,196,3,3
	.word	14517
	.byte	32
	.byte	'Ifx_IOM_GTMEXR',0,10,204,3,3
	.word	13589
	.byte	32
	.byte	'Ifx_IOM_ID',0,10,212,3,3
	.word	10571
	.byte	32
	.byte	'Ifx_IOM_KRST0',0,10,220,3,3
	.word	10913
	.byte	32
	.byte	'Ifx_IOM_KRST1',0,10,228,3,3
	.word	10790
	.byte	32
	.byte	'Ifx_IOM_KRSTCLR',0,10,236,3,3
	.word	10686
	.byte	32
	.byte	'Ifx_IOM_LAMCFG',0,10,244,3,3
	.word	14954
	.byte	32
	.byte	'Ifx_IOM_LAMEWC',0,10,252,3,3
	.word	14648
	.byte	32
	.byte	'Ifx_IOM_LAMEWS',0,10,132,4,3
	.word	15069
	.byte	14
	.word	15118
	.byte	32
	.byte	'Ifx_IOM',0,10,169,4,3
	.word	16933
	.byte	15,13,162,11,9,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,16
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,32
	.byte	'IfxScu_WDTCON1_IR',0,13,167,11,3
	.word	16955
	.byte	32
	.byte	'boolean',0,14,104,29
	.word	603
	.byte	32
	.byte	'uint8',0,14,108,29
	.word	603
	.byte	32
	.byte	'uint16',0,14,112,29
	.word	620
	.byte	32
	.byte	'uint32',0,14,116,29
	.word	1864
	.byte	32
	.byte	'uint64',0,14,121,29
	.word	310
	.byte	32
	.byte	'sint16',0,14,129,1,29
	.word	15829
	.byte	7
	.byte	'long int',0,4,5,32
	.byte	'sint32',0,14,134,1,29
	.word	17168
	.byte	7
	.byte	'long long int',0,8,5,32
	.byte	'sint64',0,14,141,1,29
	.word	17196
	.byte	32
	.byte	'float32',0,14,170,1,29
	.word	224
	.byte	32
	.byte	'pvoid',0,15,54,28
	.word	342
	.byte	32
	.byte	'Ifx_TickTime',0,15,76,28
	.word	17196
	.byte	15,15,127,9,1,16
	.byte	'Ifx_RxSel_a',0,0,16
	.byte	'Ifx_RxSel_b',0,1,16
	.byte	'Ifx_RxSel_c',0,2,16
	.byte	'Ifx_RxSel_d',0,3,16
	.byte	'Ifx_RxSel_e',0,4,16
	.byte	'Ifx_RxSel_f',0,5,16
	.byte	'Ifx_RxSel_g',0,6,16
	.byte	'Ifx_RxSel_h',0,7,0,32
	.byte	'Ifx_RxSel',0,15,137,1,3
	.word	17281
	.byte	10
	.byte	'_Ifx_SCU_ACCEN00_Bits',0,4,68,16,4,11
	.byte	'EN0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	603
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	603
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	603
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	603
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_ACCEN00_Bits',0,4,102,3
	.word	17418
	.byte	10
	.byte	'_Ifx_SCU_ACCEN01_Bits',0,4,105,16,4,11
	.byte	'reserved_0',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN01_Bits',0,4,108,3
	.word	17977
	.byte	10
	.byte	'_Ifx_SCU_ACCEN10_Bits',0,4,111,16,4,11
	.byte	'EN0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	603
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	603
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	603
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	603
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_ACCEN10_Bits',0,4,145,1,3
	.word	18056
	.byte	10
	.byte	'_Ifx_SCU_ACCEN11_Bits',0,4,148,1,16,4,11
	.byte	'reserved_0',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN11_Bits',0,4,151,1,3
	.word	18616
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,4,154,1,16,4,11
	.byte	'STM0DIS',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'STM3DIS',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'STM4DIS',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'STM5DIS',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	603
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	428
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,4,164,1,3
	.word	18697
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,4,167,1,16,4,11
	.byte	'STMDIV',0,1
	.word	603
	.byte	4,4,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	603
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	603
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	603
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	603
	.byte	4,4,2,35,2,11
	.byte	'BBBDIV',0,1
	.word	603
	.byte	4,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	603
	.byte	2,6,2,35,3,11
	.byte	'FSI2DIV',0,1
	.word	603
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	603
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON0_Bits',0,4,181,1,3
	.word	18914
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,4,184,1,16,4,11
	.byte	'MCANDIV',0,1
	.word	603
	.byte	4,4,2,35,0,11
	.byte	'CLKSELMCAN',0,1
	.word	603
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'PLL1DIVDIS',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'I2CDIV',0,1
	.word	603
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	603
	.byte	4,0,2,35,1,11
	.byte	'MSCDIV',0,1
	.word	603
	.byte	4,4,2,35,2,11
	.byte	'CLKSELMSC',0,1
	.word	603
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	603
	.byte	2,0,2,35,2,11
	.byte	'QSPIDIV',0,1
	.word	603
	.byte	4,4,2,35,3,11
	.byte	'CLKSELQSPI',0,1
	.word	603
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON1_Bits',0,4,199,1,3
	.word	19187
	.byte	10
	.byte	'_Ifx_SCU_CCUCON10_Bits',0,4,202,1,16,4,11
	.byte	'CPU4DIV',0,1
	.word	603
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	428
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON10_Bits',0,4,206,1,3
	.word	19513
	.byte	10
	.byte	'_Ifx_SCU_CCUCON11_Bits',0,4,209,1,16,4,11
	.byte	'CPU5DIV',0,1
	.word	603
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	428
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON11_Bits',0,4,213,1,3
	.word	19615
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,4,216,1,16,4,11
	.byte	'ASCLINFDIV',0,1
	.word	603
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	603
	.byte	4,0,2,35,0,11
	.byte	'ASCLINSDIV',0,1
	.word	603
	.byte	4,4,2,35,1,11
	.byte	'CLKSELASCLINS',0,1
	.word	603
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	428
	.byte	10,8,2,35,0,11
	.byte	'EBUPERON',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'ERAYPERON',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'HSPDMPERON',0,1
	.word	603
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	603
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON2_Bits',0,4,228,1,3
	.word	19717
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,4,231,1,16,4,11
	.byte	'PLL0MONEN',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'PLL1MONEN',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'PLL2MONEN',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'SPBMONEN',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'BACKMONEN',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	603
	.byte	3,0,2,35,0,11
	.byte	'PLL0MONTST',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'PLL1MONTST',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'PLL2MONTST',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'SPBMONTST',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'BACKMONTST',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	428
	.byte	11,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	603
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON3_Bits',0,4,248,1,3
	.word	19991
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,4,251,1,16,4,11
	.byte	'LOTHR',0,2
	.word	620
	.byte	12,4,2,35,0,11
	.byte	'UPTHR',0,4
	.word	428
	.byte	12,8,2,35,0,11
	.byte	'MONEN',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'MONTST',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	603
	.byte	4,2,2,35,3,11
	.byte	'UP',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON4_Bits',0,4,132,2,3
	.word	20360
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,4,135,2,16,4,11
	.byte	'GETHDIV',0,1
	.word	603
	.byte	4,4,2,35,0,11
	.byte	'MCANHDIV',0,1
	.word	603
	.byte	4,0,2,35,0,11
	.byte	'ADASDIV',0,1
	.word	603
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	428
	.byte	18,2,2,35,0,11
	.byte	'UP',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON5_Bits',0,4,143,2,3
	.word	20540
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,4,146,2,16,4,11
	.byte	'CPU0DIV',0,1
	.word	603
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	428
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6_Bits',0,4,150,2,3
	.word	20709
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,4,153,2,16,4,11
	.byte	'CPU1DIV',0,1
	.word	603
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	428
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7_Bits',0,4,157,2,3
	.word	20809
	.byte	10
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,4,160,2,16,4,11
	.byte	'CPU2DIV',0,1
	.word	603
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	428
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON8_Bits',0,4,164,2,3
	.word	20909
	.byte	10
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,4,167,2,16,4,11
	.byte	'CPU3DIV',0,1
	.word	603
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	428
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON9_Bits',0,4,171,2,3
	.word	21009
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,4,174,2,16,4,11
	.byte	'CHREV',0,1
	.word	603
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	603
	.byte	2,0,2,35,0,11
	.byte	'CHPK',0,1
	.word	603
	.byte	4,4,2,35,1,11
	.byte	'CHID',0,1
	.word	603
	.byte	4,0,2,35,1,11
	.byte	'EEA',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	603
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	603
	.byte	4,4,2,35,3,11
	.byte	'VART',0,1
	.word	603
	.byte	3,1,2,35,3,11
	.byte	'SEC',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CHIPID_Bits',0,4,185,2,3
	.word	21109
	.byte	10
	.byte	'_Ifx_SCU_DTSCLIM_Bits',0,4,188,2,16,4,11
	.byte	'LOWER',0,2
	.word	620
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'BGPOK',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'EN',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'LLU',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	620
	.byte	12,4,2,35,2,11
	.byte	'INTEN',0,1
	.word	603
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'INT',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_DTSCLIM_Bits',0,4,200,2,3
	.word	21312
	.byte	10
	.byte	'_Ifx_SCU_DTSCSTAT_Bits',0,4,203,2,16,4,11
	.byte	'RESULT',0,2
	.word	620
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	428
	.byte	20,0,2,35,0,0,32
	.byte	'Ifx_SCU_DTSCSTAT_Bits',0,4,207,2,3
	.word	21544
	.byte	10
	.byte	'_Ifx_SCU_EICON0_Bits',0,4,210,2,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	451
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	451
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SCU_EICON0_Bits',0,4,216,2,3
	.word	21646
	.byte	10
	.byte	'_Ifx_SCU_EICON1_Bits',0,4,219,2,16,4,11
	.byte	'reserved_0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	428
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_EICON1_Bits',0,4,228,2,3
	.word	21774
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,4,231,2,16,4,11
	.byte	'reserved_0',0,1
	.word	603
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	603
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	603
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	428
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	603
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	603
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	603
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EICR_Bits',0,4,250,2,3
	.word	21963
	.byte	10
	.byte	'_Ifx_SCU_EIFILT_Bits',0,4,253,2,16,4,11
	.byte	'FILRQ0A',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'FILRQ5A',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'FILRQ2A',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'FILRQ3A',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'FILRQ0C',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'FILRQ1C',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'FILRQ3C',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'FILRQ2C',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'FILRQ4A',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'FILRQ6A',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'FILRQ1A',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'FILRQ7A',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'FILRQ6D',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'FILRQ4D',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'FILRQ2B',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'FILRQ3B',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'FILRQ7C',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	603
	.byte	7,0,2,35,2,11
	.byte	'FILTDIV',0,1
	.word	603
	.byte	4,4,2,35,3,11
	.byte	'DEPTH',0,1
	.word	603
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_EIFILT_Bits',0,4,147,3,3
	.word	22327
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,4,150,3,16,4,11
	.byte	'INTF0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	428
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR_Bits',0,4,161,3,3
	.word	22766
	.byte	10
	.byte	'_Ifx_SCU_EISR_Bits',0,4,164,3,16,4,11
	.byte	'AE',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	620
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	620
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_EISR_Bits',0,4,174,3,3
	.word	22977
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,4,177,3,16,4,11
	.byte	'POL',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	620
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	620
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_EMSR_Bits',0,4,187,3,3
	.word	23153
	.byte	10
	.byte	'_Ifx_SCU_EMSSW_Bits',0,4,190,3,16,4,11
	.byte	'reserved_0',0,4
	.word	428
	.byte	24,8,2,35,0,11
	.byte	'EMSFM',0,1
	.word	603
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	603
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	603
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_EMSSW_Bits',0,4,196,3,3
	.word	23347
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,4,199,3,16,4,11
	.byte	'reserved_0',0,1
	.word	603
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	620
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	428
	.byte	23,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,4,204,3,3
	.word	23482
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,4,207,3,16,4,11
	.byte	'ARI',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	428
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG_Bits',0,4,212,3,3
	.word	23618
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,4,215,3,16,4,11
	.byte	'EN0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	603
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	620
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	603
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	603
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	603
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_EXTCON_Bits',0,4,226,3,3
	.word	23729
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,4,229,3,16,4,11
	.byte	'STEP',0,2
	.word	620
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	603
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	603
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	620
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	603
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_FDR_Bits',0,4,237,3,3
	.word	23947
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,4,240,3,16,4,11
	.byte	'FS0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	603
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	603
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	603
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	603
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_FMR_Bits',0,4,132,4,3
	.word	24110
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,4,135,4,16,4,11
	.byte	'MODREV',0,1
	.word	603
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	603
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	620
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_ID_Bits',0,4,140,4,3
	.word	24446
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,4,143,4,16,4,11
	.byte	'IPEN00',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	603
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	603
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	603
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	603
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	603
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	603
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SCU_IGCR_Bits',0,4,167,4,3
	.word	24553
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,4,170,4,16,4,11
	.byte	'P0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	428
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_IN_Bits',0,4,175,4,3
	.word	25005
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,4,178,4,16,4,11
	.byte	'reserved_0',0,1
	.word	603
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	603
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	603
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	603
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_IOCR_Bits',0,4,185,4,3
	.word	25104
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,4,188,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'LBISTRES',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,4
	.word	428
	.byte	18,12,2,35,0,11
	.byte	'reserved_20',0,2
	.word	620
	.byte	8,4,2,35,2,11
	.byte	'LBISTDONE',0,1
	.word	603
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'LBISTERRINJ',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'LBISTREQRED',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,4,198,4,3
	.word	25254
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,4,201,4,16,4,11
	.byte	'SEED',0,4
	.word	428
	.byte	19,13,2,35,0,11
	.byte	'reserved_19',0,1
	.word	603
	.byte	5,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	603
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	603
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,4,208,4,3
	.word	25492
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,4,211,4,16,4,11
	.byte	'LENGTH',0,2
	.word	620
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	428
	.byte	20,0,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,4,215,4,3
	.word	25653
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL3_Bits',0,4,218,4,16,4,11
	.byte	'SIGNATURE',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL3_Bits',0,4,221,4,3
	.word	25759
	.byte	10
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,4,224,4,16,4,11
	.byte	'LS2',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	620
	.byte	14,1,2,35,0,11
	.byte	'LSEN2',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'LS0',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	620
	.byte	14,1,2,35,2,11
	.byte	'LSEN0',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LCLCON0_Bits',0,4,232,4,3
	.word	25845
	.byte	10
	.byte	'_Ifx_SCU_LCLCON1_Bits',0,4,235,4,16,4,11
	.byte	'LS3',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	620
	.byte	14,1,2,35,0,11
	.byte	'LSEN3',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'LS1',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	620
	.byte	14,1,2,35,2,11
	.byte	'LSEN1',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LCLCON1_Bits',0,4,243,4,3
	.word	26013
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,4,246,4,16,4,11
	.byte	'LCLT0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'LCLT2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'LCLT3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'LCLT4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'LCLT5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	620
	.byte	10,0,2,35,0,11
	.byte	'PLCLT0',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'PLCLT1',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'PLCLT2',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'PLCLT3',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'PLCLT4',0,1
	.word	603
	.byte	1,3,2,35,2,11
	.byte	'PLCLT5',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	620
	.byte	10,0,2,35,2,0,32
	.byte	'Ifx_SCU_LCLTEST_Bits',0,4,134,5,3
	.word	26181
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,4,137,5,16,4,11
	.byte	'DEPT',0,1
	.word	603
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	620
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_MANID_Bits',0,4,142,5,3
	.word	26495
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,4,145,5,16,4,11
	.byte	'PS0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	620
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	620
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_OMR_Bits',0,4,153,5,3
	.word	26606
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,4,156,5,16,4,11
	.byte	'reserved_0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	603
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	603
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'HYSEN',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'HYSCTL',0,1
	.word	603
	.byte	2,4,2,35,1,11
	.byte	'AMPCTL',0,1
	.word	603
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	603
	.byte	2,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	603
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	603
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	603
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	603
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_OSCCON_Bits',0,4,177,5,3
	.word	26764
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,4,180,5,16,4,11
	.byte	'P0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	428
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_OUT_Bits',0,4,185,5,3
	.word	27175
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,4,188,5,16,4,11
	.byte	'CSEL0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'CSEL3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'CSEL4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'CSEL5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	620
	.byte	10,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	603
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	603
	.byte	6,0,2,35,3,0,32
	.byte	'Ifx_SCU_OVCCON_Bits',0,4,204,5,3
	.word	27276
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,4,207,5,16,4,11
	.byte	'OVEN0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'OVEN3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'OVEN4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'OVEN5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	428
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,4,216,5,3
	.word	27594
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,4,219,5,16,4,11
	.byte	'PDIS0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	428
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC_Bits',0,4,224,5,3
	.word	27781
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,4,227,5,16,4,11
	.byte	'PD0',0,1
	.word	603
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	603
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	603
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	603
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	428
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDR_Bits',0,4,234,5,3
	.word	27892
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,4,237,5,16,4,11
	.byte	'PDR0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	428
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR_Bits',0,4,248,5,3
	.word	28025
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON0_Bits',0,4,251,5,16,4,11
	.byte	'DIVBY',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	620
	.byte	8,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	603
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	603
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	603
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	603
	.byte	5,0,2,35,3,0,32
	.byte	'Ifx_SCU_PERPLLCON0_Bits',0,4,134,6,3
	.word	28228
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON1_Bits',0,4,137,6,16,4,11
	.byte	'K2DIV',0,1
	.word	603
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	603
	.byte	5,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	603
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	428
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLCON1_Bits',0,4,143,6,3
	.word	28468
	.byte	10
	.byte	'_Ifx_SCU_PERPLLSTAT_Bits',0,4,146,6,16,4,11
	.byte	'reserved_0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'K3RDY',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	428
	.byte	25,0,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLSTAT_Bits',0,4,156,6,3
	.word	28612
	.byte	10
	.byte	'_Ifx_SCU_PMCSR0_Bits',0,4,159,6,16,4,11
	.byte	'REQSLP',0,1
	.word	603
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	603
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	603
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	428
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR0_Bits',0,4,165,6,3
	.word	28834
	.byte	10
	.byte	'_Ifx_SCU_PMCSR1_Bits',0,4,168,6,16,4,11
	.byte	'REQSLP',0,1
	.word	603
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	603
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	603
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	428
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR1_Bits',0,4,174,6,3
	.word	28970
	.byte	10
	.byte	'_Ifx_SCU_PMCSR2_Bits',0,4,177,6,16,4,11
	.byte	'REQSLP',0,1
	.word	603
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	603
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	603
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	428
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR2_Bits',0,4,183,6,3
	.word	29106
	.byte	10
	.byte	'_Ifx_SCU_PMCSR3_Bits',0,4,186,6,16,4,11
	.byte	'REQSLP',0,1
	.word	603
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	603
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	603
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	428
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR3_Bits',0,4,192,6,3
	.word	29242
	.byte	10
	.byte	'_Ifx_SCU_PMCSR4_Bits',0,4,195,6,16,4,11
	.byte	'REQSLP',0,1
	.word	603
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	603
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	603
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	428
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR4_Bits',0,4,201,6,3
	.word	29378
	.byte	10
	.byte	'_Ifx_SCU_PMCSR5_Bits',0,4,204,6,16,4,11
	.byte	'REQSLP',0,1
	.word	603
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	603
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	603
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	428
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR5_Bits',0,4,210,6,3
	.word	29514
	.byte	10
	.byte	'_Ifx_SCU_PMSTAT0_Bits',0,4,213,6,16,4,11
	.byte	'CPU0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'CPU1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'CPU2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'CPU3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'CPU4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'CPU5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	620
	.byte	10,0,2,35,0,11
	.byte	'CPU0LS',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'CPU1LS',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'CPU2LS',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'CPU3LS',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	620
	.byte	12,0,2,35,2,0,32
	.byte	'Ifx_SCU_PMSTAT0_Bits',0,4,227,6,3
	.word	29650
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,4,230,6,16,4,11
	.byte	'reserved_0',0,1
	.word	603
	.byte	8,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	603
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	428
	.byte	11,8,2,35,0,11
	.byte	'CPUSEL',0,1
	.word	603
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	603
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,4,241,6,3
	.word	29922
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR0_Bits',0,4,244,6,16,4,11
	.byte	'LJTEN',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'LJTOVEN',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'LJTOVIEN',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'LJTSTRT',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'LJTSTP',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'LJTCLR',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	620
	.byte	6,4,2,35,0,11
	.byte	'SDSTEP',0,1
	.word	603
	.byte	4,0,2,35,1,11
	.byte	'VDTEN',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'VDTOVEN',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'VDTOVIEN',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'VDTSTRT',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'VDTSTP',0,1
	.word	603
	.byte	1,3,2,35,2,11
	.byte	'VDTCLR',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	620
	.byte	7,3,2,35,2,11
	.byte	'LPSLPEN',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	603
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMTRCSR0_Bits',0,4,135,7,3
	.word	30167
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR1_Bits',0,4,138,7,16,4,11
	.byte	'LJTCV',0,2
	.word	620
	.byte	16,0,2,35,0,11
	.byte	'VDTCV',0,2
	.word	620
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	603
	.byte	6,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMTRCSR1_Bits',0,4,143,7,3
	.word	30555
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR2_Bits',0,4,146,7,16,4,11
	.byte	'LDJMPREQ',0,1
	.word	603
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	603
	.byte	2,4,2,35,0,11
	.byte	'LJTRUN',0,1
	.word	603
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	603
	.byte	2,0,2,35,0,11
	.byte	'LJTOV',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	603
	.byte	3,4,2,35,1,11
	.byte	'LJTOVCLR',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	603
	.byte	3,0,2,35,1,11
	.byte	'LJTCNT',0,2
	.word	620
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_PMTRCSR2_Bits',0,4,157,7,3
	.word	30673
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR3_Bits',0,4,160,7,16,4,11
	.byte	'VDROOPREQ',0,1
	.word	603
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	603
	.byte	2,4,2,35,0,11
	.byte	'VDTRUN',0,1
	.word	603
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	603
	.byte	2,0,2,35,0,11
	.byte	'VDTOV',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	603
	.byte	3,4,2,35,1,11
	.byte	'VDTOVCLR',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	603
	.byte	3,0,2,35,1,11
	.byte	'VDTCNT',0,2
	.word	620
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	603
	.byte	6,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMTRCSR3_Bits',0,4,172,7,3
	.word	30916
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,4,175,7,16,4,11
	.byte	'ESR0',0,1
	.word	603
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	603
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	603
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	603
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	603
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	603
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	603
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	603
	.byte	2,0,2,35,1,11
	.byte	'STM3',0,1
	.word	603
	.byte	2,6,2,35,2,11
	.byte	'STM4',0,1
	.word	603
	.byte	2,4,2,35,2,11
	.byte	'STM5',0,1
	.word	603
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	620
	.byte	10,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON_Bits',0,4,189,7,3
	.word	31183
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,4,192,7,16,4,11
	.byte	'FRTO',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'CSSX',0,2
	.word	620
	.byte	6,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	620
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON2_Bits',0,4,206,7,3
	.word	31442
	.byte	10
	.byte	'_Ifx_SCU_RSTCON3_Bits',0,4,209,7,16,4,11
	.byte	'reserved_0',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON3_Bits',0,4,212,7,3
	.word	31747
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,4,215,7,16,4,11
	.byte	'ESR0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'STM3',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'STM4',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'STM5',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	603
	.byte	5,0,2,35,1,11
	.byte	'PORST',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	603
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	603
	.byte	1,1,2,35,2,11
	.byte	'EVRC',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'HSMS',0,1
	.word	603
	.byte	1,5,2,35,3,11
	.byte	'HSMA',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	603
	.byte	1,3,2,35,3,11
	.byte	'LBPORST',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'LBTERM',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,4,245,7,3
	.word	31828
	.byte	10
	.byte	'_Ifx_SCU_SEICON0_Bits',0,4,248,7,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	451
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	451
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SCU_SEICON0_Bits',0,4,254,7,3
	.word	32377
	.byte	10
	.byte	'_Ifx_SCU_SEICON1_Bits',0,4,129,8,16,4,11
	.byte	'reserved_0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	428
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_SEICON1_Bits',0,4,138,8,3
	.word	32507
	.byte	10
	.byte	'_Ifx_SCU_SEISR_Bits',0,4,141,8,16,4,11
	.byte	'AE',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	620
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	620
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SEISR_Bits',0,4,151,8,3
	.word	32698
	.byte	10
	.byte	'_Ifx_SCU_STCON_Bits',0,4,154,8,16,4,11
	.byte	'reserved_0',0,2
	.word	620
	.byte	13,3,2,35,0,11
	.byte	'SFCBAE',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'CFCBAE',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'STP',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_STCON_Bits',0,4,161,8,3
	.word	32876
	.byte	10
	.byte	'_Ifx_SCU_STMEM1_Bits',0,4,164,8,16,4,11
	.byte	'MEM',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM1_Bits',0,4,167,8,3
	.word	33027
	.byte	10
	.byte	'_Ifx_SCU_STMEM2_Bits',0,4,170,8,16,4,11
	.byte	'MEM',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM2_Bits',0,4,173,8,3
	.word	33099
	.byte	10
	.byte	'_Ifx_SCU_STMEM3_Bits',0,4,176,8,16,4,11
	.byte	'MEM',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM3_Bits',0,4,179,8,3
	.word	33171
	.byte	10
	.byte	'_Ifx_SCU_STMEM4_Bits',0,4,182,8,16,4,11
	.byte	'MEM',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM4_Bits',0,4,185,8,3
	.word	33243
	.byte	10
	.byte	'_Ifx_SCU_STMEM5_Bits',0,4,188,8,16,4,11
	.byte	'MEM',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM5_Bits',0,4,191,8,3
	.word	33315
	.byte	10
	.byte	'_Ifx_SCU_STMEM6_Bits',0,4,194,8,16,4,11
	.byte	'MEM',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM6_Bits',0,4,197,8,3
	.word	33387
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,4,200,8,16,4,11
	.byte	'HWCFG',0,1
	.word	603
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	603
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	603
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	603
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	603
	.byte	3,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	603
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_STSTAT_Bits',0,4,216,8,3
	.word	33459
	.byte	10
	.byte	'_Ifx_SCU_SWAPCTRL_Bits',0,4,219,8,16,4,11
	.byte	'ADDRCFG',0,1
	.word	603
	.byte	2,6,2,35,0,11
	.byte	'SPARE',0,2
	.word	620
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SWAPCTRL_Bits',0,4,224,8,3
	.word	33788
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,4,227,8,16,4,11
	.byte	'reserved_0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	603
	.byte	6,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	603
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,4,234,8,3
	.word	33908
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,4,237,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	603
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'DDC',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	603
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SYSCON_Bits',0,4,249,8,3
	.word	34078
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON0_Bits',0,4,252,8,16,4,11
	.byte	'reserved_0',0,1
	.word	603
	.byte	2,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	620
	.byte	6,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	603
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	603
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	603
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	603
	.byte	3,2,2,35,3,11
	.byte	'INSEL',0,1
	.word	603
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SCU_SYSPLLCON0_Bits',0,4,137,9,3
	.word	34341
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON1_Bits',0,4,140,9,16,4,11
	.byte	'K2DIV',0,1
	.word	603
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	428
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLCON1_Bits',0,4,144,9,3
	.word	34620
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON2_Bits',0,4,147,9,16,4,11
	.byte	'MODCFG',0,2
	.word	620
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SYSPLLCON2_Bits',0,4,151,9,3
	.word	34724
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLSTAT_Bits',0,4,154,9,16,4,11
	.byte	'reserved_0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	603
	.byte	2,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	428
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLSTAT_Bits',0,4,164,9,3
	.word	34830
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,4,167,9,16,4,11
	.byte	'ESR0T',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	428
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,4,174,9,3
	.word	35053
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS0_Bits',0,4,177,9,16,4,11
	.byte	'CPU0ESR0T',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'CPU0ESR1T',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'CPU0TRAP2T',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'CPU0SMUT',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	603
	.byte	4,0,2,35,0,11
	.byte	'CPU1ESR0T',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'CPU1ESR1T',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'CPU1TRAP2T',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'CPU1SMUT',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	603
	.byte	4,0,2,35,1,11
	.byte	'CPU2ESR0T',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'CPU2ESR1T',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'CPU2TRAP2T',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'CPU2SMUT',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	603
	.byte	4,0,2,35,2,11
	.byte	'CPU3ESR0T',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'CPU3ESR1T',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'CPU3TRAP2T',0,1
	.word	603
	.byte	1,5,2,35,3,11
	.byte	'CPU3SMUT',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	603
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_TRAPDIS0_Bits',0,4,199,9,3
	.word	35201
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS1_Bits',0,4,202,9,16,4,11
	.byte	'CPU4ESR0T',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'CPU4ESR1T',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'CPU4TRAP2T',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'CPU4SMUT',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	603
	.byte	4,0,2,35,0,11
	.byte	'CPU5ESR0T',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'CPU5ESR1T',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'CPU5TRAP2T',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'CPU5SMUT',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	603
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_TRAPDIS1_Bits',0,4,215,9,3
	.word	35689
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,4,218,9,16,4,11
	.byte	'ESR0T',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	428
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET_Bits',0,4,225,9,3
	.word	35986
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,4,228,9,16,4,11
	.byte	'ESR0T',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	428
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,4,235,9,3
	.word	36134
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,4,244,9,3
	.word	467
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,4,132,10,3
	.word	642
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,4,148,10,3
	.word	908
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,4,151,10,16,4,11
	.byte	'ENDINIT',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	451
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	451
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,4,157,10,3
	.word	36384
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,4,160,10,16,4,11
	.byte	'CLRIRF',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	603
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,4,173,10,3
	.word	36510
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,4,176,10,16,4,11
	.byte	'AE',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	603
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	620
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,4,189,10,3
	.word	36762
	.byte	12,4,197,10,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17418
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN00',0,4,202,10,3
	.word	36981
	.byte	12,4,205,10,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17977
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN01',0,4,210,10,3
	.word	37046
	.byte	12,4,213,10,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18056
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN10',0,4,218,10,3
	.word	37111
	.byte	12,4,221,10,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18616
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN11',0,4,226,10,3
	.word	37176
	.byte	12,4,229,10,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18697
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS',0,4,234,10,3
	.word	37241
	.byte	12,4,237,10,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18914
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON0',0,4,242,10,3
	.word	37306
	.byte	12,4,245,10,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19187
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON1',0,4,250,10,3
	.word	37371
	.byte	12,4,253,10,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19513
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON10',0,4,130,11,3
	.word	37436
	.byte	12,4,133,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19615
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON11',0,4,138,11,3
	.word	37502
	.byte	12,4,141,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19717
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON2',0,4,146,11,3
	.word	37568
	.byte	12,4,149,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19991
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON3',0,4,154,11,3
	.word	37633
	.byte	12,4,157,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20360
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON4',0,4,162,11,3
	.word	37698
	.byte	12,4,165,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20540
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON5',0,4,170,11,3
	.word	37763
	.byte	12,4,173,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20709
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6',0,4,178,11,3
	.word	37828
	.byte	12,4,181,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20809
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7',0,4,186,11,3
	.word	37893
	.byte	12,4,189,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20909
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON8',0,4,194,11,3
	.word	37958
	.byte	12,4,197,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21009
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON9',0,4,202,11,3
	.word	38023
	.byte	12,4,205,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21109
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CHIPID',0,4,210,11,3
	.word	38088
	.byte	12,4,213,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21312
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSCLIM',0,4,218,11,3
	.word	38152
	.byte	12,4,221,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21544
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSCSTAT',0,4,226,11,3
	.word	38217
	.byte	12,4,229,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21646
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EICON0',0,4,234,11,3
	.word	38283
	.byte	12,4,237,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21774
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EICON1',0,4,242,11,3
	.word	38347
	.byte	12,4,245,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21963
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EICR',0,4,250,11,3
	.word	38411
	.byte	12,4,253,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22327
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EIFILT',0,4,130,12,3
	.word	38473
	.byte	12,4,133,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22766
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR',0,4,138,12,3
	.word	38537
	.byte	12,4,141,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22977
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EISR',0,4,146,12,3
	.word	38599
	.byte	12,4,149,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23153
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EMSR',0,4,154,12,3
	.word	38661
	.byte	12,4,157,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23347
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EMSSW',0,4,162,12,3
	.word	38723
	.byte	12,4,165,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23482
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX',0,4,170,12,3
	.word	38786
	.byte	12,4,173,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23618
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG',0,4,178,12,3
	.word	38859
	.byte	12,4,181,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23729
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EXTCON',0,4,186,12,3
	.word	38924
	.byte	12,4,189,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23947
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FDR',0,4,194,12,3
	.word	38988
	.byte	12,4,197,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24110
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FMR',0,4,202,12,3
	.word	39049
	.byte	12,4,205,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24446
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ID',0,4,210,12,3
	.word	39110
	.byte	12,4,213,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24553
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IGCR',0,4,218,12,3
	.word	39170
	.byte	12,4,221,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25005
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IN',0,4,226,12,3
	.word	39232
	.byte	12,4,229,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25104
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IOCR',0,4,234,12,3
	.word	39292
	.byte	12,4,237,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25254
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL0',0,4,242,12,3
	.word	39354
	.byte	12,4,245,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25492
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL1',0,4,250,12,3
	.word	39422
	.byte	12,4,253,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25653
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL2',0,4,130,13,3
	.word	39490
	.byte	12,4,133,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25759
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL3',0,4,138,13,3
	.word	39558
	.byte	12,4,141,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25845
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLCON0',0,4,146,13,3
	.word	39626
	.byte	12,4,149,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26013
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLCON1',0,4,154,13,3
	.word	39691
	.byte	12,4,157,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26181
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLTEST',0,4,162,13,3
	.word	39756
	.byte	12,4,165,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26495
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_MANID',0,4,170,13,3
	.word	39821
	.byte	12,4,173,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26606
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OMR',0,4,178,13,3
	.word	39884
	.byte	12,4,181,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26764
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OSCCON',0,4,186,13,3
	.word	39945
	.byte	12,4,189,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27175
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OUT',0,4,194,13,3
	.word	40009
	.byte	12,4,197,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27276
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCCON',0,4,202,13,3
	.word	40070
	.byte	12,4,205,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27594
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE',0,4,210,13,3
	.word	40134
	.byte	12,4,213,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27781
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC',0,4,218,13,3
	.word	40201
	.byte	12,4,221,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27892
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDR',0,4,226,13,3
	.word	40264
	.byte	12,4,229,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28025
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR',0,4,234,13,3
	.word	40325
	.byte	12,4,237,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28228
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLCON0',0,4,242,13,3
	.word	40387
	.byte	12,4,245,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28468
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLCON1',0,4,250,13,3
	.word	40455
	.byte	12,4,253,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28612
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLSTAT',0,4,130,14,3
	.word	40523
	.byte	12,4,133,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28834
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR0',0,4,138,14,3
	.word	40591
	.byte	12,4,141,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28970
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR1',0,4,146,14,3
	.word	40655
	.byte	12,4,149,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29106
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR2',0,4,154,14,3
	.word	40719
	.byte	12,4,157,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29242
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR3',0,4,162,14,3
	.word	40783
	.byte	12,4,165,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29378
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR4',0,4,170,14,3
	.word	40847
	.byte	12,4,173,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29514
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR5',0,4,178,14,3
	.word	40911
	.byte	12,4,181,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29650
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSTAT0',0,4,186,14,3
	.word	40975
	.byte	12,4,189,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29922
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR1',0,4,194,14,3
	.word	41040
	.byte	12,4,197,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30167
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMTRCSR0',0,4,202,14,3
	.word	41105
	.byte	12,4,205,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30555
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMTRCSR1',0,4,210,14,3
	.word	41171
	.byte	12,4,213,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30673
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMTRCSR2',0,4,218,14,3
	.word	41237
	.byte	12,4,221,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30916
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMTRCSR3',0,4,226,14,3
	.word	41303
	.byte	12,4,229,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31183
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON',0,4,234,14,3
	.word	41369
	.byte	12,4,237,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31442
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON2',0,4,242,14,3
	.word	41433
	.byte	12,4,245,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31747
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON3',0,4,250,14,3
	.word	41498
	.byte	12,4,253,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31828
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTSTAT',0,4,130,15,3
	.word	41563
	.byte	12,4,133,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32377
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SEICON0',0,4,138,15,3
	.word	41628
	.byte	12,4,141,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32507
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SEICON1',0,4,146,15,3
	.word	41693
	.byte	12,4,149,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32698
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SEISR',0,4,154,15,3
	.word	41758
	.byte	12,4,157,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32876
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STCON',0,4,162,15,3
	.word	41821
	.byte	12,4,165,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33027
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM1',0,4,170,15,3
	.word	41884
	.byte	12,4,173,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33099
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM2',0,4,178,15,3
	.word	41948
	.byte	12,4,181,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33171
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM3',0,4,186,15,3
	.word	42012
	.byte	12,4,189,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33243
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM4',0,4,194,15,3
	.word	42076
	.byte	12,4,197,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33315
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM5',0,4,202,15,3
	.word	42140
	.byte	12,4,205,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33387
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM6',0,4,210,15,3
	.word	42204
	.byte	12,4,213,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33459
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STSTAT',0,4,218,15,3
	.word	42268
	.byte	12,4,221,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33788
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SWAPCTRL',0,4,226,15,3
	.word	42332
	.byte	12,4,229,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33908
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SWRSTCON',0,4,234,15,3
	.word	42398
	.byte	12,4,237,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34078
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSCON',0,4,242,15,3
	.word	42464
	.byte	12,4,245,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34341
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLCON0',0,4,250,15,3
	.word	42528
	.byte	12,4,253,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34620
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLCON1',0,4,130,16,3
	.word	42596
	.byte	12,4,133,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34724
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLCON2',0,4,138,16,3
	.word	42664
	.byte	12,4,141,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34830
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLSTAT',0,4,146,16,3
	.word	42732
	.byte	12,4,149,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35053
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR',0,4,154,16,3
	.word	42800
	.byte	12,4,157,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35201
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS0',0,4,162,16,3
	.word	42865
	.byte	12,4,165,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35689
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS1',0,4,170,16,3
	.word	42931
	.byte	12,4,173,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35986
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET',0,4,178,16,3
	.word	42997
	.byte	12,4,181,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36134
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT',0,4,186,16,3
	.word	43062
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0',0,4,194,16,3
	.word	563
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1',0,4,202,16,3
	.word	868
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR',0,4,210,16,3
	.word	1099
	.byte	12,4,213,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36384
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0',0,4,218,16,3
	.word	43213
	.byte	12,4,221,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36510
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON1',0,4,226,16,3
	.word	43280
	.byte	12,4,229,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36762
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_SR',0,4,234,16,3
	.word	43347
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX',0,4,246,16,25,4,13
	.byte	'ESRCFGX',0
	.word	38786
	.byte	4,2,35,0,0,14
	.word	43412
	.byte	32
	.byte	'Ifx_SCU_ESRCFGX',0,4,249,16,3
	.word	43453
	.byte	14
	.word	1139
	.byte	32
	.byte	'Ifx_SCU_WDTCPU',0,4,141,17,3
	.word	43483
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,4,156,17,25,12,13
	.byte	'CON0',0
	.word	43213
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	43280
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	43347
	.byte	4,2,35,8,0,14
	.word	43512
	.byte	32
	.byte	'Ifx_SCU_WDTS',0,4,161,17,3
	.word	43573
	.byte	18,8
	.word	43412
	.byte	19,1,0,14
	.word	43600
	.byte	18,20
	.word	603
	.byte	19,19,0,18,36
	.word	603
	.byte	19,35,0,18,16
	.word	38411
	.byte	19,3,0,18,16
	.word	39170
	.byte	19,3,0,18,72
	.word	1139
	.byte	19,5,0,14
	.word	43650
	.byte	14
	.word	43512
	.byte	18,176,2
	.word	603
	.byte	19,175,2,0,10
	.byte	'_Ifx_SCU',0,4,176,17,25,128,8,13
	.byte	'reserved_0',0
	.word	4922
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	39110
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3102
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	39945
	.byte	4,2,35,16,13
	.byte	'SYSPLLSTAT',0
	.word	42732
	.byte	4,2,35,20,13
	.byte	'SYSPLLCON0',0
	.word	42528
	.byte	4,2,35,24,13
	.byte	'SYSPLLCON1',0
	.word	42596
	.byte	4,2,35,28,13
	.byte	'SYSPLLCON2',0
	.word	42664
	.byte	4,2,35,32,13
	.byte	'PERPLLSTAT',0
	.word	40523
	.byte	4,2,35,36,13
	.byte	'PERPLLCON0',0
	.word	40387
	.byte	4,2,35,40,13
	.byte	'PERPLLCON1',0
	.word	40455
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	37306
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	37371
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	38988
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	38924
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	37568
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	37633
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	37698
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	37763
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	41563
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	3102
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	41369
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	37241
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	42398
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	41433
	.byte	4,2,35,100,13
	.byte	'RSTCON3',0
	.word	41498
	.byte	4,2,35,104,13
	.byte	'reserved_6C',0
	.word	3102
	.byte	4,2,35,108,13
	.byte	'ESRCFGX',0
	.word	43609
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	38859
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	42464
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	37828
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	37893
	.byte	4,3,35,132,1,13
	.byte	'CCUCON8',0
	.word	37958
	.byte	4,3,35,136,1,13
	.byte	'CCUCON9',0
	.word	38023
	.byte	4,3,35,140,1,13
	.byte	'CCUCON10',0
	.word	37436
	.byte	4,3,35,144,1,13
	.byte	'CCUCON11',0
	.word	37502
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	3102
	.byte	4,3,35,152,1,13
	.byte	'PDR',0
	.word	40264
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	39292
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	40009
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	39884
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	39232
	.byte	4,3,35,172,1,13
	.byte	'reserved_B0',0
	.word	10611
	.byte	16,3,35,176,1,13
	.byte	'STSTAT',0
	.word	42268
	.byte	4,3,35,192,1,13
	.byte	'STCON',0
	.word	41821
	.byte	4,3,35,196,1,13
	.byte	'PMCSR0',0
	.word	40591
	.byte	4,3,35,200,1,13
	.byte	'PMCSR1',0
	.word	40655
	.byte	4,3,35,204,1,13
	.byte	'PMCSR2',0
	.word	40719
	.byte	4,3,35,208,1,13
	.byte	'PMCSR3',0
	.word	40783
	.byte	4,3,35,212,1,13
	.byte	'PMCSR4',0
	.word	40847
	.byte	4,3,35,216,1,13
	.byte	'PMCSR5',0
	.word	40911
	.byte	4,3,35,220,1,13
	.byte	'reserved_E0',0
	.word	3102
	.byte	4,3,35,224,1,13
	.byte	'PMSTAT0',0
	.word	40975
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	41040
	.byte	4,3,35,232,1,13
	.byte	'reserved_EC',0
	.word	10611
	.byte	16,3,35,236,1,13
	.byte	'EMSR',0
	.word	38661
	.byte	4,3,35,252,1,13
	.byte	'EMSSW',0
	.word	38723
	.byte	4,3,35,128,2,13
	.byte	'DTSCSTAT',0
	.word	38217
	.byte	4,3,35,132,2,13
	.byte	'DTSCLIM',0
	.word	38152
	.byte	4,3,35,136,2,13
	.byte	'reserved_10C',0
	.word	43614
	.byte	20,3,35,140,2,13
	.byte	'TRAPDIS1',0
	.word	42931
	.byte	4,3,35,160,2,13
	.byte	'TRAPSTAT',0
	.word	43062
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	42997
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	42800
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS0',0
	.word	42865
	.byte	4,3,35,176,2,13
	.byte	'LCLCON0',0
	.word	39626
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	39691
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	39756
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	38088
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	39821
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	3102
	.byte	4,3,35,200,2,13
	.byte	'SWAPCTRL',0
	.word	42332
	.byte	4,3,35,204,2,13
	.byte	'reserved_150',0
	.word	43614
	.byte	20,3,35,208,2,13
	.byte	'LBISTCTRL0',0
	.word	39354
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	39422
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	39490
	.byte	4,3,35,236,2,13
	.byte	'LBISTCTRL3',0
	.word	39558
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	10611
	.byte	16,3,35,244,2,13
	.byte	'STMEM1',0
	.word	41884
	.byte	4,3,35,132,3,13
	.byte	'STMEM2',0
	.word	41948
	.byte	4,3,35,136,3,13
	.byte	'PDISC',0
	.word	40201
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	4922
	.byte	8,3,35,144,3,13
	.byte	'PMTRCSR0',0
	.word	41105
	.byte	4,3,35,152,3,13
	.byte	'PMTRCSR1',0
	.word	41171
	.byte	4,3,35,156,3,13
	.byte	'PMTRCSR2',0
	.word	41237
	.byte	4,3,35,160,3,13
	.byte	'PMTRCSR3',0
	.word	41303
	.byte	4,3,35,164,3,13
	.byte	'reserved_1A8',0
	.word	4293
	.byte	24,3,35,168,3,13
	.byte	'STMEM3',0
	.word	42012
	.byte	4,3,35,192,3,13
	.byte	'STMEM4',0
	.word	42076
	.byte	4,3,35,196,3,13
	.byte	'STMEM5',0
	.word	42140
	.byte	4,3,35,200,3,13
	.byte	'STMEM6',0
	.word	42204
	.byte	4,3,35,204,3,13
	.byte	'reserved_1D0',0
	.word	10611
	.byte	16,3,35,208,3,13
	.byte	'OVCENABLE',0
	.word	40134
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	40070
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	43623
	.byte	36,3,35,232,3,13
	.byte	'EIFILT',0
	.word	38473
	.byte	4,3,35,140,4,13
	.byte	'EICR',0
	.word	43632
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	38537
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	39049
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	40325
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	43641
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	10611
	.byte	16,3,35,188,4,13
	.byte	'WDTCPU',0
	.word	43659
	.byte	72,3,35,204,4,13
	.byte	'reserved_294',0
	.word	4922
	.byte	8,3,35,148,5,13
	.byte	'EICON0',0
	.word	38283
	.byte	4,3,35,156,5,13
	.byte	'EICON1',0
	.word	38347
	.byte	4,3,35,160,5,13
	.byte	'EISR',0
	.word	38599
	.byte	4,3,35,164,5,13
	.byte	'WDTS',0
	.word	43664
	.byte	12,3,35,168,5,13
	.byte	'SEICON0',0
	.word	41628
	.byte	4,3,35,180,5,13
	.byte	'SEICON1',0
	.word	41693
	.byte	4,3,35,184,5,13
	.byte	'SEISR',0
	.word	41758
	.byte	4,3,35,188,5,13
	.byte	'reserved_2C0',0
	.word	43669
	.byte	176,2,3,35,192,5,13
	.byte	'ACCEN11',0
	.word	37176
	.byte	4,3,35,240,7,13
	.byte	'ACCEN10',0
	.word	37111
	.byte	4,3,35,244,7,13
	.byte	'ACCEN01',0
	.word	37046
	.byte	4,3,35,248,7,13
	.byte	'ACCEN00',0
	.word	36981
	.byte	4,3,35,252,7,0,14
	.word	43680
	.byte	32
	.byte	'Ifx_SCU',0,4,166,18,3
	.word	45801
	.byte	15,16,159,1,9,1,16
	.byte	'IfxIom_SleepMode_enable',0,0,16
	.byte	'IfxIom_SleepMode_disable',0,1,0,32
	.byte	'IfxIom_SleepMode',0,16,163,1,3
	.word	45823
	.byte	15,16,141,2,9,1,16
	.byte	'IfxIom_FpcChannelId_0',0,0,16
	.byte	'IfxIom_FpcChannelId_1',0,1,16
	.byte	'IfxIom_FpcChannelId_2',0,2,16
	.byte	'IfxIom_FpcChannelId_3',0,3,16
	.byte	'IfxIom_FpcChannelId_4',0,4,16
	.byte	'IfxIom_FpcChannelId_5',0,5,16
	.byte	'IfxIom_FpcChannelId_6',0,6,16
	.byte	'IfxIom_FpcChannelId_7',0,7,16
	.byte	'IfxIom_FpcChannelId_8',0,8,16
	.byte	'IfxIom_FpcChannelId_9',0,9,16
	.byte	'IfxIom_FpcChannelId_10',0,10,16
	.byte	'IfxIom_FpcChannelId_11',0,11,16
	.byte	'IfxIom_FpcChannelId_12',0,12,16
	.byte	'IfxIom_FpcChannelId_13',0,13,16
	.byte	'IfxIom_FpcChannelId_14',0,14,16
	.byte	'IfxIom_FpcChannelId_15',0,15,0,32
	.byte	'IfxIom_FpcChannelId',0,16,159,2,3
	.word	45909
	.byte	10
	.byte	'_Ifx_CPU_A_Bits',0,17,68,16,4,11
	.byte	'ADDR',0,4
	.word	451
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_A_Bits',0,17,71,3
	.word	46335
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,17,74,16,4,11
	.byte	'VSS',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	451
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BIV_Bits',0,17,78,3
	.word	46396
	.byte	10
	.byte	'_Ifx_CPU_BLK_OMASK_Bits',0,17,81,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	5,27,2,35,0,11
	.byte	'OMASK',0,4
	.word	451
	.byte	12,15,2,35,0,11
	.byte	'ONE',0,4
	.word	451
	.byte	11,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	451
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_OMASK_Bits',0,17,87,3
	.word	46475
	.byte	10
	.byte	'_Ifx_CPU_BLK_OTAR_Bits',0,17,90,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	5,27,2,35,0,11
	.byte	'TBASE',0,4
	.word	451
	.byte	23,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	451
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_OTAR_Bits',0,17,95,3
	.word	46613
	.byte	10
	.byte	'_Ifx_CPU_BLK_RABR_Bits',0,17,98,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	5,27,2,35,0,11
	.byte	'OBASE',0,4
	.word	451
	.byte	17,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	451
	.byte	2,8,2,35,0,11
	.byte	'OMEM',0,4
	.word	451
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	451
	.byte	3,1,2,35,0,11
	.byte	'OVEN',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_RABR_Bits',0,17,106,3
	.word	46734
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,17,109,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	451
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BTV_Bits',0,17,113,3
	.word	46910
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,17,116,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	451
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT_Bits',0,17,120,3
	.word	46996
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,17,123,16,4,11
	.byte	'CM',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	451
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	451
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	451
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	451
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL_Bits',0,17,131,1,3
	.word	47085
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,17,134,1,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	451
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT_Bits',0,17,140,1,3
	.word	47232
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,17,143,1,16,4,11
	.byte	'CORE_ID',0,4
	.word	451
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	451
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CORE_ID_Bits',0,17,147,1,3
	.word	47361
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,17,150,1,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	5,27,2,35,0,11
	.byte	'LOWBND',0,4
	.word	451
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L_Bits',0,17,154,1,3
	.word	47461
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,17,157,1,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	5,27,2,35,0,11
	.byte	'UPPBND',0,4
	.word	451
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U_Bits',0,17,161,1,3
	.word	47556
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,17,164,1,16,4,11
	.byte	'MOD_REV',0,4
	.word	451
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	451
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	451
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID_Bits',0,17,169,1,3
	.word	47651
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,17,172,1,16,4,11
	.byte	'XE_N',0,4
	.word	451
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	451
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE_Bits',0,17,176,1,3
	.word	47761
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,17,179,1,16,4,11
	.byte	'EVTA',0,4
	.word	451
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	451
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	451
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT_Bits',0,17,187,1,3
	.word	47853
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,17,190,1,16,4,11
	.byte	'CID',0,4
	.word	451
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	451
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID_Bits',0,17,194,1,3
	.word	48007
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,17,197,1,16,4,11
	.byte	'DATA',0,4
	.word	451
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_D_Bits',0,17,200,1,3
	.word	48101
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,17,203,1,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	451
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	451
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	451
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DATR_Bits',0,17,214,1,3
	.word	48164
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,17,217,1,16,4,11
	.byte	'DE',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	451
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	451
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	451
	.byte	19,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR_Bits',0,17,228,1,3
	.word	48390
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,17,231,1,16,4,11
	.byte	'DTA',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	451
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR_Bits',0,17,235,1,3
	.word	48605
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,17,238,1,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	451
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0_Bits',0,17,243,1,3
	.word	48699
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,17,246,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	451
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	451
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2_Bits',0,17,250,1,3
	.word	48815
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,17,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	6,26,2,35,0,11
	.byte	'DCXVALUE',0,4
	.word	451
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCX_Bits',0,17,129,2,3
	.word	48916
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,17,132,2,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	451
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD_Bits',0,17,135,2,3
	.word	49009
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,17,138,2,16,4,11
	.byte	'TA',0,4
	.word	451
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR_Bits',0,17,141,2,3
	.word	49089
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,17,144,2,16,4,11
	.byte	'IED',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	451
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'IE_DLMU',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	451
	.byte	15,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR_Bits',0,17,159,2,3
	.word	49158
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,17,162,2,16,4,11
	.byte	'EN0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,17,196,2,3
	.word	49442
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,17,199,2,16,4,11
	.byte	'EN0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,17,233,2,3
	.word	50033
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,17,236,2,16,4,11
	.byte	'EN32',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,17,142,3,3
	.word	50624
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,17,145,3,16,4,11
	.byte	'EN32',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,17,179,3,3
	.word	51225
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,17,182,3,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	451
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,17,186,3,3
	.word	51826
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,17,189,3,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	451
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,17,193,3,3
	.word	51941
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,17,196,3,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'DMSVALUE',0,4
	.word	451
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DMS_Bits',0,17,200,3,3
	.word	52056
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,17,203,3,16,4,11
	.byte	'RE_N',0,4
	.word	451
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	451
	.byte	14,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE_Bits',0,17,207,3,3
	.word	52149
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,17,210,3,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	451
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L_Bits',0,17,214,3,3
	.word	52241
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,17,217,3,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	451
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U_Bits',0,17,221,3,3
	.word	52336
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,17,224,3,16,4,11
	.byte	'WE_N',0,4
	.word	451
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	451
	.byte	14,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE_Bits',0,17,228,3,3
	.word	52431
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,17,231,3,16,4,11
	.byte	'SRE',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'DRE',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	451
	.byte	2,26,2,35,0,11
	.byte	'CRE',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	451
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	451
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	451
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR_Bits',0,17,250,3,3
	.word	52523
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,17,253,3,16,4,11
	.byte	'EVTA',0,4
	.word	451
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	451
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	451
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT_Bits',0,17,133,4,3
	.word	52862
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,17,136,4,16,4,11
	.byte	'FCXO',0,4
	.word	451
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	451
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	451
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FCX_Bits',0,17,141,4,3
	.word	53016
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON0_Bits',0,17,144,4,16,4,11
	.byte	'TAG1',0,4
	.word	451
	.byte	6,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	451
	.byte	2,24,2,35,0,11
	.byte	'TAG2',0,4
	.word	451
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	451
	.byte	2,16,2,35,0,11
	.byte	'TAG3',0,4
	.word	451
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	451
	.byte	2,8,2,35,0,11
	.byte	'TAG4',0,4
	.word	451
	.byte	6,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	451
	.byte	2,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON0_Bits',0,17,154,4,3
	.word	53122
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON1_Bits',0,17,157,4,16,4,11
	.byte	'STALL',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	451
	.byte	15,16,2,35,0,11
	.byte	'MASKUECC',0,4
	.word	451
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	451
	.byte	6,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	451
	.byte	2,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	451
	.byte	6,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON1_Bits',0,17,165,4,3
	.word	53340
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON2_Bits',0,17,168,4,16,4,11
	.byte	'RECDIS',0,4
	.word	451
	.byte	2,30,2,35,0,11
	.byte	'ECCCORDIS',0,4
	.word	451
	.byte	2,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	451
	.byte	4,24,2,35,0,11
	.byte	'HMARGIN',0,4
	.word	451
	.byte	2,22,2,35,0,11
	.byte	'MSEL',0,4
	.word	451
	.byte	2,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	451
	.byte	4,16,2,35,0,11
	.byte	'ECCSCLR',0,4
	.word	451
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	451
	.byte	6,8,2,35,0,11
	.byte	'SBABCLR',0,4
	.word	451
	.byte	2,6,2,35,0,11
	.byte	'DBABCLR',0,4
	.word	451
	.byte	2,4,2,35,0,11
	.byte	'MBABCLR',0,4
	.word	451
	.byte	2,2,2,35,0,11
	.byte	'ZBABCLR',0,4
	.word	451
	.byte	2,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON2_Bits',0,17,182,4,3
	.word	53531
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON3_Bits',0,17,185,4,16,4,11
	.byte	'ECCERRINJ',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'EDCERRINJ',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'SBABERRINJ',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'DBABERRINJ',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'MBABERRINJ',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'ZBABERRINJ',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'SBERERRINJ',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'DBERERRINJ',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'NVMCERRINJ',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'FLCONERRINJ',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	451
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON3_Bits',0,17,198,4,3
	.word	53831
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON4_Bits',0,17,201,4,16,4,11
	.byte	'DDIS',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	451
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON4_Bits',0,17,205,4,3
	.word	54136
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,17,208,4,16,4,11
	.byte	'TST',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	451
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	451
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	451
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	451
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,17,227,4,3
	.word	54237
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,17,230,4,16,4,11
	.byte	'OPC',0,4
	.word	451
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	451
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	451
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	451
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,17,237,4,3
	.word	54586
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,17,240,4,16,4,11
	.byte	'PC',0,4
	.word	451
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,17,243,4,3
	.word	54746
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,17,246,4,16,4,11
	.byte	'SRC1',0,4
	.word	451
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,17,249,4,3
	.word	54827
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,17,252,4,16,4,11
	.byte	'SRC2',0,4
	.word	451
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,17,255,4,3
	.word	54914
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,17,130,5,16,4,11
	.byte	'SRC3',0,4
	.word	451
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,17,133,5,3
	.word	55001
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,17,136,5,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	451
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT_Bits',0,17,140,5,3
	.word	55088
	.byte	10
	.byte	'_Ifx_CPU_ICR_Bits',0,17,143,5,16,4,11
	.byte	'CCPN',0,4
	.word	451
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	451
	.byte	7,17,2,35,0,11
	.byte	'IE',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	451
	.byte	8,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	451
	.byte	8,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICR_Bits',0,17,150,5,3
	.word	55179
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,17,153,5,16,4,11
	.byte	'ISP',0,4
	.word	451
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_ISP_Bits',0,17,156,5,3
	.word	55321
	.byte	10
	.byte	'_Ifx_CPU_KRST0_Bits',0,17,159,5,16,4,11
	.byte	'RST',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'RSTSTAT',0,4
	.word	451
	.byte	2,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	451
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_KRST0_Bits',0,17,164,5,3
	.word	55387
	.byte	10
	.byte	'_Ifx_CPU_KRST1_Bits',0,17,167,5,16,4,11
	.byte	'RST',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	451
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_KRST1_Bits',0,17,171,5,3
	.word	55498
	.byte	10
	.byte	'_Ifx_CPU_KRSTCLR_Bits',0,17,174,5,16,4,11
	.byte	'CLR',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	451
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_KRSTCLR_Bits',0,17,178,5,3
	.word	55590
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,17,181,5,16,4,11
	.byte	'LCXO',0,4
	.word	451
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	451
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	451
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_LCX_Bits',0,17,186,5,3
	.word	55686
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,17,189,5,16,4,11
	.byte	'EN0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,17,223,5,3
	.word	55792
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,17,226,5,16,4,11
	.byte	'EN32',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,17,132,6,3
	.word	56375
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,17,135,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	451
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT_Bits',0,17,139,6,3
	.word	56968
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,17,142,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	451
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT_Bits',0,17,146,6,3
	.word	57061
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,17,149,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	451
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT_Bits',0,17,153,6,3
	.word	57154
	.byte	10
	.byte	'_Ifx_CPU_OSEL_Bits',0,17,156,6,16,4,11
	.byte	'SHOVEN_X',0,4
	.word	451
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_OSEL_Bits',0,17,159,6,3
	.word	57247
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,17,162,6,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	451
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_PC_Bits',0,17,166,6,3
	.word	57320
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,17,169,6,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	451
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0_Bits',0,17,174,6,3
	.word	57405
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,17,177,6,16,4,11
	.byte	'PCINV',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	451
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1_Bits',0,17,182,6,3
	.word	57521
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,17,185,6,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	451
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	451
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2_Bits',0,17,189,6,3
	.word	57632
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,17,192,6,16,4,11
	.byte	'PCXO',0,4
	.word	451
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	451
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	451
	.byte	8,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	451
	.byte	2,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI_Bits',0,17,200,6,3
	.word	57733
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,17,203,6,16,4,11
	.byte	'TA',0,4
	.word	451
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR_Bits',0,17,206,6,3
	.word	57886
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,17,209,6,16,4,11
	.byte	'IED',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	451
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'IE_ADDR',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	451
	.byte	15,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR_Bits',0,17,224,6,3
	.word	57955
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,17,227,6,16,4,11
	.byte	'DAC',0,4
	.word	451
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	451
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0_Bits',0,17,231,6,3
	.word	58239
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,17,234,6,16,4,11
	.byte	'CAC',0,4
	.word	451
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	451
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1_Bits',0,17,238,6,3
	.word	58330
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,17,241,6,16,4,11
	.byte	'PSI',0,4
	.word	451
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	451
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2_Bits',0,17,245,6,3
	.word	58421
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,17,248,6,16,4,11
	.byte	'FRE',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	451
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	451
	.byte	17,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR_Bits',0,17,130,7,3
	.word	58512
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,17,133,7,16,4,11
	.byte	'CDC',0,4
	.word	451
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	451
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	451
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'PRS2',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	451
	.byte	8,8,2,35,0,11
	.byte	'USB',0,4
	.word	451
	.byte	8,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSW_Bits',0,17,145,7,3
	.word	58715
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENA_Bits',0,17,148,7,16,4,11
	.byte	'EN0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_ACCENA_Bits',0,17,182,7,3
	.word	58920
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENB_Bits',0,17,185,7,16,4,11
	.byte	'EN32',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_ACCENB_Bits',0,17,219,7,3
	.word	59487
	.byte	10
	.byte	'_Ifx_CPU_RGN_LA_Bits',0,17,222,7,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	451
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_LA_Bits',0,17,226,7,3
	.word	60064
	.byte	10
	.byte	'_Ifx_CPU_RGN_UA_Bits',0,17,229,7,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	451
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_UA_Bits',0,17,233,7,3
	.word	60159
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,17,236,7,16,4,11
	.byte	'ADFLIP',0,4
	.word	451
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	451
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	451
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN_Bits',0,17,242,7,3
	.word	60254
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,17,245,7,16,4,11
	.byte	'EN0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,17,151,8,3
	.word	60382
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,17,154,8,16,4,11
	.byte	'EN32',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,17,188,8,3
	.word	60965
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,17,191,8,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	24,8,2,35,0,11
	.byte	'IODT',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	451
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON_Bits',0,17,196,8,3
	.word	61558
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,17,199,8,16,4,11
	.byte	'EN0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,17,233,8,3
	.word	61676
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,17,236,8,16,4,11
	.byte	'EN32',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,17,142,9,3
	.word	62265
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,17,145,9,16,4,11
	.byte	'EVTA',0,4
	.word	451
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	451
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	451
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT_Bits',0,17,153,9,3
	.word	62864
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,17,156,9,16,4,11
	.byte	'FCDSF',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'TS',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	451
	.byte	3,24,2,35,0,11
	.byte	'ESDIS',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	451
	.byte	7,16,2,35,0,11
	.byte	'U1_IED',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'U1_IOS',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	451
	.byte	6,8,2,35,0,11
	.byte	'BHALT',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	451
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON_Bits',0,17,171,9,3
	.word	63018
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,17,174,9,16,4,11
	.byte	'ASI',0,4
	.word	451
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	451
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,17,178,9,3
	.word	63317
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,17,181,9,16,4,11
	.byte	'TEXP0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	451
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	451
	.byte	15,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON_Bits',0,17,189,9,3
	.word	63415
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,17,192,9,16,4,11
	.byte	'EXTIM_CLASS_EN',0,4
	.word	451
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	451
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,17,196,9,3
	.word	63587
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,17,199,9,16,4,11
	.byte	'ENTRY_CVAL',0,4
	.word	451
	.byte	12,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	451
	.byte	20,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,17,203,9,3
	.word	63716
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,17,206,9,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	4,28,2,35,0,11
	.byte	'ENTRY_LVAL',0,4
	.word	451
	.byte	8,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	451
	.byte	20,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,17,211,9,3
	.word	63846
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,17,214,9,16,4,11
	.byte	'EXIT_CVAL',0,4
	.word	451
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	451
	.byte	8,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,17,218,9,3
	.word	63998
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,17,221,9,16,4,11
	.byte	'reserved_0',0,4
	.word	451
	.byte	4,28,2,35,0,11
	.byte	'EXIT_LVAL',0,4
	.word	451
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	451
	.byte	8,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,17,226,9,3
	.word	64125
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_FCX_Bits',0,17,229,9,16,4,11
	.byte	'EXIT_FCX',0,4
	.word	451
	.byte	20,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	451
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_FCX_Bits',0,17,233,9,3
	.word	64274
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_STAT_Bits',0,17,236,9,16,4,11
	.byte	'EXIT_TIN',0,4
	.word	451
	.byte	8,24,2,35,0,11
	.byte	'EXIT_CLASS',0,4
	.word	451
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	451
	.byte	4,17,2,35,0,11
	.byte	'EXIT_AT',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'ENTRY_TIN',0,4
	.word	451
	.byte	8,8,2,35,0,11
	.byte	'ENTRY_CLASS',0,4
	.word	451
	.byte	3,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	451
	.byte	4,1,2,35,0,11
	.byte	'ENTRY_AT',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_STAT_Bits',0,17,246,9,3
	.word	64388
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,17,249,9,16,4,11
	.byte	'TIMER',0,4
	.word	451
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,17,252,9,3
	.word	64632
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,17,255,9,16,4,11
	.byte	'T0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	451
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,17,138,10,3
	.word	64712
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,17,141,10,16,4,11
	.byte	'ADDR',0,4
	.word	451
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR_Bits',0,17,144,10,3
	.word	64907
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,17,147,10,16,4,11
	.byte	'EVTA',0,4
	.word	451
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	451
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	451
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	451
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	451
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	451
	.byte	3,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT_Bits',0,17,164,10,3
	.word	64980
	.byte	12,17,172,10,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46335
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_A',0,17,177,10,3
	.word	65298
	.byte	12,17,180,10,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46396
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BIV',0,17,185,10,3
	.word	65357
	.byte	12,17,188,10,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46475
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_OMASK',0,17,193,10,3
	.word	65418
	.byte	12,17,196,10,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46613
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_OTAR',0,17,201,10,3
	.word	65485
	.byte	12,17,204,10,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46734
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_RABR',0,17,209,10,3
	.word	65551
	.byte	12,17,212,10,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46910
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BTV',0,17,217,10,3
	.word	65617
	.byte	12,17,220,10,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46996
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT',0,17,225,10,3
	.word	65678
	.byte	12,17,228,10,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47085
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL',0,17,233,10,3
	.word	65740
	.byte	12,17,236,10,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47232
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT',0,17,241,10,3
	.word	65803
	.byte	12,17,244,10,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47361
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CORE_ID',0,17,249,10,3
	.word	65867
	.byte	12,17,252,10,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47461
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L',0,17,129,11,3
	.word	65932
	.byte	12,17,132,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47556
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U',0,17,137,11,3
	.word	65995
	.byte	12,17,140,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47651
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID',0,17,145,11,3
	.word	66058
	.byte	12,17,148,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47761
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE',0,17,153,11,3
	.word	66122
	.byte	12,17,156,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47853
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT',0,17,161,11,3
	.word	66184
	.byte	12,17,164,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48007
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID',0,17,169,11,3
	.word	66247
	.byte	12,17,172,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48101
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_D',0,17,177,11,3
	.word	66311
	.byte	12,17,180,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48164
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DATR',0,17,185,11,3
	.word	66370
	.byte	12,17,188,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48390
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR',0,17,193,11,3
	.word	66432
	.byte	12,17,196,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48605
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR',0,17,201,11,3
	.word	66495
	.byte	12,17,204,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48699
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0',0,17,209,11,3
	.word	66559
	.byte	12,17,212,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48815
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2',0,17,217,11,3
	.word	66622
	.byte	12,17,220,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48916
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCX',0,17,225,11,3
	.word	66685
	.byte	12,17,228,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49009
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD',0,17,233,11,3
	.word	66746
	.byte	12,17,236,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49089
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR',0,17,241,11,3
	.word	66809
	.byte	12,17,244,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49158
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR',0,17,249,11,3
	.word	66872
	.byte	12,17,252,11,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49442
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R',0,17,129,12,3
	.word	66935
	.byte	12,17,132,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50033
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W',0,17,137,12,3
	.word	67015
	.byte	12,17,140,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50624
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R',0,17,145,12,3
	.word	67095
	.byte	12,17,148,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51225
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W',0,17,153,12,3
	.word	67175
	.byte	12,17,156,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51826
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA',0,17,161,12,3
	.word	67255
	.byte	12,17,164,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51941
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA',0,17,169,12,3
	.word	67329
	.byte	12,17,172,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52056
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DMS',0,17,177,12,3
	.word	67403
	.byte	12,17,180,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52149
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE',0,17,185,12,3
	.word	67464
	.byte	12,17,188,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52241
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L',0,17,193,12,3
	.word	67526
	.byte	12,17,196,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52336
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U',0,17,201,12,3
	.word	67589
	.byte	12,17,204,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52431
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE',0,17,209,12,3
	.word	67652
	.byte	12,17,212,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52523
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR',0,17,217,12,3
	.word	67714
	.byte	12,17,220,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52862
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT',0,17,225,12,3
	.word	67776
	.byte	12,17,228,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53016
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FCX',0,17,233,12,3
	.word	67839
	.byte	12,17,236,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53122
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON0',0,17,241,12,3
	.word	67900
	.byte	12,17,244,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53340
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON1',0,17,249,12,3
	.word	67967
	.byte	12,17,252,12,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53531
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON2',0,17,129,13,3
	.word	68034
	.byte	12,17,132,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53831
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON3',0,17,137,13,3
	.word	68101
	.byte	12,17,140,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54136
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON4',0,17,145,13,3
	.word	68168
	.byte	12,17,148,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54237
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,17,153,13,3
	.word	68235
	.byte	12,17,156,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54586
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,17,161,13,3
	.word	68305
	.byte	12,17,164,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54746
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,17,169,13,3
	.word	68375
	.byte	12,17,172,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54827
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,17,177,13,3
	.word	68444
	.byte	12,17,180,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54914
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,17,185,13,3
	.word	68515
	.byte	12,17,188,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55001
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,17,193,13,3
	.word	68586
	.byte	12,17,196,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55088
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT',0,17,201,13,3
	.word	68657
	.byte	12,17,204,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55179
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICR',0,17,209,13,3
	.word	68719
	.byte	12,17,212,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55321
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ISP',0,17,217,13,3
	.word	68780
	.byte	12,17,220,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55387
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_KRST0',0,17,225,13,3
	.word	68841
	.byte	12,17,228,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55498
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_KRST1',0,17,233,13,3
	.word	68904
	.byte	12,17,236,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55590
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_KRSTCLR',0,17,241,13,3
	.word	68967
	.byte	12,17,244,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55686
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_LCX',0,17,249,13,3
	.word	69032
	.byte	12,17,252,13,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55792
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R',0,17,129,14,3
	.word	69093
	.byte	12,17,132,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56375
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R',0,17,137,14,3
	.word	69169
	.byte	12,17,140,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56968
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT',0,17,145,14,3
	.word	69245
	.byte	12,17,148,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57061
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT',0,17,153,14,3
	.word	69308
	.byte	12,17,156,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57154
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT',0,17,161,14,3
	.word	69371
	.byte	12,17,164,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57247
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_OSEL',0,17,169,14,3
	.word	69434
	.byte	12,17,172,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57320
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PC',0,17,177,14,3
	.word	69496
	.byte	12,17,180,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57405
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0',0,17,185,14,3
	.word	69556
	.byte	12,17,188,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57521
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1',0,17,193,14,3
	.word	69619
	.byte	12,17,196,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57632
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2',0,17,201,14,3
	.word	69682
	.byte	12,17,204,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57733
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI',0,17,209,14,3
	.word	69745
	.byte	12,17,212,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57886
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR',0,17,217,14,3
	.word	69807
	.byte	12,17,220,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57955
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR',0,17,225,14,3
	.word	69870
	.byte	12,17,228,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58239
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0',0,17,233,14,3
	.word	69933
	.byte	12,17,236,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58330
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1',0,17,241,14,3
	.word	69995
	.byte	12,17,244,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58421
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2',0,17,249,14,3
	.word	70057
	.byte	12,17,252,14,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58512
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR',0,17,129,15,3
	.word	70119
	.byte	12,17,132,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58715
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSW',0,17,137,15,3
	.word	70181
	.byte	12,17,140,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58920
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_ACCENA',0,17,145,15,3
	.word	70242
	.byte	12,17,148,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59487
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_ACCENB',0,17,153,15,3
	.word	70310
	.byte	12,17,156,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60064
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_LA',0,17,161,15,3
	.word	70378
	.byte	12,17,164,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60159
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_UA',0,17,169,15,3
	.word	70442
	.byte	12,17,172,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60254
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN',0,17,177,15,3
	.word	70506
	.byte	12,17,180,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60382
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W',0,17,185,15,3
	.word	70569
	.byte	12,17,188,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60965
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W',0,17,193,15,3
	.word	70645
	.byte	12,17,196,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61558
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON',0,17,201,15,3
	.word	70721
	.byte	12,17,204,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61676
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R',0,17,209,15,3
	.word	70785
	.byte	12,17,212,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62265
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R',0,17,217,15,3
	.word	70864
	.byte	12,17,220,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62864
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT',0,17,225,15,3
	.word	70943
	.byte	12,17,228,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63018
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON',0,17,233,15,3
	.word	71006
	.byte	12,17,236,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63317
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI',0,17,241,15,3
	.word	71070
	.byte	12,17,244,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63415
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON',0,17,249,15,3
	.word	71136
	.byte	12,17,252,15,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63587
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN',0,17,129,16,3
	.word	71201
	.byte	12,17,132,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63716
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL',0,17,137,16,3
	.word	71277
	.byte	12,17,140,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63846
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL',0,17,145,16,3
	.word	71355
	.byte	12,17,148,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63998
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL',0,17,153,16,3
	.word	71433
	.byte	12,17,156,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64125
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL',0,17,161,16,3
	.word	71510
	.byte	12,17,164,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64274
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_FCX',0,17,169,16,3
	.word	71587
	.byte	12,17,172,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64388
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_STAT',0,17,177,16,3
	.word	71658
	.byte	12,17,180,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64632
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER',0,17,185,16,3
	.word	71730
	.byte	12,17,188,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64712
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC',0,17,193,16,3
	.word	71797
	.byte	12,17,196,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64907
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR',0,17,201,16,3
	.word	71863
	.byte	12,17,204,16,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64980
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT',0,17,209,16,3
	.word	71927
	.byte	10
	.byte	'_Ifx_CPU_RGN',0,17,221,16,25,16,13
	.byte	'LA',0
	.word	70378
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	70442
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	70242
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	70310
	.byte	4,2,35,12,0,14
	.word	71991
	.byte	32
	.byte	'Ifx_CPU_RGN',0,17,227,16,3
	.word	72067
	.byte	10
	.byte	'_Ifx_CPU_BLK',0,17,242,16,25,12,13
	.byte	'RABR',0
	.word	65551
	.byte	4,2,35,0,13
	.byte	'OTAR',0
	.word	65485
	.byte	4,2,35,4,13
	.byte	'OMASK',0
	.word	65418
	.byte	4,2,35,8,0,14
	.word	72093
	.byte	32
	.byte	'Ifx_CPU_BLK',0,17,247,16,3
	.word	72156
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP',0,17,134,17,25,28,13
	.byte	'CON',0
	.word	68235
	.byte	4,2,35,0,13
	.byte	'PC',0
	.word	68375
	.byte	4,2,35,4,13
	.byte	'OPC',0
	.word	68305
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3102
	.byte	4,2,35,12,13
	.byte	'SRC1',0
	.word	68444
	.byte	4,2,35,16,13
	.byte	'SRC2',0
	.word	68515
	.byte	4,2,35,20,13
	.byte	'SRC3',0
	.word	68586
	.byte	4,2,35,24,0,14
	.word	72182
	.byte	32
	.byte	'Ifx_CPU_FPU_TRAP',0,17,143,17,3
	.word	72307
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,17,158,17,25,8,13
	.byte	'L',0
	.word	67526
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	67589
	.byte	4,2,35,4,0,14
	.word	72338
	.byte	32
	.byte	'Ifx_CPU_DPR',0,17,162,17,3
	.word	72380
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,17,177,17,25,8,13
	.byte	'L',0
	.word	65932
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	65995
	.byte	4,2,35,4,0,14
	.word	72406
	.byte	32
	.byte	'Ifx_CPU_CPR',0,17,181,17,3
	.word	72448
	.byte	18,12
	.word	71730
	.byte	19,2,0,10
	.byte	'_Ifx_CPU_TPS',0,17,196,17,25,16,13
	.byte	'CON',0
	.word	71136
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	72474
	.byte	12,2,35,4,0,14
	.word	72483
	.byte	32
	.byte	'Ifx_CPU_TPS',0,17,200,17,3
	.word	72531
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM',0,17,215,17,25,28,13
	.byte	'ENTRY_LVAL',0
	.word	71355
	.byte	4,2,35,0,13
	.byte	'ENTRY_CVAL',0
	.word	71277
	.byte	4,2,35,4,13
	.byte	'EXIT_LVAL',0
	.word	71510
	.byte	4,2,35,8,13
	.byte	'EXIT_CVAL',0
	.word	71433
	.byte	4,2,35,12,13
	.byte	'CLASS_EN',0
	.word	71201
	.byte	4,2,35,16,13
	.byte	'STAT',0
	.word	71658
	.byte	4,2,35,20,13
	.byte	'FCX',0
	.word	71587
	.byte	4,2,35,24,0,14
	.word	72557
	.byte	32
	.byte	'Ifx_CPU_TPS_EXTIM',0,17,224,17,3
	.word	72706
	.byte	10
	.byte	'_Ifx_CPU_TR',0,17,239,17,25,8,13
	.byte	'EVT',0
	.word	71927
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	71863
	.byte	4,2,35,4,0,14
	.word	72738
	.byte	32
	.byte	'Ifx_CPU_TR',0,17,243,17,3
	.word	72783
	.byte	18,128,34
	.word	603
	.byte	19,255,33,0,18,236,253,2
	.word	603
	.byte	19,235,253,2,0,18,244,31
	.word	603
	.byte	19,243,31,0,18,128,1
	.word	71991
	.byte	19,7,0,14
	.word	72843
	.byte	18,232,1
	.word	603
	.byte	19,231,1,0,18,128,48
	.word	603
	.byte	19,255,47,0,18,128,3
	.word	72093
	.byte	19,31,0,14
	.word	72880
	.byte	18,160,39
	.word	603
	.byte	19,159,39,0,18,208,223,1
	.word	603
	.byte	19,207,223,1,0,18,248,1
	.word	603
	.byte	19,247,1,0,18,244,29
	.word	603
	.byte	19,243,29,0,18,188,3
	.word	603
	.byte	19,187,3,0,18,232,3
	.word	603
	.byte	19,231,3,0,18,252,23
	.word	603
	.byte	19,251,23,0,14
	.word	72182
	.byte	18,228,63
	.word	603
	.byte	19,227,63,0,18,144,1
	.word	72338
	.byte	19,17,0,14
	.word	72990
	.byte	18,240,30
	.word	603
	.byte	19,239,30,0,18,80
	.word	72406
	.byte	19,9,0,14
	.word	73016
	.byte	18,176,31
	.word	603
	.byte	19,175,31,0,18,152,7
	.word	603
	.byte	19,151,7,0,14
	.word	72483
	.byte	18,48
	.word	603
	.byte	19,47,0,14
	.word	72557
	.byte	18,164,23
	.word	603
	.byte	19,163,23,0,18,64
	.word	72738
	.byte	19,7,0,14
	.word	73082
	.byte	18,192,23
	.word	603
	.byte	19,191,23,0,18,28
	.word	603
	.byte	19,27,0,18,180,1
	.word	603
	.byte	19,179,1,0,18,172,1
	.word	603
	.byte	19,171,1,0,18,64
	.word	66311
	.byte	19,15,0,18,64
	.word	65298
	.byte	19,15,0,10
	.byte	'_Ifx_CPU',0,17,130,18,25,128,128,8,13
	.byte	'reserved_0',0
	.word	72808
	.byte	128,34,2,35,0,13
	.byte	'FLASHCON0',0
	.word	67900
	.byte	4,3,35,128,34,13
	.byte	'FLASHCON1',0
	.word	67967
	.byte	4,3,35,132,34,13
	.byte	'FLASHCON2',0
	.word	68034
	.byte	4,3,35,136,34,13
	.byte	'FLASHCON3',0
	.word	68101
	.byte	4,3,35,140,34,13
	.byte	'FLASHCON4',0
	.word	68168
	.byte	4,3,35,144,34,13
	.byte	'reserved_1114',0
	.word	72819
	.byte	236,253,2,3,35,148,34,13
	.byte	'KRST0',0
	.word	68841
	.byte	4,4,35,128,160,3,13
	.byte	'KRST1',0
	.word	68904
	.byte	4,4,35,132,160,3,13
	.byte	'KRSTCLR',0
	.word	68967
	.byte	4,4,35,136,160,3,13
	.byte	'reserved_D00C',0
	.word	72832
	.byte	244,31,4,35,140,160,3,13
	.byte	'RGN',0
	.word	72853
	.byte	128,1,4,35,128,192,3,13
	.byte	'reserved_E080',0
	.word	4922
	.byte	8,4,35,128,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R0',0
	.word	70785
	.byte	4,4,35,136,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R0',0
	.word	70864
	.byte	4,4,35,140,193,3,13
	.byte	'reserved_E090',0
	.word	4922
	.byte	8,4,35,144,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R1',0
	.word	70785
	.byte	4,4,35,152,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R1',0
	.word	70864
	.byte	4,4,35,156,193,3,13
	.byte	'reserved_E0A0',0
	.word	4922
	.byte	8,4,35,160,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R2',0
	.word	70785
	.byte	4,4,35,168,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R2',0
	.word	70864
	.byte	4,4,35,172,193,3,13
	.byte	'reserved_E0B0',0
	.word	4922
	.byte	8,4,35,176,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R3',0
	.word	70785
	.byte	4,4,35,184,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R3',0
	.word	70864
	.byte	4,4,35,188,193,3,13
	.byte	'reserved_E0C0',0
	.word	4922
	.byte	8,4,35,192,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R4',0
	.word	70785
	.byte	4,4,35,200,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R4',0
	.word	70864
	.byte	4,4,35,204,193,3,13
	.byte	'reserved_E0D0',0
	.word	4922
	.byte	8,4,35,208,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R5',0
	.word	70785
	.byte	4,4,35,216,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R5',0
	.word	70864
	.byte	4,4,35,220,193,3,13
	.byte	'reserved_E0E0',0
	.word	4922
	.byte	8,4,35,224,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R6',0
	.word	70785
	.byte	4,4,35,232,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R6',0
	.word	70864
	.byte	4,4,35,236,193,3,13
	.byte	'reserved_E0F0',0
	.word	4922
	.byte	8,4,35,240,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R7',0
	.word	70785
	.byte	4,4,35,248,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R7',0
	.word	70864
	.byte	4,4,35,252,193,3,13
	.byte	'SFR_SPROT_ACCENA_W',0
	.word	70569
	.byte	4,4,35,128,194,3,13
	.byte	'SFR_SPROT_ACCENB_W',0
	.word	70645
	.byte	4,4,35,132,194,3,13
	.byte	'reserved_E108',0
	.word	4922
	.byte	8,4,35,136,194,3,13
	.byte	'LPB_SPROT_ACCENA_R',0
	.word	69093
	.byte	4,4,35,144,194,3,13
	.byte	'LPB_SPROT_ACCENB_R',0
	.word	69169
	.byte	4,4,35,148,194,3,13
	.byte	'reserved_E118',0
	.word	72858
	.byte	232,1,4,35,152,194,3,13
	.byte	'DLMU_SPROT_RGNLA0',0
	.word	67255
	.byte	4,4,35,128,196,3,13
	.byte	'DLMU_SPROT_RGNUA0',0
	.word	67329
	.byte	4,4,35,132,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W0',0
	.word	67015
	.byte	4,4,35,136,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W0',0
	.word	67175
	.byte	4,4,35,140,196,3,13
	.byte	'DLMU_SPROT_RGNLA1',0
	.word	67255
	.byte	4,4,35,144,196,3,13
	.byte	'DLMU_SPROT_RGNUA1',0
	.word	67329
	.byte	4,4,35,148,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W1',0
	.word	67015
	.byte	4,4,35,152,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W1',0
	.word	67175
	.byte	4,4,35,156,196,3,13
	.byte	'DLMU_SPROT_RGNLA2',0
	.word	67255
	.byte	4,4,35,160,196,3,13
	.byte	'DLMU_SPROT_RGNUA2',0
	.word	67329
	.byte	4,4,35,164,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W2',0
	.word	67015
	.byte	4,4,35,168,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W2',0
	.word	67175
	.byte	4,4,35,172,196,3,13
	.byte	'DLMU_SPROT_RGNLA3',0
	.word	67255
	.byte	4,4,35,176,196,3,13
	.byte	'DLMU_SPROT_RGNUA3',0
	.word	67329
	.byte	4,4,35,180,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W3',0
	.word	67015
	.byte	4,4,35,184,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W3',0
	.word	67175
	.byte	4,4,35,188,196,3,13
	.byte	'DLMU_SPROT_RGNLA4',0
	.word	67255
	.byte	4,4,35,192,196,3,13
	.byte	'DLMU_SPROT_RGNUA4',0
	.word	67329
	.byte	4,4,35,196,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W4',0
	.word	67015
	.byte	4,4,35,200,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W4',0
	.word	67175
	.byte	4,4,35,204,196,3,13
	.byte	'DLMU_SPROT_RGNLA5',0
	.word	67255
	.byte	4,4,35,208,196,3,13
	.byte	'DLMU_SPROT_RGNUA5',0
	.word	67329
	.byte	4,4,35,212,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W5',0
	.word	67015
	.byte	4,4,35,216,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W5',0
	.word	67175
	.byte	4,4,35,220,196,3,13
	.byte	'DLMU_SPROT_RGNLA6',0
	.word	67255
	.byte	4,4,35,224,196,3,13
	.byte	'DLMU_SPROT_RGNUA6',0
	.word	67329
	.byte	4,4,35,228,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W6',0
	.word	67015
	.byte	4,4,35,232,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W6',0
	.word	67175
	.byte	4,4,35,236,196,3,13
	.byte	'DLMU_SPROT_RGNLA7',0
	.word	67255
	.byte	4,4,35,240,196,3,13
	.byte	'DLMU_SPROT_RGNUA7',0
	.word	67329
	.byte	4,4,35,244,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W7',0
	.word	67015
	.byte	4,4,35,248,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W7',0
	.word	67175
	.byte	4,4,35,252,196,3,13
	.byte	'reserved_E280',0
	.word	4922
	.byte	8,4,35,128,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R0',0
	.word	66935
	.byte	4,4,35,136,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R0',0
	.word	67095
	.byte	4,4,35,140,197,3,13
	.byte	'reserved_E290',0
	.word	4922
	.byte	8,4,35,144,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R1',0
	.word	66935
	.byte	4,4,35,152,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R1',0
	.word	67095
	.byte	4,4,35,156,197,3,13
	.byte	'reserved_E2A0',0
	.word	4922
	.byte	8,4,35,160,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R2',0
	.word	66935
	.byte	4,4,35,168,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R2',0
	.word	67095
	.byte	4,4,35,172,197,3,13
	.byte	'reserved_E2B0',0
	.word	4922
	.byte	8,4,35,176,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R3',0
	.word	66935
	.byte	4,4,35,184,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R3',0
	.word	67095
	.byte	4,4,35,188,197,3,13
	.byte	'reserved_E2C0',0
	.word	4922
	.byte	8,4,35,192,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R4',0
	.word	66935
	.byte	4,4,35,200,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R4',0
	.word	67095
	.byte	4,4,35,204,197,3,13
	.byte	'reserved_E2D0',0
	.word	4922
	.byte	8,4,35,208,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R5',0
	.word	66935
	.byte	4,4,35,216,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R5',0
	.word	67095
	.byte	4,4,35,220,197,3,13
	.byte	'reserved_E2E0',0
	.word	4922
	.byte	8,4,35,224,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R6',0
	.word	66935
	.byte	4,4,35,232,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R6',0
	.word	67095
	.byte	4,4,35,236,197,3,13
	.byte	'reserved_E2F0',0
	.word	4922
	.byte	8,4,35,240,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R7',0
	.word	66935
	.byte	4,4,35,248,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R7',0
	.word	67095
	.byte	4,4,35,252,197,3,13
	.byte	'reserved_E300',0
	.word	72869
	.byte	128,48,4,35,128,198,3,13
	.byte	'OSEL',0
	.word	69434
	.byte	4,4,35,128,246,3,13
	.byte	'reserved_FB04',0
	.word	5262
	.byte	12,4,35,132,246,3,13
	.byte	'BLK',0
	.word	72890
	.byte	128,3,4,35,144,246,3,13
	.byte	'reserved_FC90',0
	.word	72895
	.byte	160,39,4,35,144,249,3,13
	.byte	'SEGEN',0
	.word	70506
	.byte	4,4,35,176,160,4,13
	.byte	'reserved_11034',0
	.word	72906
	.byte	208,223,1,4,35,180,160,4,13
	.byte	'TASK_ASI',0
	.word	71070
	.byte	4,4,35,132,128,6,13
	.byte	'reserved_18008',0
	.word	72919
	.byte	248,1,4,35,136,128,6,13
	.byte	'PMA0',0
	.word	69933
	.byte	4,4,35,128,130,6,13
	.byte	'PMA1',0
	.word	69995
	.byte	4,4,35,132,130,6,13
	.byte	'PMA2',0
	.word	70057
	.byte	4,4,35,136,130,6,13
	.byte	'reserved_1810C',0
	.word	72930
	.byte	244,29,4,35,140,130,6,13
	.byte	'DCON2',0
	.word	66622
	.byte	4,4,35,128,160,6,13
	.byte	'reserved_19004',0
	.word	4922
	.byte	8,4,35,132,160,6,13
	.byte	'SMACON',0
	.word	70721
	.byte	4,4,35,140,160,6,13
	.byte	'DSTR',0
	.word	67714
	.byte	4,4,35,144,160,6,13
	.byte	'reserved_19014',0
	.word	3102
	.byte	4,4,35,148,160,6,13
	.byte	'DATR',0
	.word	66370
	.byte	4,4,35,152,160,6,13
	.byte	'DEADD',0
	.word	66746
	.byte	4,4,35,156,160,6,13
	.byte	'DIEAR',0
	.word	66809
	.byte	4,4,35,160,160,6,13
	.byte	'DIETR',0
	.word	66872
	.byte	4,4,35,164,160,6,13
	.byte	'reserved_19028',0
	.word	4293
	.byte	24,4,35,168,160,6,13
	.byte	'DCON0',0
	.word	66559
	.byte	4,4,35,192,160,6,13
	.byte	'reserved_19044',0
	.word	72941
	.byte	188,3,4,35,196,160,6,13
	.byte	'PSTR',0
	.word	70119
	.byte	4,4,35,128,164,6,13
	.byte	'PCON1',0
	.word	69619
	.byte	4,4,35,132,164,6,13
	.byte	'PCON2',0
	.word	69682
	.byte	4,4,35,136,164,6,13
	.byte	'PCON0',0
	.word	69556
	.byte	4,4,35,140,164,6,13
	.byte	'PIEAR',0
	.word	69807
	.byte	4,4,35,144,164,6,13
	.byte	'PIETR',0
	.word	69870
	.byte	4,4,35,148,164,6,13
	.byte	'reserved_19218',0
	.word	72952
	.byte	232,3,4,35,152,164,6,13
	.byte	'COMPAT',0
	.word	65803
	.byte	4,4,35,128,168,6,13
	.byte	'reserved_19404',0
	.word	72963
	.byte	252,23,4,35,132,168,6,13
	.byte	'FPU_TRAP',0
	.word	72974
	.byte	28,4,35,128,192,6,13
	.byte	'reserved_1A01C',0
	.word	72979
	.byte	228,63,4,35,156,192,6,13
	.byte	'DPR',0
	.word	73000
	.byte	144,1,4,35,128,128,7,13
	.byte	'reserved_1C090',0
	.word	73005
	.byte	240,30,4,35,144,129,7,13
	.byte	'CPR',0
	.word	73025
	.byte	80,4,35,128,160,7,13
	.byte	'reserved_1D050',0
	.word	73030
	.byte	176,31,4,35,208,160,7,13
	.byte	'CPXE_0',0
	.word	66122
	.byte	4,4,35,128,192,7,13
	.byte	'CPXE_1',0
	.word	66122
	.byte	4,4,35,132,192,7,13
	.byte	'CPXE_2',0
	.word	66122
	.byte	4,4,35,136,192,7,13
	.byte	'CPXE_3',0
	.word	66122
	.byte	4,4,35,140,192,7,13
	.byte	'DPRE_0',0
	.word	67464
	.byte	4,4,35,144,192,7,13
	.byte	'DPRE_1',0
	.word	67464
	.byte	4,4,35,148,192,7,13
	.byte	'DPRE_2',0
	.word	67464
	.byte	4,4,35,152,192,7,13
	.byte	'DPRE_3',0
	.word	67464
	.byte	4,4,35,156,192,7,13
	.byte	'DPWE_0',0
	.word	67652
	.byte	4,4,35,160,192,7,13
	.byte	'DPWE_1',0
	.word	67652
	.byte	4,4,35,164,192,7,13
	.byte	'DPWE_2',0
	.word	67652
	.byte	4,4,35,168,192,7,13
	.byte	'DPWE_3',0
	.word	67652
	.byte	4,4,35,172,192,7,13
	.byte	'reserved_1E030',0
	.word	10611
	.byte	16,4,35,176,192,7,13
	.byte	'CPXE_4',0
	.word	66122
	.byte	4,4,35,192,192,7,13
	.byte	'CPXE_5',0
	.word	66122
	.byte	4,4,35,196,192,7,13
	.byte	'reserved_1E048',0
	.word	4922
	.byte	8,4,35,200,192,7,13
	.byte	'DPRE_4',0
	.word	67464
	.byte	4,4,35,208,192,7,13
	.byte	'DPRE_5',0
	.word	67464
	.byte	4,4,35,212,192,7,13
	.byte	'reserved_1E058',0
	.word	4922
	.byte	8,4,35,216,192,7,13
	.byte	'DPWE_4',0
	.word	67652
	.byte	4,4,35,224,192,7,13
	.byte	'DPWE_5',0
	.word	67652
	.byte	4,4,35,228,192,7,13
	.byte	'reserved_1E068',0
	.word	73041
	.byte	152,7,4,35,232,192,7,13
	.byte	'TPS',0
	.word	73052
	.byte	16,4,35,128,200,7,13
	.byte	'reserved_1E410',0
	.word	73057
	.byte	48,4,35,144,200,7,13
	.byte	'TPS_EXTIM',0
	.word	73066
	.byte	28,4,35,192,200,7,13
	.byte	'reserved_1E45C',0
	.word	73071
	.byte	164,23,4,35,220,200,7,13
	.byte	'TR',0
	.word	73091
	.byte	64,4,35,128,224,7,13
	.byte	'reserved_1F040',0
	.word	73096
	.byte	192,23,4,35,192,224,7,13
	.byte	'CCTRL',0
	.word	65740
	.byte	4,4,35,128,248,7,13
	.byte	'CCNT',0
	.word	65678
	.byte	4,4,35,132,248,7,13
	.byte	'ICNT',0
	.word	68657
	.byte	4,4,35,136,248,7,13
	.byte	'M1CNT',0
	.word	69245
	.byte	4,4,35,140,248,7,13
	.byte	'M2CNT',0
	.word	69308
	.byte	4,4,35,144,248,7,13
	.byte	'M3CNT',0
	.word	69371
	.byte	4,4,35,148,248,7,13
	.byte	'reserved_1FC18',0
	.word	72858
	.byte	232,1,4,35,152,248,7,13
	.byte	'DBGSR',0
	.word	66432
	.byte	4,4,35,128,250,7,13
	.byte	'reserved_1FD04',0
	.word	3102
	.byte	4,4,35,132,250,7,13
	.byte	'EXEVT',0
	.word	67776
	.byte	4,4,35,136,250,7,13
	.byte	'CREVT',0
	.word	66184
	.byte	4,4,35,140,250,7,13
	.byte	'SWEVT',0
	.word	70943
	.byte	4,4,35,144,250,7,13
	.byte	'reserved_1FD14',0
	.word	73107
	.byte	28,4,35,148,250,7,13
	.byte	'TRIG_ACC',0
	.word	71797
	.byte	4,4,35,176,250,7,13
	.byte	'reserved_1FD34',0
	.word	5262
	.byte	12,4,35,180,250,7,13
	.byte	'DMS',0
	.word	67403
	.byte	4,4,35,192,250,7,13
	.byte	'DCX',0
	.word	66685
	.byte	4,4,35,196,250,7,13
	.byte	'DBGTCR',0
	.word	66495
	.byte	4,4,35,200,250,7,13
	.byte	'reserved_1FD4C',0
	.word	73116
	.byte	180,1,4,35,204,250,7,13
	.byte	'PCXI',0
	.word	69745
	.byte	4,4,35,128,252,7,13
	.byte	'PSW',0
	.word	70181
	.byte	4,4,35,132,252,7,13
	.byte	'PC',0
	.word	69496
	.byte	4,4,35,136,252,7,13
	.byte	'reserved_1FE0C',0
	.word	4922
	.byte	8,4,35,140,252,7,13
	.byte	'SYSCON',0
	.word	71006
	.byte	4,4,35,148,252,7,13
	.byte	'CPU_ID',0
	.word	66058
	.byte	4,4,35,152,252,7,13
	.byte	'CORE_ID',0
	.word	65867
	.byte	4,4,35,156,252,7,13
	.byte	'BIV',0
	.word	65357
	.byte	4,4,35,160,252,7,13
	.byte	'BTV',0
	.word	65617
	.byte	4,4,35,164,252,7,13
	.byte	'ISP',0
	.word	68780
	.byte	4,4,35,168,252,7,13
	.byte	'ICR',0
	.word	68719
	.byte	4,4,35,172,252,7,13
	.byte	'reserved_1FE30',0
	.word	4922
	.byte	8,4,35,176,252,7,13
	.byte	'FCX',0
	.word	67839
	.byte	4,4,35,184,252,7,13
	.byte	'LCX',0
	.word	69032
	.byte	4,4,35,188,252,7,13
	.byte	'reserved_1FE40',0
	.word	10611
	.byte	16,4,35,192,252,7,13
	.byte	'CUS_ID',0
	.word	66247
	.byte	4,4,35,208,252,7,13
	.byte	'reserved_1FE54',0
	.word	73127
	.byte	172,1,4,35,212,252,7,13
	.byte	'D',0
	.word	73138
	.byte	64,4,35,128,254,7,13
	.byte	'reserved_1FF40',0
	.word	14697
	.byte	64,4,35,192,254,7,13
	.byte	'A',0
	.word	73147
	.byte	64,4,35,128,255,7,13
	.byte	'reserved_1FFC0',0
	.word	14697
	.byte	64,4,35,192,255,7,0,14
	.word	73156
	.byte	32
	.byte	'Ifx_CPU',0,17,210,19,3
	.word	78254
	.byte	15,6,124,9,1,16
	.byte	'IfxCpu_Id_0',0,0,16
	.byte	'IfxCpu_Id_1',0,1,16
	.byte	'IfxCpu_Id_2',0,2,16
	.byte	'IfxCpu_Id_3',0,3,16
	.byte	'IfxCpu_Id_4',0,4,16
	.byte	'IfxCpu_Id_6',0,6,16
	.byte	'IfxCpu_Id_none',0,7,0,32
	.byte	'IfxCpu_Id',0,6,133,1,3
	.word	78276
	.byte	32
	.byte	'IfxCpu_ResourceCpu',0,6,170,1,3
	.word	1617
	.byte	10
	.byte	'_Ifx_SRC_SRCR_Bits',0,18,68,16,4,11
	.byte	'SRPN',0,1
	.word	603
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	603
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	603
	.byte	3,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	603
	.byte	2,0,2,35,1,11
	.byte	'ECC',0,1
	.word	603
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	603
	.byte	3,0,2,35,2,11
	.byte	'SRR',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	603
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	603
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SRC_SRCR_Bits',0,18,85,3
	.word	78430
	.byte	12,18,93,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78430
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SRC_SRCR',0,18,98,3
	.word	78746
	.byte	10
	.byte	'_Ifx_SRC_CPU_CPU',0,18,110,25,4,13
	.byte	'SB',0
	.word	78746
	.byte	4,2,35,0,0,14
	.word	78806
	.byte	32
	.byte	'Ifx_SRC_CPU_CPU',0,18,113,3
	.word	78841
	.byte	18,24
	.word	78806
	.byte	19,5,0,14
	.word	78870
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,18,128,1,25,24,13
	.byte	'CPU',0
	.word	78879
	.byte	24,2,35,0,0,14
	.word	78884
	.byte	32
	.byte	'Ifx_SRC_CPU',0,18,131,1,3
	.word	78917
	.byte	10
	.byte	'_Ifx_SRC_AGBT_AGBT',0,18,146,1,25,4,13
	.byte	'SR',0
	.word	78746
	.byte	4,2,35,0,0,14
	.word	78943
	.byte	32
	.byte	'Ifx_SRC_AGBT_AGBT',0,18,149,1,3
	.word	78981
	.byte	18,4
	.word	78943
	.byte	19,0,0,14
	.word	79013
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,18,164,1,25,4,13
	.byte	'AGBT',0
	.word	79022
	.byte	4,2,35,0,0,14
	.word	79027
	.byte	32
	.byte	'Ifx_SRC_AGBT',0,18,167,1,3
	.word	79062
	.byte	10
	.byte	'_Ifx_SRC_XBAR_XBAR',0,18,182,1,25,4,13
	.byte	'SR',0
	.word	78746
	.byte	4,2,35,0,0,14
	.word	79089
	.byte	32
	.byte	'Ifx_SRC_XBAR_XBAR',0,18,185,1,3
	.word	79127
	.byte	18,12
	.word	79089
	.byte	19,2,0,14
	.word	79159
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,18,200,1,25,12,13
	.byte	'XBAR',0
	.word	79168
	.byte	12,2,35,0,0,14
	.word	79173
	.byte	32
	.byte	'Ifx_SRC_XBAR',0,18,203,1,3
	.word	79208
	.byte	18,8
	.word	78746
	.byte	19,1,0,10
	.byte	'_Ifx_SRC_CERBERUS_CERBERUS',0,18,218,1,25,8,13
	.byte	'SR',0
	.word	79235
	.byte	8,2,35,0,0,14
	.word	79244
	.byte	32
	.byte	'Ifx_SRC_CERBERUS_CERBERUS',0,18,221,1,3
	.word	79290
	.byte	14
	.word	79244
	.byte	10
	.byte	'_Ifx_SRC_CERBERUS',0,18,236,1,25,8,13
	.byte	'CERBERUS',0
	.word	79330
	.byte	8,2,35,0,0,14
	.word	79335
	.byte	32
	.byte	'Ifx_SRC_CERBERUS',0,18,239,1,3
	.word	79378
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN_ASCLIN',0,18,254,1,25,12,13
	.byte	'TX',0
	.word	78746
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	78746
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	78746
	.byte	4,2,35,8,0,14
	.word	79409
	.byte	32
	.byte	'Ifx_SRC_ASCLIN_ASCLIN',0,18,131,2,3
	.word	79476
	.byte	18,144,1
	.word	79409
	.byte	19,11,0,14
	.word	79512
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,18,146,2,25,144,1,13
	.byte	'ASCLIN',0
	.word	79522
	.byte	144,1,2,35,0,0,14
	.word	79527
	.byte	32
	.byte	'Ifx_SRC_ASCLIN',0,18,149,2,3
	.word	79568
	.byte	10
	.byte	'_Ifx_SRC_QSPI_QSPI',0,18,164,2,25,20,13
	.byte	'TX',0
	.word	78746
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	78746
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	78746
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	78746
	.byte	4,2,35,12,13
	.byte	'U',0
	.word	78746
	.byte	4,2,35,16,0,14
	.word	79597
	.byte	32
	.byte	'Ifx_SRC_QSPI_QSPI',0,18,171,2,3
	.word	79683
	.byte	18,120
	.word	79597
	.byte	19,5,0,14
	.word	79715
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,18,186,2,25,120,13
	.byte	'QSPI',0
	.word	79724
	.byte	120,2,35,0,0,14
	.word	79729
	.byte	32
	.byte	'Ifx_SRC_QSPI',0,18,189,2,3
	.word	79764
	.byte	10
	.byte	'_Ifx_SRC_HSCT_HSCT',0,18,204,2,25,4,13
	.byte	'SR',0
	.word	78746
	.byte	4,2,35,0,0,14
	.word	79791
	.byte	32
	.byte	'Ifx_SRC_HSCT_HSCT',0,18,207,2,3
	.word	79829
	.byte	18,8
	.word	79791
	.byte	19,1,0,14
	.word	79861
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,18,222,2,25,8,13
	.byte	'HSCT',0
	.word	79870
	.byte	8,2,35,0,0,14
	.word	79875
	.byte	32
	.byte	'Ifx_SRC_HSCT',0,18,225,2,3
	.word	79910
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL_CH',0,18,240,2,25,16,13
	.byte	'COK',0
	.word	78746
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	78746
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	78746
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	78746
	.byte	4,2,35,12,0,14
	.word	79937
	.byte	32
	.byte	'Ifx_SRC_HSSL_HSSL_CH',0,18,246,2,3
	.word	80018
	.byte	18,64
	.word	79937
	.byte	19,3,0,14
	.word	80053
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL',0,18,133,3,25,68,13
	.byte	'CH',0
	.word	80062
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	78746
	.byte	4,2,35,64,0,14
	.word	80067
	.byte	32
	.byte	'Ifx_SRC_HSSL_HSSL',0,18,137,3,3
	.word	80118
	.byte	18,136,1
	.word	80067
	.byte	19,1,0,14
	.word	80150
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,18,152,3,25,136,1,13
	.byte	'HSSL',0
	.word	80160
	.byte	136,1,2,35,0,0,14
	.word	80165
	.byte	32
	.byte	'Ifx_SRC_HSSL',0,18,155,3,3
	.word	80202
	.byte	10
	.byte	'_Ifx_SRC_I2C_I2C',0,18,170,3,25,16,13
	.byte	'DTR',0
	.word	78746
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	78746
	.byte	4,2,35,4,13
	.byte	'P',0
	.word	78746
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3102
	.byte	4,2,35,12,0,14
	.word	80229
	.byte	32
	.byte	'Ifx_SRC_I2C_I2C',0,18,176,3,3
	.word	80310
	.byte	18,32
	.word	80229
	.byte	19,1,0,14
	.word	80340
	.byte	10
	.byte	'_Ifx_SRC_I2C',0,18,191,3,25,32,13
	.byte	'I2C',0
	.word	80349
	.byte	32,2,35,0,0,14
	.word	80354
	.byte	32
	.byte	'Ifx_SRC_I2C',0,18,194,3,3
	.word	80387
	.byte	10
	.byte	'_Ifx_SRC_SENT_SENT',0,18,209,3,25,4,13
	.byte	'SR',0
	.word	78746
	.byte	4,2,35,0,0,14
	.word	80413
	.byte	32
	.byte	'Ifx_SRC_SENT_SENT',0,18,212,3,3
	.word	80451
	.byte	18,40
	.word	80413
	.byte	19,9,0,14
	.word	80483
	.byte	10
	.byte	'_Ifx_SRC_SENT',0,18,227,3,25,40,13
	.byte	'SENT',0
	.word	80492
	.byte	40,2,35,0,0,14
	.word	80497
	.byte	32
	.byte	'Ifx_SRC_SENT',0,18,230,3,3
	.word	80532
	.byte	18,20
	.word	78746
	.byte	19,4,0,10
	.byte	'_Ifx_SRC_MSC_MSC',0,18,245,3,25,20,13
	.byte	'SR',0
	.word	80559
	.byte	20,2,35,0,0,14
	.word	80568
	.byte	32
	.byte	'Ifx_SRC_MSC_MSC',0,18,248,3,3
	.word	80604
	.byte	18,80
	.word	80568
	.byte	19,3,0,14
	.word	80634
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,18,135,4,25,80,13
	.byte	'MSC',0
	.word	80643
	.byte	80,2,35,0,0,14
	.word	80648
	.byte	32
	.byte	'Ifx_SRC_MSC',0,18,138,4,3
	.word	80681
	.byte	18,16
	.word	78746
	.byte	19,3,0,10
	.byte	'_Ifx_SRC_CCU6_CCU',0,18,153,4,25,16,13
	.byte	'SR',0
	.word	80707
	.byte	16,2,35,0,0,14
	.word	80716
	.byte	32
	.byte	'Ifx_SRC_CCU6_CCU',0,18,156,4,3
	.word	80753
	.byte	18,32
	.word	80716
	.byte	19,1,0,14
	.word	80784
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,18,171,4,25,32,13
	.byte	'CCU',0
	.word	80793
	.byte	32,2,35,0,0,14
	.word	80798
	.byte	32
	.byte	'Ifx_SRC_CCU6',0,18,174,4,3
	.word	80832
	.byte	10
	.byte	'_Ifx_SRC_GPT12_GPT12',0,18,189,4,25,24,13
	.byte	'CIRQ',0
	.word	78746
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	78746
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	78746
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	78746
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	78746
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	78746
	.byte	4,2,35,20,0,14
	.word	80859
	.byte	32
	.byte	'Ifx_SRC_GPT12_GPT12',0,18,197,4,3
	.word	80961
	.byte	18,24
	.word	80859
	.byte	19,0,0,14
	.word	80995
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,18,212,4,25,24,13
	.byte	'GPT12',0
	.word	81004
	.byte	24,2,35,0,0,14
	.word	81009
	.byte	32
	.byte	'Ifx_SRC_GPT12',0,18,215,4,3
	.word	81046
	.byte	10
	.byte	'_Ifx_SRC_STM_STM',0,18,230,4,25,8,13
	.byte	'SR',0
	.word	79235
	.byte	8,2,35,0,0,14
	.word	81074
	.byte	32
	.byte	'Ifx_SRC_STM_STM',0,18,233,4,3
	.word	81110
	.byte	18,48
	.word	81074
	.byte	19,5,0,14
	.word	81140
	.byte	10
	.byte	'_Ifx_SRC_STM',0,18,248,4,25,48,13
	.byte	'STM',0
	.word	81149
	.byte	48,2,35,0,0,14
	.word	81154
	.byte	32
	.byte	'Ifx_SRC_STM',0,18,251,4,3
	.word	81187
	.byte	10
	.byte	'_Ifx_SRC_FCE_FCE0',0,18,138,5,25,4,13
	.byte	'SR',0
	.word	78746
	.byte	4,2,35,0,0,14
	.word	81213
	.byte	32
	.byte	'Ifx_SRC_FCE_FCE0',0,18,141,5,3
	.word	81250
	.byte	14
	.word	81213
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,18,156,5,25,4,13
	.byte	'FCE0',0
	.word	81281
	.byte	4,2,35,0,0,14
	.word	81286
	.byte	32
	.byte	'Ifx_SRC_FCE',0,18,159,5,3
	.word	81320
	.byte	18,32
	.word	603
	.byte	19,31,0,18,128,4
	.word	78746
	.byte	19,127,0,10
	.byte	'_Ifx_SRC_DMA_DMA',0,18,174,5,25,176,4,13
	.byte	'ERR',0
	.word	80707
	.byte	16,2,35,0,13
	.byte	'reserved_10',0
	.word	81346
	.byte	32,2,35,16,13
	.byte	'CH',0
	.word	81355
	.byte	128,4,2,35,48,0,14
	.word	81365
	.byte	32
	.byte	'Ifx_SRC_DMA_DMA',0,18,179,5,3
	.word	81437
	.byte	18,176,4
	.word	81365
	.byte	19,0,0,14
	.word	81467
	.byte	10
	.byte	'_Ifx_SRC_DMA',0,18,194,5,25,176,4,13
	.byte	'DMA',0
	.word	81477
	.byte	176,4,2,35,0,0,14
	.word	81482
	.byte	32
	.byte	'Ifx_SRC_DMA',0,18,197,5,3
	.word	81517
	.byte	10
	.byte	'_Ifx_SRC_SDMMC_SDMMC',0,18,212,5,25,8,13
	.byte	'ERR',0
	.word	78746
	.byte	4,2,35,0,13
	.byte	'DMA',0
	.word	78746
	.byte	4,2,35,4,0,14
	.word	81543
	.byte	32
	.byte	'Ifx_SRC_SDMMC_SDMMC',0,18,216,5,3
	.word	81597
	.byte	18,8
	.word	81543
	.byte	19,0,0,14
	.word	81631
	.byte	10
	.byte	'_Ifx_SRC_SDMMC',0,18,231,5,25,8,13
	.byte	'SDMMC',0
	.word	81640
	.byte	8,2,35,0,0,14
	.word	81645
	.byte	32
	.byte	'Ifx_SRC_SDMMC',0,18,234,5,3
	.word	81682
	.byte	18,40
	.word	78746
	.byte	19,9,0,10
	.byte	'_Ifx_SRC_GETH_GETH',0,18,249,5,25,40,13
	.byte	'SR',0
	.word	81710
	.byte	40,2,35,0,0,14
	.word	81719
	.byte	32
	.byte	'Ifx_SRC_GETH_GETH',0,18,252,5,3
	.word	81757
	.byte	18,40
	.word	81719
	.byte	19,0,0,14
	.word	81789
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,18,139,6,25,40,13
	.byte	'GETH',0
	.word	81798
	.byte	40,2,35,0,0,14
	.word	81803
	.byte	32
	.byte	'Ifx_SRC_GETH',0,18,142,6,3
	.word	81838
	.byte	18,64
	.word	78746
	.byte	19,15,0,10
	.byte	'_Ifx_SRC_CAN_CAN',0,18,157,6,25,64,13
	.byte	'INT',0
	.word	81865
	.byte	64,2,35,0,0,14
	.word	81874
	.byte	32
	.byte	'Ifx_SRC_CAN_CAN',0,18,160,6,3
	.word	81911
	.byte	18,192,1
	.word	81874
	.byte	19,2,0,14
	.word	81941
	.byte	10
	.byte	'_Ifx_SRC_CAN',0,18,175,6,25,192,1,13
	.byte	'CAN',0
	.word	81951
	.byte	192,1,2,35,0,0,14
	.word	81956
	.byte	32
	.byte	'Ifx_SRC_CAN',0,18,178,6,3
	.word	81991
	.byte	10
	.byte	'_Ifx_SRC_VADC_G',0,18,193,6,25,16,13
	.byte	'SR0',0
	.word	78746
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	78746
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	78746
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	78746
	.byte	4,2,35,12,0,14
	.word	82017
	.byte	32
	.byte	'Ifx_SRC_VADC_G',0,18,199,6,3
	.word	82092
	.byte	10
	.byte	'_Ifx_SRC_VADC_FC',0,18,214,6,25,4,13
	.byte	'SR0',0
	.word	78746
	.byte	4,2,35,0,0,14
	.word	82121
	.byte	32
	.byte	'Ifx_SRC_VADC_FC',0,18,217,6,3
	.word	82158
	.byte	18,192,1
	.word	82017
	.byte	19,11,0,14
	.word	82188
	.byte	18,32
	.word	82121
	.byte	19,7,0,14
	.word	82203
	.byte	18,32
	.word	82017
	.byte	19,1,0,14
	.word	82217
	.byte	10
	.byte	'_Ifx_SRC_VADC',0,18,233,6,25,128,2,13
	.byte	'G',0
	.word	82198
	.byte	192,1,2,35,0,13
	.byte	'FC',0
	.word	82212
	.byte	32,3,35,192,1,13
	.byte	'CG',0
	.word	82226
	.byte	32,3,35,224,1,0,14
	.word	82231
	.byte	32
	.byte	'Ifx_SRC_VADC',0,18,238,6,3
	.word	82291
	.byte	10
	.byte	'_Ifx_SRC_DSADC_DSADC',0,18,253,6,25,8,13
	.byte	'SRM',0
	.word	78746
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	78746
	.byte	4,2,35,4,0,14
	.word	82318
	.byte	32
	.byte	'Ifx_SRC_DSADC_DSADC',0,18,129,7,3
	.word	82372
	.byte	18,112
	.word	82318
	.byte	19,13,0,14
	.word	82406
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,18,144,7,25,112,13
	.byte	'DSADC',0
	.word	82415
	.byte	112,2,35,0,0,14
	.word	82420
	.byte	32
	.byte	'Ifx_SRC_DSADC',0,18,147,7,3
	.word	82457
	.byte	10
	.byte	'_Ifx_SRC_ERAY_ERAY',0,18,162,7,25,48,13
	.byte	'INT0',0
	.word	78746
	.byte	4,2,35,0,13
	.byte	'INT1',0
	.word	78746
	.byte	4,2,35,4,13
	.byte	'TINT0',0
	.word	78746
	.byte	4,2,35,8,13
	.byte	'TINT1',0
	.word	78746
	.byte	4,2,35,12,13
	.byte	'NDAT0',0
	.word	78746
	.byte	4,2,35,16,13
	.byte	'NDAT1',0
	.word	78746
	.byte	4,2,35,20,13
	.byte	'MBSC0',0
	.word	78746
	.byte	4,2,35,24,13
	.byte	'MBSC1',0
	.word	78746
	.byte	4,2,35,28,13
	.byte	'OBUSY',0
	.word	78746
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	78746
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4922
	.byte	8,2,35,40,0,14
	.word	82485
	.byte	32
	.byte	'Ifx_SRC_ERAY_ERAY',0,18,175,7,3
	.word	82680
	.byte	18,96
	.word	82485
	.byte	19,1,0,14
	.word	82712
	.byte	10
	.byte	'_Ifx_SRC_ERAY',0,18,190,7,25,96,13
	.byte	'ERAY',0
	.word	82721
	.byte	96,2,35,0,0,14
	.word	82726
	.byte	32
	.byte	'Ifx_SRC_ERAY',0,18,193,7,3
	.word	82761
	.byte	10
	.byte	'_Ifx_SRC_HSM_HSM',0,18,208,7,25,8,13
	.byte	'HSM',0
	.word	79235
	.byte	8,2,35,0,0,14
	.word	82788
	.byte	32
	.byte	'Ifx_SRC_HSM_HSM',0,18,211,7,3
	.word	82825
	.byte	18,8
	.word	82788
	.byte	19,0,0,14
	.word	82855
	.byte	10
	.byte	'_Ifx_SRC_HSM',0,18,226,7,25,8,13
	.byte	'HSM',0
	.word	82864
	.byte	8,2,35,0,0,14
	.word	82869
	.byte	32
	.byte	'Ifx_SRC_HSM',0,18,229,7,3
	.word	82902
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,18,244,7,25,16,13
	.byte	'SCUERU',0
	.word	80707
	.byte	16,2,35,0,0,14
	.word	82928
	.byte	32
	.byte	'Ifx_SRC_SCU',0,18,247,7,3
	.word	82964
	.byte	10
	.byte	'_Ifx_SRC_PMS_PMS',0,18,134,8,25,4,13
	.byte	'SR',0
	.word	78746
	.byte	4,2,35,0,0,14
	.word	82990
	.byte	32
	.byte	'Ifx_SRC_PMS_PMS',0,18,137,8,3
	.word	83026
	.byte	18,16
	.word	82990
	.byte	19,3,0,14
	.word	83056
	.byte	10
	.byte	'_Ifx_SRC_PMS',0,18,152,8,25,16,13
	.byte	'PMS',0
	.word	83065
	.byte	16,2,35,0,0,14
	.word	83070
	.byte	32
	.byte	'Ifx_SRC_PMS',0,18,155,8,3
	.word	83103
	.byte	18,12
	.word	78746
	.byte	19,2,0,10
	.byte	'_Ifx_SRC_SMU_SMU',0,18,170,8,25,12,13
	.byte	'SR',0
	.word	83129
	.byte	12,2,35,0,0,14
	.word	83138
	.byte	32
	.byte	'Ifx_SRC_SMU_SMU',0,18,173,8,3
	.word	83174
	.byte	18,12
	.word	83138
	.byte	19,0,0,14
	.word	83204
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,18,188,8,25,12,13
	.byte	'SMU',0
	.word	83213
	.byte	12,2,35,0,0,14
	.word	83218
	.byte	32
	.byte	'Ifx_SRC_SMU',0,18,191,8,3
	.word	83251
	.byte	18,32
	.word	78746
	.byte	19,7,0,10
	.byte	'_Ifx_SRC_PSI5_PSI5',0,18,206,8,25,32,13
	.byte	'SR',0
	.word	83277
	.byte	32,2,35,0,0,14
	.word	83286
	.byte	32
	.byte	'Ifx_SRC_PSI5_PSI5',0,18,209,8,3
	.word	83324
	.byte	18,32
	.word	83286
	.byte	19,0,0,14
	.word	83356
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,18,224,8,25,32,13
	.byte	'PSI5',0
	.word	83365
	.byte	32,2,35,0,0,14
	.word	83370
	.byte	32
	.byte	'Ifx_SRC_PSI5',0,18,227,8,3
	.word	83405
	.byte	10
	.byte	'_Ifx_SRC_HSPDM_HSPDM0',0,18,242,8,25,12,13
	.byte	'BFR',0
	.word	78746
	.byte	4,2,35,0,13
	.byte	'RAMP',0
	.word	78746
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	78746
	.byte	4,2,35,8,0,14
	.word	83432
	.byte	32
	.byte	'Ifx_SRC_HSPDM_HSPDM0',0,18,247,8,3
	.word	83501
	.byte	14
	.word	83432
	.byte	10
	.byte	'_Ifx_SRC_HSPDM',0,18,134,9,25,12,13
	.byte	'HSPDM0',0
	.word	83536
	.byte	12,2,35,0,0,14
	.word	83541
	.byte	32
	.byte	'Ifx_SRC_HSPDM',0,18,137,9,3
	.word	83579
	.byte	10
	.byte	'_Ifx_SRC_DAM_DAM',0,18,152,9,25,24,13
	.byte	'LI0',0
	.word	78746
	.byte	4,2,35,0,13
	.byte	'RI0',0
	.word	78746
	.byte	4,2,35,4,13
	.byte	'LI1',0
	.word	78746
	.byte	4,2,35,8,13
	.byte	'RI1',0
	.word	78746
	.byte	4,2,35,12,13
	.byte	'DR',0
	.word	78746
	.byte	4,2,35,16,13
	.byte	'ERR',0
	.word	78746
	.byte	4,2,35,20,0,14
	.word	83607
	.byte	32
	.byte	'Ifx_SRC_DAM_DAM',0,18,160,9,3
	.word	83708
	.byte	18,48
	.word	83607
	.byte	19,1,0,14
	.word	83738
	.byte	10
	.byte	'_Ifx_SRC_DAM',0,18,175,9,25,48,13
	.byte	'DAM',0
	.word	83747
	.byte	48,2,35,0,0,14
	.word	83752
	.byte	32
	.byte	'Ifx_SRC_DAM',0,18,178,9,3
	.word	83785
	.byte	10
	.byte	'_Ifx_SRC_PSI5S_PSI5S',0,18,193,9,25,32,13
	.byte	'SR',0
	.word	83277
	.byte	32,2,35,0,0,14
	.word	83811
	.byte	32
	.byte	'Ifx_SRC_PSI5S_PSI5S',0,18,196,9,3
	.word	83851
	.byte	18,32
	.word	83811
	.byte	19,0,0,14
	.word	83885
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,18,211,9,25,32,13
	.byte	'PSI5S',0
	.word	83894
	.byte	32,2,35,0,0,14
	.word	83899
	.byte	32
	.byte	'Ifx_SRC_PSI5S',0,18,214,9,3
	.word	83936
	.byte	10
	.byte	'_Ifx_SRC_RIF_RIF',0,18,229,9,25,8,13
	.byte	'ERR',0
	.word	78746
	.byte	4,2,35,0,13
	.byte	'INT',0
	.word	78746
	.byte	4,2,35,4,0,14
	.word	83964
	.byte	32
	.byte	'Ifx_SRC_RIF_RIF',0,18,233,9,3
	.word	84014
	.byte	18,16
	.word	83964
	.byte	19,1,0,14
	.word	84044
	.byte	10
	.byte	'_Ifx_SRC_RIF',0,18,248,9,25,16,13
	.byte	'RIF',0
	.word	84053
	.byte	16,2,35,0,0,14
	.word	84058
	.byte	32
	.byte	'Ifx_SRC_RIF',0,18,251,9,3
	.word	84091
	.byte	10
	.byte	'_Ifx_SRC_SPU_SPU',0,18,138,10,25,8,13
	.byte	'INT',0
	.word	78746
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	78746
	.byte	4,2,35,4,0,14
	.word	84117
	.byte	32
	.byte	'Ifx_SRC_SPU_SPU',0,18,142,10,3
	.word	84167
	.byte	18,16
	.word	84117
	.byte	19,1,0,14
	.word	84197
	.byte	10
	.byte	'_Ifx_SRC_SPU',0,18,157,10,25,16,13
	.byte	'SPU',0
	.word	84206
	.byte	16,2,35,0,0,14
	.word	84211
	.byte	32
	.byte	'Ifx_SRC_SPU',0,18,160,10,3
	.word	84244
	.byte	10
	.byte	'_Ifx_SRC_GPSR_GPSR',0,18,175,10,25,32,13
	.byte	'SR',0
	.word	83277
	.byte	32,2,35,0,0,14
	.word	84270
	.byte	32
	.byte	'Ifx_SRC_GPSR_GPSR',0,18,178,10,3
	.word	84308
	.byte	18,192,1
	.word	84270
	.byte	19,5,0,14
	.word	84340
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,18,193,10,25,192,1,13
	.byte	'GPSR',0
	.word	84350
	.byte	192,1,2,35,0,0,14
	.word	84355
	.byte	32
	.byte	'Ifx_SRC_GPSR',0,18,196,10,3
	.word	84392
	.byte	10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,19,68,16,4,11
	.byte	'EN0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	603
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	603
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	603
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	603
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_STM_ACCEN0_Bits',0,19,102,3
	.word	84419
	.byte	10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,19,105,16,4,11
	.byte	'reserved_0',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN1_Bits',0,19,108,3
	.word	84976
	.byte	10
	.byte	'_Ifx_STM_CAP_Bits',0,19,111,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CAP_Bits',0,19,114,3
	.word	85053
	.byte	10
	.byte	'_Ifx_STM_CAPSV_Bits',0,19,117,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CAPSV_Bits',0,19,120,3
	.word	85126
	.byte	10
	.byte	'_Ifx_STM_CLC_Bits',0,19,123,16,4,11
	.byte	'DISR',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	428
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_STM_CLC_Bits',0,19,130,1,3
	.word	85203
	.byte	10
	.byte	'_Ifx_STM_CMCON_Bits',0,19,133,1,16,4,11
	.byte	'MSIZE0',0,1
	.word	603
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	603
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	603
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	603
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	603
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	603
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	603
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	603
	.byte	3,0,2,35,3,0,32
	.byte	'Ifx_STM_CMCON_Bits',0,19,143,1,3
	.word	85345
	.byte	10
	.byte	'_Ifx_STM_CMP_Bits',0,19,146,1,16,4,11
	.byte	'CMPVAL',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CMP_Bits',0,19,149,1,3
	.word	85565
	.byte	10
	.byte	'_Ifx_STM_ICR_Bits',0,19,152,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	428
	.byte	25,0,2,35,0,0,32
	.byte	'Ifx_STM_ICR_Bits',0,19,162,1,3
	.word	85634
	.byte	10
	.byte	'_Ifx_STM_ID_Bits',0,19,165,1,16,4,11
	.byte	'MODREV',0,1
	.word	603
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	603
	.byte	8,0,2,35,1,11
	.byte	'MODNUM',0,2
	.word	620
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_STM_ID_Bits',0,19,170,1,3
	.word	85837
	.byte	10
	.byte	'_Ifx_STM_ISCR_Bits',0,19,173,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	428
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_STM_ISCR_Bits',0,19,180,1,3
	.word	85941
	.byte	10
	.byte	'_Ifx_STM_KRST0_Bits',0,19,183,1,16,4,11
	.byte	'RST',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	428
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_STM_KRST0_Bits',0,19,188,1,3
	.word	86092
	.byte	10
	.byte	'_Ifx_STM_KRST1_Bits',0,19,191,1,16,4,11
	.byte	'RST',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	428
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_STM_KRST1_Bits',0,19,195,1,3
	.word	86203
	.byte	10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,19,198,1,16,4,11
	.byte	'CLR',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	428
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_STM_KRSTCLR_Bits',0,19,202,1,3
	.word	86295
	.byte	10
	.byte	'_Ifx_STM_OCS_Bits',0,19,205,1,16,4,11
	.byte	'reserved_0',0,1
	.word	603
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	428
	.byte	21,8,2,35,0,11
	.byte	'SUS',0,1
	.word	603
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	603
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	603
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_STM_OCS_Bits',0,19,213,1,3
	.word	86391
	.byte	10
	.byte	'_Ifx_STM_TIM0_Bits',0,19,216,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM0_Bits',0,19,219,1,3
	.word	86559
	.byte	10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,19,222,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM0SV_Bits',0,19,225,1,3
	.word	86632
	.byte	10
	.byte	'_Ifx_STM_TIM1_Bits',0,19,228,1,16,4,11
	.byte	'STM_35_4',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM1_Bits',0,19,231,1,3
	.word	86709
	.byte	10
	.byte	'_Ifx_STM_TIM2_Bits',0,19,234,1,16,4,11
	.byte	'STM_39_8',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM2_Bits',0,19,237,1,3
	.word	86782
	.byte	10
	.byte	'_Ifx_STM_TIM3_Bits',0,19,240,1,16,4,11
	.byte	'STM_43_12',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM3_Bits',0,19,243,1,3
	.word	86855
	.byte	10
	.byte	'_Ifx_STM_TIM4_Bits',0,19,246,1,16,4,11
	.byte	'STM_47_16',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM4_Bits',0,19,249,1,3
	.word	86929
	.byte	10
	.byte	'_Ifx_STM_TIM5_Bits',0,19,252,1,16,4,11
	.byte	'STM_51_20',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM5_Bits',0,19,255,1,3
	.word	87003
	.byte	10
	.byte	'_Ifx_STM_TIM6_Bits',0,19,130,2,16,4,11
	.byte	'STM_63_32',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM6_Bits',0,19,133,2,3
	.word	87077
	.byte	12,19,141,2,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	84419
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN0',0,19,146,2,3
	.word	87151
	.byte	12,19,149,2,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	84976
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN1',0,19,154,2,3
	.word	87215
	.byte	12,19,157,2,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85053
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CAP',0,19,162,2,3
	.word	87279
	.byte	12,19,165,2,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85126
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CAPSV',0,19,170,2,3
	.word	87340
	.byte	12,19,173,2,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85203
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CLC',0,19,178,2,3
	.word	87403
	.byte	12,19,181,2,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85345
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CMCON',0,19,186,2,3
	.word	87464
	.byte	12,19,189,2,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85565
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CMP',0,19,194,2,3
	.word	87527
	.byte	12,19,197,2,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85634
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ICR',0,19,202,2,3
	.word	87588
	.byte	12,19,205,2,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85837
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ID',0,19,210,2,3
	.word	87649
	.byte	12,19,213,2,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85941
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ISCR',0,19,218,2,3
	.word	87709
	.byte	12,19,221,2,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86092
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRST0',0,19,226,2,3
	.word	87771
	.byte	12,19,229,2,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86203
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRST1',0,19,234,2,3
	.word	87834
	.byte	12,19,237,2,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86295
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRSTCLR',0,19,242,2,3
	.word	87897
	.byte	12,19,245,2,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86391
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_OCS',0,19,250,2,3
	.word	87962
	.byte	12,19,253,2,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86559
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM0',0,19,130,3,3
	.word	88023
	.byte	12,19,133,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86632
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM0SV',0,19,138,3,3
	.word	88085
	.byte	12,19,141,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86709
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM1',0,19,146,3,3
	.word	88149
	.byte	12,19,149,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86782
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM2',0,19,154,3,3
	.word	88211
	.byte	12,19,157,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86855
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM3',0,19,162,3,3
	.word	88273
	.byte	12,19,165,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86929
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM4',0,19,170,3,3
	.word	88335
	.byte	12,19,173,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87003
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM5',0,19,178,3,3
	.word	88397
	.byte	12,19,181,3,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87077
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM6',0,19,186,3,3
	.word	88459
	.byte	15,5,141,1,9,1,16
	.byte	'IfxCpu_CounterMode_normal',0,0,16
	.byte	'IfxCpu_CounterMode_task',0,1,0,32
	.byte	'IfxCpu_CounterMode',0,5,145,1,3
	.word	88521
	.byte	34,5,198,1,9,6,13
	.byte	'counter',0
	.word	1864
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	603
	.byte	1,2,35,4,0,32
	.byte	'IfxCpu_Counter',0,5,202,1,3
	.word	88610
	.byte	34,5,210,1,9,32,13
	.byte	'instruction',0
	.word	88610
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	88610
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	88610
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	88610
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	88610
	.byte	6,2,35,24,0,32
	.byte	'IfxCpu_Perf',0,5,217,1,3
	.word	88676
	.byte	32
	.byte	'Ifx_P_ACCEN0_Bits',0,8,102,3
	.word	8450
	.byte	32
	.byte	'Ifx_P_ACCEN1_Bits',0,8,108,3
	.word	8363
	.byte	32
	.byte	'Ifx_P_ESR_Bits',0,8,130,1,3
	.word	4931
	.byte	32
	.byte	'Ifx_P_ID_Bits',0,8,138,1,3
	.word	2982
	.byte	32
	.byte	'Ifx_P_IN_Bits',0,8,160,1,3
	.word	3978
	.byte	32
	.byte	'Ifx_P_IOCR0_Bits',0,8,173,1,3
	.word	3111
	.byte	32
	.byte	'Ifx_P_IOCR12_Bits',0,8,186,1,3
	.word	3758
	.byte	32
	.byte	'Ifx_P_IOCR4_Bits',0,8,199,1,3
	.word	3326
	.byte	32
	.byte	'Ifx_P_IOCR8_Bits',0,8,212,1,3
	.word	3541
	.byte	32
	.byte	'Ifx_P_LPCR_Bits',0,8,231,1,3
	.word	8025
	.byte	32
	.byte	'Ifx_P_OMCR_Bits',0,8,253,1,3
	.word	7677
	.byte	32
	.byte	'Ifx_P_OMCR0_Bits',0,8,136,2,3
	.word	6664
	.byte	32
	.byte	'Ifx_P_OMCR12_Bits',0,8,146,2,3
	.word	7188
	.byte	32
	.byte	'Ifx_P_OMCR4_Bits',0,8,157,2,3
	.word	6838
	.byte	32
	.byte	'Ifx_P_OMCR8_Bits',0,8,168,2,3
	.word	7012
	.byte	32
	.byte	'Ifx_P_OMR_Bits',0,8,205,2,3
	.word	2411
	.byte	32
	.byte	'Ifx_P_OMSR_Bits',0,8,227,2,3
	.word	7344
	.byte	32
	.byte	'Ifx_P_OMSR0_Bits',0,8,237,2,3
	.word	6001
	.byte	32
	.byte	'Ifx_P_OMSR12_Bits',0,8,248,2,3
	.word	6489
	.byte	32
	.byte	'Ifx_P_OMSR4_Bits',0,8,131,3,3
	.word	6148
	.byte	32
	.byte	'Ifx_P_OMSR8_Bits',0,8,142,3,3
	.word	6317
	.byte	32
	.byte	'Ifx_P_OUT_Bits',0,8,164,3,3
	.word	2095
	.byte	32
	.byte	'Ifx_P_PCSR_Bits',0,8,187,3,3
	.word	5637
	.byte	32
	.byte	'Ifx_P_PDISC_Bits',0,8,209,3,3
	.word	5271
	.byte	32
	.byte	'Ifx_P_PDR0_Bits',0,8,230,3,3
	.word	4302
	.byte	32
	.byte	'Ifx_P_PDR1_Bits',0,8,251,3,3
	.word	4606
	.byte	32
	.byte	'Ifx_P_ACCEN0',0,8,136,4,3
	.word	8977
	.byte	32
	.byte	'Ifx_P_ACCEN1',0,8,144,4,3
	.word	8410
	.byte	32
	.byte	'Ifx_P_ESR',0,8,152,4,3
	.word	5222
	.byte	32
	.byte	'Ifx_P_ID',0,8,160,4,3
	.word	3062
	.byte	32
	.byte	'Ifx_P_IN',0,8,168,4,3
	.word	4253
	.byte	32
	.byte	'Ifx_P_IOCR0',0,8,176,4,3
	.word	3286
	.byte	32
	.byte	'Ifx_P_IOCR12',0,8,184,4,3
	.word	3938
	.byte	32
	.byte	'Ifx_P_IOCR4',0,8,192,4,3
	.word	3501
	.byte	32
	.byte	'Ifx_P_IOCR8',0,8,200,4,3
	.word	3718
	.byte	32
	.byte	'Ifx_P_LPCR',0,8,208,4,3
	.word	8305
	.byte	32
	.byte	'Ifx_P_OMCR',0,8,216,4,3
	.word	7985
	.byte	32
	.byte	'Ifx_P_OMCR0',0,8,224,4,3
	.word	6798
	.byte	32
	.byte	'Ifx_P_OMCR12',0,8,232,4,3
	.word	7304
	.byte	32
	.byte	'Ifx_P_OMCR4',0,8,240,4,3
	.word	6972
	.byte	32
	.byte	'Ifx_P_OMCR8',0,8,248,4,3
	.word	7148
	.byte	32
	.byte	'Ifx_P_OMR',0,8,128,5,3
	.word	2942
	.byte	32
	.byte	'Ifx_P_OMSR',0,8,136,5,3
	.word	7637
	.byte	32
	.byte	'Ifx_P_OMSR0',0,8,144,5,3
	.word	6108
	.byte	32
	.byte	'Ifx_P_OMSR12',0,8,152,5,3
	.word	6624
	.byte	32
	.byte	'Ifx_P_OMSR4',0,8,160,5,3
	.word	6277
	.byte	32
	.byte	'Ifx_P_OMSR8',0,8,168,5,3
	.word	6449
	.byte	32
	.byte	'Ifx_P_OUT',0,8,176,5,3
	.word	2371
	.byte	32
	.byte	'Ifx_P_PCSR',0,8,184,5,3
	.word	5961
	.byte	32
	.byte	'Ifx_P_PDISC',0,8,192,5,3
	.word	5597
	.byte	32
	.byte	'Ifx_P_PDR0',0,8,200,5,3
	.word	4566
	.byte	32
	.byte	'Ifx_P_PDR1',0,8,208,5,3
	.word	4882
	.byte	14
	.word	9017
	.byte	32
	.byte	'Ifx_P',0,8,128,6,3
	.word	89988
	.byte	15,7,73,9,1,16
	.byte	'IfxPort_ControlledBy_port',0,0,16
	.byte	'IfxPort_ControlledBy_hsct',0,1,0,32
	.byte	'IfxPort_ControlledBy',0,7,77,3
	.word	90008
	.byte	15,7,81,9,1,16
	.byte	'IfxPort_InputMode_undefined',0,127,16
	.byte	'IfxPort_InputMode_noPullDevice',0,0,16
	.byte	'IfxPort_InputMode_pullDown',0,8,16
	.byte	'IfxPort_InputMode_pullUp',0,16,0,32
	.byte	'IfxPort_InputMode',0,7,87,3
	.word	90099
	.byte	15,7,91,9,1,16
	.byte	'IfxPort_LvdsMode_high',0,0,16
	.byte	'IfxPort_LvdsMode_medium',0,1,0,32
	.byte	'IfxPort_LvdsMode',0,7,95,3
	.word	90250
	.byte	15,7,126,9,1,16
	.byte	'IfxPort_OutputIdx_general',0,128,1,16
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,16
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,16
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,16
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,16
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,16
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,16
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,32
	.byte	'IfxPort_OutputIdx',0,7,136,1,3
	.word	90331
	.byte	15,7,140,1,9,1,16
	.byte	'IfxPort_OutputMode_none',0,0,16
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,16
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,32
	.byte	'IfxPort_OutputMode',0,7,145,1,3
	.word	90575
	.byte	15,7,151,1,9,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,16
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,16
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,16
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,16
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed1',0,12,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed2',0,13,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed3',0,14,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed4',0,15,0,32
	.byte	'IfxPort_PadDriver',0,7,165,1,3
	.word	90699
	.byte	15,7,169,1,9,1,16
	.byte	'IfxPort_PadSupply_3v',0,0,16
	.byte	'IfxPort_PadSupply_5v',0,1,0,32
	.byte	'IfxPort_PadSupply',0,7,173,1,3
	.word	91149
	.byte	15,7,177,1,9,1,16
	.byte	'IfxPort_PinFunctionMode_digital',0,0,16
	.byte	'IfxPort_PinFunctionMode_analog',0,1,0,32
	.byte	'IfxPort_PinFunctionMode',0,7,181,1,3
	.word	91229
	.byte	32
	.byte	'IfxPort_State',0,7,193,1,3
	.word	9597
	.byte	34,7,246,1,9,8,13
	.byte	'port',0
	.word	9592
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	603
	.byte	1,2,35,4,0,32
	.byte	'IfxPort_Pin',0,7,250,1,3
	.word	91359
	.byte	10
	.byte	'_Ifx_SMU_ACCEN0_Bits',0,20,68,16,4,11
	.byte	'EN0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	603
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	603
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	603
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	603
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SMU_ACCEN0_Bits',0,20,102,3
	.word	91419
	.byte	10
	.byte	'_Ifx_SMU_ACCEN1_Bits',0,20,105,16,4,11
	.byte	'reserved_0',0,4
	.word	428
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SMU_ACCEN1_Bits',0,20,108,3
	.word	91976
	.byte	10
	.byte	'_Ifx_SMU_AD_Bits',0,20,111,16,4,11
	.byte	'DF0',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'DF1',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'DF2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'DF3',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'DF4',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'DF5',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'DF6',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'DF7',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'DF8',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'DF9',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'DF10',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'DF11',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'DF12',0,1
	.word	603
	.byte	1,3,2,35,1,11
	.byte	'DF13',0,1
	.word	603
	.byte	1,2,2,35,1,11
	.byte	'DF14',0,1
	.word	603
	.byte	1,1,2,35,1,11
	.byte	'DF15',0,1
	.word	603
	.byte	1,0,2,35,1,11
	.byte	'DF16',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'DF17',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'DF18',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'DF19',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'DF20',0,1
	.word	603
	.byte	1,3,2,35,2,11
	.byte	'DF21',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'DF22',0,1
	.word	603
	.byte	1,1,2,35,2,11
	.byte	'DF23',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'DF24',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'DF25',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'DF26',0,1
	.word	603
	.byte	1,5,2,35,3,11
	.byte	'DF27',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'DF28',0,1
	.word	603
	.byte	1,3,2,35,3,11
	.byte	'DF29',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'DF30',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'DF31',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SMU_AD_Bits',0,20,145,1,3
	.word	92053
	.byte	10
	.byte	'_Ifx_SMU_AEX_Bits',0,20,148,1,16,4,11
	.byte	'IRQ0STS',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'IRQ1STS',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'IRQ2STS',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'RST0STS',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'RST1STS',0,1
	.word	603
	.byte	1,3,2,35,0,11
	.byte	'RST2STS',0,1
	.word	603
	.byte	1,2,2,35,0,11
	.byte	'RST3STS',0,1
	.word	603
	.byte	1,1,2,35,0,11
	.byte	'RST4STS',0,1
	.word	603
	.byte	1,0,2,35,0,11
	.byte	'RST5STS',0,1
	.word	603
	.byte	1,7,2,35,1,11
	.byte	'NMISTS',0,1
	.word	603
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	603
	.byte	1,5,2,35,1,11
	.byte	'EMSSTS',0,1
	.word	603
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	603
	.byte	4,0,2,35,1,11
	.byte	'IRQ0AEM',0,1
	.word	603
	.byte	1,7,2,35,2,11
	.byte	'IRQ1AEM',0,1
	.word	603
	.byte	1,6,2,35,2,11
	.byte	'IRQ2AEM',0,1
	.word	603
	.byte	1,5,2,35,2,11
	.byte	'RST0AEM',0,1
	.word	603
	.byte	1,4,2,35,2,11
	.byte	'RST1AEM',0,1
	.word	603
	.byte	1,3,2,35,2,11
	.byte	'RST2AEM',0,1
	.word	603
	.byte	1,2,2,35,2,11
	.byte	'RST3AEM',0,1
	.word	603
	.byte	1,1,2,35,2,11
	.byte	'RST4AEM',0,1
	.word	603
	.byte	1,0,2,35,2,11
	.byte	'RST5AEM',0,1
	.word	603
	.byte	1,7,2,35,3,11
	.byte	'NMIAEM',0,1
	.word	603
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	603
	.byte	1,5,2,35,3,11
	.byte	'EMSAEM',0,1
	.word	603
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	603
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SMU_AEX_Bits',0,20,176,1,3
	.word	92603
	.byte	10
	.byte	'_Ifx_SMU_AEXCLR_Bits',0,20,179,1,16,4,11
	.byte	'IRQ0CLR',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'IRQ1CLR',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'IRQ2CLR',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'RST0CLR',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'RST1CLR',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'RST2CLR',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'RST3CLR',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'RST4CLR',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'RST5CLR',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'NMICLR',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'EMSCLR',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	451
	.byte	4,16,2,35,0,11
	.byte	'IRQ0AEMCLR',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'IRQ1AEMCLR',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'IRQ2AEMCLR',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'RST0AEMCLR',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'RST1AEMCLR',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'RST2AEMCLR',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'RST3AEMCLR',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'RST4AEMCLR',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'RST5AEMCLR',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'NMIAEMCLR',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'EMSAEMCLR',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	451
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_SMU_AEXCLR_Bits',0,20,207,1,3
	.word	93160
	.byte	10
	.byte	'_Ifx_SMU_AFCNT_Bits',0,20,210,1,16,4,11
	.byte	'FCNT',0,1
	.word	603
	.byte	4,4,2,35,0,11
	.byte	'ACNT',0,2
	.word	620
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	620
	.byte	14,2,2,35,2,11
	.byte	'FCO',0,1
	.word	603
	.byte	1,1,2,35,3,11
	.byte	'ACO',0,1
	.word	603
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SMU_AFCNT_Bits',0,20,217,1,3
	.word	93756
	.byte	10
	.byte	'_Ifx_SMU_AG_Bits',0,20,220,1,16,4,11
	.byte	'SF0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'SF1',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'SF2',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'SF3',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'SF4',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'SF5',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'SF6',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'SF7',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'SF8',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'SF9',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'SF10',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'SF11',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'SF12',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'SF13',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'SF14',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'SF15',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'SF16',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'SF17',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'SF18',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'SF19',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'SF20',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'SF21',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'SF22',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'SF23',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'SF24',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'SF25',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'SF26',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'SF27',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'SF28',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'SF29',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'SF30',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'SF31',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_AG_Bits',0,20,254,1,3
	.word	93896
	.byte	10
	.byte	'_Ifx_SMU_AGC_Bits',0,20,129,2,16,4,11
	.byte	'IGCS0',0,4
	.word	451
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'IGCS1',0,4
	.word	451
	.byte	3,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'IGCS2',0,4
	.word	451
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	451
	.byte	5,16,2,35,0,11
	.byte	'RCS',0,4
	.word	451
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	451
	.byte	2,8,2,35,0,11
	.byte	'PES',0,4
	.word	451
	.byte	5,3,2,35,0,11
	.byte	'EFRST',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	451
	.byte	2,0,2,35,0,0,32
	.byte	'Ifx_SMU_AGC_Bits',0,20,142,2,3
	.word	94447
	.byte	10
	.byte	'_Ifx_SMU_AGCF_Bits',0,20,145,2,16,4,11
	.byte	'CF0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'CF1',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'CF2',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'CF3',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'CF4',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'CF5',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'CF6',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'CF7',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'CF8',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'CF9',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'CF10',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'CF11',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'CF12',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'CF13',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'CF14',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'CF15',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'CF16',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'CF17',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'CF18',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'CF19',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'CF20',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'CF21',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'CF22',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'CF23',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'CF24',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'CF25',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'CF26',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'CF27',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'CF28',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'CF29',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'CF30',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'CF31',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_AGCF_Bits',0,20,179,2,3
	.word	94709
	.byte	10
	.byte	'_Ifx_SMU_AGFSP_Bits',0,20,182,2,16,4,11
	.byte	'FE0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'FE1',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'FE2',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'FE3',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'FE4',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'FE5',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'FE6',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'FE7',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'FE8',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'FE9',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'FE10',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'FE11',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'FE12',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'FE13',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'FE14',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'FE15',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'FE16',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'FE17',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'FE18',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'FE19',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'FE20',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'FE21',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'FE22',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'FE23',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'FE24',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'FE25',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'FE26',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'FE27',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'FE28',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'FE29',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'FE30',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'FE31',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_AGFSP_Bits',0,20,216,2,3
	.word	95264
	.byte	10
	.byte	'_Ifx_SMU_CLC_Bits',0,20,219,2,16,4,11
	.byte	'DISR',0,1
	.word	603
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	603
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	428
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SMU_CLC_Bits',0,20,226,2,3
	.word	95821
	.byte	10
	.byte	'_Ifx_SMU_CMD_Bits',0,20,229,2,16,4,11
	.byte	'CMD',0,4
	.word	451
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	451
	.byte	4,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	451
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SMU_CMD_Bits',0,20,234,2,3
	.word	95964
	.byte	10
	.byte	'_Ifx_SMU_DBG_Bits',0,20,237,2,16,4,11
	.byte	'SSM',0,1
	.word	603
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	428
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SMU_DBG_Bits',0,20,241,2,3
	.word	96067
	.byte	10
	.byte	'_Ifx_SMU_FSP_Bits',0,20,244,2,16,4,11
	.byte	'PRE1',0,4
	.word	451
	.byte	3,29,2,35,0,11
	.byte	'PRE2',0,4
	.word	451
	.byte	2,27,2,35,0,11
	.byte	'MODE',0,4
	.word	451
	.byte	2,25,2,35,0,11
	.byte	'PES',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'TFSP_LOW',0,4
	.word	451
	.byte	14,10,2,35,0,11
	.byte	'TFSP_HIGH',0,4
	.word	451
	.byte	10,0,2,35,0,0,32
	.byte	'Ifx_SMU_FSP_Bits',0,20,252,2,3
	.word	96155
	.byte	10
	.byte	'_Ifx_SMU_ID_Bits',0,20,255,2,16,4,11
	.byte	'MOD_REV',0,1
	.word	603
	.byte	8,0,2,35,0,11
	.byte	'MOD_TYPE',0,1
	.word	603
	.byte	8,0,2,35,1,11
	.byte	'MOD_NUMBER',0,2
	.word	620
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SMU_ID_Bits',0,20,132,3,3
	.word	96310
	.byte	10
	.byte	'_Ifx_SMU_KEYS_Bits',0,20,135,3,16,4,11
	.byte	'CFGLCK',0,4
	.word	451
	.byte	8,24,2,35,0,11
	.byte	'PERLCK',0,4
	.word	451
	.byte	8,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	451
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SMU_KEYS_Bits',0,20,140,3,3
	.word	96420
	.byte	10
	.byte	'_Ifx_SMU_OCS_Bits',0,20,143,3,16,4,11
	.byte	'TGS',0,1
	.word	603
	.byte	2,6,2,35,0,11
	.byte	'TGB',0,1
	.word	603
	.byte	1,5,2,35,0,11
	.byte	'TG_P',0,1
	.word	603
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	428
	.byte	20,8,2,35,0,11
	.byte	'SUS',0,1
	.word	603
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	603
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	603
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	603
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SMU_OCS_Bits',0,20,153,3,3
	.word	96532
	.byte	10
	.byte	'_Ifx_SMU_PCTL_Bits',0,20,156,3,16,4,11
	.byte	'HWDIR',0,4
	.word	451
	.byte	2,30,2,35,0,11
	.byte	'HWEN',0,4
	.word	451
	.byte	2,28,2,35,0,11
	.byte	'GFSCU_EN',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'GFSTS_EN',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'PCS',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	451
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	451
	.byte	9,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	451
	.byte	9,0,2,35,0,0,32
	.byte	'Ifx_SMU_PCTL_Bits',0,20,167,3,3
	.word	96724
	.byte	10
	.byte	'_Ifx_SMU_RMCTL_Bits',0,20,170,3,16,4,11
	.byte	'TE0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'TE1',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'TE2',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'TE3',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'TE4',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'TE5',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'TE6',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'TE7',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'TE8',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'TE9',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'TE10',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_RMCTL_Bits',0,20,204,3,3
	.word	96955
	.byte	10
	.byte	'_Ifx_SMU_RMEF_Bits',0,20,207,3,16,4,11
	.byte	'EF0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'EF1',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'EF2',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'EF3',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'EF4',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'EF5',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'EF6',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'EF7',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'EF8',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'EF9',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'EF10',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_RMEF_Bits',0,20,241,3,3
	.word	97659
	.byte	10
	.byte	'_Ifx_SMU_RMSTS_Bits',0,20,244,3,16,4,11
	.byte	'STS0',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'STS1',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'STS2',0,4
	.word	451
	.byte	1,29,2,35,0,11
	.byte	'STS3',0,4
	.word	451
	.byte	1,28,2,35,0,11
	.byte	'STS4',0,4
	.word	451
	.byte	1,27,2,35,0,11
	.byte	'STS5',0,4
	.word	451
	.byte	1,26,2,35,0,11
	.byte	'STS6',0,4
	.word	451
	.byte	1,25,2,35,0,11
	.byte	'STS7',0,4
	.word	451
	.byte	1,24,2,35,0,11
	.byte	'STS8',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'STS9',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'STS10',0,4
	.word	451
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	451
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	451
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	451
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	451
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	451
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	451
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	451
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	451
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	451
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	451
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	451
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	451
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	451
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	451
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	451
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	451
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_RMSTS_Bits',0,20,150,4,3
	.word	98361
	.byte	10
	.byte	'_Ifx_SMU_RTAC00_Bits',0,20,153,4,16,4,11
	.byte	'GID0',0,4
	.word	451
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	451
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	451
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	451
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	451
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	451
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC00_Bits',0,20,161,4,3
	.word	99076
	.byte	10
	.byte	'_Ifx_SMU_RTAC01_Bits',0,20,164,4,16,4,11
	.byte	'GID2',0,4
	.word	451
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	451
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	451
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	451
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	451
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	451
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC01_Bits',0,20,172,4,3
	.word	99244
	.byte	10
	.byte	'_Ifx_SMU_RTAC10_Bits',0,20,175,4,16,4,11
	.byte	'GID0',0,4
	.word	451
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	451
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	451
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	451
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	451
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	451
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC10_Bits',0,20,183,4,3
	.word	99412
	.byte	10
	.byte	'_Ifx_SMU_RTAC11_Bits',0,20,186,4,16,4,11
	.byte	'GID2',0,4
	.word	451
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	451
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	451
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	451
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	451
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	451
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC11_Bits',0,20,194,4,3
	.word	99580
	.byte	10
	.byte	'_Ifx_SMU_RTC_Bits',0,20,197,4,16,4,11
	.byte	'RT0E',0,4
	.word	451
	.byte	1,31,2,35,0,11
	.byte	'RT1E',0,4
	.word	451
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	451
	.byte	6,24,2,35,0,11
	.byte	'RTD',0,4
	.word	451
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTC_Bits',0,20,203,4,3
	.word	99748
	.byte	10
	.byte	'_Ifx_SMU_STS_Bits',0,20,206,4,16,4,11
	.byte	'CMD',0,4
	.word	451
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	451
	.byte	4,24,2,35,0,11
	.byte	'RES',0,4
	.word	451
	.byte	1,23,2,35,0,11
	.byte	'ASCE',0,4
	.word	451
	.byte	1,22,2,35,0,11
	.byte	'FSP',0,4
	.word	451
	.byte	2,20,2,35,0,11
	.byte	'FSTS',0,4
	.word	451
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	451
	.byte	3,16,2,35,0,11
	.byte	'RTS0',0,4
	.word	451
	.byte	1,15,2,35,0,11
	.byte	'RTME0',0,4
	.word	451
	.byte	1,14,2,35,0,11
	.byte	'RTS1',0,4
	.word	451
	.byte	1,13,2,35,0,11
	.byte	'RTME1',0,4
	.word	451
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	451
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_SMU_STS_Bits',0,20,220,4,3
	.word	99868
	.byte	12,20,228,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91419
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_ACCEN0',0,20,233,4,3
	.word	100123
	.byte	12,20,236,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91976
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_ACCEN1',0,20,241,4,3
	.word	100187
	.byte	12,20,244,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92053
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AD',0,20,249,4,3
	.word	100251
	.byte	12,20,252,4,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92603
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AEX',0,20,129,5,3
	.word	100311
	.byte	12,20,132,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	93160
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AEXCLR',0,20,137,5,3
	.word	100372
	.byte	12,20,140,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	93756
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AFCNT',0,20,145,5,3
	.word	100436
	.byte	12,20,148,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	93896
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AG',0,20,153,5,3
	.word	100499
	.byte	12,20,156,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	94447
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AGC',0,20,161,5,3
	.word	100559
	.byte	12,20,164,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	94709
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AGCF',0,20,169,5,3
	.word	100620
	.byte	12,20,172,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95264
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AGFSP',0,20,177,5,3
	.word	100682
	.byte	12,20,180,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95821
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_CLC',0,20,185,5,3
	.word	100745
	.byte	12,20,188,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95964
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_CMD',0,20,193,5,3
	.word	100806
	.byte	12,20,196,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96067
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_DBG',0,20,201,5,3
	.word	100867
	.byte	12,20,204,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96155
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_FSP',0,20,209,5,3
	.word	100928
	.byte	12,20,212,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96310
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_ID',0,20,217,5,3
	.word	100989
	.byte	12,20,220,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96420
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_KEYS',0,20,225,5,3
	.word	101049
	.byte	12,20,228,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96532
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_OCS',0,20,233,5,3
	.word	101111
	.byte	12,20,236,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96724
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_PCTL',0,20,241,5,3
	.word	101172
	.byte	12,20,244,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96955
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RMCTL',0,20,249,5,3
	.word	101234
	.byte	12,20,252,5,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97659
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RMEF',0,20,129,6,3
	.word	101297
	.byte	12,20,132,6,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98361
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RMSTS',0,20,137,6,3
	.word	101359
	.byte	12,20,140,6,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99076
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC00',0,20,145,6,3
	.word	101422
	.byte	12,20,148,6,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99244
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC01',0,20,153,6,3
	.word	101486
	.byte	12,20,156,6,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99412
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC10',0,20,161,6,3
	.word	101550
	.byte	12,20,164,6,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99580
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC11',0,20,169,6,3
	.word	101614
	.byte	12,20,172,6,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99748
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTC',0,20,177,6,3
	.word	101678
	.byte	12,20,180,6,9,4,13
	.byte	'U',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	444
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99868
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_STS',0,20,185,6,3
	.word	101739
	.byte	32
	.byte	'IfxScuCcu_Fsource',0,9,177,2,3
	.word	15657
	.byte	15,9,210,2,9,1,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy30',0,1,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy60',0,2,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy120',0,3,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy240',0,4,0,32
	.byte	'IfxScuCcu_LowPowerDivRatio',0,9,216,2,3
	.word	101827
	.byte	15,9,220,2,9,1,16
	.byte	'IfxScuCcu_ModulationAmplitude_0p5',0,0,16
	.byte	'IfxScuCcu_ModulationAmplitude_1p0',0,1,16
	.byte	'IfxScuCcu_ModulationAmplitude_1p25',0,2,16
	.byte	'IfxScuCcu_ModulationAmplitude_1p5',0,3,16
	.byte	'IfxScuCcu_ModulationAmplitude_2p0',0,4,16
	.byte	'IfxScuCcu_ModulationAmplitude_2p5',0,5,16
	.byte	'IfxScuCcu_ModulationAmplitude_count',0,6,0,32
	.byte	'IfxScuCcu_ModulationAmplitude',0,9,229,2,3
	.word	102020
	.byte	15,9,254,3,9,1,16
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc1',0,0,16
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc0',0,1,16
	.byte	'IfxScuCcu_PllInputClockSelection_fSysclk',0,2,0,32
	.byte	'IfxScuCcu_PllInputClockSelection',0,9,131,4,3
	.word	102321
	.byte	15,9,135,4,9,1,16
	.byte	'IfxScuCcu_Traprequest_esr0',0,0,16
	.byte	'IfxScuCcu_Traprequest_esr1',0,1,16
	.byte	'IfxScuCcu_Traprequest_trap2',0,2,16
	.byte	'IfxScuCcu_Traprequest_smu',0,3,0,32
	.byte	'IfxScuCcu_Traprequest',0,9,141,4,3
	.word	102495
	.byte	15,9,147,4,9,1,16
	.byte	'IfxScuCcu_ModEn_disabled',0,0,16
	.byte	'IfxScuCcu_ModEn_enabled',0,1,0,32
	.byte	'IfxScuCcu_ModEn',0,9,151,4,3
	.word	102649
	.byte	34,9,162,4,9,6,13
	.byte	'pDivider',0
	.word	603
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	603
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	603
	.byte	1,2,35,2,13
	.byte	'k3Divider',0
	.word	603
	.byte	1,2,35,3,13
	.byte	'k3DividerBypass',0
	.word	603
	.byte	1,2,35,4,0,32
	.byte	'IfxScuCcu_PerPllConfig',0,9,171,4,3
	.word	102734
	.byte	34,9,176,4,9,4,13
	.byte	'pDivider',0
	.word	603
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	603
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	603
	.byte	1,2,35,2,0,32
	.byte	'IfxScuCcu_SysPllConfig',0,9,181,4,3
	.word	102872
	.byte	34,9,189,4,9,8,13
	.byte	'value',0
	.word	1864
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1864
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_CcuconRegConfig',0,9,193,4,3
	.word	102966
	.byte	34,9,197,4,9,6,13
	.byte	'k2Step',0
	.word	603
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	224
	.byte	4,2,35,2,0,32
	.byte	'IfxScuCcu_PllStepConfig',0,9,201,4,3
	.word	103037
	.byte	34,9,205,4,9,16,13
	.byte	'xtalFrequency',0
	.word	1864
	.byte	4,2,35,0,13
	.byte	'pllInputClockSelection',0
	.word	102321
	.byte	1,2,35,4,13
	.byte	'sysPllConfig',0
	.word	102872
	.byte	4,2,35,6,13
	.byte	'perPllConfig',0
	.word	102734
	.byte	6,2,35,10,0,32
	.byte	'IfxScuCcu_pllsParameterConfig',0,9,211,4,3
	.word	103111
	.byte	34,9,219,4,9,8,13
	.byte	'value',0
	.word	1864
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1864
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,9,223,4,3
	.word	103256
	.byte	34,9,231,4,9,80,13
	.byte	'ccucon0',0
	.word	102966
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	102966
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	102966
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	102966
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	102966
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	102966
	.byte	8,2,35,40,13
	.byte	'ccucon8',0
	.word	102966
	.byte	8,2,35,48,13
	.byte	'ccucon9',0
	.word	102966
	.byte	8,2,35,56,13
	.byte	'ccucon10',0
	.word	102966
	.byte	8,2,35,64,13
	.byte	'ccucon11',0
	.word	102966
	.byte	8,2,35,72,0,32
	.byte	'IfxScuCcu_ClockDistributionConfig',0,9,243,4,3
	.word	103332
	.byte	34,9,247,4,9,20,13
	.byte	'pllsParameters',0
	.word	103111
	.byte	16,2,35,0,13
	.byte	'waitTime',0
	.word	224
	.byte	4,2,35,16,0,32
	.byte	'IfxScuCcu_InitialStepConfig',0,9,251,4,3
	.word	103554
	.byte	20
	.word	103037
	.byte	3
	.word	103640
	.byte	34,9,255,4,9,8,13
	.byte	'numOfSteps',0
	.word	603
	.byte	1,2,35,0,13
	.byte	'pllSteps',0
	.word	103645
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_PllThrottleConfig',0,9,131,5,3
	.word	103650
	.byte	34,9,137,5,9,2,13
	.byte	'Mod_Enable',0
	.word	102649
	.byte	1,2,35,0,13
	.byte	'Mod_Amp',0
	.word	102020
	.byte	1,2,35,1,0,32
	.byte	'IfxScuCcu_Mod_Config',0,9,141,5,3
	.word	103732
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L16:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,4,1,58,15,59,15,57,15,11,15,0,0,16,40,0,3,8,28,13,0,0
	.byte	17,11,1,0,0,18,1,1,11,15,73,19,0,0,19,33,0,47,15,0,0,20,38,0,73,19,0,0,21,46,1,3,8,54,15,39,12,63,12,60
	.byte	12,0,0,22,5,0,73,19,0,0,23,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,24,5,0,3,8,73,19,0,0,25,46,1,49
	.byte	19,0,0,26,5,0,49,19,0,0,27,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,28,46,0,3,8,58,15,59
	.byte	15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,29,29,1,49,19,0,0,30,11,0,49,19,0,0,31,46,1,3,8,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,63,12,60,12,0,0,32,22,0,3,8,58,15,59,15,57,15,73,19,0,0,33,21,0,54,15,0,0,34,19
	.byte	1,58,15,59,15,57,15,11,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L17:
	.word	.L59-.L58
.L58:
	.half	3
	.word	.L61-.L60
.L60:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxScuWdt.h',0,2,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,4,0,0
	.byte	'IfxPort.h',0,5,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,2,0,0
	.byte	'IfxIom_regdef.h',0,3,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Iom\\Std\\IfxIom.c',0,0,0,0
	.byte	'Ifx_TypesReg.h',0,3,0,0
	.byte	'IfxScu_cfg.h',0,4,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Iom\\Std\\IfxIom.h',0,0,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxSmu_regdef.h',0,3,0,0,0
.L61:
.L59:
	.sdecl	'.debug_info',debug,cluster('IfxIom_getFrequency')
	.sect	'.debug_info'
.L18:
	.word	345
	.half	3
	.word	.L19
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Iom\\Std\\IfxIom.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L21,.L20
	.byte	2
	.word	.L14
	.byte	3
	.byte	'IfxIom_getFrequency',0,1,53,9
	.word	.L28
	.byte	1,1,1
	.word	.L11,.L29,.L10
	.byte	4
	.byte	'iom',0,1,53,38
	.word	.L30,.L31
	.byte	5
	.word	.L11,.L29
	.byte	5
	.word	.L11,.L29
	.byte	6
	.byte	'fspb',0,1,56,13
	.word	.L28,.L32
	.byte	7
	.word	.L33,.L34,.L35
	.byte	8
	.word	.L36,.L37
	.byte	6
	.byte	'gtmDiv',0,2,245,12,13
	.word	.L40,.L41
	.byte	6
	.byte	'gtmFreq',0,2,246,12,13
	.word	.L28,.L42
	.byte	0,0,9
	.word	.L33,.L38,.L39
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxIom_getFrequency')
	.sect	'.debug_abbrev'
.L19:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,85,6,0,0,9,29,0,49,16
	.byte	17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxIom_getFrequency')
	.sect	'.debug_line'
.L20:
	.word	.L63-.L62
.L62:
	.half	3
	.word	.L65-.L64
.L64:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Iom\\Std\\IfxIom.c',0,0,0,0
	.byte	'IfxScuCcu.h',0,1,0,0,0
.L65:
	.byte	5,37,7,0,5,2
	.word	.L11
	.byte	3,58,1,4,2,5,36,9
	.half	.L34-.L11
	.byte	3,186,12,1,4,1,5,10,9
	.half	.L35-.L34
	.byte	3,198,115,1,4,2,5,36,9
	.half	.L38-.L35
	.byte	3,186,12,1,5,5,9
	.half	.L48-.L38
	.byte	3,3,1,5,17,7,9
	.half	.L66-.L48
	.byte	3,2,1,5,22,1,5,10,9
	.half	.L2-.L66
	.byte	3,2,1,5,44,7,9
	.half	.L67-.L2
	.byte	3,2,1,5,49,9
	.half	.L47-.L67
	.byte	1,5,47,9
	.half	.L49-.L47
	.byte	1,5,50,1,5,48,9
	.half	.L4-.L49
	.byte	3,5,1,5,71,9
	.half	.L50-.L4
	.byte	1,5,69,9
	.half	.L51-.L50
	.byte	1,4,1,5,17,9
	.half	.L3-.L51
	.byte	3,187,115,1,5,1,9
	.half	.L68-.L3
	.byte	3,1,1,7,9
	.half	.L22-.L68
	.byte	0,1,1
.L63:
	.sdecl	'.debug_ranges',debug,cluster('IfxIom_getFrequency')
	.sect	'.debug_ranges'
.L21:
	.word	-1,.L11,0,.L22-.L11,0,0
.L37:
	.word	-1,.L11,.L34-.L11,.L35-.L11,.L38-.L11,.L39-.L11,0,0
	.sdecl	'.debug_info',debug,cluster('IfxIom_resetModule')
	.sect	'.debug_info'
.L23:
	.word	254
	.half	3
	.word	.L24
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Iom\\Std\\IfxIom.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L26,.L25
	.byte	2
	.word	.L14
	.byte	3
	.byte	'IfxIom_resetModule',0,1,66,6,1,1,1
	.word	.L13,.L43,.L12
	.byte	4
	.byte	'iom',0,1,66,34
	.word	.L30,.L44
	.byte	5
	.word	.L13,.L43
	.byte	6
	.byte	'passwd',0,1,68,12
	.word	.L45,.L46
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxIom_resetModule')
	.sect	'.debug_abbrev'
.L24:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxIom_resetModule')
	.sect	'.debug_line'
.L25:
	.word	.L70-.L69
.L69:
	.half	3
	.word	.L72-.L71
.L71:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Iom\\Std\\IfxIom.c',0,0,0,0,0
.L72:
	.byte	5,6,7,0,5,2
	.word	.L13
	.byte	3,193,0,1,5,53,9
	.half	.L53-.L13
	.byte	3,2,1,5,19,9
	.half	.L52-.L53
	.byte	1,5,31,9
	.half	.L55-.L52
	.byte	3,2,1,5,17,9
	.half	.L54-.L55
	.byte	3,1,1,5,29,9
	.half	.L73-.L54
	.byte	3,2,1,5,22,9
	.half	.L56-.L73
	.byte	3,126,1,5,17,9
	.half	.L74-.L56
	.byte	3,1,1,5,22,9
	.half	.L75-.L74
	.byte	1,5,29,9
	.half	.L76-.L75
	.byte	3,1,1,5,24,9
	.half	.L9-.L76
	.byte	3,2,1,5,37,9
	.half	.L77-.L9
	.byte	1,5,31,7,9
	.half	.L78-.L77
	.byte	3,4,1,5,29,9
	.half	.L79-.L78
	.byte	3,2,1,5,19,3,127,1,5,24,9
	.half	.L57-.L79
	.byte	1,5,29,9
	.half	.L80-.L57
	.byte	3,1,1,5,1,7,9
	.half	.L27-.L80
	.byte	3,1,0,1,1
.L70:
	.sdecl	'.debug_ranges',debug,cluster('IfxIom_resetModule')
	.sect	'.debug_ranges'
.L26:
	.word	-1,.L13,0,.L27-.L13,0,0
	.sdecl	'.debug_loc',debug,cluster('IfxIom_getFrequency')
	.sect	'.debug_loc'
.L10:
	.word	-1,.L11,0,.L29-.L11
	.half	2
	.byte	138,0
	.word	0,0
.L32:
	.word	-1,.L11,.L34-.L11,.L47-.L11
	.half	1
	.byte	82
	.word	.L38-.L11,.L29-.L11
	.half	1
	.byte	88
	.word	.L4-.L11,.L50-.L11
	.half	1
	.byte	82
	.word	0,0
.L41:
	.word	-1,.L11,.L48-.L11,.L49-.L11
	.half	1
	.byte	95
	.word	.L4-.L11,.L51-.L11
	.half	1
	.byte	95
	.word	0,0
.L42:
	.word	-1,.L11,.L3-.L11,.L29-.L11
	.half	1
	.byte	82
	.word	0,0
.L31:
	.word	-1,.L11,0,.L34-.L11
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxIom_resetModule')
	.sect	'.debug_loc'
.L12:
	.word	-1,.L13,0,.L43-.L13
	.half	2
	.byte	138,0
	.word	0,0
.L44:
	.word	-1,.L13,0,.L52-.L13
	.half	1
	.byte	100
	.word	.L53-.L13,.L43-.L13
	.half	1
	.byte	111
	.word	0,0
.L46:
	.word	-1,.L13,.L52-.L13,.L54-.L13
	.half	1
	.byte	82
	.word	.L55-.L13,.L43-.L13
	.half	1
	.byte	88
	.word	.L56-.L13,.L9-.L13
	.half	1
	.byte	84
	.word	.L57-.L13,.L43-.L13
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L81:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxIom_getFrequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L81,.L11,.L29-.L11
	.sdecl	'.debug_frame',debug,cluster('IfxIom_resetModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L81,.L13,.L43-.L13

; ..\0_Src\4_McHal\Tricore\Iom\Std\IfxIom.c	    82  }

	; Module end
