	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\1_SrvSw\\Tricore\\Compilers\\.Ifx_Ssw_Infra.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include\\libc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.src ..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c'

	
$TC162
	.sdecl	'.zrodata.Ifx_Ssw_Infra..2.cnt',data,rom
	.sect	'.zrodata.Ifx_Ssw_Infra..2.cnt'
	.align	2
.2.cnt:	.type	object
	.size	.2.cnt,4
	.word	-268213592
	.sdecl	'.zrodata.Ifx_Ssw_Infra..3.cnt',data,rom
	.sect	'.zrodata.Ifx_Ssw_Infra..3.cnt'
	.align	2
.3.cnt:	.type	object
	.size	.3.cnt,4
	.word	-268213588
	.sdecl	'.zrodata.Ifx_Ssw_Infra..4.cnt',data,rom
	.sect	'.zrodata.Ifx_Ssw_Infra..4.cnt'
	.align	2
.4.cnt:	.type	object
	.size	.4.cnt,4
	.word	130568
	.sdecl	'.zrodata.Ifx_Ssw_Infra..5.cnt',data,rom
	.sect	'.zrodata.Ifx_Ssw_Infra..5.cnt'
	.align	2
.5.cnt:	.type	object
	.size	.5.cnt,4
	.word	130580
	.sdecl	'.zrodata.Ifx_Ssw_Infra..6.cnt',data,rom
	.sect	'.zrodata.Ifx_Ssw_Infra..6.cnt'
	.align	2
.6.cnt:	.type	object
	.size	.6.cnt,4
	.word	-268213684
	.sdecl	'.zrodata.Ifx_Ssw_Infra..7.cnt',data,rom
	.sect	'.zrodata.Ifx_Ssw_Infra..7.cnt'
	.align	2
.7.cnt:	.type	object
	.size	.7.cnt,4
	.word	-268214072
	.sdecl	'.zrodata.Ifx_Ssw_Infra..8.cnt',data,rom
	.sect	'.zrodata.Ifx_Ssw_Infra..8.cnt'
	.align	2
.8.cnt:	.type	object
	.size	.8.cnt,4
	.word	1287568416
	.sdecl	'.zrodata.Ifx_Ssw_Infra..9.cnt',data,rom
	.sect	'.zrodata.Ifx_Ssw_Infra..9.cnt'
	.align	2
.9.cnt:	.type	object
	.size	.9.cnt,4
	.word	-268214245
	.sdecl	'.zrodata.Ifx_Ssw_Infra..10.cnt',data,rom
	.sect	'.zrodata.Ifx_Ssw_Infra..10.cnt'
	.align	2
.10.cnt:	.type	object
	.size	.10.cnt,4
	.word	1268291200
	
	.sdecl	'.text.Ifx_Ssw_Infra.Ifx_Ssw_getCpuWatchdogPassword',code,cluster('Ifx_Ssw_getCpuWatchdogPassword')
	.sect	'.text.Ifx_Ssw_Infra.Ifx_Ssw_getCpuWatchdogPassword'
	.align	2
	
	.global	Ifx_Ssw_getCpuWatchdogPassword

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	     2   * \file Ifx_Ssw_Infra.c
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    39   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    40  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    41  #include "Ifx_Cfg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    42  #include "Ifx_Ssw_Infra.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    43  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    44  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    45  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    46  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    47  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    48  unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog)
; Function Ifx_Ssw_getCpuWatchdogPassword
.L17:
Ifx_Ssw_getCpuWatchdogPassword:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
	ld.w	d15,[a4]
	extr.u	d15,d15,#2,#14
.L333:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
	xor	d2,d15,#63

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    49  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    50      return Ifx_Ssw_getCpuWatchdogPasswordInline(watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    51  }
	ret
.L196:
	
__Ifx_Ssw_getCpuWatchdogPassword_function_end:
	.size	Ifx_Ssw_getCpuWatchdogPassword,__Ifx_Ssw_getCpuWatchdogPassword_function_end-Ifx_Ssw_getCpuWatchdogPassword
.L74:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Infra.Ifx_Ssw_getSafetyWatchdogPassword',code,cluster('Ifx_Ssw_getSafetyWatchdogPassword')
	.sect	'.text.Ifx_Ssw_Infra.Ifx_Ssw_getSafetyWatchdogPassword'
	.align	2
	
	.global	Ifx_Ssw_getSafetyWatchdogPassword

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    52  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    53  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    54  unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void)
; Function Ifx_Ssw_getSafetyWatchdogPassword
.L19:
Ifx_Ssw_getSafetyWatchdogPassword:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
	movh.a	a15,#61443
	ld.w	d15,[a15]@los(0xf00362a8)
	extr.u	d15,d15,#2,#14
.L338:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
	xor	d2,d15,#63

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    55  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    56      return Ifx_Ssw_getSafetyWatchdogPasswordInline();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    57  }
	ret
.L204:
	
__Ifx_Ssw_getSafetyWatchdogPassword_function_end:
	.size	Ifx_Ssw_getSafetyWatchdogPassword,__Ifx_Ssw_getSafetyWatchdogPassword_function_end-Ifx_Ssw_getSafetyWatchdogPassword
.L79:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Infra.Ifx_Ssw_clearCpuEndinit',code,cluster('Ifx_Ssw_clearCpuEndinit')
	.sect	'.text.Ifx_Ssw_Infra.Ifx_Ssw_clearCpuEndinit'
	.align	2
	
	.global	Ifx_Ssw_clearCpuEndinit

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    58  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    59  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    60  void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; Function Ifx_Ssw_clearCpuEndinit
.L21:
Ifx_Ssw_clearCpuEndinit:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   353  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   354      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   355  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   356  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   357  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   358  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   359  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)
	fcall	.cocofun_15
.L343:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   361      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   362          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   363          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   364                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   365                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   366                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   367      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   368  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   369      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   370      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   371                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   372                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	or	d15,d4,#2
.L344:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   373                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	fcall	.cocofun_16
.L212:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    61  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    62      Ifx_Ssw_clearCpuEndinitInline(watchdog, password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    63  }
	ret
.L208:
	
__Ifx_Ssw_clearCpuEndinit_function_end:
	.size	Ifx_Ssw_clearCpuEndinit,__Ifx_Ssw_clearCpuEndinit_function_end-Ifx_Ssw_clearCpuEndinit
.L84:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Infra..cocofun_16',code,cluster('.cocofun_16')
	.sect	'.text.Ifx_Ssw_Infra..cocofun_16'
	.align	2
; Function .cocofun_16
.L23:
.cocofun_16:	.type	func
; Function body .cocofun_16, coco_iter:1

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   353  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   354      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   355  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   356  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   357  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   358  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   359  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   361      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   362          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   363          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   364                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   365                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   366                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   367      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   368  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   369      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   370      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   371                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   372                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   373                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	fcall	.cocofun_18
.L292:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   374  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   375      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   376      watchdog->CON0.U;
	ld.w	d15,[a4]
.L461:
	fret
.L179:
	; End of function
	.sdecl	'.text.Ifx_Ssw_Infra..cocofun_18',code,cluster('.cocofun_18')
	.sect	'.text.Ifx_Ssw_Infra..cocofun_18'
	.align	2
; Function .cocofun_18
.L25:
.cocofun_18:	.type	func
; Function body .cocofun_18, coco_iter:2
	ld.w	d0,[a4]
	extr.u	d0,d0,#16,#16
.L473:
	sh	d0,d0,#16
.L474:
	or	d15,d0
	st.w	[a4],d15
.L291:
	fret
.L189:
	; End of function
	.sdecl	'.text.Ifx_Ssw_Infra..cocofun_15',code,cluster('.cocofun_15')
	.sect	'.text.Ifx_Ssw_Infra..cocofun_15'
	.align	2
; Function .cocofun_15
.L27:
.cocofun_15:	.type	func
; Function body .cocofun_15, coco_iter:1
	ld.w	d15,[a4]
.L454:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)      (inlined)
	jz.t	d15:1,.L4
.L455:
	sh	d15,d4,#2
	or	d15,#1
.L456:
	fcall	.cocofun_18

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)      (inlined)
.L4:
	sh	d4,#2
	fret
.L174:
	; End of function
	.sdecl	'.text.Ifx_Ssw_Infra.Ifx_Ssw_setCpuEndinit',code,cluster('Ifx_Ssw_setCpuEndinit')
	.sect	'.text.Ifx_Ssw_Infra.Ifx_Ssw_setCpuEndinit'
	.align	2
	
	.global	Ifx_Ssw_setCpuEndinit

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    64  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    65  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    66  void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; Function Ifx_Ssw_setCpuEndinit
.L29:
Ifx_Ssw_setCpuEndinit:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   353  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   354      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   355  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   356  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   357  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   358  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   359  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   361      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   362          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   363          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   364                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   365                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   366                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   367      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   368  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   369      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   370      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   371                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   372                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   373                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   374  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   375      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   376      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   377  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   378  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   379  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   380  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   381  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   382      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   383      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   384          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   385          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   386                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   387                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   388                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   389      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   390  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   391      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   392      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   393                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   394                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   395                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   396  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   397      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   398      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   399  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   400  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   401  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   402  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   403  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   404      if (watchdog->CON0.B.LCK)
	fcall	.cocofun_12
.L223:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    67  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    68      Ifx_Ssw_setCpuEndinitInline(watchdog, password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    69  }
	ret
.L219:
	
__Ifx_Ssw_setCpuEndinit_function_end:
	.size	Ifx_Ssw_setCpuEndinit,__Ifx_Ssw_setCpuEndinit_function_end-Ifx_Ssw_setCpuEndinit
.L89:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Infra..cocofun_12',code,cluster('.cocofun_12')
	.sect	'.text.Ifx_Ssw_Infra..cocofun_12'
	.align	2
; Function .cocofun_12
.L31:
.cocofun_12:	.type	func
; Function body .cocofun_12, coco_iter:0

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   353  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   354      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   355  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   356  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   357  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   358  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   359  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   361      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   362          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   363          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   364                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   365                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   366                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   367      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   368  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   369      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   370      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   371                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   372                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   373                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   374  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   375      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   376      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   377  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   378  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   379  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   380  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   381  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   382      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   383      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   384          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   385          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   386                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   387                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   388                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   389      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   390  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   391      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   392      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   393                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   394                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   395                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   396  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   397      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   398      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   399  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   400  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   401  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   402  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   403  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   404      if (watchdog->CON0.B.LCK)
	fcall	.cocofun_15
.L293:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   405      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   406          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   407          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   408                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   409                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   410                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   411      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   412  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   413      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   414      watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   415                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   416                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	or	d15,d4,#3
.L434:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   417                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	fcall	.cocofun_16
.L294:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   418  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   419      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   420      watchdog->CON0.U;
	fret
.L159:
	; End of function
	.sdecl	'.text.Ifx_Ssw_Infra.Ifx_Ssw_clearSafetyEndinit',code,cluster('Ifx_Ssw_clearSafetyEndinit')
	.sect	'.text.Ifx_Ssw_Infra.Ifx_Ssw_clearSafetyEndinit'
	.align	2
	
	.global	Ifx_Ssw_clearSafetyEndinit

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    70  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    71  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    72  void Ifx_Ssw_clearSafetyEndinit(unsigned short password)
; Function Ifx_Ssw_clearSafetyEndinit
.L33:
Ifx_Ssw_clearSafetyEndinit:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   353  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   354      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   355  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   356  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   357  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   358  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   359  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   361      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   362          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   363          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   364                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   365                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   366                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   367      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   368  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   369      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   370      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   371                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   372                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   373                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   374  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   375      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   376      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   377  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   378  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   379  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   380  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   381  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   382      if (SCU_WDTS_CON0.B.LCK)
	fcall	.cocofun_14
.L353:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   383      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   384          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   385          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   386                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   387                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   388                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   389      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   390  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   391      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   392      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   393                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   394                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
	or	d15,d4,#2
.L354:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   395                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
	fcall	.cocofun_17
.L233:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    73  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    74      Ifx_Ssw_clearSafetyEndinitInline(password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    75  }
	ret
.L230:
	
__Ifx_Ssw_clearSafetyEndinit_function_end:
	.size	Ifx_Ssw_clearSafetyEndinit,__Ifx_Ssw_clearSafetyEndinit_function_end-Ifx_Ssw_clearSafetyEndinit
.L94:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Infra..cocofun_17',code,cluster('.cocofun_17')
	.sect	'.text.Ifx_Ssw_Infra..cocofun_17'
	.align	2
; Function .cocofun_17
.L35:
.cocofun_17:	.type	func
; Function body .cocofun_17, coco_iter:1

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   353  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   354      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   355  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   356  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   357  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   358  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   359  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   361      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   362          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   363          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   364                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   365                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   366                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   367      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   368  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   369      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   370      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   371                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   372                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   373                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   374  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   375      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   376      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   377  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   378  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   379  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   380  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   381  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   382      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   383      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   384          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   385          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   386                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   387                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   388                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   389      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   390  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   391      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   392      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   393                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   394                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   395                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
	fcall	.cocofun_19
.L466:
	st.w	[a2],d15
.L467:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   396  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   397      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   398      SCU_WDTS_CON0.U;
	ld.w	d15,[a2]
.L468:
	fret
.L184:
	; End of function
	.sdecl	'.text.Ifx_Ssw_Infra..cocofun_19',code,cluster('.cocofun_19')
	.sect	'.text.Ifx_Ssw_Infra..cocofun_19'
	.align	2
; Function .cocofun_19
.L37:
.cocofun_19:	.type	func
; Function body .cocofun_19, coco_iter:2
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L479:
	sh	d0,d0,#16
.L480:
	or	d15,d0
	fret
.L194:
	; End of function
	.sdecl	'.text.Ifx_Ssw_Infra..cocofun_14',code,cluster('.cocofun_14')
	.sect	'.text.Ifx_Ssw_Infra..cocofun_14'
	.align	2
; Function .cocofun_14
.L39:
.cocofun_14:	.type	func
; Function body .cocofun_14, coco_iter:1
	ld.w	d15,.2.cnt
	mov.a	a15,d15
	ld.w	d15,[a15]
.L444:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   382      if (SCU_WDTS_CON0.B.LCK)      (inlined)
	jz.t	d15:1,.L6
.L445:
	sh	d15,d4,#2
	or	d15,#1
.L446:
	fcall	.cocofun_19
.L447:
	st.w	[a15],d15

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   382      if (SCU_WDTS_CON0.B.LCK)      (inlined)
.L6:
	ld.w	d15,.2.cnt
.L448:
	sh	d4,#2
.L295:
	mov.a	a2,d15
.L449:
	fret
.L169:
	; End of function
	.sdecl	'.text.Ifx_Ssw_Infra.Ifx_Ssw_setSafetyEndinit',code,cluster('Ifx_Ssw_setSafetyEndinit')
	.sect	'.text.Ifx_Ssw_Infra.Ifx_Ssw_setSafetyEndinit'
	.align	2
	
	.global	Ifx_Ssw_setSafetyEndinit

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    76  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    77  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    78  void Ifx_Ssw_setSafetyEndinit(unsigned short password)
; Function Ifx_Ssw_setSafetyEndinit
.L41:
Ifx_Ssw_setSafetyEndinit:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   353  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   354      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   355  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   356  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   357  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   358  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   359  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   361      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   362          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   363          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   364                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   365                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   366                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   367      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   368  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   369      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   370      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   371                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   372                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   373                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   374  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   375      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   376      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   377  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   378  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   379  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   380  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   381  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   382      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   383      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   384          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   385          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   386                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   387                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   388                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   389      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   390  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   391      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   392      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   393                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   394                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   395                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   396  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   397      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   398      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   399  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   400  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   401  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   402  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   403  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   404      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   405      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   406          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   407          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   408                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   409                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   410                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   411      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   412  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   413      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   414      watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   415                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   416                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   417                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   418  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   419      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   420      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   421  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   422  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   423  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   424  IFX_SSW_INLINE void Ifx_Ssw_setSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   425  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   426      if (SCU_WDTS_CON0.B.LCK)
	fcall	.cocofun_11
.L241:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    79  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    80      Ifx_Ssw_setSafetyEndinitInline(password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    81  }
	ret
.L238:
	
__Ifx_Ssw_setSafetyEndinit_function_end:
	.size	Ifx_Ssw_setSafetyEndinit,__Ifx_Ssw_setSafetyEndinit_function_end-Ifx_Ssw_setSafetyEndinit
.L99:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Infra..cocofun_11',code,cluster('.cocofun_11')
	.sect	'.text.Ifx_Ssw_Infra..cocofun_11'
	.align	2
; Function .cocofun_11
.L43:
.cocofun_11:	.type	func
; Function body .cocofun_11, coco_iter:0

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   353  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   354      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   355  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   356  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   357  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   358  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   359  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   361      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   362          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   363          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   364                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   365                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   366                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   367      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   368  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   369      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   370      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   371                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   372                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   373                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   374  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   375      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   376      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   377  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   378  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   379  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   380  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   381  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   382      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   383      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   384          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   385          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   386                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   387                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   388                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   389      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   390  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   391      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   392      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   393                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   394                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   395                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   396  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   397      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   398      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   399  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   400  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   401  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   402  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   403  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   404      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   405      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   406          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   407          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   408                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   409                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   410                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   411      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   412  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   413      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   414      watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   415                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   416                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   417                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   418  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   419      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   420      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   421  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   422  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   423  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   424  IFX_SSW_INLINE void Ifx_Ssw_setSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   425  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   426      if (SCU_WDTS_CON0.B.LCK)
	fcall	.cocofun_14
.L427:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   427      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   428          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   429          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   430                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   431                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   432                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   433      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   434  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   435      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   436      SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   437                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   438                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
	or	d15,d4,#3
.L428:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   439                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
	fcall	.cocofun_17
.L429:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   440  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   441      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   442      SCU_WDTS_CON0.U;
	fret
.L154:
	; End of function
	.sdecl	'.text.Ifx_Ssw_Infra.Ifx_Ssw_serviceCpuWatchdog',code,cluster('Ifx_Ssw_serviceCpuWatchdog')
	.sect	'.text.Ifx_Ssw_Infra.Ifx_Ssw_serviceCpuWatchdog'
	.align	2
	
	.global	Ifx_Ssw_serviceCpuWatchdog

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    82  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    83  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    84  void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; Function Ifx_Ssw_serviceCpuWatchdog
.L45:
Ifx_Ssw_serviceCpuWatchdog:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   353  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   354      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   355  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   356  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   357  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   358  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   359  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   361      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   362          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   363          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   364                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   365                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   366                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   367      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   368  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   369      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   370      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   371                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   372                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   373                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   374  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   375      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   376      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   377  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   378  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   379  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   380  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   381  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   382      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   383      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   384          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   385          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   386                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   387                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   388                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   389      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   390  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   391      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   392      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   393                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   394                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   395                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   396  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   397      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   398      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   399  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   400  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   401  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   402  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   403  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   404      if (watchdog->CON0.B.LCK)
	fcall	.cocofun_12
.L284:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    85  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    86      Ifx_Ssw_setCpuEndinitInline(watchdog, password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    87  }
	ret
.L281:
	
__Ifx_Ssw_serviceCpuWatchdog_function_end:
	.size	Ifx_Ssw_serviceCpuWatchdog,__Ifx_Ssw_serviceCpuWatchdog_function_end-Ifx_Ssw_serviceCpuWatchdog
.L144:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Infra.Ifx_Ssw_serviceSafetyWatchdog',code,cluster('Ifx_Ssw_serviceSafetyWatchdog')
	.sect	'.text.Ifx_Ssw_Infra.Ifx_Ssw_serviceSafetyWatchdog'
	.align	2
	
	.global	Ifx_Ssw_serviceSafetyWatchdog

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    89  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    90  void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password)
; Function Ifx_Ssw_serviceSafetyWatchdog
.L47:
Ifx_Ssw_serviceSafetyWatchdog:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   353  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   354      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   355  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   356  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   357  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   358  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   359  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   361      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   362          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   363          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   364                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   365                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   366                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   367      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   368  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   369      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   370      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   371                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   372                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   373                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   374  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   375      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   376      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   377  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   378  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   379  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   380  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   381  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   382      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   383      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   384          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   385          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   386                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   387                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   388                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   389      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   390  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   391      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   392      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   393                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   394                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   395                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   396  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   397      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   398      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   399  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   400  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   401  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   402  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   403  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   404      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   405      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   406          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   407          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   408                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   409                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   410                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   411      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   412  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   413      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   414      watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   415                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   416                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   417                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   418  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   419      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   420      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   421  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   422  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   423  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   424  IFX_SSW_INLINE void Ifx_Ssw_setSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   425  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   426      if (SCU_WDTS_CON0.B.LCK)
	fcall	.cocofun_11
.L289:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    91  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    92      Ifx_Ssw_setSafetyEndinitInline(password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    93  }
	ret
.L287:
	
__Ifx_Ssw_serviceSafetyWatchdog_function_end:
	.size	Ifx_Ssw_serviceSafetyWatchdog,__Ifx_Ssw_serviceSafetyWatchdog_function_end-Ifx_Ssw_serviceSafetyWatchdog
.L149:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Infra.Ifx_Ssw_disableCpuWatchdog',code,cluster('Ifx_Ssw_disableCpuWatchdog')
	.sect	'.text.Ifx_Ssw_Infra.Ifx_Ssw_disableCpuWatchdog'
	.align	2
	
	.global	Ifx_Ssw_disableCpuWatchdog

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    94  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    95  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    96  void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; Function Ifx_Ssw_disableCpuWatchdog
.L49:
Ifx_Ssw_disableCpuWatchdog:	.type	func
	mov	d8,d4
.L299:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    97  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    98      /* Select CPU Watchdog based on Core Id */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	    99      unsigned int    cpuIndex;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   100      cpuIndex = Ifx_Ssw_MFCR(CPU_CORE_ID);
	mfcr	d15,#65052
.L296:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   101      cpuIndex = (unsigned int)((unsigned int)cpuIndex >> IFX_CPU_CORE_ID_CORE_ID_OFF) & IFX_CPU_CORE_ID_CORE_ID_MSK;
	fcall	.cocofun_13
.L252:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   102      cpuIndex = Ifx_Ssw_MINU(cpuIndex, 5);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   103      Ifx_SCU_WDTCPU *wdt = &MODULE_SCU.WDTCPU[cpuIndex];
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   104  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   105      Ifx_Ssw_clearCpuEndinit(wdt, password);
	call	Ifx_Ssw_clearCpuEndinit
.L300:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   106      wdt->CON1.B.DR = 1U;         /* Set DR bit in Config_1 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   107      Ifx_Ssw_setCpuEndinit(wdt, password);
	mov	d4,d8
	ld.bu	d15,[a15]4
.L302:
	mov.aa	a4,a15
.L303:
	or	d15,#8
	st.b	[a15]4,d15
.L363:
	j	Ifx_Ssw_setCpuEndinit
.L246:
	
__Ifx_Ssw_disableCpuWatchdog_function_end:
	.size	Ifx_Ssw_disableCpuWatchdog,__Ifx_Ssw_disableCpuWatchdog_function_end-Ifx_Ssw_disableCpuWatchdog
.L104:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Infra..cocofun_13',code,cluster('.cocofun_13')
	.sect	'.text.Ifx_Ssw_Infra..cocofun_13'
	.align	2
; Function .cocofun_13
.L51:
.cocofun_13:	.type	func
; Function body .cocofun_13, coco_iter:0
	and	d15,#7
.L439:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     2   * \file Ifx_Ssw_CompilersTasking.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     3   * \brief Startup Software for Tasking compiler options
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     8   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     9   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    10   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    11   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    12   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    13   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    14   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    15   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    16   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    17   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    18   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    19   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    20   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    21   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    22   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    23   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    24   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    25   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    26   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    27   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    28   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    29   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    30   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    31   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    32   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    33   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    34   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    35   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    36   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    37   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    38   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    39   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    40  #ifndef IFX_SSW_COMPILERSTASKING_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    41  #define IFX_SSW_COMPILERSTASKING_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    42  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    43  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    44  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    45  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    46  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    47  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    48  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    49  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    50  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    51  /*Linker definitions which are specific to Tasking */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    52  /* IFX_CFG_USE_COMPILER_DEFAULT_LINKER shall be defined in Ifx_Cfg.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    53   * to use the default compiler linker varaibles and startup */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    54  #ifndef IFX_CFG_USE_COMPILER_DEFAULT_LINKER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    56  /*Start: Common definitions ********************************************** */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    57  #define IFX_SSW_COMMON_LINKER_SYMBOLS()                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    58      __asm("\t .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_"); \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    59      extern unsigned int __START0[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    60      extern unsigned int __START1[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    61      extern unsigned int __START2[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    62      extern unsigned int __START3[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    63      extern unsigned int __START4[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    64      extern unsigned int __START5[];     /**< Pointer to the startup code */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    65  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    66  /*End: Common definitions ************************************************ */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    67  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    68  /*Start: Core 0 definitions ********************************************** */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    69  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    70  /*C extern defintions */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    71  #define IFX_SSW_CORE_LINKER_SYMBOLS(cpu)                                                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    72      __asm("\t .extern __USTACK"#cpu);         /**< user stack end is required as asm to be used with setreg macro */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    73      extern unsigned int __ISTACK##cpu[];      /**< interrupt stack end */                                            \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    74      extern unsigned int __INTTAB_CPU##cpu[];  /**< interrupt vector table */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    75      extern unsigned int __TRAPTAB_CPU##cpu[]; /**< trap vector table */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    76      extern unsigned int __CSA##cpu[];         /**< context save area begin */                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    77      extern unsigned int __CSA##cpu##_END[];   /**< context save area end   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    78  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    79  #define __USTACK(cpu)      __USTACK##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    80  #define __ISTACK(cpu)      __ISTACK##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    81  #define __INTTAB_CPU(cpu)  __INTTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    82  #define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    83  #define __CSA(cpu)         __CSA##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    84  #define __CSA_END(cpu)     __CSA##cpu##_END
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    85  #define __START(cpu)       __START##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    86  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    87  /*Wrapper macros for the tool specific definitions */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    88  #if defined(IFX_USE_SW_MANAGED_INT)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    89  #define __INTTAB(cpu)      ((unsigned int)__INTTAB_CPU##cpu | (unsigned int)0x1FE0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    90  #else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    91  #define __INTTAB(cpu)      __INTTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    92  #endif /*defined(IFX_USE_SW_MANAGED_INT) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    94  #define __TRAPTAB(cpu)     __TRAPTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    95  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    96  #define __SDATA1(cpu)      _SMALL_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    97  #define __SDATA2(cpu)      _LITERAL_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    98  #define __SDATA3(cpu)      _A8_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    99  #define __SDATA4(cpu)      _A9_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   100  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   101  #endif /*IFX_CFG_USE_COMPILER_DEFAULT_LINKER*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   103  #ifdef __cplusplus
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   104  #define IFX_SSW_INLINE   static inline
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   105  #else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   106  #define IFX_SSW_INLINE   inline
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   107  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   108  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   109  #define IFX_SSW_NULL_PTR ((void *)0x0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   111  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   112  /*----------------------------   GNU Intrinsics  -----------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   113  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   115  #define Ifx_Ssw_MTCR(reg, val) __mtcr(reg, val);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   116  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   117  #define Ifx_Ssw_MFCR(reg)      __mfcr(reg);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   119  IFX_SSW_INLINE void Ifx_Ssw_NOP(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   120  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   121      __nop();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   122  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   123  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   124  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   125  IFX_SSW_INLINE void Ifx_Ssw_DSYNC(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   126  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   127      __dsync();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   128  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   129  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   130  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   131  IFX_SSW_INLINE void Ifx_Ssw_ISYNC(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   132  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   133      __isync();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   134  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   135  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   136  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   137  IFX_SSW_INLINE unsigned int Ifx_Ssw_MINU(unsigned int a, unsigned int b)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   138  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   139      return __minu(a, b);
	min.u	d15,d15,#5
.L297:
	mul	d15,d15,#12
	mov.a	a15,d15
	movh.a	a3,#61443
	add.a	a3,a15
	lea	a15,[a3]25164
.L298:
	mov.aa	a4,a15
.L301:
	fret
.L164:
	; End of function
	.sdecl	'.text.Ifx_Ssw_Infra.Ifx_Ssw_enableCpuWatchdog',code,cluster('Ifx_Ssw_enableCpuWatchdog')
	.sect	'.text.Ifx_Ssw_Infra.Ifx_Ssw_enableCpuWatchdog'
	.align	2
	
	.global	Ifx_Ssw_enableCpuWatchdog

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   108  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   109  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   111  void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; Function Ifx_Ssw_enableCpuWatchdog
.L53:
Ifx_Ssw_enableCpuWatchdog:	.type	func
	mov	d8,d4
.L305:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   112  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   113      /* Select CPU Watchdog based on Core Id */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   114      unsigned int    cpuIndex;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   115      cpuIndex = Ifx_Ssw_MFCR(CPU_CORE_ID);
	mfcr	d15,#65052
.L304:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   116      cpuIndex = (unsigned int)((unsigned int)cpuIndex >> IFX_CPU_CORE_ID_CORE_ID_OFF) & IFX_CPU_CORE_ID_CORE_ID_MSK;
	fcall	.cocofun_13
.L258:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   117      cpuIndex = Ifx_Ssw_MINU(cpuIndex, 5);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   118      Ifx_SCU_WDTCPU *wdt = &MODULE_SCU.WDTCPU[cpuIndex];
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   119  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   120      Ifx_Ssw_clearCpuEndinit(wdt, password);
	call	Ifx_Ssw_clearCpuEndinit
.L306:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   121      wdt->CON1.B.DR = 0U;         /* Clear DR bit in Config_1 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   122      Ifx_Ssw_setCpuEndinit(wdt, password);
	mov	d4,d8
	ld.bu	d15,[a15]4
.L307:
	mov.aa	a4,a15
.L308:
	insert	d15,d15,#0,#3,#1
	st.b	[a15]4,d15
.L368:
	j	Ifx_Ssw_setCpuEndinit
.L254:
	
__Ifx_Ssw_enableCpuWatchdog_function_end:
	.size	Ifx_Ssw_enableCpuWatchdog,__Ifx_Ssw_enableCpuWatchdog_function_end-Ifx_Ssw_enableCpuWatchdog
.L109:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Infra.Ifx_Ssw_disableSafetyWatchdog',code,cluster('Ifx_Ssw_disableSafetyWatchdog')
	.sect	'.text.Ifx_Ssw_Infra.Ifx_Ssw_disableSafetyWatchdog'
	.align	2
	
	.global	Ifx_Ssw_disableSafetyWatchdog

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   123  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   124  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   125  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   126  void Ifx_Ssw_disableSafetyWatchdog(unsigned short password)
; Function Ifx_Ssw_disableSafetyWatchdog
.L55:
Ifx_Ssw_disableSafetyWatchdog:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   127  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   128      Ifx_Ssw_clearSafetyEndinit(password);
	mov	d8,d4
	call	Ifx_Ssw_clearSafetyEndinit
.L309:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   129      SCU_WDTS_CON1.B.DR = 1U;     /* Set DR bit in Config_1 register */
	ld.w	d15,.3.cnt
.L373:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   130      Ifx_Ssw_setSafetyEndinit(password);
	mov	d4,d8
.L310:
	mov.a	a15,d15
	ld.bu	d15,[a15]
.L374:
	or	d15,#8
	st.b	[a15],d15
.L375:
	j	Ifx_Ssw_setSafetyEndinit
.L260:
	
__Ifx_Ssw_disableSafetyWatchdog_function_end:
	.size	Ifx_Ssw_disableSafetyWatchdog,__Ifx_Ssw_disableSafetyWatchdog_function_end-Ifx_Ssw_disableSafetyWatchdog
.L114:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Infra.Ifx_Ssw_enableSafetyWatchdog',code,cluster('Ifx_Ssw_enableSafetyWatchdog')
	.sect	'.text.Ifx_Ssw_Infra.Ifx_Ssw_enableSafetyWatchdog'
	.align	2
	
	.global	Ifx_Ssw_enableSafetyWatchdog

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   131  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   132  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   133  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   134  void Ifx_Ssw_enableSafetyWatchdog(unsigned short password)
; Function Ifx_Ssw_enableSafetyWatchdog
.L57:
Ifx_Ssw_enableSafetyWatchdog:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   135  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   136      Ifx_Ssw_clearSafetyEndinit(password);
	mov	d15,d4
	call	Ifx_Ssw_clearSafetyEndinit
.L311:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   137      SCU_WDTS_CON1.B.DR = 0U;     /* Clear DR bit in Config_1 register */
	ld.w	d0,.3.cnt
.L380:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   138      Ifx_Ssw_setSafetyEndinit(password);
	mov	d4,d15
.L312:
	mov.a	a15,d0
	ld.bu	d0,[a15]
.L381:
	insert	d0,d0,#0,#3,#1
	st.b	[a15],d0
.L382:
	j	Ifx_Ssw_setSafetyEndinit
.L262:
	
__Ifx_Ssw_enableSafetyWatchdog_function_end:
	.size	Ifx_Ssw_enableSafetyWatchdog,__Ifx_Ssw_enableSafetyWatchdog_function_end-Ifx_Ssw_enableSafetyWatchdog
.L119:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Infra.Ifx_Ssw_startCore',code,cluster('Ifx_Ssw_startCore')
	.sect	'.text.Ifx_Ssw_Infra.Ifx_Ssw_startCore'
	.align	2
	
	.global	Ifx_Ssw_startCore

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   139  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   141  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   142  void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter)
; Function Ifx_Ssw_startCore
.L59:
Ifx_Ssw_startCore:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   143  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   144      /* Set the PC */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   145      cpu->PC.B.PC = (unsigned int)programCounter >> 1U;
	movh.a	a3,#2
	add.a	a3,a4
.L387:
	sh	d4,#-1
	ld.w	d15,[+a3]-504
.L313:
	movh.a	a3,#2
	insert	d15,d15,d4,#1,#31
	add.a	a3,a4
	st.w	[+a3]-504,d15
.L268:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   146  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   147      /* release boot halt mode if required */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   148      Ifx_CPU_SYSCON syscon;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   149      syscon = cpu->SYSCON;
	movh.a	a3,#2
	add.a	a3,a4
	ld.w	d15,[+a3]-492
.L314:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   150  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   151      if (syscon.B.BHALT)
	jz.t	d15:24,.L10
.L388:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   152      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   153          syscon.B.BHALT = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   154          cpu->SYSCON    = syscon;
	insert	d15,d15,#0,#24,#1
	movh.a	a3,#2
	add.a	a3,a4
	st.w	[+a3]-492,d15
.L10:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   155      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   156  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   157  }
	ret
.L264:
	
__Ifx_Ssw_startCore_function_end:
	.size	Ifx_Ssw_startCore,__Ifx_Ssw_startCore_function_end-Ifx_Ssw_startCore
.L124:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Infra.Ifx_Ssw_setCpu0Idle',code,cluster('Ifx_Ssw_setCpu0Idle')
	.sect	'.text.Ifx_Ssw_Infra.Ifx_Ssw_setCpu0Idle'
	.align	2
	
	.global	Ifx_Ssw_setCpu0Idle

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   158  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   160  void Ifx_Ssw_setCpu0Idle(void)
; Function Ifx_Ssw_setCpu0Idle
.L61:
Ifx_Ssw_setCpu0Idle:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   161  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   162      Ifx_SCU_WDTCPU *wdt      = &MODULE_SCU.WDTCPU[0];
	ld.w	d15,.6.cnt
	mov.a	a15,d15
	mov.aa	a4,a15
	call	Ifx_Ssw_getCpuWatchdogPassword
.L315:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   163      unsigned short  cpuWdtPw = Ifx_Ssw_getCpuWatchdogPassword(wdt);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   164      Ifx_Ssw_clearCpuEndinit(wdt, cpuWdtPw);
	mov	d15,d2
	mov.aa	a4,a15
.L317:
	mov	d4,d15
	call	Ifx_Ssw_clearCpuEndinit
.L316:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   165      SCU_PMCSR0.B.REQSLP = 1U;
	ld.w	d0,.7.cnt
.L393:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   166      Ifx_Ssw_setCpuEndinit(wdt, cpuWdtPw);
	mov	d4,d15
	mov.aa	a4,a15
.L318:
	mov.a	a2,d0
	ld.bu	d0,[a2]
.L394:
	insert	d0,d0,#1,#0,#2
	st.b	[a2],d0
.L395:
	j	Ifx_Ssw_setCpuEndinit
.L271:
	
__Ifx_Ssw_setCpu0Idle_function_end:
	.size	Ifx_Ssw_setCpu0Idle,__Ifx_Ssw_setCpu0Idle_function_end-Ifx_Ssw_setCpu0Idle
.L129:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Infra.Ifx_Ssw_getStmFrequency',code,cluster('Ifx_Ssw_getStmFrequency')
	.sect	'.text.Ifx_Ssw_Infra.Ifx_Ssw_getStmFrequency'
	.align	2
	
	.global	Ifx_Ssw_getStmFrequency

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   167  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   169  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   170  float Ifx_Ssw_getStmFrequency(void)
; Function Ifx_Ssw_getStmFrequency
.L63:
Ifx_Ssw_getStmFrequency:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   171  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   172      float        oscFreq    = IFX_CFG_SSW_XTAL_FREQUENCY;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   173      float        sourcefreq = IFX_CFG_SSW_EVR_OSC_FREQUENCY;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   174      unsigned int insel      = SCU_SYSPLLCON0.B.INSEL;
	ld.w	d15,.9.cnt
.L404:
	ld.w	d0,.8.cnt
.L319:
	mov.a	a15,d15
	ld.bu	d15,[a15]
	extr.u	d15,d15,#6,#2
.L321:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   175  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   176      if (insel == 2U)
	jeq	d15,#2,.L11
.L405:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   177      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   178          oscFreq = IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   179      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   180      else if (insel == 1U)
	jne	d15,#1,.L12
.L11:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   181      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   182          oscFreq = IFX_CFG_SSW_XTAL_FREQUENCY;
	ld.w	d1,.10.cnt
.L323:
	j	.L13
.L12:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   183      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   184      else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   185      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   186          oscFreq = IFX_CFG_SSW_EVR_OSC_FREQUENCY;
	mov	d1,d0
.L13:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   187      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   189      if (SCU_CCUCON0.B.CLKSEL != 0U)
	movh.a	a2,#61443
	ld.bu	d15,[a2]@los(0xf0036033)
.L322:
	extr.u	d15,d15,#4,#2
.L406:
	jeq	d15,#0,.L14
.L407:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   190      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   191          sourcefreq = (oscFreq * (SCU_SYSPLLCON0.B.NDIV + 1U)) /
	ld.bu	d15,[a2]@los(0xf0036019)
	extr.u	d15,d15,#1,#7
.L408:
	add	d15,#1
	utof	d15,d15
.L409:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   192                       ((SCU_SYSPLLCON0.B.PDIV + 1U) * (SCU_SYSPLLCON1.B.K2DIV + 1U));
	mul.f	d1,d1,d15
	ld.bu	d15,[a15]
.L324:
	and	d15,#7
.L410:
	add	d0,d15,#1
	ld.bu	d15,[a2]@los(0xf003601c)
.L320:
	and	d15,#7
.L411:
	add	d15,#1
.L412:
	mul	d0,d15
	utof	d15,d0
.L413:
	div.f	d0,d1,d15
.L14:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   193      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   194  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   195      return sourcefreq / SCU_CCUCON0.B.STMDIV;
	mov.aa	a15,a2
	ld.bu	d15,[a15]@los(0xf0036030)
	and	d15,#15
	itof	d15,d15
.L414:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   196  }
	div.f	d2,d0,d15
	ret
.L277:
	
__Ifx_Ssw_getStmFrequency_function_end:
	.size	Ifx_Ssw_getStmFrequency,__Ifx_Ssw_getStmFrequency_function_end-Ifx_Ssw_getStmFrequency
.L139:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Infra.Ifx_Ssw_C_Init',code,cluster('Ifx_Ssw_C_Init')
	.sect	'.text.Ifx_Ssw_Infra.Ifx_Ssw_C_Init'
	.align	2
	
	.global	Ifx_Ssw_C_Init

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   197  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   198  void Ifx_Ssw_C_Init(void)
; Function Ifx_Ssw_C_Init
.L65:
Ifx_Ssw_C_Init:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     2   * \file Ifx_Ssw_CompilersTasking.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     3   * \brief Startup Software for Tasking compiler options
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     8   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     9   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    10   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    11   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    12   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    13   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    14   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    15   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    16   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    17   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    18   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    19   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    20   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    21   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    22   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    23   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    24   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    25   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    26   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    27   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    28   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    29   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    30   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    31   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    32   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    33   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    34   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    35   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    36   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    37   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    38   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    39   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    40  #ifndef IFX_SSW_COMPILERSTASKING_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    41  #define IFX_SSW_COMPILERSTASKING_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    42  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    43  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    44  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    45  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    46  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    47  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    48  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    49  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    50  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    51  /*Linker definitions which are specific to Tasking */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    52  /* IFX_CFG_USE_COMPILER_DEFAULT_LINKER shall be defined in Ifx_Cfg.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    53   * to use the default compiler linker varaibles and startup */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    54  #ifndef IFX_CFG_USE_COMPILER_DEFAULT_LINKER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    56  /*Start: Common definitions ********************************************** */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    57  #define IFX_SSW_COMMON_LINKER_SYMBOLS()                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    58      __asm("\t .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_"); \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    59      extern unsigned int __START0[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    60      extern unsigned int __START1[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    61      extern unsigned int __START2[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    62      extern unsigned int __START3[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    63      extern unsigned int __START4[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    64      extern unsigned int __START5[];     /**< Pointer to the startup code */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    65  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    66  /*End: Common definitions ************************************************ */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    67  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    68  /*Start: Core 0 definitions ********************************************** */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    69  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    70  /*C extern defintions */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    71  #define IFX_SSW_CORE_LINKER_SYMBOLS(cpu)                                                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    72      __asm("\t .extern __USTACK"#cpu);         /**< user stack end is required as asm to be used with setreg macro */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    73      extern unsigned int __ISTACK##cpu[];      /**< interrupt stack end */                                            \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    74      extern unsigned int __INTTAB_CPU##cpu[];  /**< interrupt vector table */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    75      extern unsigned int __TRAPTAB_CPU##cpu[]; /**< trap vector table */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    76      extern unsigned int __CSA##cpu[];         /**< context save area begin */                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    77      extern unsigned int __CSA##cpu##_END[];   /**< context save area end   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    78  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    79  #define __USTACK(cpu)      __USTACK##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    80  #define __ISTACK(cpu)      __ISTACK##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    81  #define __INTTAB_CPU(cpu)  __INTTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    82  #define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    83  #define __CSA(cpu)         __CSA##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    84  #define __CSA_END(cpu)     __CSA##cpu##_END
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    85  #define __START(cpu)       __START##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    86  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    87  /*Wrapper macros for the tool specific definitions */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    88  #if defined(IFX_USE_SW_MANAGED_INT)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    89  #define __INTTAB(cpu)      ((unsigned int)__INTTAB_CPU##cpu | (unsigned int)0x1FE0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    90  #else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    91  #define __INTTAB(cpu)      __INTTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    92  #endif /*defined(IFX_USE_SW_MANAGED_INT) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    94  #define __TRAPTAB(cpu)     __TRAPTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    95  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    96  #define __SDATA1(cpu)      _SMALL_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    97  #define __SDATA2(cpu)      _LITERAL_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    98  #define __SDATA3(cpu)      _A8_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    99  #define __SDATA4(cpu)      _A9_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   100  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   101  #endif /*IFX_CFG_USE_COMPILER_DEFAULT_LINKER*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   103  #ifdef __cplusplus
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   104  #define IFX_SSW_INLINE   static inline
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   105  #else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   106  #define IFX_SSW_INLINE   inline
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   107  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   108  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   109  #define IFX_SSW_NULL_PTR ((void *)0x0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   111  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   112  /*----------------------------   GNU Intrinsics  -----------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   113  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   115  #define Ifx_Ssw_MTCR(reg, val) __mtcr(reg, val);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   116  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   117  #define Ifx_Ssw_MFCR(reg)      __mfcr(reg);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   119  IFX_SSW_INLINE void Ifx_Ssw_NOP(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   120  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   121      __nop();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   122  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   123  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   124  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   125  IFX_SSW_INLINE void Ifx_Ssw_DSYNC(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   126  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   127      __dsync();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   128  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   129  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   130  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   131  IFX_SSW_INLINE void Ifx_Ssw_ISYNC(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   132  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   133      __isync();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   134  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   135  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   136  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   137  IFX_SSW_INLINE unsigned int Ifx_Ssw_MINU(unsigned int a, unsigned int b)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   138  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   139      return __minu(a, b);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   140  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   141  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   142  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   143  #define Ifx_Ssw_CLZ(a)                     __clz(a)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   144  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   145  #define Ifx_Ssw___setAddressReg(aReg, val) \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   146      {__asm(" movh.a\t "#aReg ",#@his("#val ")\n lea\t "#aReg ",["#aReg "]@los("#val ")"); }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   147  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   148  #define Ifx_Ssw_setAddressReg(regNum, val) Ifx_Ssw___setAddressReg(regNum, val)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   149  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   150  IFX_SSW_INLINE void Ifx_Ssw_moveToDataParam0(unsigned int var)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   151  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   152      __asm("mov d2, %0" ::"d" (var));
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   153  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   154  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   155  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   156  IFX_SSW_INLINE unsigned int Ifx_Ssw_getDataParam0(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   157  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   158      unsigned int var;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   159      __asm(" mov\t %0, d2" : "=d" (var));
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   160      return var;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   161  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   162  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   163  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   164  IFX_SSW_INLINE void Ifx_Ssw_jumpToFunction(void *fun)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   165  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   166      __asm("ji %0" ::"a" (fun));
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   167  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   169  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   170  IFX_SSW_INLINE void Ifx_Ssw_jumpToFunctionWithLink(void *fun)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   171  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   172      __asm("jli %0" ::"a" (fun));
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   173  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   174  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   175  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   176  IFX_SSW_INLINE void Ifx_Ssw_jumpBackToLink(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   177  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   178      __asm("ji a11");
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   179  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   180  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   181  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   182  IFX_SSW_INLINE void Ifx_Ssw_C_InitInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   183  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   184      extern void _c_init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   185      _c_init();                  /* initialize data */
	j	_c_init
.L273:
	
__Ifx_Ssw_C_Init_function_end:
	.size	Ifx_Ssw_C_Init,__Ifx_Ssw_C_Init_function_end-Ifx_Ssw_C_Init
.L134:
	; End of function
	
	.calls	'Ifx_Ssw_disableCpuWatchdog','Ifx_Ssw_clearCpuEndinit'
	.calls	'Ifx_Ssw_disableCpuWatchdog','Ifx_Ssw_setCpuEndinit'
	.calls	'Ifx_Ssw_enableCpuWatchdog','Ifx_Ssw_clearCpuEndinit'
	.calls	'Ifx_Ssw_enableCpuWatchdog','Ifx_Ssw_setCpuEndinit'
	.calls	'Ifx_Ssw_disableSafetyWatchdog','Ifx_Ssw_clearSafetyEndinit'
	.calls	'Ifx_Ssw_disableSafetyWatchdog','Ifx_Ssw_setSafetyEndinit'
	.calls	'Ifx_Ssw_enableSafetyWatchdog','Ifx_Ssw_clearSafetyEndinit'
	.calls	'Ifx_Ssw_enableSafetyWatchdog','Ifx_Ssw_setSafetyEndinit'
	.calls	'Ifx_Ssw_setCpu0Idle','Ifx_Ssw_getCpuWatchdogPassword'
	.calls	'Ifx_Ssw_setCpu0Idle','Ifx_Ssw_clearCpuEndinit'
	.calls	'Ifx_Ssw_setCpu0Idle','Ifx_Ssw_setCpuEndinit'
	.calls	'Ifx_Ssw_C_Init','_c_init'
	.calls	'Ifx_Ssw_clearCpuEndinit','.cocofun_15'
	.calls	'Ifx_Ssw_clearCpuEndinit','.cocofun_16'
	.calls	'.cocofun_16','.cocofun_18'
	.calls	'.cocofun_15','.cocofun_18'
	.calls	'Ifx_Ssw_setCpuEndinit','.cocofun_12'
	.calls	'.cocofun_12','.cocofun_15'
	.calls	'.cocofun_12','.cocofun_16'
	.calls	'Ifx_Ssw_clearSafetyEndinit','.cocofun_14'
	.calls	'Ifx_Ssw_clearSafetyEndinit','.cocofun_17'
	.calls	'.cocofun_17','.cocofun_19'
	.calls	'.cocofun_14','.cocofun_19'
	.calls	'Ifx_Ssw_setSafetyEndinit','.cocofun_11'
	.calls	'.cocofun_11','.cocofun_14'
	.calls	'.cocofun_11','.cocofun_17'
	.calls	'Ifx_Ssw_serviceCpuWatchdog','.cocofun_12'
	.calls	'Ifx_Ssw_serviceSafetyWatchdog','.cocofun_11'
	.calls	'Ifx_Ssw_disableCpuWatchdog','.cocofun_13'
	.calls	'Ifx_Ssw_enableCpuWatchdog','.cocofun_13'
	.calls	'Ifx_Ssw_getCpuWatchdogPassword','',0
	.calls	'Ifx_Ssw_getSafetyWatchdogPassword','',0
	.calls	'Ifx_Ssw_clearCpuEndinit','',0
	.calls	'.cocofun_16','',0
	.calls	'.cocofun_18','',0
	.calls	'.cocofun_15','',0
	.calls	'Ifx_Ssw_setCpuEndinit','',0
	.calls	'.cocofun_12','',0
	.calls	'Ifx_Ssw_clearSafetyEndinit','',0
	.calls	'.cocofun_17','',0
	.calls	'.cocofun_19','',0
	.calls	'.cocofun_14','',0
	.calls	'Ifx_Ssw_setSafetyEndinit','',0
	.calls	'.cocofun_11','',0
	.calls	'Ifx_Ssw_serviceCpuWatchdog','',0
	.calls	'Ifx_Ssw_serviceSafetyWatchdog','',0
	.calls	'Ifx_Ssw_disableCpuWatchdog','',0
	.calls	'.cocofun_13','',0
	.calls	'Ifx_Ssw_enableCpuWatchdog','',0
	.calls	'Ifx_Ssw_disableSafetyWatchdog','',0
	.calls	'Ifx_Ssw_enableSafetyWatchdog','',0
	.calls	'Ifx_Ssw_startCore','',0
	.calls	'Ifx_Ssw_setCpu0Idle','',0
	.calls	'Ifx_Ssw_getStmFrequency','',0
	.extern	_c_init
	.calls	'Ifx_Ssw_C_Init','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L67:
	.word	125874
	.half	3
	.word	.L68
	.byte	4
.L66:
	.byte	1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L69
	.byte	2
	.byte	'Ifx_Ssw_DSYNC',0,3,1,125,21,1,1,3,0
.L250:
	.byte	4
	.byte	'unsigned int',0,4,7,5
	.byte	'Ifx_Ssw_MINU',0,3,1,137,1,29
	.word	196
	.byte	1,1,6
	.byte	'a',0,1,137,1,55
	.word	196
	.byte	6
	.byte	'b',0,1,137,1,71
	.word	196
	.byte	3,0
.L274:
	.byte	2
	.byte	'Ifx_Ssw_C_InitInline',0,3,1,182,1,21,1,1
.L275:
	.byte	3,0,7,1,1,8
	.word	292
	.byte	2
	.byte	'Ifx__jump_and_link',0,3,2,58,17,1,1,6
	.byte	'fun',0,2,58,43
	.word	295
	.byte	3,0,4
	.byte	'__fract',0,4,128,1
.L276:
	.byte	4
	.byte	'float',0,4,4,5
	.byte	'Ifx__float_to_fract',0,3,2,149,2,18
	.word	340
	.byte	1,1,6
	.byte	'a',0,2,149,2,44
	.word	352
	.byte	3,0,2
	.byte	'Ifx__stopPerfCounters',0,3,2,169,2,17,1,1,3,0,4
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,8
	.word	464
	.byte	5
	.byte	'__ld64',0,3,3,132,1,19
	.word	438
	.byte	1,1,6
	.byte	'addr',0,3,132,1,32
	.word	470
	.byte	3,0,2
	.byte	'__st64',0,3,3,140,1,17,1,1,6
	.byte	'addr',0,3,140,1,30
	.word	470
	.byte	6
	.byte	'value',0,3,140,1,43
	.word	438
	.byte	3,0,4
	.byte	'int',0,4,5,4
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,5,238,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	563
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	563
	.byte	16,0,2,35,0,0,12,5,189,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	579
	.byte	4,2,35,0,0,4
	.byte	'unsigned char',0,1,8
.L195:
	.byte	4
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,5,247,9,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	715
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	16,0,2,35,2,0,12,5,197,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	754
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,5,135,10,16,4,11
	.byte	'AE',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	715
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	732
	.byte	16,0,2,35,2,0,12,5,205,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1020
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,5,136,17,25,12,13
	.byte	'CON0',0
	.word	675
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	980
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1211
	.byte	4,2,35,8,0,14
	.word	1251
.L197:
	.byte	8
	.word	1314
	.byte	2
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,4,164,4,17,1,1,6
	.byte	'watchdog',0,4,164,4,65
	.word	1319
	.byte	6
	.byte	'password',0,4,164,4,82
	.word	732
	.byte	3,0,2
	.byte	'IfxScuWdt_clearGlobalSafetyEndinitInline',0,3,4,187,4,17,1,1,6
	.byte	'password',0,4,187,4,65
	.word	732
	.byte	3,0,2
	.byte	'IfxScuWdt_clearSafetyEndinitInline',0,3,4,197,4,17,1,1,6
	.byte	'password',0,4,197,4,59
	.word	732
	.byte	3,0,5
	.byte	'IfxScuWdt_getGlobalSafetyEndinitPasswordInline',0,3,4,240,4,19
	.word	732
	.byte	1,1,3,0,2
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,4,144,5,17,1,1,6
	.byte	'watchdog',0,4,144,5,63
	.word	1319
	.byte	6
	.byte	'password',0,4,144,5,80
	.word	732
	.byte	3,0,2
	.byte	'IfxScuWdt_setGlobalSafetyEndinitInline',0,3,4,167,5,17,1,1,6
	.byte	'password',0,4,167,5,63
	.word	732
	.byte	3,0,2
	.byte	'IfxScuWdt_setSafetyEndinitInline',0,3,4,177,5,17,1,1,6
	.byte	'password',0,4,177,5,57
	.word	732
	.byte	3,0,5
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,4,220,4,19
	.word	732
	.byte	1,1,6
	.byte	'watchdog',0,4,220,4,74
	.word	1319
	.byte	3,0,5
	.byte	'IfxScuWdt_getSafetyWatchdogPasswordInline',0,3,4,129,5,19
	.word	732
	.byte	1,1,3,0,10
	.byte	'_Ifx_P_OUT_Bits',0,7,145,3,16,4,11
	.byte	'P0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	16,0,2,35,2,0,12,7,171,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1926
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,7,171,2,16,4,11
	.byte	'PS0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	715
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	715
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	715
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	715
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	715
	.byte	1,0,2,35,3,0,12,7,251,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2242
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,7,133,1,16,4,11
	.byte	'MODREV',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	732
	.byte	16,0,2,35,2,0,12,7,155,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2813
	.byte	4,2,35,0,0,15,4
	.word	715
	.byte	16,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,7,163,1,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	715
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	715
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	715
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	715
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	715
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	715
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	715
	.byte	5,0,2,35,3,0,12,7,171,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2942
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,7,189,1,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	715
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	715
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	715
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	715
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	715
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	715
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	715
	.byte	5,0,2,35,3,0,12,7,187,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3157
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,7,202,1,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	715
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	715
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	715
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	715
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	715
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	715
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	715
	.byte	5,0,2,35,3,0,12,7,195,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3372
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,7,176,1,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	715
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	715
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	715
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	715
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	715
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	715
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	715
	.byte	5,0,2,35,3,0,12,7,179,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3589
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,7,141,1,16,4,11
	.byte	'P0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	16,0,2,35,2,0,12,7,163,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3809
	.byte	4,2,35,0,0,15,24
	.word	715
	.byte	16,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,7,212,3,16,4,11
	.byte	'PD0',0,1
	.word	715
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	715
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	715
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	715
	.byte	2,0,2,35,0,11
	.byte	'PD2',0,1
	.word	715
	.byte	2,6,2,35,1,11
	.byte	'PL2',0,1
	.word	715
	.byte	2,4,2,35,1,11
	.byte	'PD3',0,1
	.word	715
	.byte	2,2,2,35,1,11
	.byte	'PL3',0,1
	.word	715
	.byte	2,0,2,35,1,11
	.byte	'PD4',0,1
	.word	715
	.byte	2,6,2,35,2,11
	.byte	'PL4',0,1
	.word	715
	.byte	2,4,2,35,2,11
	.byte	'PD5',0,1
	.word	715
	.byte	2,2,2,35,2,11
	.byte	'PL5',0,1
	.word	715
	.byte	2,0,2,35,2,11
	.byte	'PD6',0,1
	.word	715
	.byte	2,6,2,35,3,11
	.byte	'PL6',0,1
	.word	715
	.byte	2,4,2,35,3,11
	.byte	'PD7',0,1
	.word	715
	.byte	2,2,2,35,3,11
	.byte	'PL7',0,1
	.word	715
	.byte	2,0,2,35,3,0,12,7,195,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4133
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,7,233,3,16,4,11
	.byte	'PD8',0,1
	.word	715
	.byte	2,6,2,35,0,11
	.byte	'PL8',0,1
	.word	715
	.byte	2,4,2,35,0,11
	.byte	'PD9',0,1
	.word	715
	.byte	2,2,2,35,0,11
	.byte	'PL9',0,1
	.word	715
	.byte	2,0,2,35,0,11
	.byte	'PD10',0,1
	.word	715
	.byte	2,6,2,35,1,11
	.byte	'PL10',0,1
	.word	715
	.byte	2,4,2,35,1,11
	.byte	'PD11',0,1
	.word	715
	.byte	2,2,2,35,1,11
	.byte	'PL11',0,1
	.word	715
	.byte	2,0,2,35,1,11
	.byte	'PD12',0,1
	.word	715
	.byte	2,6,2,35,2,11
	.byte	'PL12',0,1
	.word	715
	.byte	2,4,2,35,2,11
	.byte	'PD13',0,1
	.word	715
	.byte	2,2,2,35,2,11
	.byte	'PL13',0,1
	.word	715
	.byte	2,0,2,35,2,11
	.byte	'PD14',0,1
	.word	715
	.byte	2,6,2,35,3,11
	.byte	'PL14',0,1
	.word	715
	.byte	2,4,2,35,3,11
	.byte	'PD15',0,1
	.word	715
	.byte	2,2,2,35,3,11
	.byte	'PL15',0,1
	.word	715
	.byte	2,0,2,35,3,0,12,7,203,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4437
	.byte	4,2,35,0,0,15,8
	.word	715
	.byte	16,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,7,111,16,4,11
	.byte	'EN0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	16,0,2,35,2,0,12,7,147,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4762
	.byte	4,2,35,0,0,15,12
	.word	715
	.byte	16,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,7,190,3,16,4,11
	.byte	'PDIS0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	16,0,2,35,2,0,12,7,187,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5102
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,7,167,3,16,4,11
	.byte	'SEL0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'SEL8',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'SEL9',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'SEL12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'SEL13',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'SEL14',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'SEL15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,12,7,179,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5468
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,7,230,2,16,4,11
	.byte	'PS0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	196
	.byte	28,0,2,35,0,0,12,7,139,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5832
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,7,251,2,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	196
	.byte	24,0,2,35,0,0,12,7,155,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5979
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,7,134,3,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	196
	.byte	20,0,2,35,0,0,12,7,163,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6148
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,7,240,2,16,4,11
	.byte	'reserved_0',0,2
	.word	732
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	16,0,2,35,2,0,12,7,147,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6320
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,7,128,2,16,4,11
	.byte	'reserved_0',0,2
	.word	732
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	732
	.byte	12,0,2,35,2,0,12,7,219,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6495
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,7,149,2,16,4,11
	.byte	'reserved_0',0,4
	.word	196
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	715
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	715
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	715
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	715
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	715
	.byte	8,0,2,35,3,0,12,7,235,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6669
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,7,160,2,16,4,11
	.byte	'reserved_0',0,4
	.word	196
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	715
	.byte	4,0,2,35,3,0,12,7,243,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6843
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,7,139,2,16,4,11
	.byte	'reserved_0',0,4
	.word	196
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	715
	.byte	1,0,2,35,3,0,12,7,227,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7019
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,7,208,2,16,4,11
	.byte	'PS0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	16,0,2,35,2,0,12,7,131,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7175
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,7,234,1,16,4,11
	.byte	'reserved_0',0,2
	.word	732
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	715
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	715
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	715
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	715
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	715
	.byte	1,0,2,35,3,0,12,7,211,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7508
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR_Bits',0,7,215,1,16,4,11
	.byte	'REN_CTRL',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'RX_EN',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	715
	.byte	3,2,2,35,0,11
	.byte	'LVDSM',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'PS',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'TEN_CTRL',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'TX_EN',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'VDIFFADJ',0,1
	.word	715
	.byte	2,4,2,35,1,11
	.byte	'VOSDYN',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'VOSEXT',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	16,0,2,35,2,0,12,7,203,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7856
	.byte	4,2,35,0,0,15,32
	.word	8136
	.byte	16,7,0,15,56
	.word	715
	.byte	16,55,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,7,105,16,4,11
	.byte	'reserved_0',0,4
	.word	196
	.byte	32,0,2,35,0,0,12,7,139,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8194
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,7,68,16,4,11
	.byte	'EN0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	715
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	715
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	715
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	715
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	715
	.byte	1,0,2,35,3,0,12,7,131,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8281
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,7,220,5,25,128,2,13
	.byte	'OUT',0
	.word	2202
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	2773
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	2893
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2933
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	3117
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	3332
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3549
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	3769
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	2933
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	4084
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4124
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	4397
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4713
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	4753
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	5053
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	5093
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5428
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5792
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	4753
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	5939
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	6108
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	6280
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	6455
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6629
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6803
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	6979
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	7135
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	7468
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	7816
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	4753
	.byte	8,3,35,152,1,13
	.byte	'LPCR',0
	.word	8176
	.byte	32,3,35,160,1,13
	.byte	'reserved_C0',0
	.word	8185
	.byte	56,3,35,192,1,13
	.byte	'ACCEN1',0
	.word	8241
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	8808
	.byte	4,3,35,252,1,0,14
	.word	8848
	.byte	8
	.word	9418
	.byte	17,6,187,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0,2
	.byte	'IfxPort_setPinState',0,3,6,169,5,17,1,1,6
	.byte	'port',0,6,169,5,44
	.word	9423
	.byte	6
	.byte	'pinIndex',0,6,169,5,56
	.word	715
	.byte	6
	.byte	'action',0,6,169,5,80
	.word	9428
	.byte	3,0,2
	.byte	'IfxScuCcu_wait',0,3,8,157,14,17,1,1,6
	.byte	'timeSec',0,8,157,14,40
	.word	352
	.byte	19,3,0,0,5
	.byte	'IfxScuCcu_getStmFrequency',0,3,8,188,13,20
	.word	352
	.byte	1,1,3,0,17,10,161,1,9,1,18
	.byte	'IfxCpu_ResourceCpu_0',0,0,18
	.byte	'IfxCpu_ResourceCpu_1',0,1,18
	.byte	'IfxCpu_ResourceCpu_2',0,2,18
	.byte	'IfxCpu_ResourceCpu_3',0,3,18
	.byte	'IfxCpu_ResourceCpu_4',0,4,18
	.byte	'IfxCpu_ResourceCpu_5',0,5,18
	.byte	'IfxCpu_ResourceCpu_none',0,6,0,5
	.byte	'IfxCpu_getCoreIndex',0,3,9,235,6,31
	.word	9693
	.byte	1,1,3,0,5
	.byte	'IfxCpu_areInterruptsEnabled',0,3,9,233,5,20
	.word	715
	.byte	1,1,3,0,4
	.byte	'unsigned long int',0,4,7,5
	.byte	'IfxCpu_getPerformanceCounter',0,3,9,255,6,19
	.word	9940
	.byte	1,1,6
	.byte	'address',0,9,255,6,55
	.word	732
	.byte	3,0,5
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,9,156,7,20
	.word	715
	.byte	1,1,6
	.byte	'address',0,9,156,7,70
	.word	732
	.byte	3,0,2
	.byte	'IfxCpu_updatePerformanceCounter',0,3,9,138,9,17,1,1,6
	.byte	'address',0,9,138,9,56
	.word	9940
	.byte	6
	.byte	'count',0,9,138,9,72
	.word	9940
	.byte	19,3,0,0,2
	.byte	'IfxPmsEvr_wait',0,3,11,205,9,17,1,1,6
	.byte	'waitInSec',0,11,205,9,40
	.word	352
	.byte	3,0
.L199:
	.byte	5
	.byte	'Ifx_Ssw_getCpuWatchdogPasswordInline',0,3,12,201,2,31
	.word	732
	.byte	1,1
.L200:
	.byte	6
	.byte	'watchdog',0,12,201,2,84
	.word	1319
.L202:
	.byte	3,0
.L205:
	.byte	5
	.byte	'Ifx_Ssw_getSafetyWatchdogPasswordInline',0,3,12,215,2,31
	.word	732
	.byte	1,1
.L206:
	.byte	3,0
.L211:
	.byte	2
	.byte	'Ifx_Ssw_clearCpuEndinitInline',0,3,12,230,2,21,1,1
.L213:
	.byte	6
	.byte	'watchdog',0,12,230,2,67
	.word	1319
.L215:
	.byte	6
	.byte	'password',0,12,230,2,92
	.word	732
.L217:
	.byte	3,0
.L232:
	.byte	2
	.byte	'Ifx_Ssw_clearSafetyEndinitInline',0,3,12,252,2,21,1,1
.L234:
	.byte	6
	.byte	'password',0,12,252,2,69
	.word	732
.L236:
	.byte	3,0
.L222:
	.byte	2
	.byte	'Ifx_Ssw_setCpuEndinitInline',0,3,12,146,3,21,1,1
.L224:
	.byte	6
	.byte	'watchdog',0,12,146,3,65
	.word	1319
.L226:
	.byte	6
	.byte	'password',0,12,146,3,90
	.word	732
.L228:
	.byte	3,0
.L240:
	.byte	2
	.byte	'Ifx_Ssw_setSafetyEndinitInline',0,3,12,168,3,21,1,1
.L242:
	.byte	6
	.byte	'password',0,12,168,3,67
	.word	732
.L244:
	.byte	3,0,20
	.word	556
	.byte	21
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,22
	.word	10608
	.byte	0,14
	.word	196
	.byte	8
	.word	196
	.byte	23
	.byte	'__cmpswapw',0
	.word	10650
	.byte	1,1,1,1,24
	.byte	'p',0
	.word	10655
	.byte	24
	.byte	'value',0
	.word	196
	.byte	24
	.byte	'compare',0
	.word	196
	.byte	0,23
	.byte	'__minu',0
	.word	196
	.byte	1,1,1,1,22
	.word	196
	.byte	22
	.word	196
	.byte	0,14
	.word	556
	.byte	23
	.byte	'__mfcr',0
	.word	10739
	.byte	1,1,1,1,22
	.word	556
	.byte	0,25
	.word	173
	.byte	3,0,25
	.word	212
	.byte	26
	.word	237
	.byte	26
	.word	248
	.byte	3,0,25
	.word	261
	.byte	3,0,25
	.word	300
	.byte	26
	.word	326
	.byte	3,0,25
	.word	361
	.byte	26
	.word	393
	.byte	3,0,25
	.word	406
	.byte	3,0,25
	.word	475
	.byte	26
	.word	494
	.byte	3,0,25
	.word	510
	.byte	26
	.word	525
	.byte	26
	.word	539
	.byte	3,0,25
	.word	1324
	.byte	26
	.word	1364
	.byte	26
	.word	1382
	.byte	3,0,25
	.word	1402
	.byte	26
	.word	1451
	.byte	3,0,25
	.word	1471
	.byte	26
	.word	1514
	.byte	3,0,25
	.word	1534
	.byte	3,0,25
	.word	1595
	.byte	26
	.word	1633
	.byte	26
	.word	1651
	.byte	3,0,25
	.word	1671
	.byte	26
	.word	1718
	.byte	3,0,25
	.word	1738
	.byte	26
	.word	1779
	.byte	3,0,25
	.word	1799
	.byte	26
	.word	1850
	.byte	3,0,25
	.word	1870
	.byte	3,0,25
	.word	9531
	.byte	26
	.word	9559
	.byte	26
	.word	9573
	.byte	26
	.word	9591
	.byte	3,0,25
	.word	9609
	.byte	26
	.word	9632
	.byte	19,27
	.word	9653
	.byte	28
	.word	9691
	.byte	0,3,0,0,25
	.word	9653
	.byte	3,0,25
	.word	9864
	.byte	3,0,25
	.word	9898
	.byte	3,0,25
	.word	9961
	.byte	26
	.word	10002
	.byte	3,0,25
	.word	10021
	.byte	26
	.word	10076
	.byte	3,0,25
	.word	10095
	.byte	26
	.word	10135
	.byte	26
	.word	10152
	.byte	19,3,0,0,25
	.word	10171
	.byte	26
	.word	10194
	.byte	3,0,15,128,34
	.word	715
	.byte	16,255,33,0,10
	.byte	'_Ifx_CPU_FLASHCON0_Bits',0,13,144,4,16,4,11
	.byte	'TAG1',0,4
	.word	563
	.byte	6,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	563
	.byte	2,24,2,35,0,11
	.byte	'TAG2',0,4
	.word	563
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	563
	.byte	2,16,2,35,0,11
	.byte	'TAG3',0,4
	.word	563
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	563
	.byte	2,8,2,35,0,11
	.byte	'TAG4',0,4
	.word	563
	.byte	6,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	563
	.byte	2,0,2,35,0,0,12,13,236,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11099
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FLASHCON1_Bits',0,13,157,4,16,4,11
	.byte	'STALL',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	563
	.byte	15,16,2,35,0,11
	.byte	'MASKUECC',0,4
	.word	563
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	563
	.byte	6,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	563
	.byte	2,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	563
	.byte	6,0,2,35,0,0,12,13,244,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11325
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FLASHCON2_Bits',0,13,168,4,16,4,11
	.byte	'RECDIS',0,4
	.word	563
	.byte	2,30,2,35,0,11
	.byte	'ECCCORDIS',0,4
	.word	563
	.byte	2,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	563
	.byte	4,24,2,35,0,11
	.byte	'HMARGIN',0,4
	.word	563
	.byte	2,22,2,35,0,11
	.byte	'MSEL',0,4
	.word	563
	.byte	2,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	563
	.byte	4,16,2,35,0,11
	.byte	'ECCSCLR',0,4
	.word	563
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	563
	.byte	6,8,2,35,0,11
	.byte	'SBABCLR',0,4
	.word	563
	.byte	2,6,2,35,0,11
	.byte	'DBABCLR',0,4
	.word	563
	.byte	2,4,2,35,0,11
	.byte	'MBABCLR',0,4
	.word	563
	.byte	2,2,2,35,0,11
	.byte	'ZBABCLR',0,4
	.word	563
	.byte	2,0,2,35,0,0,12,13,252,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11524
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FLASHCON3_Bits',0,13,185,4,16,4,11
	.byte	'ECCERRINJ',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'EDCERRINJ',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'SBABERRINJ',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'DBABERRINJ',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'MBABERRINJ',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'ZBABERRINJ',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'SBERERRINJ',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'DBERERRINJ',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'NVMCERRINJ',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'FLCONERRINJ',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	563
	.byte	22,0,2,35,0,0,12,13,132,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11832
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FLASHCON4_Bits',0,13,201,4,16,4,11
	.byte	'DDIS',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	563
	.byte	31,0,2,35,0,0,12,13,140,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12145
	.byte	4,2,35,0,0,15,236,253,2
	.word	715
	.byte	16,235,253,2,0,10
	.byte	'_Ifx_CPU_KRST0_Bits',0,13,159,5,16,4,11
	.byte	'RST',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'RSTSTAT',0,4
	.word	563
	.byte	2,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	563
	.byte	29,0,2,35,0,0,12,13,220,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12267
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_KRST1_Bits',0,13,167,5,16,4,11
	.byte	'RST',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	563
	.byte	31,0,2,35,0,0,12,13,228,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12390
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_KRSTCLR_Bits',0,13,174,5,16,4,11
	.byte	'CLR',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	563
	.byte	31,0,2,35,0,0,12,13,236,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12494
	.byte	4,2,35,0,0,15,244,31
	.word	715
	.byte	16,243,31,0,10
	.byte	'_Ifx_CPU_RGN_LA_Bits',0,13,222,7,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	563
	.byte	27,0,2,35,0,0,12,13,156,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12611
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_RGN_UA_Bits',0,13,229,7,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	563
	.byte	27,0,2,35,0,0,12,13,164,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12717
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_RGN_ACCENA_Bits',0,13,148,7,16,4,11
	.byte	'EN0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,140,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12823
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_RGN_ACCENB_Bits',0,13,185,7,16,4,11
	.byte	'EN32',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,148,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13397
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_RGN',0,13,221,16,25,16,13
	.byte	'LA',0
	.word	12677
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	12783
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	13357
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	13941
	.byte	4,2,35,12,0,15,128,1
	.word	13981
	.byte	16,7,0,14
	.word	14057
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,13,199,8,16,4,11
	.byte	'EN0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,204,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14072
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,13,236,8,16,4,11
	.byte	'EN32',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,212,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14657
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,13,245,7,16,4,11
	.byte	'EN0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,180,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15252
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,13,154,8,16,4,11
	.byte	'EN32',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,188,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15834
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,13,189,5,16,4,11
	.byte	'EN0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,252,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16426
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,13,226,5,16,4,11
	.byte	'EN32',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,132,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17008
	.byte	4,2,35,0,0,15,232,1
	.word	715
	.byte	16,231,1,0,10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,13,182,3,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	563
	.byte	27,0,2,35,0,0,12,13,156,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17611
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,13,189,3,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	563
	.byte	27,0,2,35,0,0,12,13,164,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17727
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,13,199,2,16,4,11
	.byte	'EN0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,132,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17843
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,13,145,3,16,4,11
	.byte	'EN32',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,148,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18429
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,13,162,2,16,4,11
	.byte	'EN0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,252,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19025
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,13,236,2,16,4,11
	.byte	'EN32',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,140,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19611
	.byte	4,2,35,0,0,15,128,48
	.word	715
	.byte	16,255,47,0,10
	.byte	'_Ifx_CPU_OSEL_Bits',0,13,156,6,16,4,11
	.byte	'SHOVEN_X',0,4
	.word	563
	.byte	32,0,2,35,0,0,12,13,164,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20218
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_BLK_RABR_Bits',0,13,98,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	5,27,2,35,0,11
	.byte	'OBASE',0,4
	.word	563
	.byte	17,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	563
	.byte	2,8,2,35,0,11
	.byte	'OMEM',0,4
	.word	563
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	563
	.byte	3,1,2,35,0,11
	.byte	'OVEN',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,204,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20304
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_BLK_OTAR_Bits',0,13,90,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	5,27,2,35,0,11
	.byte	'TBASE',0,4
	.word	563
	.byte	23,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	563
	.byte	4,0,2,35,0,0,12,13,196,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20490
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_BLK_OMASK_Bits',0,13,81,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	5,27,2,35,0,11
	.byte	'OMASK',0,4
	.word	563
	.byte	12,15,2,35,0,11
	.byte	'ONE',0,4
	.word	563
	.byte	11,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	563
	.byte	4,0,2,35,0,0,12,13,188,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20621
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_BLK',0,13,242,16,25,12,13
	.byte	'RABR',0
	.word	20450
	.byte	4,2,35,0,13
	.byte	'OTAR',0
	.word	20581
	.byte	4,2,35,4,13
	.byte	'OMASK',0
	.word	20728
	.byte	4,2,35,8,0,15,128,3
	.word	20768
	.byte	16,31,0,14
	.word	20831
	.byte	15,160,39
	.word	715
	.byte	16,159,39,0,10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,13,236,7,16,4,11
	.byte	'ADFLIP',0,4
	.word	563
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	563
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	563
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,172,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20857
	.byte	4,2,35,0,0,15,208,223,1
	.word	715
	.byte	16,207,223,1,0,10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,13,174,9,16,4,11
	.byte	'ASI',0,4
	.word	563
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	563
	.byte	27,0,2,35,0,0,12,13,236,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21010
	.byte	4,2,35,0,0,15,248,1
	.word	715
	.byte	16,247,1,0,10
	.byte	'_Ifx_CPU_PMA0_Bits',0,13,227,6,16,4,11
	.byte	'DAC',0,4
	.word	563
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	563
	.byte	16,0,2,35,0,0,12,13,228,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21128
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PMA1_Bits',0,13,234,6,16,4,11
	.byte	'CAC',0,4
	.word	563
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	563
	.byte	16,0,2,35,0,0,12,13,236,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21232
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PMA2_Bits',0,13,241,6,16,4,11
	.byte	'PSI',0,4
	.word	563
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	563
	.byte	16,0,2,35,0,0,12,13,244,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21336
	.byte	4,2,35,0,0,15,244,29
	.word	715
	.byte	16,243,29,0,10
	.byte	'_Ifx_CPU_DCON2_Bits',0,13,246,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	563
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	563
	.byte	16,0,2,35,0,0,12,13,212,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21451
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_SMACON_Bits',0,13,191,8,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	24,8,2,35,0,11
	.byte	'IODT',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	563
	.byte	7,0,2,35,0,0,12,13,196,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21564
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DSTR_Bits',0,13,231,3,16,4,11
	.byte	'SRE',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'DRE',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	563
	.byte	2,26,2,35,0,11
	.byte	'CRE',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	563
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	563
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	563
	.byte	7,0,2,35,0,0,12,13,212,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21693
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DATR_Bits',0,13,203,1,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	563
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	563
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	563
	.byte	16,0,2,35,0,0,12,13,180,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22045
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DEADD_Bits',0,13,132,2,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	563
	.byte	32,0,2,35,0,0,12,13,228,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22284
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,13,138,2,16,4,11
	.byte	'TA',0,4
	.word	563
	.byte	32,0,2,35,0,0,12,13,236,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22376
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DIETR_Bits',0,13,144,2,16,4,11
	.byte	'IED',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	563
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'IE_DLMU',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	563
	.byte	15,0,2,35,0,0,12,13,244,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22457
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DCON0_Bits',0,13,238,1,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	563
	.byte	30,0,2,35,0,0,12,13,204,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22753
	.byte	4,2,35,0,0,15,188,3
	.word	715
	.byte	16,187,3,0,10
	.byte	'_Ifx_CPU_PSTR_Bits',0,13,248,6,16,4,11
	.byte	'FRE',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	563
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	563
	.byte	17,0,2,35,0,0,12,13,252,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22892
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PCON1_Bits',0,13,177,6,16,4,11
	.byte	'PCINV',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	563
	.byte	30,0,2,35,0,0,12,13,188,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23108
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PCON2_Bits',0,13,185,6,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	563
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	563
	.byte	16,0,2,35,0,0,12,13,196,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23231
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PCON0_Bits',0,13,169,6,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	563
	.byte	30,0,2,35,0,0,12,13,180,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23344
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,13,203,6,16,4,11
	.byte	'TA',0,4
	.word	563
	.byte	32,0,2,35,0,0,12,13,212,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23472
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PIETR_Bits',0,13,209,6,16,4,11
	.byte	'IED',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	563
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'IE_ADDR',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	563
	.byte	15,0,2,35,0,0,12,13,220,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23553
	.byte	4,2,35,0,0,15,232,3
	.word	715
	.byte	16,231,3,0,10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,13,134,1,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	563
	.byte	27,0,2,35,0,0,12,13,236,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23860
	.byte	4,2,35,0,0,15,252,23
	.word	715
	.byte	16,251,23,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,13,208,4,16,4,11
	.byte	'TST',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	563
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	563
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	563
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	563
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,148,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24011
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,13,240,4,16,4,11
	.byte	'PC',0,4
	.word	563
	.byte	32,0,2,35,0,0,12,13,164,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24365
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,13,230,4,16,4,11
	.byte	'OPC',0,4
	.word	563
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	563
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	563
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	563
	.byte	12,0,2,35,0,0,12,13,156,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24452
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,13,246,4,16,4,11
	.byte	'SRC1',0,4
	.word	563
	.byte	32,0,2,35,0,0,12,13,172,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24617
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,13,252,4,16,4,11
	.byte	'SRC2',0,4
	.word	563
	.byte	32,0,2,35,0,0,12,13,180,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24708
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,13,130,5,16,4,11
	.byte	'SRC3',0,4
	.word	563
	.byte	32,0,2,35,0,0,12,13,188,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24799
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP',0,13,134,17,25,28,13
	.byte	'CON',0
	.word	24325
	.byte	4,2,35,0,13
	.byte	'PC',0
	.word	24412
	.byte	4,2,35,4,13
	.byte	'OPC',0
	.word	24577
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2933
	.byte	4,2,35,12,13
	.byte	'SRC1',0
	.word	24668
	.byte	4,2,35,16,13
	.byte	'SRC2',0
	.word	24759
	.byte	4,2,35,20,13
	.byte	'SRC3',0
	.word	24850
	.byte	4,2,35,24,0,14
	.word	24890
	.byte	15,228,63
	.word	715
	.byte	16,227,63,0,10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,13,210,3,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	563
	.byte	29,0,2,35,0,0,12,13,188,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25031
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,13,217,3,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	563
	.byte	29,0,2,35,0,0,12,13,196,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25138
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DPR',0,13,158,17,25,8,13
	.byte	'L',0
	.word	25098
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	25205
	.byte	4,2,35,4,0,15,144,1
	.word	25245
	.byte	16,17,0,14
	.word	25287
	.byte	15,240,30
	.word	715
	.byte	16,239,30,0,10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,13,150,1,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	5,27,2,35,0,11
	.byte	'LOWBND',0,4
	.word	563
	.byte	27,0,2,35,0,0,12,13,252,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25313
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,13,157,1,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	5,27,2,35,0,11
	.byte	'UPPBND',0,4
	.word	563
	.byte	27,0,2,35,0,0,12,13,132,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25420
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CPR',0,13,177,17,25,8,13
	.byte	'L',0
	.word	25380
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	25487
	.byte	4,2,35,4,0,15,80
	.word	25527
	.byte	16,9,0,14
	.word	25569
	.byte	15,176,31
	.word	715
	.byte	16,175,31,0,10
	.byte	'_Ifx_CPU_CPXE_Bits',0,13,172,1,16,4,11
	.byte	'XE_N',0,4
	.word	563
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	563
	.byte	22,0,2,35,0,0,12,13,148,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25594
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DPRE_Bits',0,13,203,3,16,4,11
	.byte	'RE_N',0,4
	.word	563
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	563
	.byte	14,0,2,35,0,0,12,13,180,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25699
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DPWE_Bits',0,13,224,3,16,4,11
	.byte	'WE_N',0,4
	.word	563
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	563
	.byte	14,0,2,35,0,0,12,13,204,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25804
	.byte	4,2,35,0,0,15,16
	.word	715
	.byte	16,15,0,15,152,7
	.word	715
	.byte	16,151,7,0,10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,13,181,9,16,4,11
	.byte	'TEXP0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	563
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	563
	.byte	15,0,2,35,0,0,12,13,244,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25929
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,13,249,9,16,4,11
	.byte	'TIMER',0,4
	.word	563
	.byte	32,0,2,35,0,0,12,13,180,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26111
	.byte	4,2,35,0,0,15,12
	.word	26159
	.byte	16,2,0,10
	.byte	'_Ifx_CPU_TPS',0,13,196,17,25,16,13
	.byte	'CON',0
	.word	26071
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	26199
	.byte	12,2,35,4,0,14
	.word	26208
	.byte	15,48
	.word	715
	.byte	16,47,0,10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,13,206,9,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	4,28,2,35,0,11
	.byte	'ENTRY_LVAL',0,4
	.word	563
	.byte	8,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	563
	.byte	20,0,2,35,0,0,12,13,140,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26270
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,13,199,9,16,4,11
	.byte	'ENTRY_CVAL',0,4
	.word	563
	.byte	12,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	563
	.byte	20,0,2,35,0,0,12,13,132,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26419
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,13,221,9,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	4,28,2,35,0,11
	.byte	'EXIT_LVAL',0,4
	.word	563
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	563
	.byte	8,0,2,35,0,0,12,13,156,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26546
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,13,214,9,16,4,11
	.byte	'EXIT_CVAL',0,4
	.word	563
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	563
	.byte	8,0,2,35,0,0,12,13,148,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26693
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,13,192,9,16,4,11
	.byte	'EXTIM_CLASS_EN',0,4
	.word	563
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	563
	.byte	24,0,2,35,0,0,12,13,252,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26818
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TPS_EXTIM_STAT_Bits',0,13,236,9,16,4,11
	.byte	'EXIT_TIN',0,4
	.word	563
	.byte	8,24,2,35,0,11
	.byte	'EXIT_CLASS',0,4
	.word	563
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	563
	.byte	4,17,2,35,0,11
	.byte	'EXIT_AT',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'ENTRY_TIN',0,4
	.word	563
	.byte	8,8,2,35,0,11
	.byte	'ENTRY_CLASS',0,4
	.word	563
	.byte	3,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	563
	.byte	4,1,2,35,0,11
	.byte	'ENTRY_AT',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,172,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26946
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TPS_EXTIM_FCX_Bits',0,13,229,9,16,4,11
	.byte	'EXIT_FCX',0,4
	.word	563
	.byte	20,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	563
	.byte	12,0,2,35,0,0,12,13,164,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27193
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TPS_EXTIM',0,13,215,17,25,28,13
	.byte	'ENTRY_LVAL',0
	.word	26379
	.byte	4,2,35,0,13
	.byte	'ENTRY_CVAL',0
	.word	26506
	.byte	4,2,35,4,13
	.byte	'EXIT_LVAL',0
	.word	26653
	.byte	4,2,35,8,13
	.byte	'EXIT_CVAL',0
	.word	26778
	.byte	4,2,35,12,13
	.byte	'CLASS_EN',0
	.word	26906
	.byte	4,2,35,16,13
	.byte	'STAT',0
	.word	27153
	.byte	4,2,35,20,13
	.byte	'FCX',0
	.word	27271
	.byte	4,2,35,24,0,14
	.word	27311
	.byte	15,164,23
	.word	715
	.byte	16,163,23,0,10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,13,147,10,16,4,11
	.byte	'EVTA',0,4
	.word	563
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	563
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	563
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	563
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	563
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	563
	.byte	3,0,2,35,0,0,12,13,204,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27476
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,13,141,10,16,4,11
	.byte	'ADDR',0,4
	.word	563
	.byte	32,0,2,35,0,0,12,13,196,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27805
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TR',0,13,239,17,25,8,13
	.byte	'EVT',0
	.word	27765
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	27849
	.byte	4,2,35,4,0,15,64
	.word	27889
	.byte	16,7,0,14
	.word	27934
	.byte	15,192,23
	.word	715
	.byte	16,191,23,0,10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,13,123,16,4,11
	.byte	'CM',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	563
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	563
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	563
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	563
	.byte	21,0,2,35,0,0,12,13,228,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27959
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CCNT_Bits',0,13,116,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	563
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,220,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28118
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_ICNT_Bits',0,13,136,5,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	563
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,196,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28221
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,13,135,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	563
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,140,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28325
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,13,142,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	563
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,148,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28430
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,13,149,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	563
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	563
	.byte	1,0,2,35,0,0,12,13,156,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28535
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,13,217,1,16,4,11
	.byte	'DE',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	563
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	563
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	563
	.byte	19,0,2,35,0,0,12,13,188,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28640
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,13,253,3,16,4,11
	.byte	'EVTA',0,4
	.word	563
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	563
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	563
	.byte	24,0,2,35,0,0,12,13,220,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28867
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CREVT_Bits',0,13,179,1,16,4,11
	.byte	'EVTA',0,4
	.word	563
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	563
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	563
	.byte	24,0,2,35,0,0,12,13,156,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29033
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,13,145,9,16,4,11
	.byte	'EVTA',0,4
	.word	563
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	563
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	563
	.byte	24,0,2,35,0,0,12,13,220,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29199
	.byte	4,2,35,0,0,15,28
	.word	715
	.byte	16,27,0,10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,13,255,9,16,4,11
	.byte	'T0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	563
	.byte	24,0,2,35,0,0,12,13,188,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29374
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DMS_Bits',0,13,196,3,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'DMSVALUE',0,4
	.word	563
	.byte	31,0,2,35,0,0,12,13,172,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29578
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DCX_Bits',0,13,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	6,26,2,35,0,11
	.byte	'DCXVALUE',0,4
	.word	563
	.byte	26,0,2,35,0,0,12,13,220,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29685
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,13,231,1,16,4,11
	.byte	'DTA',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	563
	.byte	31,0,2,35,0,0,12,13,196,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29792
	.byte	4,2,35,0,0,15,180,1
	.word	715
	.byte	16,179,1,0,10
	.byte	'_Ifx_CPU_PCXI_Bits',0,13,192,6,16,4,11
	.byte	'PCXO',0,4
	.word	563
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	563
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	563
	.byte	8,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	563
	.byte	2,0,2,35,0,0,12,13,204,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29908
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PSW_Bits',0,13,133,7,16,4,11
	.byte	'CDC',0,4
	.word	563
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	563
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	563
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'PRS2',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	563
	.byte	8,8,2,35,0,11
	.byte	'USB',0,4
	.word	563
	.byte	8,0,2,35,0,0,12,13,132,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30074
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PC_Bits',0,13,162,6,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	563
	.byte	31,0,2,35,0,0,12,13,172,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30293
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,13,156,9,16,4,11
	.byte	'FCDSF',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'TS',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	563
	.byte	3,24,2,35,0,11
	.byte	'ESDIS',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	563
	.byte	7,16,2,35,0,11
	.byte	'U1_IED',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'U1_IOS',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	563
	.byte	6,8,2,35,0,11
	.byte	'BHALT',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	563
	.byte	7,0,2,35,0,0
.L269:
	.byte	12,13,228,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30393
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,13,164,1,16,4,11
	.byte	'MOD_REV',0,4
	.word	563
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	563
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	563
	.byte	16,0,2,35,0,0,12,13,140,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30703
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,13,143,1,16,4,11
	.byte	'CORE_ID',0,4
	.word	563
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	563
	.byte	29,0,2,35,0,0,12,13,244,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30824
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_BIV_Bits',0,13,74,16,4,11
	.byte	'VSS',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	563
	.byte	31,0,2,35,0,0,12,13,180,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30934
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_BTV_Bits',0,13,109,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	563
	.byte	31,0,2,35,0,0,12,13,212,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31028
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_ISP_Bits',0,13,153,5,16,4,11
	.byte	'ISP',0,4
	.word	563
	.byte	32,0,2,35,0,0,12,13,212,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31129
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_ICR_Bits',0,13,143,5,16,4,11
	.byte	'CCPN',0,4
	.word	563
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	563
	.byte	7,17,2,35,0,11
	.byte	'IE',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	563
	.byte	8,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	563
	.byte	8,0,2,35,0,0,12,13,204,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31209
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FCX_Bits',0,13,136,4,16,4,11
	.byte	'FCXO',0,4
	.word	563
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	563
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	563
	.byte	12,0,2,35,0,0,12,13,228,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31365
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_LCX_Bits',0,13,181,5,16,4,11
	.byte	'LCXO',0,4
	.word	563
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	563
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	563
	.byte	12,0,2,35,0,0,12,13,244,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31485
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,13,190,1,16,4,11
	.byte	'CID',0,4
	.word	563
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	563
	.byte	29,0,2,35,0,0,12,13,164,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31605
	.byte	4,2,35,0,0,15,172,1
	.word	715
	.byte	16,171,1,0,10
	.byte	'_Ifx_CPU_D_Bits',0,13,197,1,16,4,11
	.byte	'DATA',0,4
	.word	563
	.byte	32,0,2,35,0,0,12,13,172,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31721
	.byte	4,2,35,0,0,15,64
	.word	31760
	.byte	16,15,0,15,64
	.word	715
	.byte	16,63,0,10
	.byte	'_Ifx_CPU_A_Bits',0,13,68,16,4,11
	.byte	'ADDR',0,4
	.word	563
	.byte	32,0,2,35,0,0,12,13,172,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31818
	.byte	4,2,35,0,0,15,64
	.word	31856
	.byte	16,15,0,10
	.byte	'_Ifx_CPU',0,13,130,18,25,128,128,8,13
	.byte	'reserved_0',0
	.word	11088
	.byte	128,34,2,35,0,13
	.byte	'FLASHCON0',0
	.word	11285
	.byte	4,3,35,128,34,13
	.byte	'FLASHCON1',0
	.word	11484
	.byte	4,3,35,132,34,13
	.byte	'FLASHCON2',0
	.word	11792
	.byte	4,3,35,136,34,13
	.byte	'FLASHCON3',0
	.word	12105
	.byte	4,3,35,140,34,13
	.byte	'FLASHCON4',0
	.word	12214
	.byte	4,3,35,144,34,13
	.byte	'reserved_1114',0
	.word	12254
	.byte	236,253,2,3,35,148,34,13
	.byte	'KRST0',0
	.word	12350
	.byte	4,4,35,128,160,3,13
	.byte	'KRST1',0
	.word	12454
	.byte	4,4,35,132,160,3,13
	.byte	'KRSTCLR',0
	.word	12560
	.byte	4,4,35,136,160,3,13
	.byte	'reserved_D00C',0
	.word	12600
	.byte	244,31,4,35,140,160,3,13
	.byte	'RGN',0
	.word	14067
	.byte	128,1,4,35,128,192,3,13
	.byte	'reserved_E080',0
	.word	4753
	.byte	8,4,35,128,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R0',0
	.word	14617
	.byte	4,4,35,136,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R0',0
	.word	15212
	.byte	4,4,35,140,193,3,13
	.byte	'reserved_E090',0
	.word	4753
	.byte	8,4,35,144,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R1',0
	.word	14617
	.byte	4,4,35,152,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R1',0
	.word	15212
	.byte	4,4,35,156,193,3,13
	.byte	'reserved_E0A0',0
	.word	4753
	.byte	8,4,35,160,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R2',0
	.word	14617
	.byte	4,4,35,168,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R2',0
	.word	15212
	.byte	4,4,35,172,193,3,13
	.byte	'reserved_E0B0',0
	.word	4753
	.byte	8,4,35,176,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R3',0
	.word	14617
	.byte	4,4,35,184,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R3',0
	.word	15212
	.byte	4,4,35,188,193,3,13
	.byte	'reserved_E0C0',0
	.word	4753
	.byte	8,4,35,192,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R4',0
	.word	14617
	.byte	4,4,35,200,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R4',0
	.word	15212
	.byte	4,4,35,204,193,3,13
	.byte	'reserved_E0D0',0
	.word	4753
	.byte	8,4,35,208,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R5',0
	.word	14617
	.byte	4,4,35,216,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R5',0
	.word	15212
	.byte	4,4,35,220,193,3,13
	.byte	'reserved_E0E0',0
	.word	4753
	.byte	8,4,35,224,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R6',0
	.word	14617
	.byte	4,4,35,232,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R6',0
	.word	15212
	.byte	4,4,35,236,193,3,13
	.byte	'reserved_E0F0',0
	.word	4753
	.byte	8,4,35,240,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R7',0
	.word	14617
	.byte	4,4,35,248,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R7',0
	.word	15212
	.byte	4,4,35,252,193,3,13
	.byte	'SFR_SPROT_ACCENA_W',0
	.word	15794
	.byte	4,4,35,128,194,3,13
	.byte	'SFR_SPROT_ACCENB_W',0
	.word	16386
	.byte	4,4,35,132,194,3,13
	.byte	'reserved_E108',0
	.word	4753
	.byte	8,4,35,136,194,3,13
	.byte	'LPB_SPROT_ACCENA_R',0
	.word	16968
	.byte	4,4,35,144,194,3,13
	.byte	'LPB_SPROT_ACCENB_R',0
	.word	17560
	.byte	4,4,35,148,194,3,13
	.byte	'reserved_E118',0
	.word	17600
	.byte	232,1,4,35,152,194,3,13
	.byte	'DLMU_SPROT_RGNLA0',0
	.word	17687
	.byte	4,4,35,128,196,3,13
	.byte	'DLMU_SPROT_RGNUA0',0
	.word	17803
	.byte	4,4,35,132,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W0',0
	.word	18389
	.byte	4,4,35,136,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W0',0
	.word	18985
	.byte	4,4,35,140,196,3,13
	.byte	'DLMU_SPROT_RGNLA1',0
	.word	17687
	.byte	4,4,35,144,196,3,13
	.byte	'DLMU_SPROT_RGNUA1',0
	.word	17803
	.byte	4,4,35,148,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W1',0
	.word	18389
	.byte	4,4,35,152,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W1',0
	.word	18985
	.byte	4,4,35,156,196,3,13
	.byte	'DLMU_SPROT_RGNLA2',0
	.word	17687
	.byte	4,4,35,160,196,3,13
	.byte	'DLMU_SPROT_RGNUA2',0
	.word	17803
	.byte	4,4,35,164,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W2',0
	.word	18389
	.byte	4,4,35,168,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W2',0
	.word	18985
	.byte	4,4,35,172,196,3,13
	.byte	'DLMU_SPROT_RGNLA3',0
	.word	17687
	.byte	4,4,35,176,196,3,13
	.byte	'DLMU_SPROT_RGNUA3',0
	.word	17803
	.byte	4,4,35,180,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W3',0
	.word	18389
	.byte	4,4,35,184,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W3',0
	.word	18985
	.byte	4,4,35,188,196,3,13
	.byte	'DLMU_SPROT_RGNLA4',0
	.word	17687
	.byte	4,4,35,192,196,3,13
	.byte	'DLMU_SPROT_RGNUA4',0
	.word	17803
	.byte	4,4,35,196,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W4',0
	.word	18389
	.byte	4,4,35,200,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W4',0
	.word	18985
	.byte	4,4,35,204,196,3,13
	.byte	'DLMU_SPROT_RGNLA5',0
	.word	17687
	.byte	4,4,35,208,196,3,13
	.byte	'DLMU_SPROT_RGNUA5',0
	.word	17803
	.byte	4,4,35,212,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W5',0
	.word	18389
	.byte	4,4,35,216,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W5',0
	.word	18985
	.byte	4,4,35,220,196,3,13
	.byte	'DLMU_SPROT_RGNLA6',0
	.word	17687
	.byte	4,4,35,224,196,3,13
	.byte	'DLMU_SPROT_RGNUA6',0
	.word	17803
	.byte	4,4,35,228,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W6',0
	.word	18389
	.byte	4,4,35,232,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W6',0
	.word	18985
	.byte	4,4,35,236,196,3,13
	.byte	'DLMU_SPROT_RGNLA7',0
	.word	17687
	.byte	4,4,35,240,196,3,13
	.byte	'DLMU_SPROT_RGNUA7',0
	.word	17803
	.byte	4,4,35,244,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W7',0
	.word	18389
	.byte	4,4,35,248,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W7',0
	.word	18985
	.byte	4,4,35,252,196,3,13
	.byte	'reserved_E280',0
	.word	4753
	.byte	8,4,35,128,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R0',0
	.word	19571
	.byte	4,4,35,136,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R0',0
	.word	20167
	.byte	4,4,35,140,197,3,13
	.byte	'reserved_E290',0
	.word	4753
	.byte	8,4,35,144,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R1',0
	.word	19571
	.byte	4,4,35,152,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R1',0
	.word	20167
	.byte	4,4,35,156,197,3,13
	.byte	'reserved_E2A0',0
	.word	4753
	.byte	8,4,35,160,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R2',0
	.word	19571
	.byte	4,4,35,168,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R2',0
	.word	20167
	.byte	4,4,35,172,197,3,13
	.byte	'reserved_E2B0',0
	.word	4753
	.byte	8,4,35,176,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R3',0
	.word	19571
	.byte	4,4,35,184,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R3',0
	.word	20167
	.byte	4,4,35,188,197,3,13
	.byte	'reserved_E2C0',0
	.word	4753
	.byte	8,4,35,192,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R4',0
	.word	19571
	.byte	4,4,35,200,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R4',0
	.word	20167
	.byte	4,4,35,204,197,3,13
	.byte	'reserved_E2D0',0
	.word	4753
	.byte	8,4,35,208,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R5',0
	.word	19571
	.byte	4,4,35,216,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R5',0
	.word	20167
	.byte	4,4,35,220,197,3,13
	.byte	'reserved_E2E0',0
	.word	4753
	.byte	8,4,35,224,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R6',0
	.word	19571
	.byte	4,4,35,232,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R6',0
	.word	20167
	.byte	4,4,35,236,197,3,13
	.byte	'reserved_E2F0',0
	.word	4753
	.byte	8,4,35,240,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R7',0
	.word	19571
	.byte	4,4,35,248,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R7',0
	.word	20167
	.byte	4,4,35,252,197,3,13
	.byte	'reserved_E300',0
	.word	20207
	.byte	128,48,4,35,128,198,3,13
	.byte	'OSEL',0
	.word	20264
	.byte	4,4,35,128,246,3,13
	.byte	'reserved_FB04',0
	.word	5093
	.byte	12,4,35,132,246,3,13
	.byte	'BLK',0
	.word	20841
	.byte	128,3,4,35,144,246,3,13
	.byte	'reserved_FC90',0
	.word	20846
	.byte	160,39,4,35,144,249,3,13
	.byte	'SEGEN',0
	.word	20957
	.byte	4,4,35,176,160,4,13
	.byte	'reserved_11034',0
	.word	20997
	.byte	208,223,1,4,35,180,160,4,13
	.byte	'TASK_ASI',0
	.word	21077
	.byte	4,4,35,132,128,6,13
	.byte	'reserved_18008',0
	.word	21117
	.byte	248,1,4,35,136,128,6,13
	.byte	'PMA0',0
	.word	21192
	.byte	4,4,35,128,130,6,13
	.byte	'PMA1',0
	.word	21296
	.byte	4,4,35,132,130,6,13
	.byte	'PMA2',0
	.word	21400
	.byte	4,4,35,136,130,6,13
	.byte	'reserved_1810C',0
	.word	21440
	.byte	244,29,4,35,140,130,6,13
	.byte	'DCON2',0
	.word	21524
	.byte	4,4,35,128,160,6,13
	.byte	'reserved_19004',0
	.word	4753
	.byte	8,4,35,132,160,6,13
	.byte	'SMACON',0
	.word	21653
	.byte	4,4,35,140,160,6,13
	.byte	'DSTR',0
	.word	22005
	.byte	4,4,35,144,160,6,13
	.byte	'reserved_19014',0
	.word	2933
	.byte	4,4,35,148,160,6,13
	.byte	'DATR',0
	.word	22244
	.byte	4,4,35,152,160,6,13
	.byte	'DEADD',0
	.word	22336
	.byte	4,4,35,156,160,6,13
	.byte	'DIEAR',0
	.word	22417
	.byte	4,4,35,160,160,6,13
	.byte	'DIETR',0
	.word	22713
	.byte	4,4,35,164,160,6,13
	.byte	'reserved_19028',0
	.word	4124
	.byte	24,4,35,168,160,6,13
	.byte	'DCON0',0
	.word	22841
	.byte	4,4,35,192,160,6,13
	.byte	'reserved_19044',0
	.word	22881
	.byte	188,3,4,35,196,160,6,13
	.byte	'PSTR',0
	.word	23068
	.byte	4,4,35,128,164,6,13
	.byte	'PCON1',0
	.word	23191
	.byte	4,4,35,132,164,6,13
	.byte	'PCON2',0
	.word	23304
	.byte	4,4,35,136,164,6,13
	.byte	'PCON0',0
	.word	23432
	.byte	4,4,35,140,164,6,13
	.byte	'PIEAR',0
	.word	23513
	.byte	4,4,35,144,164,6,13
	.byte	'PIETR',0
	.word	23809
	.byte	4,4,35,148,164,6,13
	.byte	'reserved_19218',0
	.word	23849
	.byte	232,3,4,35,152,164,6,13
	.byte	'COMPAT',0
	.word	23960
	.byte	4,4,35,128,168,6,13
	.byte	'reserved_19404',0
	.word	24000
	.byte	252,23,4,35,132,168,6,13
	.byte	'FPU_TRAP',0
	.word	25015
	.byte	28,4,35,128,192,6,13
	.byte	'reserved_1A01C',0
	.word	25020
	.byte	228,63,4,35,156,192,6,13
	.byte	'DPR',0
	.word	25297
	.byte	144,1,4,35,128,128,7,13
	.byte	'reserved_1C090',0
	.word	25302
	.byte	240,30,4,35,144,129,7,13
	.byte	'CPR',0
	.word	25578
	.byte	80,4,35,128,160,7,13
	.byte	'reserved_1D050',0
	.word	25583
	.byte	176,31,4,35,208,160,7,13
	.byte	'CPXE_0',0
	.word	25659
	.byte	4,4,35,128,192,7,13
	.byte	'CPXE_1',0
	.word	25659
	.byte	4,4,35,132,192,7,13
	.byte	'CPXE_2',0
	.word	25659
	.byte	4,4,35,136,192,7,13
	.byte	'CPXE_3',0
	.word	25659
	.byte	4,4,35,140,192,7,13
	.byte	'DPRE_0',0
	.word	25764
	.byte	4,4,35,144,192,7,13
	.byte	'DPRE_1',0
	.word	25764
	.byte	4,4,35,148,192,7,13
	.byte	'DPRE_2',0
	.word	25764
	.byte	4,4,35,152,192,7,13
	.byte	'DPRE_3',0
	.word	25764
	.byte	4,4,35,156,192,7,13
	.byte	'DPWE_0',0
	.word	25869
	.byte	4,4,35,160,192,7,13
	.byte	'DPWE_1',0
	.word	25869
	.byte	4,4,35,164,192,7,13
	.byte	'DPWE_2',0
	.word	25869
	.byte	4,4,35,168,192,7,13
	.byte	'DPWE_3',0
	.word	25869
	.byte	4,4,35,172,192,7,13
	.byte	'reserved_1E030',0
	.word	25909
	.byte	16,4,35,176,192,7,13
	.byte	'CPXE_4',0
	.word	25659
	.byte	4,4,35,192,192,7,13
	.byte	'CPXE_5',0
	.word	25659
	.byte	4,4,35,196,192,7,13
	.byte	'reserved_1E048',0
	.word	4753
	.byte	8,4,35,200,192,7,13
	.byte	'DPRE_4',0
	.word	25764
	.byte	4,4,35,208,192,7,13
	.byte	'DPRE_5',0
	.word	25764
	.byte	4,4,35,212,192,7,13
	.byte	'reserved_1E058',0
	.word	4753
	.byte	8,4,35,216,192,7,13
	.byte	'DPWE_4',0
	.word	25869
	.byte	4,4,35,224,192,7,13
	.byte	'DPWE_5',0
	.word	25869
	.byte	4,4,35,228,192,7,13
	.byte	'reserved_1E068',0
	.word	25918
	.byte	152,7,4,35,232,192,7,13
	.byte	'TPS',0
	.word	26256
	.byte	16,4,35,128,200,7,13
	.byte	'reserved_1E410',0
	.word	26261
	.byte	48,4,35,144,200,7,13
	.byte	'TPS_EXTIM',0
	.word	27460
	.byte	28,4,35,192,200,7,13
	.byte	'reserved_1E45C',0
	.word	27465
	.byte	164,23,4,35,220,200,7,13
	.byte	'TR',0
	.word	27943
	.byte	64,4,35,128,224,7,13
	.byte	'reserved_1F040',0
	.word	27948
	.byte	192,23,4,35,192,224,7,13
	.byte	'CCTRL',0
	.word	28078
	.byte	4,4,35,128,248,7,13
	.byte	'CCNT',0
	.word	28181
	.byte	4,4,35,132,248,7,13
	.byte	'ICNT',0
	.word	28285
	.byte	4,4,35,136,248,7,13
	.byte	'M1CNT',0
	.word	28390
	.byte	4,4,35,140,248,7,13
	.byte	'M2CNT',0
	.word	28495
	.byte	4,4,35,144,248,7,13
	.byte	'M3CNT',0
	.word	28600
	.byte	4,4,35,148,248,7,13
	.byte	'reserved_1FC18',0
	.word	17600
	.byte	232,1,4,35,152,248,7,13
	.byte	'DBGSR',0
	.word	28827
	.byte	4,4,35,128,250,7,13
	.byte	'reserved_1FD04',0
	.word	2933
	.byte	4,4,35,132,250,7,13
	.byte	'EXEVT',0
	.word	28993
	.byte	4,4,35,136,250,7,13
	.byte	'CREVT',0
	.word	29159
	.byte	4,4,35,140,250,7,13
	.byte	'SWEVT',0
	.word	29325
	.byte	4,4,35,144,250,7,13
	.byte	'reserved_1FD14',0
	.word	29365
	.byte	28,4,35,148,250,7,13
	.byte	'TRIG_ACC',0
	.word	29538
	.byte	4,4,35,176,250,7,13
	.byte	'reserved_1FD34',0
	.word	5093
	.byte	12,4,35,180,250,7,13
	.byte	'DMS',0
	.word	29645
	.byte	4,4,35,192,250,7,13
	.byte	'DCX',0
	.word	29752
	.byte	4,4,35,196,250,7,13
	.byte	'DBGTCR',0
	.word	29857
	.byte	4,4,35,200,250,7,13
	.byte	'reserved_1FD4C',0
	.word	29897
	.byte	180,1,4,35,204,250,7,13
	.byte	'PCXI',0
	.word	30034
	.byte	4,4,35,128,252,7,13
	.byte	'PSW',0
	.word	30253
	.byte	4,4,35,132,252,7,13
	.byte	'PC',0
	.word	30353
	.byte	4,4,35,136,252,7,13
	.byte	'reserved_1FE0C',0
	.word	4753
	.byte	8,4,35,140,252,7,13
	.byte	'SYSCON',0
	.word	30663
	.byte	4,4,35,148,252,7,13
	.byte	'CPU_ID',0
	.word	30784
	.byte	4,4,35,152,252,7,13
	.byte	'CORE_ID',0
	.word	30894
	.byte	4,4,35,156,252,7,13
	.byte	'BIV',0
	.word	30988
	.byte	4,4,35,160,252,7,13
	.byte	'BTV',0
	.word	31089
	.byte	4,4,35,164,252,7,13
	.byte	'ISP',0
	.word	31169
	.byte	4,4,35,168,252,7,13
	.byte	'ICR',0
	.word	31325
	.byte	4,4,35,172,252,7,13
	.byte	'reserved_1FE30',0
	.word	4753
	.byte	8,4,35,176,252,7,13
	.byte	'FCX',0
	.word	31445
	.byte	4,4,35,184,252,7,13
	.byte	'LCX',0
	.word	31565
	.byte	4,4,35,188,252,7,13
	.byte	'reserved_1FE40',0
	.word	25909
	.byte	16,4,35,192,252,7,13
	.byte	'CUS_ID',0
	.word	31670
	.byte	4,4,35,208,252,7,13
	.byte	'reserved_1FE54',0
	.word	31710
	.byte	172,1,4,35,212,252,7,13
	.byte	'D',0
	.word	31800
	.byte	64,4,35,128,254,7,13
	.byte	'reserved_1FF40',0
	.word	31809
	.byte	64,4,35,192,254,7,13
	.byte	'A',0
	.word	31896
	.byte	64,4,35,128,255,7,13
	.byte	'reserved_1FFC0',0
	.word	31809
	.byte	64,4,35,192,255,7,0,14
	.word	31905
.L265:
	.byte	8
	.word	37003
	.byte	25
	.word	10215
	.byte	26
	.word	10264
	.byte	3,0,25
	.word	10284
	.byte	3,0,25
	.word	10338
	.byte	26
	.word	10376
	.byte	26
	.word	10394
	.byte	3,0,25
	.word	10414
	.byte	26
	.word	10455
	.byte	3,0,25
	.word	10475
	.byte	26
	.word	10511
	.byte	26
	.word	10529
	.byte	3,0,25
	.word	10549
	.byte	26
	.word	10588
	.byte	3,0,29
	.byte	'_c_init',0,1,184,1,17,1,1,1,1,4
	.byte	'short int',0,2,5,30
	.byte	'__wchar_t',0,14,1,1
	.word	37107
	.byte	30
	.byte	'__size_t',0,14,1,1
	.word	196
	.byte	30
	.byte	'__ptrdiff_t',0,14,1,1
	.word	556
	.byte	31,1,8
	.word	37175
	.byte	30
	.byte	'__codeptr',0,14,1,1
	.word	37177
	.byte	30
	.byte	'boolean',0,15,104,29
	.word	715
	.byte	30
	.byte	'uint8',0,15,108,29
	.word	715
	.byte	30
	.byte	'uint16',0,15,112,29
	.word	732
	.byte	30
	.byte	'uint32',0,15,116,29
	.word	9940
	.byte	30
	.byte	'uint64',0,15,121,29
	.word	438
	.byte	4
	.byte	'char',0,1,6,30
	.byte	'sint8',0,15,125,29
	.word	37275
	.byte	30
	.byte	'sint16',0,15,129,1,29
	.word	37107
	.byte	4
	.byte	'long int',0,4,5,30
	.byte	'sint32',0,15,134,1,29
	.word	37313
	.byte	4
	.byte	'long long int',0,8,5,30
	.byte	'sint64',0,15,141,1,29
	.word	37341
	.byte	30
	.byte	'float32',0,15,170,1,29
	.word	352
	.byte	30
	.byte	'pvoid',0,16,54,28
	.word	470
	.byte	30
	.byte	'Ifx_TickTime',0,16,76,28
	.word	37341
	.byte	17,16,127,9,1,18
	.byte	'Ifx_RxSel_a',0,0,18
	.byte	'Ifx_RxSel_b',0,1,18
	.byte	'Ifx_RxSel_c',0,2,18
	.byte	'Ifx_RxSel_d',0,3,18
	.byte	'Ifx_RxSel_e',0,4,18
	.byte	'Ifx_RxSel_f',0,5,18
	.byte	'Ifx_RxSel_g',0,6,18
	.byte	'Ifx_RxSel_h',0,7,0,30
	.byte	'Ifx_RxSel',0,16,137,1,3
	.word	37426
	.byte	30
	.byte	'Ifx_UReg_8Bit',0,17,96,24
	.word	715
	.byte	30
	.byte	'Ifx_UReg_32Bit',0,17,98,24
	.word	196
	.byte	30
	.byte	'Ifx_SReg_32Bit',0,17,101,24
	.word	556
	.byte	30
	.byte	'Ifx_CPU_A_Bits',0,13,71,3
	.word	31818
	.byte	30
	.byte	'Ifx_CPU_BIV_Bits',0,13,78,3
	.word	30934
	.byte	30
	.byte	'Ifx_CPU_BLK_OMASK_Bits',0,13,87,3
	.word	20621
	.byte	30
	.byte	'Ifx_CPU_BLK_OTAR_Bits',0,13,95,3
	.word	20490
	.byte	30
	.byte	'Ifx_CPU_BLK_RABR_Bits',0,13,106,3
	.word	20304
	.byte	30
	.byte	'Ifx_CPU_BTV_Bits',0,13,113,3
	.word	31028
	.byte	30
	.byte	'Ifx_CPU_CCNT_Bits',0,13,120,3
	.word	28118
	.byte	30
	.byte	'Ifx_CPU_CCTRL_Bits',0,13,131,1,3
	.word	27959
	.byte	30
	.byte	'Ifx_CPU_COMPAT_Bits',0,13,140,1,3
	.word	23860
	.byte	30
	.byte	'Ifx_CPU_CORE_ID_Bits',0,13,147,1,3
	.word	30824
	.byte	30
	.byte	'Ifx_CPU_CPR_L_Bits',0,13,154,1,3
	.word	25313
	.byte	30
	.byte	'Ifx_CPU_CPR_U_Bits',0,13,161,1,3
	.word	25420
	.byte	30
	.byte	'Ifx_CPU_CPU_ID_Bits',0,13,169,1,3
	.word	30703
	.byte	30
	.byte	'Ifx_CPU_CPXE_Bits',0,13,176,1,3
	.word	25594
	.byte	30
	.byte	'Ifx_CPU_CREVT_Bits',0,13,187,1,3
	.word	29033
	.byte	30
	.byte	'Ifx_CPU_CUS_ID_Bits',0,13,194,1,3
	.word	31605
	.byte	30
	.byte	'Ifx_CPU_D_Bits',0,13,200,1,3
	.word	31721
	.byte	30
	.byte	'Ifx_CPU_DATR_Bits',0,13,214,1,3
	.word	22045
	.byte	30
	.byte	'Ifx_CPU_DBGSR_Bits',0,13,228,1,3
	.word	28640
	.byte	30
	.byte	'Ifx_CPU_DBGTCR_Bits',0,13,235,1,3
	.word	29792
	.byte	30
	.byte	'Ifx_CPU_DCON0_Bits',0,13,243,1,3
	.word	22753
	.byte	30
	.byte	'Ifx_CPU_DCON2_Bits',0,13,250,1,3
	.word	21451
	.byte	30
	.byte	'Ifx_CPU_DCX_Bits',0,13,129,2,3
	.word	29685
	.byte	30
	.byte	'Ifx_CPU_DEADD_Bits',0,13,135,2,3
	.word	22284
	.byte	30
	.byte	'Ifx_CPU_DIEAR_Bits',0,13,141,2,3
	.word	22376
	.byte	30
	.byte	'Ifx_CPU_DIETR_Bits',0,13,159,2,3
	.word	22457
	.byte	30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,13,196,2,3
	.word	19025
	.byte	30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,13,233,2,3
	.word	17843
	.byte	30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,13,142,3,3
	.word	19611
	.byte	30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,13,179,3,3
	.word	18429
	.byte	30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,13,186,3,3
	.word	17611
	.byte	30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,13,193,3,3
	.word	17727
	.byte	30
	.byte	'Ifx_CPU_DMS_Bits',0,13,200,3,3
	.word	29578
	.byte	30
	.byte	'Ifx_CPU_DPRE_Bits',0,13,207,3,3
	.word	25699
	.byte	30
	.byte	'Ifx_CPU_DPR_L_Bits',0,13,214,3,3
	.word	25031
	.byte	30
	.byte	'Ifx_CPU_DPR_U_Bits',0,13,221,3,3
	.word	25138
	.byte	30
	.byte	'Ifx_CPU_DPWE_Bits',0,13,228,3,3
	.word	25804
	.byte	30
	.byte	'Ifx_CPU_DSTR_Bits',0,13,250,3,3
	.word	21693
	.byte	30
	.byte	'Ifx_CPU_EXEVT_Bits',0,13,133,4,3
	.word	28867
	.byte	30
	.byte	'Ifx_CPU_FCX_Bits',0,13,141,4,3
	.word	31365
	.byte	30
	.byte	'Ifx_CPU_FLASHCON0_Bits',0,13,154,4,3
	.word	11099
	.byte	30
	.byte	'Ifx_CPU_FLASHCON1_Bits',0,13,165,4,3
	.word	11325
	.byte	30
	.byte	'Ifx_CPU_FLASHCON2_Bits',0,13,182,4,3
	.word	11524
	.byte	30
	.byte	'Ifx_CPU_FLASHCON3_Bits',0,13,198,4,3
	.word	11832
	.byte	30
	.byte	'Ifx_CPU_FLASHCON4_Bits',0,13,205,4,3
	.word	12145
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,13,227,4,3
	.word	24011
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,13,237,4,3
	.word	24452
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,13,243,4,3
	.word	24365
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,13,249,4,3
	.word	24617
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,13,255,4,3
	.word	24708
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,13,133,5,3
	.word	24799
	.byte	30
	.byte	'Ifx_CPU_ICNT_Bits',0,13,140,5,3
	.word	28221
	.byte	30
	.byte	'Ifx_CPU_ICR_Bits',0,13,150,5,3
	.word	31209
	.byte	30
	.byte	'Ifx_CPU_ISP_Bits',0,13,156,5,3
	.word	31129
	.byte	30
	.byte	'Ifx_CPU_KRST0_Bits',0,13,164,5,3
	.word	12267
	.byte	30
	.byte	'Ifx_CPU_KRST1_Bits',0,13,171,5,3
	.word	12390
	.byte	30
	.byte	'Ifx_CPU_KRSTCLR_Bits',0,13,178,5,3
	.word	12494
	.byte	30
	.byte	'Ifx_CPU_LCX_Bits',0,13,186,5,3
	.word	31485
	.byte	30
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,13,223,5,3
	.word	16426
	.byte	30
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,13,132,6,3
	.word	17008
	.byte	30
	.byte	'Ifx_CPU_M1CNT_Bits',0,13,139,6,3
	.word	28325
	.byte	30
	.byte	'Ifx_CPU_M2CNT_Bits',0,13,146,6,3
	.word	28430
	.byte	30
	.byte	'Ifx_CPU_M3CNT_Bits',0,13,153,6,3
	.word	28535
	.byte	30
	.byte	'Ifx_CPU_OSEL_Bits',0,13,159,6,3
	.word	20218
	.byte	30
	.byte	'Ifx_CPU_PC_Bits',0,13,166,6,3
	.word	30293
	.byte	30
	.byte	'Ifx_CPU_PCON0_Bits',0,13,174,6,3
	.word	23344
	.byte	30
	.byte	'Ifx_CPU_PCON1_Bits',0,13,182,6,3
	.word	23108
	.byte	30
	.byte	'Ifx_CPU_PCON2_Bits',0,13,189,6,3
	.word	23231
	.byte	30
	.byte	'Ifx_CPU_PCXI_Bits',0,13,200,6,3
	.word	29908
	.byte	30
	.byte	'Ifx_CPU_PIEAR_Bits',0,13,206,6,3
	.word	23472
	.byte	30
	.byte	'Ifx_CPU_PIETR_Bits',0,13,224,6,3
	.word	23553
	.byte	30
	.byte	'Ifx_CPU_PMA0_Bits',0,13,231,6,3
	.word	21128
	.byte	30
	.byte	'Ifx_CPU_PMA1_Bits',0,13,238,6,3
	.word	21232
	.byte	30
	.byte	'Ifx_CPU_PMA2_Bits',0,13,245,6,3
	.word	21336
	.byte	30
	.byte	'Ifx_CPU_PSTR_Bits',0,13,130,7,3
	.word	22892
	.byte	30
	.byte	'Ifx_CPU_PSW_Bits',0,13,145,7,3
	.word	30074
	.byte	30
	.byte	'Ifx_CPU_RGN_ACCENA_Bits',0,13,182,7,3
	.word	12823
	.byte	30
	.byte	'Ifx_CPU_RGN_ACCENB_Bits',0,13,219,7,3
	.word	13397
	.byte	30
	.byte	'Ifx_CPU_RGN_LA_Bits',0,13,226,7,3
	.word	12611
	.byte	30
	.byte	'Ifx_CPU_RGN_UA_Bits',0,13,233,7,3
	.word	12717
	.byte	30
	.byte	'Ifx_CPU_SEGEN_Bits',0,13,242,7,3
	.word	20857
	.byte	30
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,13,151,8,3
	.word	15252
	.byte	30
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,13,188,8,3
	.word	15834
	.byte	30
	.byte	'Ifx_CPU_SMACON_Bits',0,13,196,8,3
	.word	21564
	.byte	30
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,13,233,8,3
	.word	14072
	.byte	30
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,13,142,9,3
	.word	14657
	.byte	30
	.byte	'Ifx_CPU_SWEVT_Bits',0,13,153,9,3
	.word	29199
	.byte	30
	.byte	'Ifx_CPU_SYSCON_Bits',0,13,171,9,3
	.word	30393
	.byte	30
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,13,178,9,3
	.word	21010
	.byte	30
	.byte	'Ifx_CPU_TPS_CON_Bits',0,13,189,9,3
	.word	25929
	.byte	30
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,13,196,9,3
	.word	26818
	.byte	30
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,13,203,9,3
	.word	26419
	.byte	30
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,13,211,9,3
	.word	26270
	.byte	30
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,13,218,9,3
	.word	26693
	.byte	30
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,13,226,9,3
	.word	26546
	.byte	30
	.byte	'Ifx_CPU_TPS_EXTIM_FCX_Bits',0,13,233,9,3
	.word	27193
	.byte	30
	.byte	'Ifx_CPU_TPS_EXTIM_STAT_Bits',0,13,246,9,3
	.word	26946
	.byte	30
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,13,252,9,3
	.word	26111
	.byte	30
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,13,138,10,3
	.word	29374
	.byte	30
	.byte	'Ifx_CPU_TR_ADR_Bits',0,13,144,10,3
	.word	27805
	.byte	30
	.byte	'Ifx_CPU_TR_EVT_Bits',0,13,164,10,3
	.word	27476
	.byte	30
	.byte	'Ifx_CPU_A',0,13,177,10,3
	.word	31856
	.byte	30
	.byte	'Ifx_CPU_BIV',0,13,185,10,3
	.word	30988
	.byte	30
	.byte	'Ifx_CPU_BLK_OMASK',0,13,193,10,3
	.word	20728
	.byte	30
	.byte	'Ifx_CPU_BLK_OTAR',0,13,201,10,3
	.word	20581
	.byte	30
	.byte	'Ifx_CPU_BLK_RABR',0,13,209,10,3
	.word	20450
	.byte	30
	.byte	'Ifx_CPU_BTV',0,13,217,10,3
	.word	31089
	.byte	30
	.byte	'Ifx_CPU_CCNT',0,13,225,10,3
	.word	28181
	.byte	30
	.byte	'Ifx_CPU_CCTRL',0,13,233,10,3
	.word	28078
	.byte	30
	.byte	'Ifx_CPU_COMPAT',0,13,241,10,3
	.word	23960
	.byte	30
	.byte	'Ifx_CPU_CORE_ID',0,13,249,10,3
	.word	30894
	.byte	30
	.byte	'Ifx_CPU_CPR_L',0,13,129,11,3
	.word	25380
	.byte	30
	.byte	'Ifx_CPU_CPR_U',0,13,137,11,3
	.word	25487
	.byte	30
	.byte	'Ifx_CPU_CPU_ID',0,13,145,11,3
	.word	30784
	.byte	30
	.byte	'Ifx_CPU_CPXE',0,13,153,11,3
	.word	25659
	.byte	30
	.byte	'Ifx_CPU_CREVT',0,13,161,11,3
	.word	29159
	.byte	30
	.byte	'Ifx_CPU_CUS_ID',0,13,169,11,3
	.word	31670
	.byte	30
	.byte	'Ifx_CPU_D',0,13,177,11,3
	.word	31760
	.byte	30
	.byte	'Ifx_CPU_DATR',0,13,185,11,3
	.word	22244
	.byte	30
	.byte	'Ifx_CPU_DBGSR',0,13,193,11,3
	.word	28827
	.byte	30
	.byte	'Ifx_CPU_DBGTCR',0,13,201,11,3
	.word	29857
	.byte	30
	.byte	'Ifx_CPU_DCON0',0,13,209,11,3
	.word	22841
	.byte	30
	.byte	'Ifx_CPU_DCON2',0,13,217,11,3
	.word	21524
	.byte	30
	.byte	'Ifx_CPU_DCX',0,13,225,11,3
	.word	29752
	.byte	30
	.byte	'Ifx_CPU_DEADD',0,13,233,11,3
	.word	22336
	.byte	30
	.byte	'Ifx_CPU_DIEAR',0,13,241,11,3
	.word	22417
	.byte	30
	.byte	'Ifx_CPU_DIETR',0,13,249,11,3
	.word	22713
	.byte	30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R',0,13,129,12,3
	.word	19571
	.byte	30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W',0,13,137,12,3
	.word	18389
	.byte	30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R',0,13,145,12,3
	.word	20167
	.byte	30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W',0,13,153,12,3
	.word	18985
	.byte	30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA',0,13,161,12,3
	.word	17687
	.byte	30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA',0,13,169,12,3
	.word	17803
	.byte	30
	.byte	'Ifx_CPU_DMS',0,13,177,12,3
	.word	29645
	.byte	30
	.byte	'Ifx_CPU_DPRE',0,13,185,12,3
	.word	25764
	.byte	30
	.byte	'Ifx_CPU_DPR_L',0,13,193,12,3
	.word	25098
	.byte	30
	.byte	'Ifx_CPU_DPR_U',0,13,201,12,3
	.word	25205
	.byte	30
	.byte	'Ifx_CPU_DPWE',0,13,209,12,3
	.word	25869
	.byte	30
	.byte	'Ifx_CPU_DSTR',0,13,217,12,3
	.word	22005
	.byte	30
	.byte	'Ifx_CPU_EXEVT',0,13,225,12,3
	.word	28993
	.byte	30
	.byte	'Ifx_CPU_FCX',0,13,233,12,3
	.word	31445
	.byte	30
	.byte	'Ifx_CPU_FLASHCON0',0,13,241,12,3
	.word	11285
	.byte	30
	.byte	'Ifx_CPU_FLASHCON1',0,13,249,12,3
	.word	11484
	.byte	30
	.byte	'Ifx_CPU_FLASHCON2',0,13,129,13,3
	.word	11792
	.byte	30
	.byte	'Ifx_CPU_FLASHCON3',0,13,137,13,3
	.word	12105
	.byte	30
	.byte	'Ifx_CPU_FLASHCON4',0,13,145,13,3
	.word	12214
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,13,153,13,3
	.word	24325
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,13,161,13,3
	.word	24577
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,13,169,13,3
	.word	24412
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,13,177,13,3
	.word	24668
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,13,185,13,3
	.word	24759
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,13,193,13,3
	.word	24850
	.byte	30
	.byte	'Ifx_CPU_ICNT',0,13,201,13,3
	.word	28285
	.byte	30
	.byte	'Ifx_CPU_ICR',0,13,209,13,3
	.word	31325
	.byte	30
	.byte	'Ifx_CPU_ISP',0,13,217,13,3
	.word	31169
	.byte	30
	.byte	'Ifx_CPU_KRST0',0,13,225,13,3
	.word	12350
	.byte	30
	.byte	'Ifx_CPU_KRST1',0,13,233,13,3
	.word	12454
	.byte	30
	.byte	'Ifx_CPU_KRSTCLR',0,13,241,13,3
	.word	12560
	.byte	30
	.byte	'Ifx_CPU_LCX',0,13,249,13,3
	.word	31565
	.byte	30
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R',0,13,129,14,3
	.word	16968
	.byte	30
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R',0,13,137,14,3
	.word	17560
	.byte	30
	.byte	'Ifx_CPU_M1CNT',0,13,145,14,3
	.word	28390
	.byte	30
	.byte	'Ifx_CPU_M2CNT',0,13,153,14,3
	.word	28495
	.byte	30
	.byte	'Ifx_CPU_M3CNT',0,13,161,14,3
	.word	28600
	.byte	30
	.byte	'Ifx_CPU_OSEL',0,13,169,14,3
	.word	20264
	.byte	30
	.byte	'Ifx_CPU_PC',0,13,177,14,3
	.word	30353
	.byte	30
	.byte	'Ifx_CPU_PCON0',0,13,185,14,3
	.word	23432
	.byte	30
	.byte	'Ifx_CPU_PCON1',0,13,193,14,3
	.word	23191
	.byte	30
	.byte	'Ifx_CPU_PCON2',0,13,201,14,3
	.word	23304
	.byte	30
	.byte	'Ifx_CPU_PCXI',0,13,209,14,3
	.word	30034
	.byte	30
	.byte	'Ifx_CPU_PIEAR',0,13,217,14,3
	.word	23513
	.byte	30
	.byte	'Ifx_CPU_PIETR',0,13,225,14,3
	.word	23809
	.byte	30
	.byte	'Ifx_CPU_PMA0',0,13,233,14,3
	.word	21192
	.byte	30
	.byte	'Ifx_CPU_PMA1',0,13,241,14,3
	.word	21296
	.byte	30
	.byte	'Ifx_CPU_PMA2',0,13,249,14,3
	.word	21400
	.byte	30
	.byte	'Ifx_CPU_PSTR',0,13,129,15,3
	.word	23068
	.byte	30
	.byte	'Ifx_CPU_PSW',0,13,137,15,3
	.word	30253
	.byte	30
	.byte	'Ifx_CPU_RGN_ACCENA',0,13,145,15,3
	.word	13357
	.byte	30
	.byte	'Ifx_CPU_RGN_ACCENB',0,13,153,15,3
	.word	13941
	.byte	30
	.byte	'Ifx_CPU_RGN_LA',0,13,161,15,3
	.word	12677
	.byte	30
	.byte	'Ifx_CPU_RGN_UA',0,13,169,15,3
	.word	12783
	.byte	30
	.byte	'Ifx_CPU_SEGEN',0,13,177,15,3
	.word	20957
	.byte	30
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W',0,13,185,15,3
	.word	15794
	.byte	30
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W',0,13,193,15,3
	.word	16386
	.byte	30
	.byte	'Ifx_CPU_SMACON',0,13,201,15,3
	.word	21653
	.byte	30
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R',0,13,209,15,3
	.word	14617
	.byte	30
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R',0,13,217,15,3
	.word	15212
	.byte	30
	.byte	'Ifx_CPU_SWEVT',0,13,225,15,3
	.word	29325
	.byte	30
	.byte	'Ifx_CPU_SYSCON',0,13,233,15,3
	.word	30663
	.byte	30
	.byte	'Ifx_CPU_TASK_ASI',0,13,241,15,3
	.word	21077
	.byte	30
	.byte	'Ifx_CPU_TPS_CON',0,13,249,15,3
	.word	26071
	.byte	30
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN',0,13,129,16,3
	.word	26906
	.byte	30
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL',0,13,137,16,3
	.word	26506
	.byte	30
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL',0,13,145,16,3
	.word	26379
	.byte	30
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL',0,13,153,16,3
	.word	26778
	.byte	30
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL',0,13,161,16,3
	.word	26653
	.byte	30
	.byte	'Ifx_CPU_TPS_EXTIM_FCX',0,13,169,16,3
	.word	27271
	.byte	30
	.byte	'Ifx_CPU_TPS_EXTIM_STAT',0,13,177,16,3
	.word	27153
	.byte	30
	.byte	'Ifx_CPU_TPS_TIMER',0,13,185,16,3
	.word	26159
	.byte	30
	.byte	'Ifx_CPU_TRIG_ACC',0,13,193,16,3
	.word	29538
	.byte	30
	.byte	'Ifx_CPU_TR_ADR',0,13,201,16,3
	.word	27849
	.byte	30
	.byte	'Ifx_CPU_TR_EVT',0,13,209,16,3
	.word	27765
	.byte	14
	.word	13981
	.byte	30
	.byte	'Ifx_CPU_RGN',0,13,227,16,3
	.word	43435
	.byte	14
	.word	20768
	.byte	30
	.byte	'Ifx_CPU_BLK',0,13,247,16,3
	.word	43461
	.byte	14
	.word	24890
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP',0,13,143,17,3
	.word	43487
	.byte	14
	.word	25245
	.byte	30
	.byte	'Ifx_CPU_DPR',0,13,162,17,3
	.word	43518
	.byte	14
	.word	25527
	.byte	30
	.byte	'Ifx_CPU_CPR',0,13,181,17,3
	.word	43544
	.byte	14
	.word	26208
	.byte	30
	.byte	'Ifx_CPU_TPS',0,13,200,17,3
	.word	43570
	.byte	14
	.word	27311
	.byte	30
	.byte	'Ifx_CPU_TPS_EXTIM',0,13,224,17,3
	.word	43596
	.byte	14
	.word	27889
	.byte	30
	.byte	'Ifx_CPU_TR',0,13,243,17,3
	.word	43628
	.byte	14
	.word	31905
	.byte	30
	.byte	'Ifx_CPU',0,13,210,19,3
	.word	43653
	.byte	17,10,124,9,1,18
	.byte	'IfxCpu_Id_0',0,0,18
	.byte	'IfxCpu_Id_1',0,1,18
	.byte	'IfxCpu_Id_2',0,2,18
	.byte	'IfxCpu_Id_3',0,3,18
	.byte	'IfxCpu_Id_4',0,4,18
	.byte	'IfxCpu_Id_6',0,6,18
	.byte	'IfxCpu_Id_none',0,7,0,30
	.byte	'IfxCpu_Id',0,10,133,1,3
	.word	43675
	.byte	30
	.byte	'IfxCpu_ResourceCpu',0,10,170,1,3
	.word	9693
	.byte	10
	.byte	'_Ifx_SRC_SRCR_Bits',0,18,68,16,4,11
	.byte	'SRPN',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	715
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	715
	.byte	3,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	715
	.byte	2,0,2,35,1,11
	.byte	'ECC',0,1
	.word	715
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	715
	.byte	3,0,2,35,2,11
	.byte	'SRR',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SRC_SRCR_Bits',0,18,85,3
	.word	43829
	.byte	12,18,93,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43829
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SRC_SRCR',0,18,98,3
	.word	44145
	.byte	10
	.byte	'_Ifx_SRC_CPU_CPU',0,18,110,25,4,13
	.byte	'SB',0
	.word	44145
	.byte	4,2,35,0,0,14
	.word	44205
	.byte	30
	.byte	'Ifx_SRC_CPU_CPU',0,18,113,3
	.word	44240
	.byte	15,24
	.word	44205
	.byte	16,5,0,14
	.word	44269
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,18,128,1,25,24,13
	.byte	'CPU',0
	.word	44278
	.byte	24,2,35,0,0,14
	.word	44283
	.byte	30
	.byte	'Ifx_SRC_CPU',0,18,131,1,3
	.word	44316
	.byte	10
	.byte	'_Ifx_SRC_AGBT_AGBT',0,18,146,1,25,4,13
	.byte	'SR',0
	.word	44145
	.byte	4,2,35,0,0,14
	.word	44342
	.byte	30
	.byte	'Ifx_SRC_AGBT_AGBT',0,18,149,1,3
	.word	44380
	.byte	15,4
	.word	44342
	.byte	16,0,0,14
	.word	44412
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,18,164,1,25,4,13
	.byte	'AGBT',0
	.word	44421
	.byte	4,2,35,0,0,14
	.word	44426
	.byte	30
	.byte	'Ifx_SRC_AGBT',0,18,167,1,3
	.word	44461
	.byte	10
	.byte	'_Ifx_SRC_XBAR_XBAR',0,18,182,1,25,4,13
	.byte	'SR',0
	.word	44145
	.byte	4,2,35,0,0,14
	.word	44488
	.byte	30
	.byte	'Ifx_SRC_XBAR_XBAR',0,18,185,1,3
	.word	44526
	.byte	15,12
	.word	44488
	.byte	16,2,0,14
	.word	44558
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,18,200,1,25,12,13
	.byte	'XBAR',0
	.word	44567
	.byte	12,2,35,0,0,14
	.word	44572
	.byte	30
	.byte	'Ifx_SRC_XBAR',0,18,203,1,3
	.word	44607
	.byte	15,8
	.word	44145
	.byte	16,1,0,10
	.byte	'_Ifx_SRC_CERBERUS_CERBERUS',0,18,218,1,25,8,13
	.byte	'SR',0
	.word	44634
	.byte	8,2,35,0,0,14
	.word	44643
	.byte	30
	.byte	'Ifx_SRC_CERBERUS_CERBERUS',0,18,221,1,3
	.word	44689
	.byte	14
	.word	44643
	.byte	10
	.byte	'_Ifx_SRC_CERBERUS',0,18,236,1,25,8,13
	.byte	'CERBERUS',0
	.word	44729
	.byte	8,2,35,0,0,14
	.word	44734
	.byte	30
	.byte	'Ifx_SRC_CERBERUS',0,18,239,1,3
	.word	44777
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN_ASCLIN',0,18,254,1,25,12,13
	.byte	'TX',0
	.word	44145
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	44145
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	44145
	.byte	4,2,35,8,0,14
	.word	44808
	.byte	30
	.byte	'Ifx_SRC_ASCLIN_ASCLIN',0,18,131,2,3
	.word	44875
	.byte	15,144,1
	.word	44808
	.byte	16,11,0,14
	.word	44911
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,18,146,2,25,144,1,13
	.byte	'ASCLIN',0
	.word	44921
	.byte	144,1,2,35,0,0,14
	.word	44926
	.byte	30
	.byte	'Ifx_SRC_ASCLIN',0,18,149,2,3
	.word	44967
	.byte	10
	.byte	'_Ifx_SRC_QSPI_QSPI',0,18,164,2,25,20,13
	.byte	'TX',0
	.word	44145
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	44145
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	44145
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	44145
	.byte	4,2,35,12,13
	.byte	'U',0
	.word	44145
	.byte	4,2,35,16,0,14
	.word	44996
	.byte	30
	.byte	'Ifx_SRC_QSPI_QSPI',0,18,171,2,3
	.word	45082
	.byte	15,120
	.word	44996
	.byte	16,5,0,14
	.word	45114
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,18,186,2,25,120,13
	.byte	'QSPI',0
	.word	45123
	.byte	120,2,35,0,0,14
	.word	45128
	.byte	30
	.byte	'Ifx_SRC_QSPI',0,18,189,2,3
	.word	45163
	.byte	10
	.byte	'_Ifx_SRC_HSCT_HSCT',0,18,204,2,25,4,13
	.byte	'SR',0
	.word	44145
	.byte	4,2,35,0,0,14
	.word	45190
	.byte	30
	.byte	'Ifx_SRC_HSCT_HSCT',0,18,207,2,3
	.word	45228
	.byte	15,8
	.word	45190
	.byte	16,1,0,14
	.word	45260
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,18,222,2,25,8,13
	.byte	'HSCT',0
	.word	45269
	.byte	8,2,35,0,0,14
	.word	45274
	.byte	30
	.byte	'Ifx_SRC_HSCT',0,18,225,2,3
	.word	45309
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL_CH',0,18,240,2,25,16,13
	.byte	'COK',0
	.word	44145
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	44145
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	44145
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	44145
	.byte	4,2,35,12,0,14
	.word	45336
	.byte	30
	.byte	'Ifx_SRC_HSSL_HSSL_CH',0,18,246,2,3
	.word	45417
	.byte	15,64
	.word	45336
	.byte	16,3,0,14
	.word	45452
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL',0,18,133,3,25,68,13
	.byte	'CH',0
	.word	45461
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	44145
	.byte	4,2,35,64,0,14
	.word	45466
	.byte	30
	.byte	'Ifx_SRC_HSSL_HSSL',0,18,137,3,3
	.word	45517
	.byte	15,136,1
	.word	45466
	.byte	16,1,0,14
	.word	45549
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,18,152,3,25,136,1,13
	.byte	'HSSL',0
	.word	45559
	.byte	136,1,2,35,0,0,14
	.word	45564
	.byte	30
	.byte	'Ifx_SRC_HSSL',0,18,155,3,3
	.word	45601
	.byte	10
	.byte	'_Ifx_SRC_I2C_I2C',0,18,170,3,25,16,13
	.byte	'DTR',0
	.word	44145
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	44145
	.byte	4,2,35,4,13
	.byte	'P',0
	.word	44145
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2933
	.byte	4,2,35,12,0,14
	.word	45628
	.byte	30
	.byte	'Ifx_SRC_I2C_I2C',0,18,176,3,3
	.word	45709
	.byte	15,32
	.word	45628
	.byte	16,1,0,14
	.word	45739
	.byte	10
	.byte	'_Ifx_SRC_I2C',0,18,191,3,25,32,13
	.byte	'I2C',0
	.word	45748
	.byte	32,2,35,0,0,14
	.word	45753
	.byte	30
	.byte	'Ifx_SRC_I2C',0,18,194,3,3
	.word	45786
	.byte	10
	.byte	'_Ifx_SRC_SENT_SENT',0,18,209,3,25,4,13
	.byte	'SR',0
	.word	44145
	.byte	4,2,35,0,0,14
	.word	45812
	.byte	30
	.byte	'Ifx_SRC_SENT_SENT',0,18,212,3,3
	.word	45850
	.byte	15,40
	.word	45812
	.byte	16,9,0,14
	.word	45882
	.byte	10
	.byte	'_Ifx_SRC_SENT',0,18,227,3,25,40,13
	.byte	'SENT',0
	.word	45891
	.byte	40,2,35,0,0,14
	.word	45896
	.byte	30
	.byte	'Ifx_SRC_SENT',0,18,230,3,3
	.word	45931
	.byte	15,20
	.word	44145
	.byte	16,4,0,10
	.byte	'_Ifx_SRC_MSC_MSC',0,18,245,3,25,20,13
	.byte	'SR',0
	.word	45958
	.byte	20,2,35,0,0,14
	.word	45967
	.byte	30
	.byte	'Ifx_SRC_MSC_MSC',0,18,248,3,3
	.word	46003
	.byte	15,80
	.word	45967
	.byte	16,3,0,14
	.word	46033
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,18,135,4,25,80,13
	.byte	'MSC',0
	.word	46042
	.byte	80,2,35,0,0,14
	.word	46047
	.byte	30
	.byte	'Ifx_SRC_MSC',0,18,138,4,3
	.word	46080
	.byte	15,16
	.word	44145
	.byte	16,3,0,10
	.byte	'_Ifx_SRC_CCU6_CCU',0,18,153,4,25,16,13
	.byte	'SR',0
	.word	46106
	.byte	16,2,35,0,0,14
	.word	46115
	.byte	30
	.byte	'Ifx_SRC_CCU6_CCU',0,18,156,4,3
	.word	46152
	.byte	15,32
	.word	46115
	.byte	16,1,0,14
	.word	46183
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,18,171,4,25,32,13
	.byte	'CCU',0
	.word	46192
	.byte	32,2,35,0,0,14
	.word	46197
	.byte	30
	.byte	'Ifx_SRC_CCU6',0,18,174,4,3
	.word	46231
	.byte	10
	.byte	'_Ifx_SRC_GPT12_GPT12',0,18,189,4,25,24,13
	.byte	'CIRQ',0
	.word	44145
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	44145
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	44145
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	44145
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	44145
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	44145
	.byte	4,2,35,20,0,14
	.word	46258
	.byte	30
	.byte	'Ifx_SRC_GPT12_GPT12',0,18,197,4,3
	.word	46360
	.byte	15,24
	.word	46258
	.byte	16,0,0,14
	.word	46394
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,18,212,4,25,24,13
	.byte	'GPT12',0
	.word	46403
	.byte	24,2,35,0,0,14
	.word	46408
	.byte	30
	.byte	'Ifx_SRC_GPT12',0,18,215,4,3
	.word	46445
	.byte	10
	.byte	'_Ifx_SRC_STM_STM',0,18,230,4,25,8,13
	.byte	'SR',0
	.word	44634
	.byte	8,2,35,0,0,14
	.word	46473
	.byte	30
	.byte	'Ifx_SRC_STM_STM',0,18,233,4,3
	.word	46509
	.byte	15,48
	.word	46473
	.byte	16,5,0,14
	.word	46539
	.byte	10
	.byte	'_Ifx_SRC_STM',0,18,248,4,25,48,13
	.byte	'STM',0
	.word	46548
	.byte	48,2,35,0,0,14
	.word	46553
	.byte	30
	.byte	'Ifx_SRC_STM',0,18,251,4,3
	.word	46586
	.byte	10
	.byte	'_Ifx_SRC_FCE_FCE0',0,18,138,5,25,4,13
	.byte	'SR',0
	.word	44145
	.byte	4,2,35,0,0,14
	.word	46612
	.byte	30
	.byte	'Ifx_SRC_FCE_FCE0',0,18,141,5,3
	.word	46649
	.byte	14
	.word	46612
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,18,156,5,25,4,13
	.byte	'FCE0',0
	.word	46680
	.byte	4,2,35,0,0,14
	.word	46685
	.byte	30
	.byte	'Ifx_SRC_FCE',0,18,159,5,3
	.word	46719
	.byte	15,32
	.word	715
	.byte	16,31,0,15,128,4
	.word	44145
	.byte	16,127,0,10
	.byte	'_Ifx_SRC_DMA_DMA',0,18,174,5,25,176,4,13
	.byte	'ERR',0
	.word	46106
	.byte	16,2,35,0,13
	.byte	'reserved_10',0
	.word	46745
	.byte	32,2,35,16,13
	.byte	'CH',0
	.word	46754
	.byte	128,4,2,35,48,0,14
	.word	46764
	.byte	30
	.byte	'Ifx_SRC_DMA_DMA',0,18,179,5,3
	.word	46836
	.byte	15,176,4
	.word	46764
	.byte	16,0,0,14
	.word	46866
	.byte	10
	.byte	'_Ifx_SRC_DMA',0,18,194,5,25,176,4,13
	.byte	'DMA',0
	.word	46876
	.byte	176,4,2,35,0,0,14
	.word	46881
	.byte	30
	.byte	'Ifx_SRC_DMA',0,18,197,5,3
	.word	46916
	.byte	10
	.byte	'_Ifx_SRC_SDMMC_SDMMC',0,18,212,5,25,8,13
	.byte	'ERR',0
	.word	44145
	.byte	4,2,35,0,13
	.byte	'DMA',0
	.word	44145
	.byte	4,2,35,4,0,14
	.word	46942
	.byte	30
	.byte	'Ifx_SRC_SDMMC_SDMMC',0,18,216,5,3
	.word	46996
	.byte	15,8
	.word	46942
	.byte	16,0,0,14
	.word	47030
	.byte	10
	.byte	'_Ifx_SRC_SDMMC',0,18,231,5,25,8,13
	.byte	'SDMMC',0
	.word	47039
	.byte	8,2,35,0,0,14
	.word	47044
	.byte	30
	.byte	'Ifx_SRC_SDMMC',0,18,234,5,3
	.word	47081
	.byte	15,40
	.word	44145
	.byte	16,9,0,10
	.byte	'_Ifx_SRC_GETH_GETH',0,18,249,5,25,40,13
	.byte	'SR',0
	.word	47109
	.byte	40,2,35,0,0,14
	.word	47118
	.byte	30
	.byte	'Ifx_SRC_GETH_GETH',0,18,252,5,3
	.word	47156
	.byte	15,40
	.word	47118
	.byte	16,0,0,14
	.word	47188
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,18,139,6,25,40,13
	.byte	'GETH',0
	.word	47197
	.byte	40,2,35,0,0,14
	.word	47202
	.byte	30
	.byte	'Ifx_SRC_GETH',0,18,142,6,3
	.word	47237
	.byte	15,64
	.word	44145
	.byte	16,15,0,10
	.byte	'_Ifx_SRC_CAN_CAN',0,18,157,6,25,64,13
	.byte	'INT',0
	.word	47264
	.byte	64,2,35,0,0,14
	.word	47273
	.byte	30
	.byte	'Ifx_SRC_CAN_CAN',0,18,160,6,3
	.word	47310
	.byte	15,192,1
	.word	47273
	.byte	16,2,0,14
	.word	47340
	.byte	10
	.byte	'_Ifx_SRC_CAN',0,18,175,6,25,192,1,13
	.byte	'CAN',0
	.word	47350
	.byte	192,1,2,35,0,0,14
	.word	47355
	.byte	30
	.byte	'Ifx_SRC_CAN',0,18,178,6,3
	.word	47390
	.byte	10
	.byte	'_Ifx_SRC_VADC_G',0,18,193,6,25,16,13
	.byte	'SR0',0
	.word	44145
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	44145
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	44145
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	44145
	.byte	4,2,35,12,0,14
	.word	47416
	.byte	30
	.byte	'Ifx_SRC_VADC_G',0,18,199,6,3
	.word	47491
	.byte	10
	.byte	'_Ifx_SRC_VADC_FC',0,18,214,6,25,4,13
	.byte	'SR0',0
	.word	44145
	.byte	4,2,35,0,0,14
	.word	47520
	.byte	30
	.byte	'Ifx_SRC_VADC_FC',0,18,217,6,3
	.word	47557
	.byte	15,192,1
	.word	47416
	.byte	16,11,0,14
	.word	47587
	.byte	15,32
	.word	47520
	.byte	16,7,0,14
	.word	47602
	.byte	15,32
	.word	47416
	.byte	16,1,0,14
	.word	47616
	.byte	10
	.byte	'_Ifx_SRC_VADC',0,18,233,6,25,128,2,13
	.byte	'G',0
	.word	47597
	.byte	192,1,2,35,0,13
	.byte	'FC',0
	.word	47611
	.byte	32,3,35,192,1,13
	.byte	'CG',0
	.word	47625
	.byte	32,3,35,224,1,0,14
	.word	47630
	.byte	30
	.byte	'Ifx_SRC_VADC',0,18,238,6,3
	.word	47690
	.byte	10
	.byte	'_Ifx_SRC_DSADC_DSADC',0,18,253,6,25,8,13
	.byte	'SRM',0
	.word	44145
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	44145
	.byte	4,2,35,4,0,14
	.word	47717
	.byte	30
	.byte	'Ifx_SRC_DSADC_DSADC',0,18,129,7,3
	.word	47771
	.byte	15,112
	.word	47717
	.byte	16,13,0,14
	.word	47805
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,18,144,7,25,112,13
	.byte	'DSADC',0
	.word	47814
	.byte	112,2,35,0,0,14
	.word	47819
	.byte	30
	.byte	'Ifx_SRC_DSADC',0,18,147,7,3
	.word	47856
	.byte	10
	.byte	'_Ifx_SRC_ERAY_ERAY',0,18,162,7,25,48,13
	.byte	'INT0',0
	.word	44145
	.byte	4,2,35,0,13
	.byte	'INT1',0
	.word	44145
	.byte	4,2,35,4,13
	.byte	'TINT0',0
	.word	44145
	.byte	4,2,35,8,13
	.byte	'TINT1',0
	.word	44145
	.byte	4,2,35,12,13
	.byte	'NDAT0',0
	.word	44145
	.byte	4,2,35,16,13
	.byte	'NDAT1',0
	.word	44145
	.byte	4,2,35,20,13
	.byte	'MBSC0',0
	.word	44145
	.byte	4,2,35,24,13
	.byte	'MBSC1',0
	.word	44145
	.byte	4,2,35,28,13
	.byte	'OBUSY',0
	.word	44145
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	44145
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4753
	.byte	8,2,35,40,0,14
	.word	47884
	.byte	30
	.byte	'Ifx_SRC_ERAY_ERAY',0,18,175,7,3
	.word	48079
	.byte	15,96
	.word	47884
	.byte	16,1,0,14
	.word	48111
	.byte	10
	.byte	'_Ifx_SRC_ERAY',0,18,190,7,25,96,13
	.byte	'ERAY',0
	.word	48120
	.byte	96,2,35,0,0,14
	.word	48125
	.byte	30
	.byte	'Ifx_SRC_ERAY',0,18,193,7,3
	.word	48160
	.byte	10
	.byte	'_Ifx_SRC_HSM_HSM',0,18,208,7,25,8,13
	.byte	'HSM',0
	.word	44634
	.byte	8,2,35,0,0,14
	.word	48187
	.byte	30
	.byte	'Ifx_SRC_HSM_HSM',0,18,211,7,3
	.word	48224
	.byte	15,8
	.word	48187
	.byte	16,0,0,14
	.word	48254
	.byte	10
	.byte	'_Ifx_SRC_HSM',0,18,226,7,25,8,13
	.byte	'HSM',0
	.word	48263
	.byte	8,2,35,0,0,14
	.word	48268
	.byte	30
	.byte	'Ifx_SRC_HSM',0,18,229,7,3
	.word	48301
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,18,244,7,25,16,13
	.byte	'SCUERU',0
	.word	46106
	.byte	16,2,35,0,0,14
	.word	48327
	.byte	30
	.byte	'Ifx_SRC_SCU',0,18,247,7,3
	.word	48363
	.byte	10
	.byte	'_Ifx_SRC_PMS_PMS',0,18,134,8,25,4,13
	.byte	'SR',0
	.word	44145
	.byte	4,2,35,0,0,14
	.word	48389
	.byte	30
	.byte	'Ifx_SRC_PMS_PMS',0,18,137,8,3
	.word	48425
	.byte	15,16
	.word	48389
	.byte	16,3,0,14
	.word	48455
	.byte	10
	.byte	'_Ifx_SRC_PMS',0,18,152,8,25,16,13
	.byte	'PMS',0
	.word	48464
	.byte	16,2,35,0,0,14
	.word	48469
	.byte	30
	.byte	'Ifx_SRC_PMS',0,18,155,8,3
	.word	48502
	.byte	15,12
	.word	44145
	.byte	16,2,0,10
	.byte	'_Ifx_SRC_SMU_SMU',0,18,170,8,25,12,13
	.byte	'SR',0
	.word	48528
	.byte	12,2,35,0,0,14
	.word	48537
	.byte	30
	.byte	'Ifx_SRC_SMU_SMU',0,18,173,8,3
	.word	48573
	.byte	15,12
	.word	48537
	.byte	16,0,0,14
	.word	48603
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,18,188,8,25,12,13
	.byte	'SMU',0
	.word	48612
	.byte	12,2,35,0,0,14
	.word	48617
	.byte	30
	.byte	'Ifx_SRC_SMU',0,18,191,8,3
	.word	48650
	.byte	15,32
	.word	44145
	.byte	16,7,0,10
	.byte	'_Ifx_SRC_PSI5_PSI5',0,18,206,8,25,32,13
	.byte	'SR',0
	.word	48676
	.byte	32,2,35,0,0,14
	.word	48685
	.byte	30
	.byte	'Ifx_SRC_PSI5_PSI5',0,18,209,8,3
	.word	48723
	.byte	15,32
	.word	48685
	.byte	16,0,0,14
	.word	48755
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,18,224,8,25,32,13
	.byte	'PSI5',0
	.word	48764
	.byte	32,2,35,0,0,14
	.word	48769
	.byte	30
	.byte	'Ifx_SRC_PSI5',0,18,227,8,3
	.word	48804
	.byte	10
	.byte	'_Ifx_SRC_HSPDM_HSPDM0',0,18,242,8,25,12,13
	.byte	'BFR',0
	.word	44145
	.byte	4,2,35,0,13
	.byte	'RAMP',0
	.word	44145
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	44145
	.byte	4,2,35,8,0,14
	.word	48831
	.byte	30
	.byte	'Ifx_SRC_HSPDM_HSPDM0',0,18,247,8,3
	.word	48900
	.byte	14
	.word	48831
	.byte	10
	.byte	'_Ifx_SRC_HSPDM',0,18,134,9,25,12,13
	.byte	'HSPDM0',0
	.word	48935
	.byte	12,2,35,0,0,14
	.word	48940
	.byte	30
	.byte	'Ifx_SRC_HSPDM',0,18,137,9,3
	.word	48978
	.byte	10
	.byte	'_Ifx_SRC_DAM_DAM',0,18,152,9,25,24,13
	.byte	'LI0',0
	.word	44145
	.byte	4,2,35,0,13
	.byte	'RI0',0
	.word	44145
	.byte	4,2,35,4,13
	.byte	'LI1',0
	.word	44145
	.byte	4,2,35,8,13
	.byte	'RI1',0
	.word	44145
	.byte	4,2,35,12,13
	.byte	'DR',0
	.word	44145
	.byte	4,2,35,16,13
	.byte	'ERR',0
	.word	44145
	.byte	4,2,35,20,0,14
	.word	49006
	.byte	30
	.byte	'Ifx_SRC_DAM_DAM',0,18,160,9,3
	.word	49107
	.byte	15,48
	.word	49006
	.byte	16,1,0,14
	.word	49137
	.byte	10
	.byte	'_Ifx_SRC_DAM',0,18,175,9,25,48,13
	.byte	'DAM',0
	.word	49146
	.byte	48,2,35,0,0,14
	.word	49151
	.byte	30
	.byte	'Ifx_SRC_DAM',0,18,178,9,3
	.word	49184
	.byte	10
	.byte	'_Ifx_SRC_PSI5S_PSI5S',0,18,193,9,25,32,13
	.byte	'SR',0
	.word	48676
	.byte	32,2,35,0,0,14
	.word	49210
	.byte	30
	.byte	'Ifx_SRC_PSI5S_PSI5S',0,18,196,9,3
	.word	49250
	.byte	15,32
	.word	49210
	.byte	16,0,0,14
	.word	49284
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,18,211,9,25,32,13
	.byte	'PSI5S',0
	.word	49293
	.byte	32,2,35,0,0,14
	.word	49298
	.byte	30
	.byte	'Ifx_SRC_PSI5S',0,18,214,9,3
	.word	49335
	.byte	10
	.byte	'_Ifx_SRC_RIF_RIF',0,18,229,9,25,8,13
	.byte	'ERR',0
	.word	44145
	.byte	4,2,35,0,13
	.byte	'INT',0
	.word	44145
	.byte	4,2,35,4,0,14
	.word	49363
	.byte	30
	.byte	'Ifx_SRC_RIF_RIF',0,18,233,9,3
	.word	49413
	.byte	15,16
	.word	49363
	.byte	16,1,0,14
	.word	49443
	.byte	10
	.byte	'_Ifx_SRC_RIF',0,18,248,9,25,16,13
	.byte	'RIF',0
	.word	49452
	.byte	16,2,35,0,0,14
	.word	49457
	.byte	30
	.byte	'Ifx_SRC_RIF',0,18,251,9,3
	.word	49490
	.byte	10
	.byte	'_Ifx_SRC_SPU_SPU',0,18,138,10,25,8,13
	.byte	'INT',0
	.word	44145
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	44145
	.byte	4,2,35,4,0,14
	.word	49516
	.byte	30
	.byte	'Ifx_SRC_SPU_SPU',0,18,142,10,3
	.word	49566
	.byte	15,16
	.word	49516
	.byte	16,1,0,14
	.word	49596
	.byte	10
	.byte	'_Ifx_SRC_SPU',0,18,157,10,25,16,13
	.byte	'SPU',0
	.word	49605
	.byte	16,2,35,0,0,14
	.word	49610
	.byte	30
	.byte	'Ifx_SRC_SPU',0,18,160,10,3
	.word	49643
	.byte	10
	.byte	'_Ifx_SRC_GPSR_GPSR',0,18,175,10,25,32,13
	.byte	'SR',0
	.word	48676
	.byte	32,2,35,0,0,14
	.word	49669
	.byte	30
	.byte	'Ifx_SRC_GPSR_GPSR',0,18,178,10,3
	.word	49707
	.byte	15,192,1
	.word	49669
	.byte	16,5,0,14
	.word	49739
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,18,193,10,25,192,1,13
	.byte	'GPSR',0
	.word	49749
	.byte	192,1,2,35,0,0,14
	.word	49754
	.byte	30
	.byte	'Ifx_SRC_GPSR',0,18,196,10,3
	.word	49791
	.byte	10
	.byte	'_Ifx_SCU_ACCEN00_Bits',0,5,68,16,4,11
	.byte	'EN0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	715
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	715
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	715
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	715
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_ACCEN00_Bits',0,5,102,3
	.word	49818
	.byte	10
	.byte	'_Ifx_SCU_ACCEN01_Bits',0,5,105,16,4,11
	.byte	'reserved_0',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_ACCEN01_Bits',0,5,108,3
	.word	50377
	.byte	10
	.byte	'_Ifx_SCU_ACCEN10_Bits',0,5,111,16,4,11
	.byte	'EN0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	715
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	715
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	715
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	715
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_ACCEN10_Bits',0,5,145,1,3
	.word	50456
	.byte	10
	.byte	'_Ifx_SCU_ACCEN11_Bits',0,5,148,1,16,4,11
	.byte	'reserved_0',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_ACCEN11_Bits',0,5,151,1,3
	.word	51016
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,5,154,1,16,4,11
	.byte	'STM0DIS',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'STM3DIS',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'STM4DIS',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'STM5DIS',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	715
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	196
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,5,164,1,3
	.word	51097
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,5,167,1,16,4,11
	.byte	'STMDIV',0,1
	.word	715
	.byte	4,4,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	715
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	715
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	715
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	715
	.byte	4,4,2,35,2,11
	.byte	'BBBDIV',0,1
	.word	715
	.byte	4,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	715
	.byte	2,6,2,35,3,11
	.byte	'FSI2DIV',0,1
	.word	715
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	715
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON0_Bits',0,5,181,1,3
	.word	51314
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,5,184,1,16,4,11
	.byte	'MCANDIV',0,1
	.word	715
	.byte	4,4,2,35,0,11
	.byte	'CLKSELMCAN',0,1
	.word	715
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'PLL1DIVDIS',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'I2CDIV',0,1
	.word	715
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	715
	.byte	4,0,2,35,1,11
	.byte	'MSCDIV',0,1
	.word	715
	.byte	4,4,2,35,2,11
	.byte	'CLKSELMSC',0,1
	.word	715
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	715
	.byte	2,0,2,35,2,11
	.byte	'QSPIDIV',0,1
	.word	715
	.byte	4,4,2,35,3,11
	.byte	'CLKSELQSPI',0,1
	.word	715
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON1_Bits',0,5,199,1,3
	.word	51587
	.byte	10
	.byte	'_Ifx_SCU_CCUCON10_Bits',0,5,202,1,16,4,11
	.byte	'CPU4DIV',0,1
	.word	715
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	196
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON10_Bits',0,5,206,1,3
	.word	51913
	.byte	10
	.byte	'_Ifx_SCU_CCUCON11_Bits',0,5,209,1,16,4,11
	.byte	'CPU5DIV',0,1
	.word	715
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	196
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON11_Bits',0,5,213,1,3
	.word	52015
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,5,216,1,16,4,11
	.byte	'ASCLINFDIV',0,1
	.word	715
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	715
	.byte	4,0,2,35,0,11
	.byte	'ASCLINSDIV',0,1
	.word	715
	.byte	4,4,2,35,1,11
	.byte	'CLKSELASCLINS',0,1
	.word	715
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	196
	.byte	10,8,2,35,0,11
	.byte	'EBUPERON',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'ERAYPERON',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'HSPDMPERON',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	715
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON2_Bits',0,5,228,1,3
	.word	52117
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,5,231,1,16,4,11
	.byte	'PLL0MONEN',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'PLL1MONEN',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'PLL2MONEN',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'SPBMONEN',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'BACKMONEN',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	715
	.byte	3,0,2,35,0,11
	.byte	'PLL0MONTST',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'PLL1MONTST',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'PLL2MONTST',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'SPBMONTST',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'BACKMONTST',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	196
	.byte	11,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	715
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON3_Bits',0,5,248,1,3
	.word	52391
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,5,251,1,16,4,11
	.byte	'LOTHR',0,2
	.word	732
	.byte	12,4,2,35,0,11
	.byte	'UPTHR',0,4
	.word	196
	.byte	12,8,2,35,0,11
	.byte	'MONEN',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'MONTST',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	715
	.byte	4,2,2,35,3,11
	.byte	'UP',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON4_Bits',0,5,132,2,3
	.word	52760
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,5,135,2,16,4,11
	.byte	'GETHDIV',0,1
	.word	715
	.byte	4,4,2,35,0,11
	.byte	'MCANHDIV',0,1
	.word	715
	.byte	4,0,2,35,0,11
	.byte	'ADASDIV',0,1
	.word	715
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	196
	.byte	18,2,2,35,0,11
	.byte	'UP',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON5_Bits',0,5,143,2,3
	.word	52940
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,5,146,2,16,4,11
	.byte	'CPU0DIV',0,1
	.word	715
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	196
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON6_Bits',0,5,150,2,3
	.word	53109
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,5,153,2,16,4,11
	.byte	'CPU1DIV',0,1
	.word	715
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	196
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON7_Bits',0,5,157,2,3
	.word	53209
	.byte	10
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,5,160,2,16,4,11
	.byte	'CPU2DIV',0,1
	.word	715
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	196
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON8_Bits',0,5,164,2,3
	.word	53309
	.byte	10
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,5,167,2,16,4,11
	.byte	'CPU3DIV',0,1
	.word	715
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	196
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON9_Bits',0,5,171,2,3
	.word	53409
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,5,174,2,16,4,11
	.byte	'CHREV',0,1
	.word	715
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	715
	.byte	2,0,2,35,0,11
	.byte	'CHPK',0,1
	.word	715
	.byte	4,4,2,35,1,11
	.byte	'CHID',0,1
	.word	715
	.byte	4,0,2,35,1,11
	.byte	'EEA',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	715
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	715
	.byte	4,4,2,35,3,11
	.byte	'VART',0,1
	.word	715
	.byte	3,1,2,35,3,11
	.byte	'SEC',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CHIPID_Bits',0,5,185,2,3
	.word	53509
	.byte	10
	.byte	'_Ifx_SCU_DTSCLIM_Bits',0,5,188,2,16,4,11
	.byte	'LOWER',0,2
	.word	732
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'BGPOK',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'EN',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'LLU',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	732
	.byte	12,4,2,35,2,11
	.byte	'INTEN',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'INT',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_DTSCLIM_Bits',0,5,200,2,3
	.word	53712
	.byte	10
	.byte	'_Ifx_SCU_DTSCSTAT_Bits',0,5,203,2,16,4,11
	.byte	'RESULT',0,2
	.word	732
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	196
	.byte	20,0,2,35,0,0,30
	.byte	'Ifx_SCU_DTSCSTAT_Bits',0,5,207,2,3
	.word	53944
	.byte	10
	.byte	'_Ifx_SCU_EICON0_Bits',0,5,210,2,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	563
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	563
	.byte	16,0,2,35,0,0,30
	.byte	'Ifx_SCU_EICON0_Bits',0,5,216,2,3
	.word	54046
	.byte	10
	.byte	'_Ifx_SCU_EICON1_Bits',0,5,219,2,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	196
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_EICON1_Bits',0,5,228,2,3
	.word	54174
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,5,231,2,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	715
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	715
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	196
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	715
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	715
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	715
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EICR_Bits',0,5,250,2,3
	.word	54363
	.byte	10
	.byte	'_Ifx_SCU_EIFILT_Bits',0,5,253,2,16,4,11
	.byte	'FILRQ0A',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'FILRQ5A',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'FILRQ2A',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'FILRQ3A',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'FILRQ0C',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'FILRQ1C',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'FILRQ3C',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'FILRQ2C',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'FILRQ4A',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'FILRQ6A',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'FILRQ1A',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'FILRQ7A',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'FILRQ6D',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'FILRQ4D',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'FILRQ2B',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'FILRQ3B',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'FILRQ7C',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	715
	.byte	7,0,2,35,2,11
	.byte	'FILTDIV',0,1
	.word	715
	.byte	4,4,2,35,3,11
	.byte	'DEPTH',0,1
	.word	715
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_EIFILT_Bits',0,5,147,3,3
	.word	54727
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,5,150,3,16,4,11
	.byte	'INTF0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	196
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SCU_EIFR_Bits',0,5,161,3,3
	.word	55166
	.byte	10
	.byte	'_Ifx_SCU_EISR_Bits',0,5,164,3,16,4,11
	.byte	'AE',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	732
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	732
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_EISR_Bits',0,5,174,3,3
	.word	55377
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,5,177,3,16,4,11
	.byte	'POL',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	732
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	732
	.byte	14,0,2,35,2,0,30
	.byte	'Ifx_SCU_EMSR_Bits',0,5,187,3,3
	.word	55553
	.byte	10
	.byte	'_Ifx_SCU_EMSSW_Bits',0,5,190,3,16,4,11
	.byte	'reserved_0',0,4
	.word	196
	.byte	24,8,2,35,0,11
	.byte	'EMSFM',0,1
	.word	715
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	715
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	715
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_EMSSW_Bits',0,5,196,3,3
	.word	55747
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,5,199,3,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	732
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	196
	.byte	23,0,2,35,0,0,30
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,5,204,3,3
	.word	55882
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,5,207,3,16,4,11
	.byte	'ARI',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	196
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_ESROCFG_Bits',0,5,212,3,3
	.word	56018
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,5,215,3,16,4,11
	.byte	'EN0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	715
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	732
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	715
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	715
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	715
	.byte	8,0,2,35,3,0,30
	.byte	'Ifx_SCU_EXTCON_Bits',0,5,226,3,3
	.word	56129
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,5,229,3,16,4,11
	.byte	'STEP',0,2
	.word	732
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	715
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	715
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	732
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	715
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_FDR_Bits',0,5,237,3,3
	.word	56347
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,5,240,3,16,4,11
	.byte	'FS0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	715
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	715
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	715
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	715
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	715
	.byte	8,0,2,35,3,0,30
	.byte	'Ifx_SCU_FMR_Bits',0,5,132,4,3
	.word	56510
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,5,135,4,16,4,11
	.byte	'MODREV',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	732
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_ID_Bits',0,5,140,4,3
	.word	56846
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,5,143,4,16,4,11
	.byte	'IPEN00',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	715
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	715
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	715
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	715
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	715
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	715
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	715
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	715
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_SCU_IGCR_Bits',0,5,167,4,3
	.word	56953
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,5,170,4,16,4,11
	.byte	'P0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	196
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_IN_Bits',0,5,175,4,3
	.word	57405
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,5,178,4,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	715
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	715
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	715
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_IOCR_Bits',0,5,185,4,3
	.word	57504
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,5,188,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'LBISTRES',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,4
	.word	196
	.byte	18,12,2,35,0,11
	.byte	'reserved_20',0,2
	.word	732
	.byte	8,4,2,35,2,11
	.byte	'LBISTDONE',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'LBISTERRINJ',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'LBISTREQRED',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,5,198,4,3
	.word	57654
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,5,201,4,16,4,11
	.byte	'SEED',0,4
	.word	196
	.byte	19,13,2,35,0,11
	.byte	'reserved_19',0,1
	.word	715
	.byte	5,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	715
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	715
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,5,208,4,3
	.word	57892
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,5,211,4,16,4,11
	.byte	'LENGTH',0,2
	.word	732
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	196
	.byte	20,0,2,35,0,0,30
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,5,215,4,3
	.word	58053
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL3_Bits',0,5,218,4,16,4,11
	.byte	'SIGNATURE',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_LBISTCTRL3_Bits',0,5,221,4,3
	.word	58159
	.byte	10
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,5,224,4,16,4,11
	.byte	'LS2',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	732
	.byte	14,1,2,35,0,11
	.byte	'LSEN2',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'LS0',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	732
	.byte	14,1,2,35,2,11
	.byte	'LSEN0',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_LCLCON0_Bits',0,5,232,4,3
	.word	58245
	.byte	10
	.byte	'_Ifx_SCU_LCLCON1_Bits',0,5,235,4,16,4,11
	.byte	'LS3',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	732
	.byte	14,1,2,35,0,11
	.byte	'LSEN3',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'LS1',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	732
	.byte	14,1,2,35,2,11
	.byte	'LSEN1',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_LCLCON1_Bits',0,5,243,4,3
	.word	58413
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,5,246,4,16,4,11
	.byte	'LCLT0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'LCLT2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'LCLT3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'LCLT4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'LCLT5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	732
	.byte	10,0,2,35,0,11
	.byte	'PLCLT0',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'PLCLT1',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'PLCLT2',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'PLCLT3',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'PLCLT4',0,1
	.word	715
	.byte	1,3,2,35,2,11
	.byte	'PLCLT5',0,1
	.word	715
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	732
	.byte	10,0,2,35,2,0,30
	.byte	'Ifx_SCU_LCLTEST_Bits',0,5,134,5,3
	.word	58581
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,5,137,5,16,4,11
	.byte	'DEPT',0,1
	.word	715
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	732
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_MANID_Bits',0,5,142,5,3
	.word	58895
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,5,145,5,16,4,11
	.byte	'PS0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	732
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	732
	.byte	14,0,2,35,2,0,30
	.byte	'Ifx_SCU_OMR_Bits',0,5,153,5,3
	.word	59006
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,5,156,5,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	715
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	715
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'HYSEN',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'HYSCTL',0,1
	.word	715
	.byte	2,4,2,35,1,11
	.byte	'AMPCTL',0,1
	.word	715
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	715
	.byte	2,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	715
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	715
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	715
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	715
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_OSCCON_Bits',0,5,177,5,3
	.word	59164
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,5,180,5,16,4,11
	.byte	'P0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	196
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_OUT_Bits',0,5,185,5,3
	.word	59575
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,5,188,5,16,4,11
	.byte	'CSEL0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'CSEL3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'CSEL4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'CSEL5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	732
	.byte	10,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	715
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	715
	.byte	6,0,2,35,3,0,30
	.byte	'Ifx_SCU_OVCCON_Bits',0,5,204,5,3
	.word	59676
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,5,207,5,16,4,11
	.byte	'OVEN0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'OVEN3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'OVEN4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'OVEN5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	196
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,5,216,5,3
	.word	59994
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,5,219,5,16,4,11
	.byte	'PDIS0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	196
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_PDISC_Bits',0,5,224,5,3
	.word	60181
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,5,227,5,16,4,11
	.byte	'PD0',0,1
	.word	715
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	715
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	715
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	715
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	196
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SCU_PDR_Bits',0,5,234,5,3
	.word	60292
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,5,237,5,16,4,11
	.byte	'PDR0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	196
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SCU_PDRR_Bits',0,5,248,5,3
	.word	60425
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON0_Bits',0,5,251,5,16,4,11
	.byte	'DIVBY',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	732
	.byte	8,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	715
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	715
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	715
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	715
	.byte	5,0,2,35,3,0,30
	.byte	'Ifx_SCU_PERPLLCON0_Bits',0,5,134,6,3
	.word	60628
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON1_Bits',0,5,137,6,16,4,11
	.byte	'K2DIV',0,1
	.word	715
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	715
	.byte	5,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	715
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	196
	.byte	21,0,2,35,0,0,30
	.byte	'Ifx_SCU_PERPLLCON1_Bits',0,5,143,6,3
	.word	60868
	.byte	10
	.byte	'_Ifx_SCU_PERPLLSTAT_Bits',0,5,146,6,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'K3RDY',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	196
	.byte	25,0,2,35,0,0,30
	.byte	'Ifx_SCU_PERPLLSTAT_Bits',0,5,156,6,3
	.word	61012
	.byte	10
	.byte	'_Ifx_SCU_PMCSR0_Bits',0,5,159,6,16,4,11
	.byte	'REQSLP',0,1
	.word	715
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	715
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	715
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	196
	.byte	21,0,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR0_Bits',0,5,165,6,3
	.word	61234
	.byte	10
	.byte	'_Ifx_SCU_PMCSR1_Bits',0,5,168,6,16,4,11
	.byte	'REQSLP',0,1
	.word	715
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	715
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	715
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	196
	.byte	21,0,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR1_Bits',0,5,174,6,3
	.word	61370
	.byte	10
	.byte	'_Ifx_SCU_PMCSR2_Bits',0,5,177,6,16,4,11
	.byte	'REQSLP',0,1
	.word	715
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	715
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	715
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	196
	.byte	21,0,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR2_Bits',0,5,183,6,3
	.word	61506
	.byte	10
	.byte	'_Ifx_SCU_PMCSR3_Bits',0,5,186,6,16,4,11
	.byte	'REQSLP',0,1
	.word	715
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	715
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	715
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	196
	.byte	21,0,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR3_Bits',0,5,192,6,3
	.word	61642
	.byte	10
	.byte	'_Ifx_SCU_PMCSR4_Bits',0,5,195,6,16,4,11
	.byte	'REQSLP',0,1
	.word	715
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	715
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	715
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	196
	.byte	21,0,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR4_Bits',0,5,201,6,3
	.word	61778
	.byte	10
	.byte	'_Ifx_SCU_PMCSR5_Bits',0,5,204,6,16,4,11
	.byte	'REQSLP',0,1
	.word	715
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	715
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	715
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	196
	.byte	21,0,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR5_Bits',0,5,210,6,3
	.word	61914
	.byte	10
	.byte	'_Ifx_SCU_PMSTAT0_Bits',0,5,213,6,16,4,11
	.byte	'CPU0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'CPU1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'CPU2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'CPU3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'CPU4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'CPU5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	732
	.byte	10,0,2,35,0,11
	.byte	'CPU0LS',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'CPU1LS',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'CPU2LS',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'CPU3LS',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	732
	.byte	12,0,2,35,2,0,30
	.byte	'Ifx_SCU_PMSTAT0_Bits',0,5,227,6,3
	.word	62050
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,5,230,6,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	715
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	196
	.byte	11,8,2,35,0,11
	.byte	'CPUSEL',0,1
	.word	715
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	715
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,5,241,6,3
	.word	62322
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR0_Bits',0,5,244,6,16,4,11
	.byte	'LJTEN',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'LJTOVEN',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'LJTOVIEN',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'LJTSTRT',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'LJTSTP',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'LJTCLR',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	732
	.byte	6,4,2,35,0,11
	.byte	'SDSTEP',0,1
	.word	715
	.byte	4,0,2,35,1,11
	.byte	'VDTEN',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'VDTOVEN',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'VDTOVIEN',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'VDTSTRT',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'VDTSTP',0,1
	.word	715
	.byte	1,3,2,35,2,11
	.byte	'VDTCLR',0,1
	.word	715
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	732
	.byte	7,3,2,35,2,11
	.byte	'LPSLPEN',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	715
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_SCU_PMTRCSR0_Bits',0,5,135,7,3
	.word	62567
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR1_Bits',0,5,138,7,16,4,11
	.byte	'LJTCV',0,2
	.word	732
	.byte	16,0,2,35,0,11
	.byte	'VDTCV',0,2
	.word	732
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	715
	.byte	6,0,2,35,3,0,30
	.byte	'Ifx_SCU_PMTRCSR1_Bits',0,5,143,7,3
	.word	62955
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR2_Bits',0,5,146,7,16,4,11
	.byte	'LDJMPREQ',0,1
	.word	715
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	715
	.byte	2,4,2,35,0,11
	.byte	'LJTRUN',0,1
	.word	715
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	715
	.byte	2,0,2,35,0,11
	.byte	'LJTOV',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	715
	.byte	3,4,2,35,1,11
	.byte	'LJTOVCLR',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	715
	.byte	3,0,2,35,1,11
	.byte	'LJTCNT',0,2
	.word	732
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_PMTRCSR2_Bits',0,5,157,7,3
	.word	63073
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR3_Bits',0,5,160,7,16,4,11
	.byte	'VDROOPREQ',0,1
	.word	715
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	715
	.byte	2,4,2,35,0,11
	.byte	'VDTRUN',0,1
	.word	715
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	715
	.byte	2,0,2,35,0,11
	.byte	'VDTOV',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	715
	.byte	3,4,2,35,1,11
	.byte	'VDTOVCLR',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	715
	.byte	3,0,2,35,1,11
	.byte	'VDTCNT',0,2
	.word	732
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	715
	.byte	6,0,2,35,3,0,30
	.byte	'Ifx_SCU_PMTRCSR3_Bits',0,5,172,7,3
	.word	63316
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,5,175,7,16,4,11
	.byte	'ESR0',0,1
	.word	715
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	715
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	715
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	715
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	715
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	715
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	715
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	715
	.byte	2,0,2,35,1,11
	.byte	'STM3',0,1
	.word	715
	.byte	2,6,2,35,2,11
	.byte	'STM4',0,1
	.word	715
	.byte	2,4,2,35,2,11
	.byte	'STM5',0,1
	.word	715
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	732
	.byte	10,0,2,35,2,0,30
	.byte	'Ifx_SCU_RSTCON_Bits',0,5,189,7,3
	.word	63583
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,5,192,7,16,4,11
	.byte	'FRTO',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'CSSX',0,2
	.word	732
	.byte	6,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	732
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_RSTCON2_Bits',0,5,206,7,3
	.word	63842
	.byte	10
	.byte	'_Ifx_SCU_RSTCON3_Bits',0,5,209,7,16,4,11
	.byte	'reserved_0',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_RSTCON3_Bits',0,5,212,7,3
	.word	64147
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,5,215,7,16,4,11
	.byte	'ESR0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'STM3',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'STM4',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'STM5',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	715
	.byte	5,0,2,35,1,11
	.byte	'PORST',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	715
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	715
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	715
	.byte	1,1,2,35,2,11
	.byte	'EVRC',0,1
	.word	715
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'HSMS',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'HSMA',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'LBPORST',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'LBTERM',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,5,245,7,3
	.word	64228
	.byte	10
	.byte	'_Ifx_SCU_SEICON0_Bits',0,5,248,7,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	563
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	563
	.byte	16,0,2,35,0,0,30
	.byte	'Ifx_SCU_SEICON0_Bits',0,5,254,7,3
	.word	64777
	.byte	10
	.byte	'_Ifx_SCU_SEICON1_Bits',0,5,129,8,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	196
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_SEICON1_Bits',0,5,138,8,3
	.word	64907
	.byte	10
	.byte	'_Ifx_SCU_SEISR_Bits',0,5,141,8,16,4,11
	.byte	'AE',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	732
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	732
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_SEISR_Bits',0,5,151,8,3
	.word	65098
	.byte	10
	.byte	'_Ifx_SCU_STCON_Bits',0,5,154,8,16,4,11
	.byte	'reserved_0',0,2
	.word	732
	.byte	13,3,2,35,0,11
	.byte	'SFCBAE',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'CFCBAE',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'STP',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_STCON_Bits',0,5,161,8,3
	.word	65276
	.byte	10
	.byte	'_Ifx_SCU_STMEM1_Bits',0,5,164,8,16,4,11
	.byte	'MEM',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM1_Bits',0,5,167,8,3
	.word	65427
	.byte	10
	.byte	'_Ifx_SCU_STMEM2_Bits',0,5,170,8,16,4,11
	.byte	'MEM',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM2_Bits',0,5,173,8,3
	.word	65499
	.byte	10
	.byte	'_Ifx_SCU_STMEM3_Bits',0,5,176,8,16,4,11
	.byte	'MEM',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM3_Bits',0,5,179,8,3
	.word	65571
	.byte	10
	.byte	'_Ifx_SCU_STMEM4_Bits',0,5,182,8,16,4,11
	.byte	'MEM',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM4_Bits',0,5,185,8,3
	.word	65643
	.byte	10
	.byte	'_Ifx_SCU_STMEM5_Bits',0,5,188,8,16,4,11
	.byte	'MEM',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM5_Bits',0,5,191,8,3
	.word	65715
	.byte	10
	.byte	'_Ifx_SCU_STMEM6_Bits',0,5,194,8,16,4,11
	.byte	'MEM',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM6_Bits',0,5,197,8,3
	.word	65787
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,5,200,8,16,4,11
	.byte	'HWCFG',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	715
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	715
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	715
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	715
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	715
	.byte	1,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	715
	.byte	3,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	715
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_STSTAT_Bits',0,5,216,8,3
	.word	65859
	.byte	10
	.byte	'_Ifx_SCU_SWAPCTRL_Bits',0,5,219,8,16,4,11
	.byte	'ADDRCFG',0,1
	.word	715
	.byte	2,6,2,35,0,11
	.byte	'SPARE',0,2
	.word	732
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_SWAPCTRL_Bits',0,5,224,8,3
	.word	66188
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,5,227,8,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	715
	.byte	6,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,5,234,8,3
	.word	66308
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,5,237,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	715
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'DDC',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	715
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_SYSCON_Bits',0,5,249,8,3
	.word	66478
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON0_Bits',0,5,252,8,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	2,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	732
	.byte	6,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	715
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	715
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	715
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	715
	.byte	3,2,2,35,3,11
	.byte	'INSEL',0,1
	.word	715
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_SCU_SYSPLLCON0_Bits',0,5,137,9,3
	.word	66741
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON1_Bits',0,5,140,9,16,4,11
	.byte	'K2DIV',0,1
	.word	715
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	196
	.byte	29,0,2,35,0,0,30
	.byte	'Ifx_SCU_SYSPLLCON1_Bits',0,5,144,9,3
	.word	67020
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON2_Bits',0,5,147,9,16,4,11
	.byte	'MODCFG',0,2
	.word	732
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_SYSPLLCON2_Bits',0,5,151,9,3
	.word	67124
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLSTAT_Bits',0,5,154,9,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	715
	.byte	2,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	196
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SCU_SYSPLLSTAT_Bits',0,5,164,9,3
	.word	67230
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,5,167,9,16,4,11
	.byte	'ESR0T',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	196
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,5,174,9,3
	.word	67453
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS0_Bits',0,5,177,9,16,4,11
	.byte	'CPU0ESR0T',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'CPU0ESR1T',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'CPU0TRAP2T',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'CPU0SMUT',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	715
	.byte	4,0,2,35,0,11
	.byte	'CPU1ESR0T',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'CPU1ESR1T',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'CPU1TRAP2T',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'CPU1SMUT',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	715
	.byte	4,0,2,35,1,11
	.byte	'CPU2ESR0T',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'CPU2ESR1T',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'CPU2TRAP2T',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'CPU2SMUT',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	715
	.byte	4,0,2,35,2,11
	.byte	'CPU3ESR0T',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'CPU3ESR1T',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'CPU3TRAP2T',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'CPU3SMUT',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	715
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_TRAPDIS0_Bits',0,5,199,9,3
	.word	67601
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS1_Bits',0,5,202,9,16,4,11
	.byte	'CPU4ESR0T',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'CPU4ESR1T',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'CPU4TRAP2T',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'CPU4SMUT',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	715
	.byte	4,0,2,35,0,11
	.byte	'CPU5ESR0T',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'CPU5ESR1T',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'CPU5TRAP2T',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'CPU5SMUT',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	715
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_TRAPDIS1_Bits',0,5,215,9,3
	.word	68089
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,5,218,9,16,4,11
	.byte	'ESR0T',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	196
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPSET_Bits',0,5,225,9,3
	.word	68386
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,5,228,9,16,4,11
	.byte	'ESR0T',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	196
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,5,235,9,3
	.word	68534
	.byte	30
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,5,244,9,3
	.word	579
	.byte	30
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,5,132,10,3
	.word	754
	.byte	30
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,5,148,10,3
	.word	1020
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,5,151,10,16,4,11
	.byte	'ENDINIT',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	563
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	563
	.byte	16,0,2,35,0,0,30
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,5,157,10,3
	.word	68784
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,5,160,10,16,4,11
	.byte	'CLRIRF',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	715
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,5,173,10,3
	.word	68910
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,5,176,10,16,4,11
	.byte	'AE',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	715
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	732
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,5,189,10,3
	.word	69162
	.byte	12,5,197,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49818
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ACCEN00',0,5,202,10,3
	.word	69381
	.byte	12,5,205,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50377
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ACCEN01',0,5,210,10,3
	.word	69446
	.byte	12,5,213,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50456
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ACCEN10',0,5,218,10,3
	.word	69511
	.byte	12,5,221,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51016
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ACCEN11',0,5,226,10,3
	.word	69576
	.byte	12,5,229,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51097
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ARSTDIS',0,5,234,10,3
	.word	69641
	.byte	12,5,237,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51314
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON0',0,5,242,10,3
	.word	69706
	.byte	12,5,245,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51587
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON1',0,5,250,10,3
	.word	69771
	.byte	12,5,253,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51913
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON10',0,5,130,11,3
	.word	69836
	.byte	12,5,133,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52015
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON11',0,5,138,11,3
	.word	69902
	.byte	12,5,141,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52117
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON2',0,5,146,11,3
	.word	69968
	.byte	12,5,149,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52391
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON3',0,5,154,11,3
	.word	70033
	.byte	12,5,157,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52760
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON4',0,5,162,11,3
	.word	70098
	.byte	12,5,165,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52940
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON5',0,5,170,11,3
	.word	70163
	.byte	12,5,173,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53109
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON6',0,5,178,11,3
	.word	70228
	.byte	12,5,181,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53209
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON7',0,5,186,11,3
	.word	70293
	.byte	12,5,189,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53309
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON8',0,5,194,11,3
	.word	70358
	.byte	12,5,197,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53409
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON9',0,5,202,11,3
	.word	70423
	.byte	12,5,205,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53509
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CHIPID',0,5,210,11,3
	.word	70488
	.byte	12,5,213,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53712
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_DTSCLIM',0,5,218,11,3
	.word	70552
	.byte	12,5,221,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53944
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_DTSCSTAT',0,5,226,11,3
	.word	70617
	.byte	12,5,229,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54046
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EICON0',0,5,234,11,3
	.word	70683
	.byte	12,5,237,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54174
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EICON1',0,5,242,11,3
	.word	70747
	.byte	12,5,245,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54363
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EICR',0,5,250,11,3
	.word	70811
	.byte	12,5,253,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54727
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EIFILT',0,5,130,12,3
	.word	70873
	.byte	12,5,133,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55166
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EIFR',0,5,138,12,3
	.word	70937
	.byte	12,5,141,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55377
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EISR',0,5,146,12,3
	.word	70999
	.byte	12,5,149,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55553
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EMSR',0,5,154,12,3
	.word	71061
	.byte	12,5,157,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55747
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EMSSW',0,5,162,12,3
	.word	71123
	.byte	12,5,165,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55882
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX',0,5,170,12,3
	.word	71186
	.byte	12,5,173,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56018
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ESROCFG',0,5,178,12,3
	.word	71259
	.byte	12,5,181,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56129
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EXTCON',0,5,186,12,3
	.word	71324
	.byte	12,5,189,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56347
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_FDR',0,5,194,12,3
	.word	71388
	.byte	12,5,197,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56510
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_FMR',0,5,202,12,3
	.word	71449
	.byte	12,5,205,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56846
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ID',0,5,210,12,3
	.word	71510
	.byte	12,5,213,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56953
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_IGCR',0,5,218,12,3
	.word	71570
	.byte	12,5,221,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57405
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_IN',0,5,226,12,3
	.word	71632
	.byte	12,5,229,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57504
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_IOCR',0,5,234,12,3
	.word	71692
	.byte	12,5,237,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57654
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LBISTCTRL0',0,5,242,12,3
	.word	71754
	.byte	12,5,245,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57892
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LBISTCTRL1',0,5,250,12,3
	.word	71822
	.byte	12,5,253,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58053
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LBISTCTRL2',0,5,130,13,3
	.word	71890
	.byte	12,5,133,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58159
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LBISTCTRL3',0,5,138,13,3
	.word	71958
	.byte	12,5,141,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58245
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LCLCON0',0,5,146,13,3
	.word	72026
	.byte	12,5,149,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58413
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LCLCON1',0,5,154,13,3
	.word	72091
	.byte	12,5,157,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58581
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LCLTEST',0,5,162,13,3
	.word	72156
	.byte	12,5,165,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58895
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_MANID',0,5,170,13,3
	.word	72221
	.byte	12,5,173,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59006
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OMR',0,5,178,13,3
	.word	72284
	.byte	12,5,181,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59164
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OSCCON',0,5,186,13,3
	.word	72345
	.byte	12,5,189,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59575
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OUT',0,5,194,13,3
	.word	72409
	.byte	12,5,197,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59676
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OVCCON',0,5,202,13,3
	.word	72470
	.byte	12,5,205,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59994
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OVCENABLE',0,5,210,13,3
	.word	72534
	.byte	12,5,213,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60181
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PDISC',0,5,218,13,3
	.word	72601
	.byte	12,5,221,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60292
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PDR',0,5,226,13,3
	.word	72664
	.byte	12,5,229,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60425
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PDRR',0,5,234,13,3
	.word	72725
	.byte	12,5,237,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60628
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PERPLLCON0',0,5,242,13,3
	.word	72787
	.byte	12,5,245,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60868
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PERPLLCON1',0,5,250,13,3
	.word	72855
	.byte	12,5,253,13,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61012
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PERPLLSTAT',0,5,130,14,3
	.word	72923
	.byte	12,5,133,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61234
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR0',0,5,138,14,3
	.word	72991
	.byte	12,5,141,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61370
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR1',0,5,146,14,3
	.word	73055
	.byte	12,5,149,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61506
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR2',0,5,154,14,3
	.word	73119
	.byte	12,5,157,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61642
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR3',0,5,162,14,3
	.word	73183
	.byte	12,5,165,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61778
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR4',0,5,170,14,3
	.word	73247
	.byte	12,5,173,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61914
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR5',0,5,178,14,3
	.word	73311
	.byte	12,5,181,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62050
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMSTAT0',0,5,186,14,3
	.word	73375
	.byte	12,5,189,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62322
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMSWCR1',0,5,194,14,3
	.word	73440
	.byte	12,5,197,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62567
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMTRCSR0',0,5,202,14,3
	.word	73505
	.byte	12,5,205,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62955
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMTRCSR1',0,5,210,14,3
	.word	73571
	.byte	12,5,213,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63073
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMTRCSR2',0,5,218,14,3
	.word	73637
	.byte	12,5,221,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63316
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMTRCSR3',0,5,226,14,3
	.word	73703
	.byte	12,5,229,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63583
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_RSTCON',0,5,234,14,3
	.word	73769
	.byte	12,5,237,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63842
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_RSTCON2',0,5,242,14,3
	.word	73833
	.byte	12,5,245,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64147
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_RSTCON3',0,5,250,14,3
	.word	73898
	.byte	12,5,253,14,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64228
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_RSTSTAT',0,5,130,15,3
	.word	73963
	.byte	12,5,133,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64777
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SEICON0',0,5,138,15,3
	.word	74028
	.byte	12,5,141,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64907
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SEICON1',0,5,146,15,3
	.word	74093
	.byte	12,5,149,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65098
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SEISR',0,5,154,15,3
	.word	74158
	.byte	12,5,157,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65276
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_STCON',0,5,162,15,3
	.word	74221
	.byte	12,5,165,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65427
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM1',0,5,170,15,3
	.word	74284
	.byte	12,5,173,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65499
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM2',0,5,178,15,3
	.word	74348
	.byte	12,5,181,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65571
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM3',0,5,186,15,3
	.word	74412
	.byte	12,5,189,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65643
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM4',0,5,194,15,3
	.word	74476
	.byte	12,5,197,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65715
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM5',0,5,202,15,3
	.word	74540
	.byte	12,5,205,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65787
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM6',0,5,210,15,3
	.word	74604
	.byte	12,5,213,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65859
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_STSTAT',0,5,218,15,3
	.word	74668
	.byte	12,5,221,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66188
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SWAPCTRL',0,5,226,15,3
	.word	74732
	.byte	12,5,229,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66308
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SWRSTCON',0,5,234,15,3
	.word	74798
	.byte	12,5,237,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66478
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SYSCON',0,5,242,15,3
	.word	74864
	.byte	12,5,245,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66741
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SYSPLLCON0',0,5,250,15,3
	.word	74928
	.byte	12,5,253,15,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67020
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SYSPLLCON1',0,5,130,16,3
	.word	74996
	.byte	12,5,133,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67124
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SYSPLLCON2',0,5,138,16,3
	.word	75064
	.byte	12,5,141,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67230
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SYSPLLSTAT',0,5,146,16,3
	.word	75132
	.byte	12,5,149,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67453
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPCLR',0,5,154,16,3
	.word	75200
	.byte	12,5,157,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67601
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPDIS0',0,5,162,16,3
	.word	75265
	.byte	12,5,165,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68089
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPDIS1',0,5,170,16,3
	.word	75331
	.byte	12,5,173,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68386
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPSET',0,5,178,16,3
	.word	75397
	.byte	12,5,181,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68534
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPSTAT',0,5,186,16,3
	.word	75462
	.byte	30
	.byte	'Ifx_SCU_WDTCPU_CON0',0,5,194,16,3
	.word	675
	.byte	30
	.byte	'Ifx_SCU_WDTCPU_CON1',0,5,202,16,3
	.word	980
	.byte	30
	.byte	'Ifx_SCU_WDTCPU_SR',0,5,210,16,3
	.word	1211
	.byte	12,5,213,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68784
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_WDTS_CON0',0,5,218,16,3
	.word	75613
	.byte	12,5,221,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68910
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_WDTS_CON1',0,5,226,16,3
	.word	75680
	.byte	12,5,229,16,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69162
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_WDTS_SR',0,5,234,16,3
	.word	75747
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX',0,5,246,16,25,4,13
	.byte	'ESRCFGX',0
	.word	71186
	.byte	4,2,35,0,0,14
	.word	75812
	.byte	30
	.byte	'Ifx_SCU_ESRCFGX',0,5,249,16,3
	.word	75853
	.byte	14
	.word	1251
	.byte	30
	.byte	'Ifx_SCU_WDTCPU',0,5,141,17,3
	.word	75883
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,5,156,17,25,12,13
	.byte	'CON0',0
	.word	75613
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	75680
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	75747
	.byte	4,2,35,8,0,14
	.word	75912
	.byte	30
	.byte	'Ifx_SCU_WDTS',0,5,161,17,3
	.word	75973
	.byte	15,8
	.word	75812
	.byte	16,1,0,14
	.word	76000
	.byte	15,20
	.word	715
	.byte	16,19,0,15,36
	.word	715
	.byte	16,35,0,15,16
	.word	70811
	.byte	16,3,0,15,16
	.word	71570
	.byte	16,3,0,15,72
	.word	1251
	.byte	16,5,0,14
	.word	76050
	.byte	14
	.word	75912
	.byte	15,176,2
	.word	715
	.byte	16,175,2,0,10
	.byte	'_Ifx_SCU',0,5,176,17,25,128,8,13
	.byte	'reserved_0',0
	.word	4753
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	71510
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2933
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	72345
	.byte	4,2,35,16,13
	.byte	'SYSPLLSTAT',0
	.word	75132
	.byte	4,2,35,20,13
	.byte	'SYSPLLCON0',0
	.word	74928
	.byte	4,2,35,24,13
	.byte	'SYSPLLCON1',0
	.word	74996
	.byte	4,2,35,28,13
	.byte	'SYSPLLCON2',0
	.word	75064
	.byte	4,2,35,32,13
	.byte	'PERPLLSTAT',0
	.word	72923
	.byte	4,2,35,36,13
	.byte	'PERPLLCON0',0
	.word	72787
	.byte	4,2,35,40,13
	.byte	'PERPLLCON1',0
	.word	72855
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	69706
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	69771
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	71388
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	71324
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	69968
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	70033
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	70098
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	70163
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	73963
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	2933
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	73769
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	69641
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	74798
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	73833
	.byte	4,2,35,100,13
	.byte	'RSTCON3',0
	.word	73898
	.byte	4,2,35,104,13
	.byte	'reserved_6C',0
	.word	2933
	.byte	4,2,35,108,13
	.byte	'ESRCFGX',0
	.word	76009
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	71259
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	74864
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	70228
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	70293
	.byte	4,3,35,132,1,13
	.byte	'CCUCON8',0
	.word	70358
	.byte	4,3,35,136,1,13
	.byte	'CCUCON9',0
	.word	70423
	.byte	4,3,35,140,1,13
	.byte	'CCUCON10',0
	.word	69836
	.byte	4,3,35,144,1,13
	.byte	'CCUCON11',0
	.word	69902
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	2933
	.byte	4,3,35,152,1,13
	.byte	'PDR',0
	.word	72664
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	71692
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	72409
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	72284
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	71632
	.byte	4,3,35,172,1,13
	.byte	'reserved_B0',0
	.word	25909
	.byte	16,3,35,176,1,13
	.byte	'STSTAT',0
	.word	74668
	.byte	4,3,35,192,1,13
	.byte	'STCON',0
	.word	74221
	.byte	4,3,35,196,1,13
	.byte	'PMCSR0',0
	.word	72991
	.byte	4,3,35,200,1,13
	.byte	'PMCSR1',0
	.word	73055
	.byte	4,3,35,204,1,13
	.byte	'PMCSR2',0
	.word	73119
	.byte	4,3,35,208,1,13
	.byte	'PMCSR3',0
	.word	73183
	.byte	4,3,35,212,1,13
	.byte	'PMCSR4',0
	.word	73247
	.byte	4,3,35,216,1,13
	.byte	'PMCSR5',0
	.word	73311
	.byte	4,3,35,220,1,13
	.byte	'reserved_E0',0
	.word	2933
	.byte	4,3,35,224,1,13
	.byte	'PMSTAT0',0
	.word	73375
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	73440
	.byte	4,3,35,232,1,13
	.byte	'reserved_EC',0
	.word	25909
	.byte	16,3,35,236,1,13
	.byte	'EMSR',0
	.word	71061
	.byte	4,3,35,252,1,13
	.byte	'EMSSW',0
	.word	71123
	.byte	4,3,35,128,2,13
	.byte	'DTSCSTAT',0
	.word	70617
	.byte	4,3,35,132,2,13
	.byte	'DTSCLIM',0
	.word	70552
	.byte	4,3,35,136,2,13
	.byte	'reserved_10C',0
	.word	76014
	.byte	20,3,35,140,2,13
	.byte	'TRAPDIS1',0
	.word	75331
	.byte	4,3,35,160,2,13
	.byte	'TRAPSTAT',0
	.word	75462
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	75397
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	75200
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS0',0
	.word	75265
	.byte	4,3,35,176,2,13
	.byte	'LCLCON0',0
	.word	72026
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	72091
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	72156
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	70488
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	72221
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	2933
	.byte	4,3,35,200,2,13
	.byte	'SWAPCTRL',0
	.word	74732
	.byte	4,3,35,204,2,13
	.byte	'reserved_150',0
	.word	76014
	.byte	20,3,35,208,2,13
	.byte	'LBISTCTRL0',0
	.word	71754
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	71822
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	71890
	.byte	4,3,35,236,2,13
	.byte	'LBISTCTRL3',0
	.word	71958
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	25909
	.byte	16,3,35,244,2,13
	.byte	'STMEM1',0
	.word	74284
	.byte	4,3,35,132,3,13
	.byte	'STMEM2',0
	.word	74348
	.byte	4,3,35,136,3,13
	.byte	'PDISC',0
	.word	72601
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	4753
	.byte	8,3,35,144,3,13
	.byte	'PMTRCSR0',0
	.word	73505
	.byte	4,3,35,152,3,13
	.byte	'PMTRCSR1',0
	.word	73571
	.byte	4,3,35,156,3,13
	.byte	'PMTRCSR2',0
	.word	73637
	.byte	4,3,35,160,3,13
	.byte	'PMTRCSR3',0
	.word	73703
	.byte	4,3,35,164,3,13
	.byte	'reserved_1A8',0
	.word	4124
	.byte	24,3,35,168,3,13
	.byte	'STMEM3',0
	.word	74412
	.byte	4,3,35,192,3,13
	.byte	'STMEM4',0
	.word	74476
	.byte	4,3,35,196,3,13
	.byte	'STMEM5',0
	.word	74540
	.byte	4,3,35,200,3,13
	.byte	'STMEM6',0
	.word	74604
	.byte	4,3,35,204,3,13
	.byte	'reserved_1D0',0
	.word	25909
	.byte	16,3,35,208,3,13
	.byte	'OVCENABLE',0
	.word	72534
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	72470
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	76023
	.byte	36,3,35,232,3,13
	.byte	'EIFILT',0
	.word	70873
	.byte	4,3,35,140,4,13
	.byte	'EICR',0
	.word	76032
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	70937
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	71449
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	72725
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	76041
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	25909
	.byte	16,3,35,188,4,13
	.byte	'WDTCPU',0
	.word	76059
	.byte	72,3,35,204,4,13
	.byte	'reserved_294',0
	.word	4753
	.byte	8,3,35,148,5,13
	.byte	'EICON0',0
	.word	70683
	.byte	4,3,35,156,5,13
	.byte	'EICON1',0
	.word	70747
	.byte	4,3,35,160,5,13
	.byte	'EISR',0
	.word	70999
	.byte	4,3,35,164,5,13
	.byte	'WDTS',0
	.word	76064
	.byte	12,3,35,168,5,13
	.byte	'SEICON0',0
	.word	74028
	.byte	4,3,35,180,5,13
	.byte	'SEICON1',0
	.word	74093
	.byte	4,3,35,184,5,13
	.byte	'SEISR',0
	.word	74158
	.byte	4,3,35,188,5,13
	.byte	'reserved_2C0',0
	.word	76069
	.byte	176,2,3,35,192,5,13
	.byte	'ACCEN11',0
	.word	69576
	.byte	4,3,35,240,7,13
	.byte	'ACCEN10',0
	.word	69511
	.byte	4,3,35,244,7,13
	.byte	'ACCEN01',0
	.word	69446
	.byte	4,3,35,248,7,13
	.byte	'ACCEN00',0
	.word	69381
	.byte	4,3,35,252,7,0,14
	.word	76080
	.byte	30
	.byte	'Ifx_SCU',0,5,166,18,3
	.word	78201
	.byte	10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,19,68,16,4,11
	.byte	'EN0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	715
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	715
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	715
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	715
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_STM_ACCEN0_Bits',0,19,102,3
	.word	78223
	.byte	10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,19,105,16,4,11
	.byte	'reserved_0',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_ACCEN1_Bits',0,19,108,3
	.word	78780
	.byte	10
	.byte	'_Ifx_STM_CAP_Bits',0,19,111,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_CAP_Bits',0,19,114,3
	.word	78857
	.byte	10
	.byte	'_Ifx_STM_CAPSV_Bits',0,19,117,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_CAPSV_Bits',0,19,120,3
	.word	78930
	.byte	10
	.byte	'_Ifx_STM_CLC_Bits',0,19,123,16,4,11
	.byte	'DISR',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	196
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_STM_CLC_Bits',0,19,130,1,3
	.word	79007
	.byte	10
	.byte	'_Ifx_STM_CMCON_Bits',0,19,133,1,16,4,11
	.byte	'MSIZE0',0,1
	.word	715
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	715
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	715
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	715
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	715
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	715
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	715
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	715
	.byte	3,0,2,35,3,0,30
	.byte	'Ifx_STM_CMCON_Bits',0,19,143,1,3
	.word	79149
	.byte	10
	.byte	'_Ifx_STM_CMP_Bits',0,19,146,1,16,4,11
	.byte	'CMPVAL',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_CMP_Bits',0,19,149,1,3
	.word	79369
	.byte	10
	.byte	'_Ifx_STM_ICR_Bits',0,19,152,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	196
	.byte	25,0,2,35,0,0,30
	.byte	'Ifx_STM_ICR_Bits',0,19,162,1,3
	.word	79438
	.byte	10
	.byte	'_Ifx_STM_ID_Bits',0,19,165,1,16,4,11
	.byte	'MODREV',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'MODNUM',0,2
	.word	732
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_STM_ID_Bits',0,19,170,1,3
	.word	79641
	.byte	10
	.byte	'_Ifx_STM_ISCR_Bits',0,19,173,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	196
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_STM_ISCR_Bits',0,19,180,1,3
	.word	79745
	.byte	10
	.byte	'_Ifx_STM_KRST0_Bits',0,19,183,1,16,4,11
	.byte	'RST',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	196
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_STM_KRST0_Bits',0,19,188,1,3
	.word	79896
	.byte	10
	.byte	'_Ifx_STM_KRST1_Bits',0,19,191,1,16,4,11
	.byte	'RST',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	196
	.byte	31,0,2,35,0,0,30
	.byte	'Ifx_STM_KRST1_Bits',0,19,195,1,3
	.word	80007
	.byte	10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,19,198,1,16,4,11
	.byte	'CLR',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	196
	.byte	31,0,2,35,0,0,30
	.byte	'Ifx_STM_KRSTCLR_Bits',0,19,202,1,3
	.word	80099
	.byte	10
	.byte	'_Ifx_STM_OCS_Bits',0,19,205,1,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	196
	.byte	21,8,2,35,0,11
	.byte	'SUS',0,1
	.word	715
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	715
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_STM_OCS_Bits',0,19,213,1,3
	.word	80195
	.byte	10
	.byte	'_Ifx_STM_TIM0_Bits',0,19,216,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM0_Bits',0,19,219,1,3
	.word	80363
	.byte	10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,19,222,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM0SV_Bits',0,19,225,1,3
	.word	80436
	.byte	10
	.byte	'_Ifx_STM_TIM1_Bits',0,19,228,1,16,4,11
	.byte	'STM_35_4',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM1_Bits',0,19,231,1,3
	.word	80513
	.byte	10
	.byte	'_Ifx_STM_TIM2_Bits',0,19,234,1,16,4,11
	.byte	'STM_39_8',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM2_Bits',0,19,237,1,3
	.word	80586
	.byte	10
	.byte	'_Ifx_STM_TIM3_Bits',0,19,240,1,16,4,11
	.byte	'STM_43_12',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM3_Bits',0,19,243,1,3
	.word	80659
	.byte	10
	.byte	'_Ifx_STM_TIM4_Bits',0,19,246,1,16,4,11
	.byte	'STM_47_16',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM4_Bits',0,19,249,1,3
	.word	80733
	.byte	10
	.byte	'_Ifx_STM_TIM5_Bits',0,19,252,1,16,4,11
	.byte	'STM_51_20',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM5_Bits',0,19,255,1,3
	.word	80807
	.byte	10
	.byte	'_Ifx_STM_TIM6_Bits',0,19,130,2,16,4,11
	.byte	'STM_63_32',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM6_Bits',0,19,133,2,3
	.word	80881
	.byte	12,19,141,2,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78223
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_ACCEN0',0,19,146,2,3
	.word	80955
	.byte	12,19,149,2,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78780
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_ACCEN1',0,19,154,2,3
	.word	81019
	.byte	12,19,157,2,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78857
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_CAP',0,19,162,2,3
	.word	81083
	.byte	12,19,165,2,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78930
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_CAPSV',0,19,170,2,3
	.word	81144
	.byte	12,19,173,2,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79007
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_CLC',0,19,178,2,3
	.word	81207
	.byte	12,19,181,2,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79149
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_CMCON',0,19,186,2,3
	.word	81268
	.byte	12,19,189,2,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79369
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_CMP',0,19,194,2,3
	.word	81331
	.byte	12,19,197,2,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79438
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_ICR',0,19,202,2,3
	.word	81392
	.byte	12,19,205,2,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79641
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_ID',0,19,210,2,3
	.word	81453
	.byte	12,19,213,2,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79745
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_ISCR',0,19,218,2,3
	.word	81513
	.byte	12,19,221,2,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79896
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_KRST0',0,19,226,2,3
	.word	81575
	.byte	12,19,229,2,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80007
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_KRST1',0,19,234,2,3
	.word	81638
	.byte	12,19,237,2,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80099
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_KRSTCLR',0,19,242,2,3
	.word	81701
	.byte	12,19,245,2,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80195
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_OCS',0,19,250,2,3
	.word	81766
	.byte	12,19,253,2,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80363
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM0',0,19,130,3,3
	.word	81827
	.byte	12,19,133,3,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80436
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM0SV',0,19,138,3,3
	.word	81889
	.byte	12,19,141,3,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80513
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM1',0,19,146,3,3
	.word	81953
	.byte	12,19,149,3,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80586
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM2',0,19,154,3,3
	.word	82015
	.byte	12,19,157,3,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80659
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM3',0,19,162,3,3
	.word	82077
	.byte	12,19,165,3,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80733
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM4',0,19,170,3,3
	.word	82139
	.byte	12,19,173,3,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80807
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM5',0,19,178,3,3
	.word	82201
	.byte	12,19,181,3,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80881
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM6',0,19,186,3,3
	.word	82263
	.byte	17,20,162,11,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,30
	.byte	'IfxScu_WDTCON1_IR',0,20,167,11,3
	.word	82325
	.byte	30
	.byte	'Ifx_P_ACCEN0_Bits',0,7,102,3
	.word	8281
	.byte	30
	.byte	'Ifx_P_ACCEN1_Bits',0,7,108,3
	.word	8194
	.byte	30
	.byte	'Ifx_P_ESR_Bits',0,7,130,1,3
	.word	4762
	.byte	30
	.byte	'Ifx_P_ID_Bits',0,7,138,1,3
	.word	2813
	.byte	30
	.byte	'Ifx_P_IN_Bits',0,7,160,1,3
	.word	3809
	.byte	30
	.byte	'Ifx_P_IOCR0_Bits',0,7,173,1,3
	.word	2942
	.byte	30
	.byte	'Ifx_P_IOCR12_Bits',0,7,186,1,3
	.word	3589
	.byte	30
	.byte	'Ifx_P_IOCR4_Bits',0,7,199,1,3
	.word	3157
	.byte	30
	.byte	'Ifx_P_IOCR8_Bits',0,7,212,1,3
	.word	3372
	.byte	30
	.byte	'Ifx_P_LPCR_Bits',0,7,231,1,3
	.word	7856
	.byte	30
	.byte	'Ifx_P_OMCR_Bits',0,7,253,1,3
	.word	7508
	.byte	30
	.byte	'Ifx_P_OMCR0_Bits',0,7,136,2,3
	.word	6495
	.byte	30
	.byte	'Ifx_P_OMCR12_Bits',0,7,146,2,3
	.word	7019
	.byte	30
	.byte	'Ifx_P_OMCR4_Bits',0,7,157,2,3
	.word	6669
	.byte	30
	.byte	'Ifx_P_OMCR8_Bits',0,7,168,2,3
	.word	6843
	.byte	30
	.byte	'Ifx_P_OMR_Bits',0,7,205,2,3
	.word	2242
	.byte	30
	.byte	'Ifx_P_OMSR_Bits',0,7,227,2,3
	.word	7175
	.byte	30
	.byte	'Ifx_P_OMSR0_Bits',0,7,237,2,3
	.word	5832
	.byte	30
	.byte	'Ifx_P_OMSR12_Bits',0,7,248,2,3
	.word	6320
	.byte	30
	.byte	'Ifx_P_OMSR4_Bits',0,7,131,3,3
	.word	5979
	.byte	30
	.byte	'Ifx_P_OMSR8_Bits',0,7,142,3,3
	.word	6148
	.byte	30
	.byte	'Ifx_P_OUT_Bits',0,7,164,3,3
	.word	1926
	.byte	30
	.byte	'Ifx_P_PCSR_Bits',0,7,187,3,3
	.word	5468
	.byte	30
	.byte	'Ifx_P_PDISC_Bits',0,7,209,3,3
	.word	5102
	.byte	30
	.byte	'Ifx_P_PDR0_Bits',0,7,230,3,3
	.word	4133
	.byte	30
	.byte	'Ifx_P_PDR1_Bits',0,7,251,3,3
	.word	4437
	.byte	30
	.byte	'Ifx_P_ACCEN0',0,7,136,4,3
	.word	8808
	.byte	30
	.byte	'Ifx_P_ACCEN1',0,7,144,4,3
	.word	8241
	.byte	30
	.byte	'Ifx_P_ESR',0,7,152,4,3
	.word	5053
	.byte	30
	.byte	'Ifx_P_ID',0,7,160,4,3
	.word	2893
	.byte	30
	.byte	'Ifx_P_IN',0,7,168,4,3
	.word	4084
	.byte	30
	.byte	'Ifx_P_IOCR0',0,7,176,4,3
	.word	3117
	.byte	30
	.byte	'Ifx_P_IOCR12',0,7,184,4,3
	.word	3769
	.byte	30
	.byte	'Ifx_P_IOCR4',0,7,192,4,3
	.word	3332
	.byte	30
	.byte	'Ifx_P_IOCR8',0,7,200,4,3
	.word	3549
	.byte	30
	.byte	'Ifx_P_LPCR',0,7,208,4,3
	.word	8136
	.byte	30
	.byte	'Ifx_P_OMCR',0,7,216,4,3
	.word	7816
	.byte	30
	.byte	'Ifx_P_OMCR0',0,7,224,4,3
	.word	6629
	.byte	30
	.byte	'Ifx_P_OMCR12',0,7,232,4,3
	.word	7135
	.byte	30
	.byte	'Ifx_P_OMCR4',0,7,240,4,3
	.word	6803
	.byte	30
	.byte	'Ifx_P_OMCR8',0,7,248,4,3
	.word	6979
	.byte	30
	.byte	'Ifx_P_OMR',0,7,128,5,3
	.word	2773
	.byte	30
	.byte	'Ifx_P_OMSR',0,7,136,5,3
	.word	7468
	.byte	30
	.byte	'Ifx_P_OMSR0',0,7,144,5,3
	.word	5939
	.byte	30
	.byte	'Ifx_P_OMSR12',0,7,152,5,3
	.word	6455
	.byte	30
	.byte	'Ifx_P_OMSR4',0,7,160,5,3
	.word	6108
	.byte	30
	.byte	'Ifx_P_OMSR8',0,7,168,5,3
	.word	6280
	.byte	30
	.byte	'Ifx_P_OUT',0,7,176,5,3
	.word	2202
	.byte	30
	.byte	'Ifx_P_PCSR',0,7,184,5,3
	.word	5792
	.byte	30
	.byte	'Ifx_P_PDISC',0,7,192,5,3
	.word	5428
	.byte	30
	.byte	'Ifx_P_PDR0',0,7,200,5,3
	.word	4397
	.byte	30
	.byte	'Ifx_P_PDR1',0,7,208,5,3
	.word	4713
	.byte	14
	.word	8848
	.byte	30
	.byte	'Ifx_P',0,7,128,6,3
	.word	83641
	.byte	17,6,73,9,1,18
	.byte	'IfxPort_ControlledBy_port',0,0,18
	.byte	'IfxPort_ControlledBy_hsct',0,1,0,30
	.byte	'IfxPort_ControlledBy',0,6,77,3
	.word	83661
	.byte	17,6,81,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,30
	.byte	'IfxPort_InputMode',0,6,87,3
	.word	83752
	.byte	17,6,91,9,1,18
	.byte	'IfxPort_LvdsMode_high',0,0,18
	.byte	'IfxPort_LvdsMode_medium',0,1,0,30
	.byte	'IfxPort_LvdsMode',0,6,95,3
	.word	83903
	.byte	17,6,126,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,30
	.byte	'IfxPort_OutputIdx',0,6,136,1,3
	.word	83984
	.byte	17,6,140,1,9,1,18
	.byte	'IfxPort_OutputMode_none',0,0,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,30
	.byte	'IfxPort_OutputMode',0,6,145,1,3
	.word	84228
	.byte	17,6,151,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed1',0,12,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed2',0,13,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed3',0,14,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed4',0,15,0,30
	.byte	'IfxPort_PadDriver',0,6,165,1,3
	.word	84352
	.byte	17,6,169,1,9,1,18
	.byte	'IfxPort_PadSupply_3v',0,0,18
	.byte	'IfxPort_PadSupply_5v',0,1,0,30
	.byte	'IfxPort_PadSupply',0,6,173,1,3
	.word	84802
	.byte	17,6,177,1,9,1,18
	.byte	'IfxPort_PinFunctionMode_digital',0,0,18
	.byte	'IfxPort_PinFunctionMode_analog',0,1,0,30
	.byte	'IfxPort_PinFunctionMode',0,6,181,1,3
	.word	84882
	.byte	30
	.byte	'IfxPort_State',0,6,193,1,3
	.word	9428
	.byte	32,6,246,1,9,8,13
	.byte	'port',0
	.word	9423
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	715
	.byte	1,2,35,4,0,30
	.byte	'IfxPort_Pin',0,6,250,1,3
	.word	85012
	.byte	10
	.byte	'_Ifx_SMU_ACCEN0_Bits',0,21,68,16,4,11
	.byte	'EN0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	715
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	715
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	715
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	715
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SMU_ACCEN0_Bits',0,21,102,3
	.word	85072
	.byte	10
	.byte	'_Ifx_SMU_ACCEN1_Bits',0,21,105,16,4,11
	.byte	'reserved_0',0,4
	.word	196
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SMU_ACCEN1_Bits',0,21,108,3
	.word	85629
	.byte	10
	.byte	'_Ifx_SMU_AD_Bits',0,21,111,16,4,11
	.byte	'DF0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'DF1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'DF2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'DF3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'DF4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'DF5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'DF6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'DF7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'DF8',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'DF9',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'DF10',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'DF11',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'DF12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'DF13',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'DF14',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'DF15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'DF16',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'DF17',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'DF18',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'DF19',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'DF20',0,1
	.word	715
	.byte	1,3,2,35,2,11
	.byte	'DF21',0,1
	.word	715
	.byte	1,2,2,35,2,11
	.byte	'DF22',0,1
	.word	715
	.byte	1,1,2,35,2,11
	.byte	'DF23',0,1
	.word	715
	.byte	1,0,2,35,2,11
	.byte	'DF24',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'DF25',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'DF26',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'DF27',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'DF28',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'DF29',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'DF30',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'DF31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SMU_AD_Bits',0,21,145,1,3
	.word	85706
	.byte	10
	.byte	'_Ifx_SMU_AEX_Bits',0,21,148,1,16,4,11
	.byte	'IRQ0STS',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'IRQ1STS',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'IRQ2STS',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'RST0STS',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'RST1STS',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'RST2STS',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'RST3STS',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'RST4STS',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'RST5STS',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'NMISTS',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'EMSSTS',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	715
	.byte	4,0,2,35,1,11
	.byte	'IRQ0AEM',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'IRQ1AEM',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'IRQ2AEM',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'RST0AEM',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'RST1AEM',0,1
	.word	715
	.byte	1,3,2,35,2,11
	.byte	'RST2AEM',0,1
	.word	715
	.byte	1,2,2,35,2,11
	.byte	'RST3AEM',0,1
	.word	715
	.byte	1,1,2,35,2,11
	.byte	'RST4AEM',0,1
	.word	715
	.byte	1,0,2,35,2,11
	.byte	'RST5AEM',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'NMIAEM',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'EMSAEM',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	715
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SMU_AEX_Bits',0,21,176,1,3
	.word	86256
	.byte	10
	.byte	'_Ifx_SMU_AEXCLR_Bits',0,21,179,1,16,4,11
	.byte	'IRQ0CLR',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'IRQ1CLR',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'IRQ2CLR',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'RST0CLR',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'RST1CLR',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'RST2CLR',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'RST3CLR',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'RST4CLR',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'RST5CLR',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'NMICLR',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'EMSCLR',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	563
	.byte	4,16,2,35,0,11
	.byte	'IRQ0AEMCLR',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'IRQ1AEMCLR',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'IRQ2AEMCLR',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'RST0AEMCLR',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'RST1AEMCLR',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'RST2AEMCLR',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'RST3AEMCLR',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'RST4AEMCLR',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'RST5AEMCLR',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'NMIAEMCLR',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'EMSAEMCLR',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	563
	.byte	4,0,2,35,0,0,30
	.byte	'Ifx_SMU_AEXCLR_Bits',0,21,207,1,3
	.word	86813
	.byte	10
	.byte	'_Ifx_SMU_AFCNT_Bits',0,21,210,1,16,4,11
	.byte	'FCNT',0,1
	.word	715
	.byte	4,4,2,35,0,11
	.byte	'ACNT',0,2
	.word	732
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	14,2,2,35,2,11
	.byte	'FCO',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'ACO',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SMU_AFCNT_Bits',0,21,217,1,3
	.word	87409
	.byte	10
	.byte	'_Ifx_SMU_AG_Bits',0,21,220,1,16,4,11
	.byte	'SF0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'SF1',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'SF2',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'SF3',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'SF4',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'SF5',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'SF6',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'SF7',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'SF8',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'SF9',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'SF10',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'SF11',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'SF12',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'SF13',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'SF14',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'SF15',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'SF16',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'SF17',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'SF18',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'SF19',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'SF20',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'SF21',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'SF22',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'SF23',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'SF24',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'SF25',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'SF26',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'SF27',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'SF28',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'SF29',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'SF30',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'SF31',0,4
	.word	563
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_SMU_AG_Bits',0,21,254,1,3
	.word	87549
	.byte	10
	.byte	'_Ifx_SMU_AGC_Bits',0,21,129,2,16,4,11
	.byte	'IGCS0',0,4
	.word	563
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'IGCS1',0,4
	.word	563
	.byte	3,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'IGCS2',0,4
	.word	563
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	563
	.byte	5,16,2,35,0,11
	.byte	'RCS',0,4
	.word	563
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	563
	.byte	2,8,2,35,0,11
	.byte	'PES',0,4
	.word	563
	.byte	5,3,2,35,0,11
	.byte	'EFRST',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	563
	.byte	2,0,2,35,0,0,30
	.byte	'Ifx_SMU_AGC_Bits',0,21,142,2,3
	.word	88100
	.byte	10
	.byte	'_Ifx_SMU_AGCF_Bits',0,21,145,2,16,4,11
	.byte	'CF0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'CF1',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'CF2',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'CF3',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'CF4',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'CF5',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'CF6',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'CF7',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'CF8',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'CF9',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'CF10',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'CF11',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'CF12',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'CF13',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'CF14',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'CF15',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'CF16',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'CF17',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'CF18',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'CF19',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'CF20',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'CF21',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'CF22',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'CF23',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'CF24',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'CF25',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'CF26',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'CF27',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'CF28',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'CF29',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'CF30',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'CF31',0,4
	.word	563
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_SMU_AGCF_Bits',0,21,179,2,3
	.word	88362
	.byte	10
	.byte	'_Ifx_SMU_AGFSP_Bits',0,21,182,2,16,4,11
	.byte	'FE0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'FE1',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'FE2',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'FE3',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'FE4',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'FE5',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'FE6',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'FE7',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'FE8',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'FE9',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'FE10',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'FE11',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'FE12',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'FE13',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'FE14',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'FE15',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'FE16',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'FE17',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'FE18',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'FE19',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'FE20',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'FE21',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'FE22',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'FE23',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'FE24',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'FE25',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'FE26',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'FE27',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'FE28',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'FE29',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'FE30',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'FE31',0,4
	.word	563
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_SMU_AGFSP_Bits',0,21,216,2,3
	.word	88917
	.byte	10
	.byte	'_Ifx_SMU_CLC_Bits',0,21,219,2,16,4,11
	.byte	'DISR',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	196
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_SMU_CLC_Bits',0,21,226,2,3
	.word	89474
	.byte	10
	.byte	'_Ifx_SMU_CMD_Bits',0,21,229,2,16,4,11
	.byte	'CMD',0,4
	.word	563
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	563
	.byte	4,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	563
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SMU_CMD_Bits',0,21,234,2,3
	.word	89617
	.byte	10
	.byte	'_Ifx_SMU_DBG_Bits',0,21,237,2,16,4,11
	.byte	'SSM',0,1
	.word	715
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	196
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SMU_DBG_Bits',0,21,241,2,3
	.word	89720
	.byte	10
	.byte	'_Ifx_SMU_FSP_Bits',0,21,244,2,16,4,11
	.byte	'PRE1',0,4
	.word	563
	.byte	3,29,2,35,0,11
	.byte	'PRE2',0,4
	.word	563
	.byte	2,27,2,35,0,11
	.byte	'MODE',0,4
	.word	563
	.byte	2,25,2,35,0,11
	.byte	'PES',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'TFSP_LOW',0,4
	.word	563
	.byte	14,10,2,35,0,11
	.byte	'TFSP_HIGH',0,4
	.word	563
	.byte	10,0,2,35,0,0,30
	.byte	'Ifx_SMU_FSP_Bits',0,21,252,2,3
	.word	89808
	.byte	10
	.byte	'_Ifx_SMU_ID_Bits',0,21,255,2,16,4,11
	.byte	'MOD_REV',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'MOD_TYPE',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'MOD_NUMBER',0,2
	.word	732
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SMU_ID_Bits',0,21,132,3,3
	.word	89963
	.byte	10
	.byte	'_Ifx_SMU_KEYS_Bits',0,21,135,3,16,4,11
	.byte	'CFGLCK',0,4
	.word	563
	.byte	8,24,2,35,0,11
	.byte	'PERLCK',0,4
	.word	563
	.byte	8,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	563
	.byte	16,0,2,35,0,0,30
	.byte	'Ifx_SMU_KEYS_Bits',0,21,140,3,3
	.word	90073
	.byte	10
	.byte	'_Ifx_SMU_OCS_Bits',0,21,143,3,16,4,11
	.byte	'TGS',0,1
	.word	715
	.byte	2,6,2,35,0,11
	.byte	'TGB',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'TG_P',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	196
	.byte	20,8,2,35,0,11
	.byte	'SUS',0,1
	.word	715
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	715
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_SMU_OCS_Bits',0,21,153,3,3
	.word	90185
	.byte	10
	.byte	'_Ifx_SMU_PCTL_Bits',0,21,156,3,16,4,11
	.byte	'HWDIR',0,4
	.word	563
	.byte	2,30,2,35,0,11
	.byte	'HWEN',0,4
	.word	563
	.byte	2,28,2,35,0,11
	.byte	'GFSCU_EN',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'GFSTS_EN',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'PCS',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	563
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	563
	.byte	9,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	563
	.byte	9,0,2,35,0,0,30
	.byte	'Ifx_SMU_PCTL_Bits',0,21,167,3,3
	.word	90377
	.byte	10
	.byte	'_Ifx_SMU_RMCTL_Bits',0,21,170,3,16,4,11
	.byte	'TE0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'TE1',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'TE2',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'TE3',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'TE4',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'TE5',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'TE6',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'TE7',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'TE8',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'TE9',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'TE10',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	563
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_SMU_RMCTL_Bits',0,21,204,3,3
	.word	90608
	.byte	10
	.byte	'_Ifx_SMU_RMEF_Bits',0,21,207,3,16,4,11
	.byte	'EF0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'EF1',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'EF2',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'EF3',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'EF4',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'EF5',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'EF6',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'EF7',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'EF8',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'EF9',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'EF10',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	563
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_SMU_RMEF_Bits',0,21,241,3,3
	.word	91312
	.byte	10
	.byte	'_Ifx_SMU_RMSTS_Bits',0,21,244,3,16,4,11
	.byte	'STS0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'STS1',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'STS2',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'STS3',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'STS4',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'STS5',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'STS6',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'STS7',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'STS8',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'STS9',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'STS10',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	563
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_SMU_RMSTS_Bits',0,21,150,4,3
	.word	92014
	.byte	10
	.byte	'_Ifx_SMU_RTAC00_Bits',0,21,153,4,16,4,11
	.byte	'GID0',0,4
	.word	563
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	563
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	563
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	563
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	563
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	563
	.byte	7,0,2,35,0,0,30
	.byte	'Ifx_SMU_RTAC00_Bits',0,21,161,4,3
	.word	92729
	.byte	10
	.byte	'_Ifx_SMU_RTAC01_Bits',0,21,164,4,16,4,11
	.byte	'GID2',0,4
	.word	563
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	563
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	563
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	563
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	563
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	563
	.byte	7,0,2,35,0,0,30
	.byte	'Ifx_SMU_RTAC01_Bits',0,21,172,4,3
	.word	92897
	.byte	10
	.byte	'_Ifx_SMU_RTAC10_Bits',0,21,175,4,16,4,11
	.byte	'GID0',0,4
	.word	563
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	563
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	563
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	563
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	563
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	563
	.byte	7,0,2,35,0,0,30
	.byte	'Ifx_SMU_RTAC10_Bits',0,21,183,4,3
	.word	93065
	.byte	10
	.byte	'_Ifx_SMU_RTAC11_Bits',0,21,186,4,16,4,11
	.byte	'GID2',0,4
	.word	563
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	563
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	563
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	563
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	563
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	563
	.byte	7,0,2,35,0,0,30
	.byte	'Ifx_SMU_RTAC11_Bits',0,21,194,4,3
	.word	93233
	.byte	10
	.byte	'_Ifx_SMU_RTC_Bits',0,21,197,4,16,4,11
	.byte	'RT0E',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'RT1E',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	563
	.byte	6,24,2,35,0,11
	.byte	'RTD',0,4
	.word	563
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SMU_RTC_Bits',0,21,203,4,3
	.word	93401
	.byte	10
	.byte	'_Ifx_SMU_STS_Bits',0,21,206,4,16,4,11
	.byte	'CMD',0,4
	.word	563
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	563
	.byte	4,24,2,35,0,11
	.byte	'RES',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'ASCE',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'FSP',0,4
	.word	563
	.byte	2,20,2,35,0,11
	.byte	'FSTS',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	563
	.byte	3,16,2,35,0,11
	.byte	'RTS0',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'RTME0',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'RTS1',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'RTME1',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	563
	.byte	12,0,2,35,0,0,30
	.byte	'Ifx_SMU_STS_Bits',0,21,220,4,3
	.word	93521
	.byte	12,21,228,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85072
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_ACCEN0',0,21,233,4,3
	.word	93776
	.byte	12,21,236,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85629
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_ACCEN1',0,21,241,4,3
	.word	93840
	.byte	12,21,244,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85706
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_AD',0,21,249,4,3
	.word	93904
	.byte	12,21,252,4,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86256
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_AEX',0,21,129,5,3
	.word	93964
	.byte	12,21,132,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86813
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_AEXCLR',0,21,137,5,3
	.word	94025
	.byte	12,21,140,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87409
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_AFCNT',0,21,145,5,3
	.word	94089
	.byte	12,21,148,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87549
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_AG',0,21,153,5,3
	.word	94152
	.byte	12,21,156,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88100
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_AGC',0,21,161,5,3
	.word	94212
	.byte	12,21,164,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88362
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_AGCF',0,21,169,5,3
	.word	94273
	.byte	12,21,172,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88917
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_AGFSP',0,21,177,5,3
	.word	94335
	.byte	12,21,180,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89474
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_CLC',0,21,185,5,3
	.word	94398
	.byte	12,21,188,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89617
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_CMD',0,21,193,5,3
	.word	94459
	.byte	12,21,196,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89720
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_DBG',0,21,201,5,3
	.word	94520
	.byte	12,21,204,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89808
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_FSP',0,21,209,5,3
	.word	94581
	.byte	12,21,212,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89963
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_ID',0,21,217,5,3
	.word	94642
	.byte	12,21,220,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90073
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_KEYS',0,21,225,5,3
	.word	94702
	.byte	12,21,228,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90185
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_OCS',0,21,233,5,3
	.word	94764
	.byte	12,21,236,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90377
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_PCTL',0,21,241,5,3
	.word	94825
	.byte	12,21,244,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90608
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_RMCTL',0,21,249,5,3
	.word	94887
	.byte	12,21,252,5,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91312
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_RMEF',0,21,129,6,3
	.word	94950
	.byte	12,21,132,6,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92014
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_RMSTS',0,21,137,6,3
	.word	95012
	.byte	12,21,140,6,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92729
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_RTAC00',0,21,145,6,3
	.word	95075
	.byte	12,21,148,6,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92897
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_RTAC01',0,21,153,6,3
	.word	95139
	.byte	12,21,156,6,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	93065
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_RTAC10',0,21,161,6,3
	.word	95203
	.byte	12,21,164,6,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	93233
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_RTAC11',0,21,169,6,3
	.word	95267
	.byte	12,21,172,6,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	93401
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_RTC',0,21,177,6,3
	.word	95331
	.byte	12,21,180,6,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	93521
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SMU_STS',0,21,185,6,3
	.word	95392
	.byte	17,8,210,2,9,1,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy30',0,1,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy60',0,2,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy120',0,3,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy240',0,4,0,30
	.byte	'IfxScuCcu_LowPowerDivRatio',0,8,216,2,3
	.word	95453
	.byte	17,8,220,2,9,1,18
	.byte	'IfxScuCcu_ModulationAmplitude_0p5',0,0,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p0',0,1,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p25',0,2,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p5',0,3,18
	.byte	'IfxScuCcu_ModulationAmplitude_2p0',0,4,18
	.byte	'IfxScuCcu_ModulationAmplitude_2p5',0,5,18
	.byte	'IfxScuCcu_ModulationAmplitude_count',0,6,0,30
	.byte	'IfxScuCcu_ModulationAmplitude',0,8,229,2,3
	.word	95646
	.byte	17,8,254,3,9,1,18
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc1',0,0,18
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc0',0,1,18
	.byte	'IfxScuCcu_PllInputClockSelection_fSysclk',0,2,0,30
	.byte	'IfxScuCcu_PllInputClockSelection',0,8,131,4,3
	.word	95947
	.byte	17,8,135,4,9,1,18
	.byte	'IfxScuCcu_Traprequest_esr0',0,0,18
	.byte	'IfxScuCcu_Traprequest_esr1',0,1,18
	.byte	'IfxScuCcu_Traprequest_trap2',0,2,18
	.byte	'IfxScuCcu_Traprequest_smu',0,3,0,30
	.byte	'IfxScuCcu_Traprequest',0,8,141,4,3
	.word	96121
	.byte	17,8,147,4,9,1,18
	.byte	'IfxScuCcu_ModEn_disabled',0,0,18
	.byte	'IfxScuCcu_ModEn_enabled',0,1,0,30
	.byte	'IfxScuCcu_ModEn',0,8,151,4,3
	.word	96275
	.byte	32,8,162,4,9,6,13
	.byte	'pDivider',0
	.word	715
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	715
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	715
	.byte	1,2,35,2,13
	.byte	'k3Divider',0
	.word	715
	.byte	1,2,35,3,13
	.byte	'k3DividerBypass',0
	.word	715
	.byte	1,2,35,4,0,30
	.byte	'IfxScuCcu_PerPllConfig',0,8,171,4,3
	.word	96360
	.byte	32,8,176,4,9,4,13
	.byte	'pDivider',0
	.word	715
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	715
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	715
	.byte	1,2,35,2,0,30
	.byte	'IfxScuCcu_SysPllConfig',0,8,181,4,3
	.word	96498
	.byte	32,8,189,4,9,8,13
	.byte	'value',0
	.word	9940
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	9940
	.byte	4,2,35,4,0,30
	.byte	'IfxScuCcu_CcuconRegConfig',0,8,193,4,3
	.word	96592
	.byte	32,8,197,4,9,6,13
	.byte	'k2Step',0
	.word	715
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	352
	.byte	4,2,35,2,0,30
	.byte	'IfxScuCcu_PllStepConfig',0,8,201,4,3
	.word	96663
	.byte	32,8,205,4,9,16,13
	.byte	'xtalFrequency',0
	.word	9940
	.byte	4,2,35,0,13
	.byte	'pllInputClockSelection',0
	.word	95947
	.byte	1,2,35,4,13
	.byte	'sysPllConfig',0
	.word	96498
	.byte	4,2,35,6,13
	.byte	'perPllConfig',0
	.word	96360
	.byte	6,2,35,10,0,30
	.byte	'IfxScuCcu_pllsParameterConfig',0,8,211,4,3
	.word	96737
	.byte	32,8,219,4,9,8,13
	.byte	'value',0
	.word	9940
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	9940
	.byte	4,2,35,4,0,30
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,8,223,4,3
	.word	96882
	.byte	32,8,231,4,9,80,13
	.byte	'ccucon0',0
	.word	96592
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	96592
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	96592
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	96592
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	96592
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	96592
	.byte	8,2,35,40,13
	.byte	'ccucon8',0
	.word	96592
	.byte	8,2,35,48,13
	.byte	'ccucon9',0
	.word	96592
	.byte	8,2,35,56,13
	.byte	'ccucon10',0
	.word	96592
	.byte	8,2,35,64,13
	.byte	'ccucon11',0
	.word	96592
	.byte	8,2,35,72,0,30
	.byte	'IfxScuCcu_ClockDistributionConfig',0,8,243,4,3
	.word	96958
	.byte	32,8,247,4,9,20,13
	.byte	'pllsParameters',0
	.word	96737
	.byte	16,2,35,0,13
	.byte	'waitTime',0
	.word	352
	.byte	4,2,35,16,0,30
	.byte	'IfxScuCcu_InitialStepConfig',0,8,251,4,3
	.word	97180
	.byte	20
	.word	96663
	.byte	8
	.word	97266
	.byte	32,8,255,4,9,8,13
	.byte	'numOfSteps',0
	.word	715
	.byte	1,2,35,0,13
	.byte	'pllSteps',0
	.word	97271
	.byte	4,2,35,4,0,30
	.byte	'IfxScuCcu_PllThrottleConfig',0,8,131,5,3
	.word	97276
	.byte	32,8,137,5,9,2,13
	.byte	'Mod_Enable',0
	.word	96275
	.byte	1,2,35,0,13
	.byte	'Mod_Amp',0
	.word	95646
	.byte	1,2,35,1,0,30
	.byte	'IfxScuCcu_Mod_Config',0,8,141,5,3
	.word	97358
	.byte	17,9,141,1,9,1,18
	.byte	'IfxCpu_CounterMode_normal',0,0,18
	.byte	'IfxCpu_CounterMode_task',0,1,0,30
	.byte	'IfxCpu_CounterMode',0,9,145,1,3
	.word	97432
	.byte	32,9,198,1,9,6,13
	.byte	'counter',0
	.word	9940
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	715
	.byte	1,2,35,4,0,30
	.byte	'IfxCpu_Counter',0,9,202,1,3
	.word	97521
	.byte	32,9,210,1,9,32,13
	.byte	'instruction',0
	.word	97521
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	97521
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	97521
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	97521
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	97521
	.byte	6,2,35,24,0,30
	.byte	'IfxCpu_Perf',0,9,217,1,3
	.word	97587
	.byte	10
	.byte	'_Ifx_PMS_ACCEN0_Bits',0,22,68,16,4,11
	.byte	'EN0',0,4
	.word	563
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	563
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	563
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	563
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	563
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	563
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	563
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	563
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	563
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	563
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	563
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	563
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	563
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	563
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	563
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	563
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	563
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	563
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	563
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	563
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	563
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	563
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	563
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	563
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	563
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	563
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	563
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	563
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	563
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	563
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	563
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	563
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_PMS_ACCEN0_Bits',0,22,102,3
	.word	97705
	.byte	10
	.byte	'_Ifx_PMS_ACCEN1_Bits',0,22,105,16,4,11
	.byte	'reserved_0',0,4
	.word	563
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_PMS_ACCEN1_Bits',0,22,108,3
	.word	98262
	.byte	10
	.byte	'_Ifx_PMS_AGFSP_STDBY0_Bits',0,22,111,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'FE4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'FE5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'FE6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'FE7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'FE8',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'FE9',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'FE10',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'FE11',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'FE12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'FE13',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'FE14',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'FE15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	732
	.byte	13,2,2,35,2,11
	.byte	'BITPROT',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_AGFSP_STDBY0_Bits',0,22,133,1,3
	.word	98339
	.byte	10
	.byte	'_Ifx_PMS_AGFSP_STDBY1_Bits',0,22,136,1,16,4,11
	.byte	'FE0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'FE1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'FE2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'FE3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'FE4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'FE5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'FE7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'FE8',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'FE9',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'FE10',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'FE11',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'FE12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'FE13',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'FE14',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'FE15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'FE16',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	732
	.byte	13,2,2,35,2,11
	.byte	'BITPROT',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_AGFSP_STDBY1_Bits',0,22,158,1,3
	.word	98769
	.byte	10
	.byte	'_Ifx_PMS_AG_STDBY0_Bits',0,22,161,1,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'SF4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'SF5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'SF6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'SF7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'SF8',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'SF9',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'SF10',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'SF11',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'SF12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'SF13',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'SF14',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'SF15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	732
	.byte	13,2,2,35,2,11
	.byte	'FSPERR',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_AG_STDBY0_Bits',0,22,183,1,3
	.word	99172
	.byte	10
	.byte	'_Ifx_PMS_AG_STDBY1_Bits',0,22,186,1,16,4,11
	.byte	'SF0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'SF1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'SF2',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'SF3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'SF4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'SF5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'SF7',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'SF8',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'SF9',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'SF10',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'SF11',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'SF12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'SF13',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'SF14',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'SF15',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'SF16',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	732
	.byte	13,2,2,35,2,11
	.byte	'reserved_30',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_AG_STDBY1_Bits',0,22,208,1,3
	.word	99596
	.byte	10
	.byte	'_Ifx_PMS_CMD_STDBY_Bits',0,22,211,1,16,4,11
	.byte	'SMUEN',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'FSP0EN',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'FSP1EN',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'ASCE',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	196
	.byte	26,2,2,35,0,11
	.byte	'BITPROT',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_CMD_STDBY_Bits',0,22,220,1,3
	.word	99997
	.byte	10
	.byte	'_Ifx_PMS_DTSLIM_Bits',0,22,223,1,16,4,11
	.byte	'LOWER',0,2
	.word	732
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	715
	.byte	3,1,2,35,1,11
	.byte	'LLU',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	732
	.byte	12,4,2,35,2,11
	.byte	'reserved_28',0,1
	.word	715
	.byte	2,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_DTSLIM_Bits',0,22,232,1,3
	.word	100193
	.byte	10
	.byte	'_Ifx_PMS_DTSSTAT_Bits',0,22,235,1,16,4,11
	.byte	'RESULT',0,2
	.word	732
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	196
	.byte	20,0,2,35,0,0,30
	.byte	'Ifx_PMS_DTSSTAT_Bits',0,22,239,1,3
	.word	100376
	.byte	10
	.byte	'_Ifx_PMS_EVR33CON_Bits',0,22,242,1,16,4,11
	.byte	'SHVH33',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	715
	.byte	4,4,2,35,1,11
	.byte	'SHHVEN',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'SHLVEN',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	715
	.byte	2,0,2,35,1,11
	.byte	'SHVL33',0,1
	.word	715
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	715
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVR33CON_Bits',0,22,255,1,3
	.word	100476
	.byte	10
	.byte	'_Ifx_PMS_EVRADCSTAT_Bits',0,22,130,2,16,4,11
	.byte	'ADCCV',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	715
	.byte	8,0,2,35,2,11
	.byte	'OVC',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'OV33',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'OVSWD',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'UVC',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'UV33',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'UVSWD',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	715
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRADCSTAT_Bits',0,22,142,2,3
	.word	100762
	.byte	10
	.byte	'_Ifx_PMS_EVROSCCTRL_Bits',0,22,145,2,16,4,11
	.byte	'OSCFTRIM',0,1
	.word	715
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	732
	.byte	10,0,2,35,0,11
	.byte	'OSCFPTRIM',0,1
	.word	715
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	732
	.byte	7,3,2,35,2,11
	.byte	'OSCTEMPOFFS',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'OSCTRIMEN',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVROSCCTRL_Bits',0,22,154,2,3
	.word	101000
	.byte	10
	.byte	'_Ifx_PMS_EVRRSTCON_Bits',0,22,157,2,16,4,11
	.byte	'RSTCTRIM',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'RST33TRIM',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'RSTSWDTRIM',0,1
	.word	715
	.byte	8,0,2,35,2,11
	.byte	'RSTCOFF',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'BPRSTCOFF',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'BPRST33OFF',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRRSTCON_Bits',0,22,170,2,3
	.word	101218
	.byte	10
	.byte	'_Ifx_PMS_EVRRSTSTAT_Bits',0,22,173,2,16,4,11
	.byte	'RSTC',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'RST33',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'RSTSWD',0,1
	.word	715
	.byte	8,0,2,35,2,11
	.byte	'RSTCOFF',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	715
	.byte	3,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRRSTSTAT_Bits',0,22,184,2,3
	.word	101509
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF0_Bits',0,22,187,2,16,4,11
	.byte	'M0S0EN',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'M0S2EN',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'M0S3EN',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'M0S3CLIP',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'M0S4EN',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'M0RAMPEN',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'M0SFRGET',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'M0SKIPEN',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'M0S3COEFF',0,1
	.word	715
	.byte	4,4,2,35,1,11
	.byte	'M0S4COEFF',0,1
	.word	715
	.byte	4,0,2,35,1,11
	.byte	'M0SRMPCOEFF',0,1
	.word	715
	.byte	4,4,2,35,2,11
	.byte	'M0FGETCOEFF',0,1
	.word	715
	.byte	4,0,2,35,2,11
	.byte	'M0S2COEFF',0,1
	.word	715
	.byte	4,4,2,35,3,11
	.byte	'M0S2VINSRC',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'M0S2VOSRC',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'M0SRMPCOEFFFRAC',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF0_Bits',0,22,206,2,3
	.word	101754
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF1_Bits',0,22,209,2,16,4,11
	.byte	'M0VOCFLPF',0,1
	.word	715
	.byte	4,4,2,35,0,11
	.byte	'M0VOCFINC',0,1
	.word	715
	.byte	4,0,2,35,0,11
	.byte	'M0VOUT',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'M0VIN',0,2
	.word	732
	.byte	11,5,2,35,2,11
	.byte	'M0S3COEFFFRAC',0,1
	.word	715
	.byte	2,3,2,35,3,11
	.byte	'M0S2COEFFFRAC',0,1
	.word	715
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF1_Bits',0,22,218,2,3
	.word	102167
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF2_Bits',0,22,221,2,16,4,11
	.byte	'M1S0EN',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'M1S2EN',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'M1S3EN',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'M1S3CLIP',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'M1S4EN',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'M1RAMPEN',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'M1SFRGET',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'M1SKIPEN',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'M1S3COEFF',0,1
	.word	715
	.byte	4,4,2,35,1,11
	.byte	'M1S4COEFF',0,1
	.word	715
	.byte	4,0,2,35,1,11
	.byte	'M1SRMPCOEFF',0,1
	.word	715
	.byte	4,4,2,35,2,11
	.byte	'M1FGETCOEFF',0,1
	.word	715
	.byte	4,0,2,35,2,11
	.byte	'M1S2COEFF',0,1
	.word	715
	.byte	4,4,2,35,3,11
	.byte	'M1S2VINSRC',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'M1S2VOSRC',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	715
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF2_Bits',0,22,239,2,3
	.word	102376
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF3_Bits',0,22,242,2,16,4,11
	.byte	'M1VOCFLPF',0,1
	.word	715
	.byte	4,4,2,35,0,11
	.byte	'M1VOCFINC',0,1
	.word	715
	.byte	4,0,2,35,0,11
	.byte	'M1VOUT',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'M1VIN',0,2
	.word	732
	.byte	11,5,2,35,2,11
	.byte	'M1S3COEFFFRAC',0,1
	.word	715
	.byte	2,3,2,35,3,11
	.byte	'M1S2COEFFFRAC',0,1
	.word	715
	.byte	2,1,2,35,3,11
	.byte	'M1SRMPCOEFFFRAC',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF3_Bits',0,22,251,2,3
	.word	102770
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF4_Bits',0,22,254,2,16,4,11
	.byte	'M2S0EN',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'M2S2EN',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'M2S3EN',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'M2S3CLIP',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'M2S4EN',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'M2RAMPEN',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'M2SFRGET',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'M2SKIPEN',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'M2S3COEFF',0,1
	.word	715
	.byte	4,4,2,35,1,11
	.byte	'M2S4COEFF',0,1
	.word	715
	.byte	4,0,2,35,1,11
	.byte	'M2SRMPCOEFF',0,1
	.word	715
	.byte	4,4,2,35,2,11
	.byte	'M2FGETCOEFF',0,1
	.word	715
	.byte	4,0,2,35,2,11
	.byte	'M2S2COEFF',0,1
	.word	715
	.byte	4,4,2,35,3,11
	.byte	'M2S2VINSRC',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'M2S2VOSRC',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	715
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF4_Bits',0,22,144,3,3
	.word	102991
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF5_Bits',0,22,147,3,16,4,11
	.byte	'M2VOCFLPF',0,1
	.word	715
	.byte	4,4,2,35,0,11
	.byte	'M2VOCFINC',0,1
	.word	715
	.byte	4,0,2,35,0,11
	.byte	'M2VOUT',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'M2VIN',0,2
	.word	732
	.byte	11,5,2,35,2,11
	.byte	'M2S3COEFFFRAC',0,1
	.word	715
	.byte	2,3,2,35,3,11
	.byte	'M2S2COEFFFRAC',0,1
	.word	715
	.byte	2,1,2,35,3,11
	.byte	'M2SRMPCOEFFFRAC',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF5_Bits',0,22,156,3,3
	.word	103385
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF6_Bits',0,22,159,3,16,4,11
	.byte	'CT5REG0',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'CT5REG1',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'CT5REG2',0,1
	.word	715
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	715
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF6_Bits',0,22,166,3,3
	.word	103606
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF7_Bits',0,22,169,3,16,4,11
	.byte	'CT5REG3',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'CT5REG4',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF7_Bits',0,22,175,3,3
	.word	103768
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF8_Bits',0,22,178,3,16,4,11
	.byte	'CT33REG0',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'CT33REG1',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'CT33REG2',0,1
	.word	715
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	715
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF8_Bits',0,22,185,3,3
	.word	103911
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF9_Bits',0,22,188,3,16,4,11
	.byte	'CT33REG3',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'CT33REG4',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF9_Bits',0,22,194,3,3
	.word	104076
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL0_Bits',0,22,197,3,16,4,11
	.byte	'SDFREQSPRD',0,2
	.word	732
	.byte	16,0,2,35,0,11
	.byte	'SDFREQ',0,2
	.word	732
	.byte	12,4,2,35,2,11
	.byte	'NGOFF',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'PGOFF',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCTRL0_Bits',0,22,205,3,3
	.word	104221
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL1_Bits',0,22,208,3,16,4,11
	.byte	'M0TOFF',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'M0TON',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'M0S0COEFF',0,1
	.word	715
	.byte	4,4,2,35,2,11
	.byte	'M0DEADBD',0,1
	.word	715
	.byte	2,2,2,35,2,11
	.byte	'M0ADCZB',0,1
	.word	715
	.byte	2,0,2,35,2,11
	.byte	'M0SKIP',0,1
	.word	715
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	715
	.byte	2,2,2,35,3,11
	.byte	'SYNCEN',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCTRL1_Bits',0,22,219,3,3
	.word	104389
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL10_Bits',0,22,222,3,16,4,11
	.byte	'SHVH',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'SHVL',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	12,4,2,35,2,11
	.byte	'SHHVEN',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'SHLVEN',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	715
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCTRL10_Bits',0,22,230,3,3
	.word	104623
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL11_Bits',0,22,233,3,16,4,11
	.byte	'DROOPVH',0,1
	.word	715
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	715
	.byte	3,0,2,35,0,11
	.byte	'DROOPVL',0,1
	.word	715
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	715
	.byte	3,0,2,35,1,11
	.byte	'SYNCMAXDEV',0,1
	.word	715
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	715
	.byte	3,0,2,35,2,11
	.byte	'SYNCHYST',0,1
	.word	715
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'SYNCMUXSEL',0,1
	.word	715
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCTRL11_Bits',0,22,246,3,3
	.word	104804
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL2_Bits',0,22,249,3,16,4,11
	.byte	'LPBNDOFFSET',0,1
	.word	715
	.byte	4,4,2,35,0,11
	.byte	'LPBNDWIDTH',0,1
	.word	715
	.byte	4,0,2,35,0,11
	.byte	'LPLPFCOEFF',0,1
	.word	715
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	715
	.byte	4,0,2,35,1,11
	.byte	'SDFREQLP',0,2
	.word	732
	.byte	12,4,2,35,2,11
	.byte	'reserved_28',0,1
	.word	715
	.byte	2,2,2,35,3,11
	.byte	'EVRCMOD',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCTRL2_Bits',0,22,131,4,3
	.word	105102
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL3_Bits',0,22,134,4,16,4,11
	.byte	'M1TOFF',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'M1TON',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'M1S0COEFF',0,1
	.word	715
	.byte	4,4,2,35,2,11
	.byte	'M1DEADBD',0,1
	.word	715
	.byte	2,2,2,35,2,11
	.byte	'M1ADCZB',0,1
	.word	715
	.byte	2,0,2,35,2,11
	.byte	'M1SKIP',0,1
	.word	715
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	715
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCTRL3_Bits',0,22,143,4,3
	.word	105334
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL4_Bits',0,22,146,4,16,4,11
	.byte	'VOKCFG',0,1
	.word	715
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	732
	.byte	10,0,2,35,0,11
	.byte	'SDFREQST',0,2
	.word	732
	.byte	12,4,2,35,2,11
	.byte	'reserved_28',0,1
	.word	715
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCTRL4_Bits',0,22,152,4,3
	.word	105535
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL5_Bits',0,22,155,4,16,4,11
	.byte	'M2TOFF',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'M2TON',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'M2S0COEFF',0,1
	.word	715
	.byte	4,4,2,35,2,11
	.byte	'M2DEADBD',0,1
	.word	715
	.byte	2,2,2,35,2,11
	.byte	'M2ADCZB',0,1
	.word	715
	.byte	2,0,2,35,2,11
	.byte	'M2SKIP',0,1
	.word	715
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	715
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCTRL5_Bits',0,22,164,4,3
	.word	105683
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL6_Bits',0,22,167,4,16,4,11
	.byte	'SVINTH',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'SVOTH',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'SINCLO',0,1
	.word	715
	.byte	3,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'SINCHI',0,1
	.word	715
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	732
	.byte	8,1,2,35,2,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCTRL6_Bits',0,22,176,4,3
	.word	105884
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL7_Bits',0,22,179,4,16,4,11
	.byte	'DRVNI',0,1
	.word	715
	.byte	2,6,2,35,0,11
	.byte	'DRVPCBF',0,1
	.word	715
	.byte	2,4,2,35,0,11
	.byte	'DRVP',0,1
	.word	715
	.byte	4,0,2,35,0,11
	.byte	'DRVSLOMODE',0,1
	.word	715
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	715
	.byte	6,0,2,35,1,11
	.byte	'DRVSPR',0,1
	.word	715
	.byte	8,0,2,35,2,11
	.byte	'SYNCDIVFAC',0,1
	.word	715
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	715
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCTRL7_Bits',0,22,190,4,3
	.word	106081
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL8_Bits',0,22,193,4,16,4,11
	.byte	'FBADCOFFS',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'FBADCSMP',0,1
	.word	715
	.byte	6,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	715
	.byte	2,0,2,35,1,11
	.byte	'FBADCBLNK',0,1
	.word	715
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	715
	.byte	2,4,2,35,2,11
	.byte	'FBADCLPF',0,1
	.word	715
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	715
	.byte	2,0,2,35,2,11
	.byte	'FBADCERR',0,1
	.word	715
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	715
	.byte	2,4,2,35,3,11
	.byte	'FBADCLSB',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	715
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCTRL8_Bits',0,22,207,4,3
	.word	106321
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL9_Bits',0,22,210,4,16,4,11
	.byte	'FFADCOFFS',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'FFADCLPF',0,1
	.word	715
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	196
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDCTRL9_Bits',0,22,216,4,3
	.word	106638
	.byte	10
	.byte	'_Ifx_PMS_EVRSDSTAT0_Bits',0,22,219,4,16,4,11
	.byte	'ADCFBCV',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'DPWMOUT',0,2
	.word	732
	.byte	12,4,2,35,2,11
	.byte	'reserved_28',0,1
	.word	715
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSDSTAT0_Bits',0,22,225,4,3
	.word	106782
	.byte	10
	.byte	'_Ifx_PMS_EVRSTAT_Bits',0,22,228,4,16,4,11
	.byte	'EVRC',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'OVC',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'EVR33',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'OV33',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'UVC',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'UV33',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'SYNCLCK',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'EVR33VOK',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	715
	.byte	3,3,2,35,1,11
	.byte	'RSTC',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'RST33',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'RSTSWD',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'EVRCSHLV',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'EVRCSHHV',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'EVR33SHLV',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'EVR33SHHV',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'SWDLVL',0,1
	.word	715
	.byte	1,3,2,35,2,11
	.byte	'SDVOK',0,1
	.word	715
	.byte	1,2,2,35,2,11
	.byte	'EVRCMOD',0,1
	.word	715
	.byte	2,0,2,35,2,11
	.byte	'OVPRE',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'OVSB',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'OVDDM',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'UVPRE',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'UVSB',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'UVDDM',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	715
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRSTAT_Bits',0,22,130,5,3
	.word	106930
	.byte	10
	.byte	'_Ifx_PMS_EVRTRIM_Bits',0,22,133,5,16,4,11
	.byte	'EVR33VOUTSEL',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'EVR33VOUTTRIM',0,1
	.word	715
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	715
	.byte	2,0,2,35,2,11
	.byte	'SDVOUTTRIM',0,1
	.word	715
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRTRIM_Bits',0,22,142,5,3
	.word	107490
	.byte	10
	.byte	'_Ifx_PMS_EVRTRIMSTAT_Bits',0,22,145,5,16,4,11
	.byte	'EVR33VOUTSEL',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'EVR33VOUTTRIM',0,1
	.word	715
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	715
	.byte	2,0,2,35,2,11
	.byte	'SDVOUTTRIM',0,1
	.word	715
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	715
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_PMS_EVRTRIMSTAT_Bits',0,22,153,5,3
	.word	107695
	.byte	10
	.byte	'_Ifx_PMS_HSMOVMON_Bits',0,22,156,5,16,4,11
	.byte	'EVRCOVVAL',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	715
	.byte	8,0,2,35,2,11
	.byte	'EVRCOFF',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'EVR33OFF',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'SWDOFF',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	715
	.byte	4,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_HSMOVMON_Bits',0,22,166,5,3
	.word	107900
	.byte	10
	.byte	'_Ifx_PMS_HSMUVMON_Bits',0,22,169,5,16,4,11
	.byte	'EVRCUVVAL',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	715
	.byte	8,0,2,35,2,11
	.byte	'EVRCOFF',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'EVR33OFF',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'SWDOFF',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'HSMFIL',0,1
	.word	715
	.byte	4,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_HSMUVMON_Bits',0,22,179,5,3
	.word	108120
	.byte	10
	.byte	'_Ifx_PMS_ID_Bits',0,22,182,5,16,4,11
	.byte	'MODREV',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	732
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_PMS_ID_Bits',0,22,187,5,3
	.word	108335
	.byte	10
	.byte	'_Ifx_PMS_MONBISTCTRL_Bits',0,22,190,5,16,4,11
	.byte	'TSTEN',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'TSTCLR',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	196
	.byte	28,2,2,35,0,11
	.byte	'BITPROT',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_MONBISTCTRL_Bits',0,22,197,5,3
	.word	108442
	.byte	10
	.byte	'_Ifx_PMS_MONBISTSTAT_Bits',0,22,200,5,16,4,11
	.byte	'TSTOK',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'TSTRUN',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'TSTDONE',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'SMUERR',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'PMSERR',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	196
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_PMS_MONBISTSTAT_Bits',0,22,209,5,3
	.word	108608
	.byte	10
	.byte	'_Ifx_PMS_MONCTRL_Bits',0,22,212,5,16,4,11
	.byte	'EVRCOVMOD',0,1
	.word	715
	.byte	2,6,2,35,0,11
	.byte	'PREOVMOD',0,1
	.word	715
	.byte	2,4,2,35,0,11
	.byte	'EVRCUVMOD',0,1
	.word	715
	.byte	2,2,2,35,0,11
	.byte	'PREUVMOD',0,1
	.word	715
	.byte	2,0,2,35,0,11
	.byte	'EVR33OVMOD',0,1
	.word	715
	.byte	2,6,2,35,1,11
	.byte	'VDDMOVMOD',0,1
	.word	715
	.byte	2,4,2,35,1,11
	.byte	'EVR33UVMOD',0,1
	.word	715
	.byte	2,2,2,35,1,11
	.byte	'VDDMUVMOD',0,1
	.word	715
	.byte	2,0,2,35,1,11
	.byte	'SWDOVMOD',0,1
	.word	715
	.byte	2,6,2,35,2,11
	.byte	'SBOVMOD',0,1
	.word	715
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	715
	.byte	2,2,2,35,2,11
	.byte	'SBUVMOD',0,1
	.word	715
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	715
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_MONCTRL_Bits',0,22,229,5,3
	.word	108809
	.byte	10
	.byte	'_Ifx_PMS_MONFILT_Bits',0,22,232,5,16,4,11
	.byte	'EVRCFIL',0,1
	.word	715
	.byte	4,4,2,35,0,11
	.byte	'PREFIL',0,1
	.word	715
	.byte	4,0,2,35,0,11
	.byte	'EVR33FIL',0,1
	.word	715
	.byte	4,4,2,35,1,11
	.byte	'VDDMFIL',0,1
	.word	715
	.byte	4,0,2,35,1,11
	.byte	'SWDFIL',0,1
	.word	715
	.byte	4,4,2,35,2,11
	.byte	'SBFIL',0,1
	.word	715
	.byte	4,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	715
	.byte	5,3,2,35,3,11
	.byte	'CLRFIL',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_MONFILT_Bits',0,22,244,5,3
	.word	109176
	.byte	10
	.byte	'_Ifx_PMS_MONSTAT1_Bits',0,22,247,5,16,4,11
	.byte	'ADCCV',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	715
	.byte	8,0,2,35,2,11
	.byte	'ACTVCNT',0,1
	.word	715
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	715
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_PMS_MONSTAT1_Bits',0,22,254,5,3
	.word	109426
	.byte	10
	.byte	'_Ifx_PMS_MONSTAT2_Bits',0,22,129,6,16,4,11
	.byte	'ADCPRE',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'ADCSB',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'ADCVDDM',0,1
	.word	715
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	715
	.byte	8,0,2,35,3,0,30
	.byte	'Ifx_PMS_MONSTAT2_Bits',0,22,135,6,3
	.word	109583
	.byte	10
	.byte	'_Ifx_PMS_OTSC0_Bits',0,22,138,6,16,4,11
	.byte	'B0LAM',0,1
	.word	715
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	715
	.byte	4,0,2,35,0,11
	.byte	'B0HAM',0,1
	.word	715
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	715
	.byte	4,0,2,35,1,11
	.byte	'B1LAM',0,1
	.word	715
	.byte	4,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	715
	.byte	4,0,2,35,2,11
	.byte	'B1HAM',0,1
	.word	715
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	715
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_PMS_OTSC0_Bits',0,22,148,6,3
	.word	109721
	.byte	10
	.byte	'_Ifx_PMS_OTSC1_Bits',0,22,151,6,16,4,11
	.byte	'B0EC',0,1
	.word	715
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	715
	.byte	4,0,2,35,0,11
	.byte	'B1EC',0,1
	.word	715
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	715
	.byte	4,0,2,35,1,11
	.byte	'DMONAD',0,1
	.word	715
	.byte	8,0,2,35,2,11
	.byte	'SMCDBG',0,1
	.word	715
	.byte	8,0,2,35,3,0,30
	.byte	'Ifx_PMS_OTSC1_Bits',0,22,159,6,3
	.word	109935
	.byte	10
	.byte	'_Ifx_PMS_OTSS_Bits',0,22,162,6,16,4,11
	.byte	'OTGB0',0,1
	.word	715
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	715
	.byte	4,0,2,35,0,11
	.byte	'OTGB1',0,1
	.word	715
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	715
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	732
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_PMS_OTSS_Bits',0,22,169,6,3
	.word	110103
	.byte	10
	.byte	'_Ifx_PMS_OVMON_Bits',0,22,172,6,16,4,11
	.byte	'EVRCOVVAL',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	715
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	715
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_OVMON_Bits',0,22,180,6,3
	.word	110258
	.byte	10
	.byte	'_Ifx_PMS_OVMON2_Bits',0,22,183,6,16,4,11
	.byte	'PREOVVAL',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'VDDMOVVAL',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'SBOVVAL',0,1
	.word	715
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	715
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_OVMON2_Bits',0,22,191,6,3
	.word	110438
	.byte	10
	.byte	'_Ifx_PMS_PMSIEN_Bits',0,22,194,6,16,4,11
	.byte	'OVSWD',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'UVSWD',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'OV33',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'UV33',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'OVC',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'UVC',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'OVPRE',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'UVPRE',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'OVDDM',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'UVDDM',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'OVSB',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'UVSB',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	715
	.byte	4,0,2,35,1,11
	.byte	'EVRCMOD',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'SDVOK',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'SYNCLCK',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'SWDLVL',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	715
	.byte	1,3,2,35,2,11
	.byte	'WUTWKP',0,1
	.word	715
	.byte	1,2,2,35,2,11
	.byte	'ESR0WKP',0,1
	.word	715
	.byte	1,1,2,35,2,11
	.byte	'ESR1WKP',0,1
	.word	715
	.byte	1,0,2,35,2,11
	.byte	'PINAWKP',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'PINBWKP',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'SCRINT',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'SCRRST',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'SCRECC',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'SCRWDT',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	715
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_PMS_PMSIEN_Bits',0,22,224,6,3
	.word	110617
	.byte	10
	.byte	'_Ifx_PMS_PMSWCR0_Bits',0,22,227,6,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	2,6,2,35,0,11
	.byte	'VEXTSTBYEN',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'VDDSTBYEN',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	715
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	715
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	715
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	715
	.byte	2,0,2,35,1,11
	.byte	'STBYRAMSEL',0,1
	.word	715
	.byte	3,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'BLNKFIL',0,1
	.word	715
	.byte	4,0,2,35,2,11
	.byte	'ESR0WKEN',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'ESR1WKEN',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'PINAWKEN',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'PINBWKEN',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'PWRWKEN',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'SCRWKEN',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'PORSTWKEN',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'WUTWKEN',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_PMSWCR0_Bits',0,22,251,6,3
	.word	111178
	.byte	10
	.byte	'_Ifx_PMS_PMSWCR2_Bits',0,22,254,6,16,4,11
	.byte	'SCRINT',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'SCRECC',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'SCRWDT',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'SCRRST',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	715
	.byte	4,0,2,35,1,11
	.byte	'TCINT',0,1
	.word	715
	.byte	8,0,2,35,2,11
	.byte	'TCINTREQ',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'SMURST',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'RST',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	715
	.byte	5,0,2,35,3,0,30
	.byte	'Ifx_PMS_PMSWCR2_Bits',0,22,139,7,3
	.word	111688
	.byte	10
	.byte	'_Ifx_PMS_PMSWCR3_Bits',0,22,142,7,16,4,11
	.byte	'WUTREL',0,4
	.word	196
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	715
	.byte	3,5,2,35,3,11
	.byte	'WUTEN',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'BUSY',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'WUTDIV',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'WUTMODE',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_PMSWCR3_Bits',0,22,151,7,3
	.word	111957
	.byte	10
	.byte	'_Ifx_PMS_PMSWCR4_Bits',0,22,154,7,16,4,11
	.byte	'BPSCRSTREQ',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'SCRSTREQ',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	715
	.byte	2,4,2,35,0,11
	.byte	'BPPORSTREQ',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'PORSTREQ',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'SCRCLKSEL',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	732
	.byte	9,0,2,35,0,11
	.byte	'SCRCFG',0,1
	.word	715
	.byte	8,0,2,35,2,11
	.byte	'BPSCREN',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'SCREN',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	715
	.byte	6,0,2,35,3,0,30
	.byte	'Ifx_PMS_PMSWCR4_Bits',0,22,167,7,3
	.word	112150
	.byte	10
	.byte	'_Ifx_PMS_PMSWCR5_Bits',0,22,170,7,16,4,11
	.byte	'BPTRISTREQ',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'TRISTREQ',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'ESR0TRIST',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'PORSTDF',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'DCDCSYNCO',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	196
	.byte	25,0,2,35,0,0,30
	.byte	'Ifx_PMS_PMSWCR5_Bits',0,22,180,7,3
	.word	112435
	.byte	10
	.byte	'_Ifx_PMS_PMSWSTAT_Bits',0,22,183,7,16,4,11
	.byte	'reserved_0',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'HWCFGEVR',0,1
	.word	715
	.byte	2,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'HWCFG4',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'HWCFG5',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'TRIST',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'TESTMODE',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'ESR0TRIST',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	715
	.byte	2,5,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	715
	.byte	4,0,2,35,1,11
	.byte	'SCR',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'SCRST',0,1
	.word	715
	.byte	1,6,2,35,2,11
	.byte	'SCRCLK',0,1
	.word	715
	.byte	1,5,2,35,2,11
	.byte	'PORSTREQ',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	715
	.byte	4,0,2,35,2,11
	.byte	'WUTEN',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'WUTRUN',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'WUTMODE',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'ESR0INT',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'ESR1INT',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'PINAINT',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'PINBINT',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_PMSWSTAT_Bits',0,22,209,7,3
	.word	112663
	.byte	10
	.byte	'_Ifx_PMS_PMSWSTAT2_Bits',0,22,212,7,16,4,11
	.byte	'ESR0WKP',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'PWRWKP',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'SCRWKP',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'PORSTWKP',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'WUTWKP',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'ESR0OVRUN',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'ESR1OVRUN',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'PINAOVRUN',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'PINBOVRUN',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'VDDSTBYEN',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'SCROVRUN',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'PORSTOVRUN',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'WUTOVRUN',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	715
	.byte	3,5,2,35,2,11
	.byte	'VEXTSTBYEN',0,1
	.word	715
	.byte	1,4,2,35,2,11
	.byte	'BLNKFIL',0,1
	.word	715
	.byte	4,0,2,35,2,11
	.byte	'ESR0WKEN',0,1
	.word	715
	.byte	1,7,2,35,3,11
	.byte	'ESR1WKEN',0,1
	.word	715
	.byte	1,6,2,35,3,11
	.byte	'PINAWKEN',0,1
	.word	715
	.byte	1,5,2,35,3,11
	.byte	'PINBWKEN',0,1
	.word	715
	.byte	1,4,2,35,3,11
	.byte	'PWRWKEN',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'SCRWKEN',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'PORSTWKEN',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'WUTWKEN',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_PMSWSTAT2_Bits',0,22,241,7,3
	.word	113192
	.byte	10
	.byte	'_Ifx_PMS_PMSWSTATCLR_Bits',0,22,244,7,16,4,11
	.byte	'ESR0WKPCLR',0,1
	.word	715
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	715
	.byte	1,6,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	715
	.byte	1,5,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	715
	.byte	1,4,2,35,0,11
	.byte	'PWRWKPCLR',0,1
	.word	715
	.byte	1,3,2,35,0,11
	.byte	'SCRWKPCLR',0,1
	.word	715
	.byte	1,2,2,35,0,11
	.byte	'PORSTWKPCLR',0,1
	.word	715
	.byte	1,1,2,35,0,11
	.byte	'WUTWKPCLR',0,1
	.word	715
	.byte	1,0,2,35,0,11
	.byte	'ESR0OVRUNCLR',0,1
	.word	715
	.byte	1,7,2,35,1,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	715
	.byte	1,6,2,35,1,11
	.byte	'PINAOVRUNCLR',0,1
	.word	715
	.byte	1,5,2,35,1,11
	.byte	'PINBOVRUNCLR',0,1
	.word	715
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	715
	.byte	1,3,2,35,1,11
	.byte	'SCROVRUNCLR',0,1
	.word	715
	.byte	1,2,2,35,1,11
	.byte	'PORSTOVRUNCLR',0,1
	.word	715
	.byte	1,1,2,35,1,11
	.byte	'WUTOVRUNCLR',0,1
	.word	715
	.byte	1,0,2,35,1,11
	.byte	'SCRSTCLR',0,1
	.word	715
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	732
	.byte	11,4,2,35,2,11
	.byte	'ESR0INTCLR',0,1
	.word	715
	.byte	1,3,2,35,3,11
	.byte	'ESR1INTCLR',0,1
	.word	715
	.byte	1,2,2,35,3,11
	.byte	'PINAINTCLR',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'PINBINTCLR',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_PMSWSTATCLR_Bits',0,22,140,8,3
	.word	113790
	.byte	10
	.byte	'_Ifx_PMS_PMSWUTCNT_Bits',0,22,143,8,16,4,11
	.byte	'WUTCNT',0,4
	.word	196
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	715
	.byte	8,0,2,35,3,0,30
	.byte	'Ifx_PMS_PMSWUTCNT_Bits',0,22,147,8,3
	.word	114352
	.byte	10
	.byte	'_Ifx_PMS_UVMON_Bits',0,22,150,8,16,4,11
	.byte	'EVRCUVVAL',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	715
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	715
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_UVMON_Bits',0,22,158,8,3
	.word	114456
	.byte	10
	.byte	'_Ifx_PMS_UVMON2_Bits',0,22,161,8,16,4,11
	.byte	'PREUVVAL',0,1
	.word	715
	.byte	8,0,2,35,0,11
	.byte	'VDDMUVVAL',0,1
	.word	715
	.byte	8,0,2,35,1,11
	.byte	'SBUVVAL',0,1
	.word	715
	.byte	8,0,2,35,2,11
	.byte	'VDDMLVLSEL',0,1
	.word	715
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	715
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	715
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_PMS_UVMON2_Bits',0,22,169,8,3
	.word	114636
	.byte	12,22,177,8,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97705
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_ACCEN0',0,22,182,8,3
	.word	114814
	.byte	12,22,185,8,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98262
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_ACCEN1',0,22,190,8,3
	.word	114878
	.byte	12,22,193,8,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98339
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_AGFSP_STDBY0',0,22,198,8,3
	.word	114942
	.byte	12,22,201,8,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98769
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_AGFSP_STDBY1',0,22,206,8,3
	.word	115012
	.byte	12,22,209,8,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99172
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_AG_STDBY0',0,22,214,8,3
	.word	115082
	.byte	12,22,217,8,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99596
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_AG_STDBY1',0,22,222,8,3
	.word	115149
	.byte	12,22,225,8,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99997
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_CMD_STDBY',0,22,230,8,3
	.word	115216
	.byte	12,22,233,8,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100193
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_DTSLIM',0,22,238,8,3
	.word	115283
	.byte	12,22,241,8,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100376
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_DTSSTAT',0,22,246,8,3
	.word	115347
	.byte	12,22,249,8,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100476
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVR33CON',0,22,254,8,3
	.word	115412
	.byte	12,22,129,9,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100762
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRADCSTAT',0,22,134,9,3
	.word	115478
	.byte	12,22,137,9,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101000
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVROSCCTRL',0,22,142,9,3
	.word	115546
	.byte	12,22,145,9,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101218
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRRSTCON',0,22,150,9,3
	.word	115614
	.byte	12,22,153,9,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101509
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRRSTSTAT',0,22,158,9,3
	.word	115681
	.byte	12,22,161,9,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101754
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF0',0,22,166,9,3
	.word	115749
	.byte	12,22,169,9,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102167
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF1',0,22,174,9,3
	.word	115818
	.byte	12,22,177,9,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102376
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF2',0,22,182,9,3
	.word	115887
	.byte	12,22,185,9,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102770
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF3',0,22,190,9,3
	.word	115956
	.byte	12,22,193,9,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102991
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF4',0,22,198,9,3
	.word	116025
	.byte	12,22,201,9,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103385
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF5',0,22,206,9,3
	.word	116094
	.byte	12,22,209,9,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103606
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF6',0,22,214,9,3
	.word	116163
	.byte	12,22,217,9,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103768
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF7',0,22,222,9,3
	.word	116232
	.byte	12,22,225,9,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103911
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF8',0,22,230,9,3
	.word	116301
	.byte	12,22,233,9,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104076
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCOEFF9',0,22,238,9,3
	.word	116370
	.byte	12,22,241,9,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104221
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCTRL0',0,22,246,9,3
	.word	116439
	.byte	12,22,249,9,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104389
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCTRL1',0,22,254,9,3
	.word	116507
	.byte	12,22,129,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104623
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCTRL10',0,22,134,10,3
	.word	116575
	.byte	12,22,137,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104804
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCTRL11',0,22,142,10,3
	.word	116644
	.byte	12,22,145,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105102
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCTRL2',0,22,150,10,3
	.word	116713
	.byte	12,22,153,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105334
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCTRL3',0,22,158,10,3
	.word	116781
	.byte	12,22,161,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105535
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCTRL4',0,22,166,10,3
	.word	116849
	.byte	12,22,169,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105683
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCTRL5',0,22,174,10,3
	.word	116917
	.byte	12,22,177,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105884
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCTRL6',0,22,182,10,3
	.word	116985
	.byte	12,22,185,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106081
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCTRL7',0,22,190,10,3
	.word	117053
	.byte	12,22,193,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106321
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCTRL8',0,22,198,10,3
	.word	117121
	.byte	12,22,201,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106638
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDCTRL9',0,22,206,10,3
	.word	117189
	.byte	12,22,209,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106782
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSDSTAT0',0,22,214,10,3
	.word	117257
	.byte	12,22,217,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106930
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRSTAT',0,22,222,10,3
	.word	117325
	.byte	12,22,225,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107490
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRTRIM',0,22,230,10,3
	.word	117390
	.byte	12,22,233,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107695
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_EVRTRIMSTAT',0,22,238,10,3
	.word	117455
	.byte	12,22,241,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107900
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_HSMOVMON',0,22,246,10,3
	.word	117524
	.byte	12,22,249,10,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108120
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_HSMUVMON',0,22,254,10,3
	.word	117590
	.byte	12,22,129,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108335
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_ID',0,22,134,11,3
	.word	117656
	.byte	12,22,137,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108442
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_MONBISTCTRL',0,22,142,11,3
	.word	117716
	.byte	12,22,145,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108608
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_MONBISTSTAT',0,22,150,11,3
	.word	117785
	.byte	12,22,153,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108809
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_MONCTRL',0,22,158,11,3
	.word	117854
	.byte	12,22,161,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109176
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_MONFILT',0,22,166,11,3
	.word	117919
	.byte	12,22,169,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109426
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_MONSTAT1',0,22,174,11,3
	.word	117984
	.byte	12,22,177,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109583
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_MONSTAT2',0,22,182,11,3
	.word	118050
	.byte	12,22,185,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109721
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_OTSC0',0,22,190,11,3
	.word	118116
	.byte	12,22,193,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109935
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_OTSC1',0,22,198,11,3
	.word	118179
	.byte	12,22,201,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110103
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_OTSS',0,22,206,11,3
	.word	118242
	.byte	12,22,209,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110258
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_OVMON',0,22,214,11,3
	.word	118304
	.byte	12,22,217,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110438
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_OVMON2',0,22,222,11,3
	.word	118367
	.byte	12,22,225,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110617
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_PMSIEN',0,22,230,11,3
	.word	118431
	.byte	12,22,233,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111178
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_PMSWCR0',0,22,238,11,3
	.word	118495
	.byte	12,22,241,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111688
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_PMSWCR2',0,22,246,11,3
	.word	118560
	.byte	12,22,249,11,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111957
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_PMSWCR3',0,22,254,11,3
	.word	118625
	.byte	12,22,129,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112150
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_PMSWCR4',0,22,134,12,3
	.word	118690
	.byte	12,22,137,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112435
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_PMSWCR5',0,22,142,12,3
	.word	118755
	.byte	12,22,145,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112663
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_PMSWSTAT',0,22,150,12,3
	.word	118820
	.byte	12,22,153,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113192
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_PMSWSTAT2',0,22,158,12,3
	.word	118886
	.byte	12,22,161,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113790
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_PMSWSTATCLR',0,22,166,12,3
	.word	118953
	.byte	12,22,169,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114352
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_PMSWUTCNT',0,22,174,12,3
	.word	119022
	.byte	12,22,177,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114456
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_UVMON',0,22,182,12,3
	.word	119089
	.byte	12,22,185,12,9,4,13
	.byte	'U',0
	.word	196
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114636
	.byte	4,2,35,0,0,30
	.byte	'Ifx_PMS_UVMON2',0,22,190,12,3
	.word	119152
	.byte	10
	.byte	'_Ifx_PMS',0,22,202,12,25,128,4,13
	.byte	'reserved_0',0
	.word	4753
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	117656
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	46745
	.byte	32,2,35,12,13
	.byte	'EVRSTAT',0
	.word	117325
	.byte	4,2,35,44,13
	.byte	'reserved_30',0
	.word	2933
	.byte	4,2,35,48,13
	.byte	'EVRADCSTAT',0
	.word	115478
	.byte	4,2,35,52,13
	.byte	'reserved_38',0
	.word	2933
	.byte	4,2,35,56,13
	.byte	'EVRRSTCON',0
	.word	115614
	.byte	4,2,35,60,13
	.byte	'reserved_40',0
	.word	2933
	.byte	4,2,35,64,13
	.byte	'EVRRSTSTAT',0
	.word	115681
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	2933
	.byte	4,2,35,72,13
	.byte	'EVRTRIM',0
	.word	117390
	.byte	4,2,35,76,13
	.byte	'EVRTRIMSTAT',0
	.word	117455
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	5093
	.byte	12,2,35,84,13
	.byte	'MONSTAT1',0
	.word	117984
	.byte	4,2,35,96,13
	.byte	'MONSTAT2',0
	.word	118050
	.byte	4,2,35,100,13
	.byte	'MONCTRL',0
	.word	117854
	.byte	4,2,35,104,13
	.byte	'reserved_6C',0
	.word	2933
	.byte	4,2,35,108,13
	.byte	'MONFILT',0
	.word	117919
	.byte	4,2,35,112,13
	.byte	'PMSIEN',0
	.word	118431
	.byte	4,2,35,116,13
	.byte	'UVMON',0
	.word	119089
	.byte	4,2,35,120,13
	.byte	'OVMON',0
	.word	118304
	.byte	4,2,35,124,13
	.byte	'UVMON2',0
	.word	119152
	.byte	4,3,35,128,1,13
	.byte	'OVMON2',0
	.word	118367
	.byte	4,3,35,132,1,13
	.byte	'HSMUVMON',0
	.word	117590
	.byte	4,3,35,136,1,13
	.byte	'HSMOVMON',0
	.word	117524
	.byte	4,3,35,140,1,13
	.byte	'EVR33CON',0
	.word	115412
	.byte	4,3,35,144,1,13
	.byte	'reserved_94',0
	.word	5093
	.byte	12,3,35,148,1,13
	.byte	'EVROSCCTRL',0
	.word	115546
	.byte	4,3,35,160,1,13
	.byte	'reserved_A4',0
	.word	25909
	.byte	16,3,35,164,1,13
	.byte	'PMSWCR0',0
	.word	118495
	.byte	4,3,35,180,1,13
	.byte	'PMSWCR2',0
	.word	118560
	.byte	4,3,35,184,1,13
	.byte	'reserved_BC',0
	.word	2933
	.byte	4,3,35,188,1,13
	.byte	'PMSWCR3',0
	.word	118625
	.byte	4,3,35,192,1,13
	.byte	'PMSWCR4',0
	.word	118690
	.byte	4,3,35,196,1,13
	.byte	'PMSWCR5',0
	.word	118755
	.byte	4,3,35,200,1,13
	.byte	'reserved_CC',0
	.word	4753
	.byte	8,3,35,204,1,13
	.byte	'PMSWSTAT',0
	.word	118820
	.byte	4,3,35,212,1,13
	.byte	'PMSWSTAT2',0
	.word	118886
	.byte	4,3,35,216,1,13
	.byte	'PMSWUTCNT',0
	.word	119022
	.byte	4,3,35,220,1,13
	.byte	'reserved_E0',0
	.word	4753
	.byte	8,3,35,224,1,13
	.byte	'PMSWSTATCLR',0
	.word	118953
	.byte	4,3,35,232,1,13
	.byte	'reserved_EC',0
	.word	25909
	.byte	16,3,35,236,1,13
	.byte	'EVRSDSTAT0',0
	.word	117257
	.byte	4,3,35,252,1,13
	.byte	'reserved_100',0
	.word	4753
	.byte	8,3,35,128,2,13
	.byte	'EVRSDCTRL0',0
	.word	116439
	.byte	4,3,35,136,2,13
	.byte	'EVRSDCTRL1',0
	.word	116507
	.byte	4,3,35,140,2,13
	.byte	'EVRSDCTRL2',0
	.word	116713
	.byte	4,3,35,144,2,13
	.byte	'EVRSDCTRL3',0
	.word	116781
	.byte	4,3,35,148,2,13
	.byte	'EVRSDCTRL4',0
	.word	116849
	.byte	4,3,35,152,2,13
	.byte	'EVRSDCTRL5',0
	.word	116917
	.byte	4,3,35,156,2,13
	.byte	'EVRSDCTRL6',0
	.word	116985
	.byte	4,3,35,160,2,13
	.byte	'EVRSDCTRL7',0
	.word	117053
	.byte	4,3,35,164,2,13
	.byte	'EVRSDCTRL8',0
	.word	117121
	.byte	4,3,35,168,2,13
	.byte	'EVRSDCTRL9',0
	.word	117189
	.byte	4,3,35,172,2,13
	.byte	'EVRSDCTRL10',0
	.word	116575
	.byte	4,3,35,176,2,13
	.byte	'EVRSDCTRL11',0
	.word	116644
	.byte	4,3,35,180,2,13
	.byte	'reserved_138',0
	.word	25909
	.byte	16,3,35,184,2,13
	.byte	'EVRSDCOEFF0',0
	.word	115749
	.byte	4,3,35,200,2,13
	.byte	'EVRSDCOEFF1',0
	.word	115818
	.byte	4,3,35,204,2,13
	.byte	'EVRSDCOEFF2',0
	.word	115887
	.byte	4,3,35,208,2,13
	.byte	'EVRSDCOEFF3',0
	.word	115956
	.byte	4,3,35,212,2,13
	.byte	'EVRSDCOEFF4',0
	.word	116025
	.byte	4,3,35,216,2,13
	.byte	'EVRSDCOEFF5',0
	.word	116094
	.byte	4,3,35,220,2,13
	.byte	'EVRSDCOEFF6',0
	.word	116163
	.byte	4,3,35,224,2,13
	.byte	'EVRSDCOEFF7',0
	.word	116232
	.byte	4,3,35,228,2,13
	.byte	'EVRSDCOEFF8',0
	.word	116301
	.byte	4,3,35,232,2,13
	.byte	'EVRSDCOEFF9',0
	.word	116370
	.byte	4,3,35,236,2,13
	.byte	'reserved_170',0
	.word	4124
	.byte	24,3,35,240,2,13
	.byte	'AG_STDBY0',0
	.word	115082
	.byte	4,3,35,136,3,13
	.byte	'AG_STDBY1',0
	.word	115149
	.byte	4,3,35,140,3,13
	.byte	'MONBISTSTAT',0
	.word	117785
	.byte	4,3,35,144,3,13
	.byte	'reserved_194',0
	.word	2933
	.byte	4,3,35,148,3,13
	.byte	'MONBISTCTRL',0
	.word	117716
	.byte	4,3,35,152,3,13
	.byte	'CMD_STDBY',0
	.word	115216
	.byte	4,3,35,156,3,13
	.byte	'reserved_1A0',0
	.word	2933
	.byte	4,3,35,160,3,13
	.byte	'AGFSP_STDBY0',0
	.word	114942
	.byte	4,3,35,164,3,13
	.byte	'AGFSP_STDBY1',0
	.word	115012
	.byte	4,3,35,168,3,13
	.byte	'reserved_1AC',0
	.word	76014
	.byte	20,3,35,172,3,13
	.byte	'DTSSTAT',0
	.word	115347
	.byte	4,3,35,192,3,13
	.byte	'reserved_1C4',0
	.word	2933
	.byte	4,3,35,196,3,13
	.byte	'DTSLIM',0
	.word	115283
	.byte	4,3,35,200,3,13
	.byte	'reserved_1CC',0
	.word	76014
	.byte	20,3,35,204,3,13
	.byte	'OTSS',0
	.word	118242
	.byte	4,3,35,224,3,13
	.byte	'OTSC0',0
	.word	118116
	.byte	4,3,35,228,3,13
	.byte	'OTSC1',0
	.word	118179
	.byte	4,3,35,232,3,13
	.byte	'reserved_1EC',0
	.word	5093
	.byte	12,3,35,236,3,13
	.byte	'ACCEN1',0
	.word	114878
	.byte	4,3,35,248,3,13
	.byte	'ACCEN0',0
	.word	114814
	.byte	4,3,35,252,3,0,14
	.word	119216
	.byte	30
	.byte	'Ifx_PMS',0,22,165,13,3
	.word	121024
	.byte	17,11,94,9,1,18
	.byte	'IfxPmsEvr_EnableInterrupt_ovswd',0,0,18
	.byte	'IfxPmsEvr_EnableInterrupt_uvswd',0,1,18
	.byte	'IfxPmsEvr_EnableInterrupt_ov33',0,2,18
	.byte	'IfxPmsEvr_EnableInterrupt_uv33',0,3,18
	.byte	'IfxPmsEvr_EnableInterrupt_ovc',0,4,18
	.byte	'IfxPmsEvr_EnableInterrupt_uvc',0,5,18
	.byte	'IfxPmsEvr_EnableInterrupt_ovpre',0,6,18
	.byte	'IfxPmsEvr_EnableInterrupt_uvpre',0,7,18
	.byte	'IfxPmsEvr_EnableInterrupt_ovddm',0,8,18
	.byte	'IfxPmsEvr_EnableInterrupt_uvddm',0,9,18
	.byte	'IfxPmsEvr_EnableInterrupt_ovsb',0,10,18
	.byte	'IfxPmsEvr_EnableInterrupt_uvsb',0,11,18
	.byte	'IfxPmsEvr_EnableInterrupt_evrcmod',0,16,18
	.byte	'IfxPmsEvr_EnableInterrupt_sdvok',0,17,18
	.byte	'IfxPmsEvr_EnableInterrupt_synclck',0,18,18
	.byte	'IfxPmsEvr_EnableInterrupt_swdlvl',0,19,18
	.byte	'IfxPmsEvr_EnableInterrupt_wutwkp',0,21,18
	.byte	'IfxPmsEvr_EnableInterrupt_esr0wkp',0,22,18
	.byte	'IfxPmsEvr_EnableInterrupt_esr1wkp',0,23,18
	.byte	'IfxPmsEvr_EnableInterrupt_pinawkp',0,24,18
	.byte	'IfxPmsEvr_EnableInterrupt_pinbwkp',0,25,18
	.byte	'IfxPmsEvr_EnableInterrupt_scrint',0,26,18
	.byte	'IfxPmsEvr_EnableInterrupt_scrrst',0,27,18
	.byte	'IfxPmsEvr_EnableInterrupt_screcc',0,28,18
	.byte	'IfxPmsEvr_EnableInterrupt_scrwdt',0,29,0,30
	.byte	'IfxPmsEvr_EnableInterrupt',0,11,121,3
	.word	121046
	.byte	17,11,125,9,1,18
	.byte	'IfxPmsEvr_EvrcMode_pwmMode',0,0,18
	.byte	'IfxPmsEvr_EvrcMode_lowPowerMode',0,1,18
	.byte	'IfxPmsEvr_EvrcMode_startupMode',0,2,18
	.byte	'IfxPmsEvr_EvrcMode_disableMode',0,3,0,30
	.byte	'IfxPmsEvr_EvrcMode',0,11,134,1,3
	.word	121946
	.byte	17,11,138,1,9,1,18
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_1',0,0,18
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_2',0,1,18
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_4',0,2,18
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_8',0,3,18
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_16',0,4,18
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_32',0,5,0,30
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor',0,11,146,1,3
	.word	122109
	.byte	17,11,151,1,9,1,18
	.byte	'IfxPmsEvr_OverVoltageMonitoring_inactive',0,0,18
	.byte	'IfxPmsEvr_OverVoltageMonitoring_lowToHighVoltageTransition',0,1,18
	.byte	'IfxPmsEvr_OverVoltageMonitoring_highToLowVoltageTransition',0,2,18
	.byte	'IfxPmsEvr_OverVoltageMonitoring_eitherDirectionVoltageTransition',0,3,0,30
	.byte	'IfxPmsEvr_OverVoltageMonitoring',0,11,157,1,3
	.word	122431
	.byte	17,11,162,1,9,1,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_0',0,0,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_1',0,1,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_2',0,2,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_3',0,3,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_4',0,4,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_5',0,5,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_6',0,6,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_7',0,7,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_8',0,8,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_9',0,9,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_10',0,10,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_11',0,11,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_12',0,12,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_13',0,13,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_14',0,14,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_15',0,15,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_16',0,16,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_17',0,17,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_18',0,18,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_19',0,19,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_20',0,20,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_21',0,21,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_22',0,22,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_23',0,23,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_24',0,24,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_25',0,25,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_26',0,26,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_27',0,27,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_28',0,28,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_29',0,29,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_30',0,30,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_31',0,31,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_32',0,32,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_33',0,33,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_34',0,34,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_35',0,35,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_36',0,36,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_37',0,37,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_38',0,38,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_39',0,39,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_40',0,40,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_41',0,41,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_42',0,42,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_43',0,43,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_44',0,44,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_45',0,45,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_46',0,46,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_47',0,47,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_48',0,48,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_49',0,49,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_50',0,50,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_51',0,51,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_52',0,52,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_53',0,53,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_54',0,54,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_55',0,55,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_56',0,56,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_57',0,57,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_58',0,58,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_59',0,59,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_60',0,60,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_61',0,61,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_62',0,62,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_63',0,63,0,30
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue',0,11,228,1,3
	.word	122711
	.byte	17,11,196,2,9,1,18
	.byte	'IfxPmsEvr_SupplyMode_evrc',0,0,18
	.byte	'IfxPmsEvr_SupplyMode_evr33',0,1,18
	.byte	'IfxPmsEvr_SupplyMode_swd',0,2,18
	.byte	'IfxPmsEvr_SupplyMode_evrpr',0,3,18
	.byte	'IfxPmsEvr_SupplyMode_vddm',0,4,18
	.byte	'IfxPmsEvr_SupplyMode_sb',0,5,0,30
	.byte	'IfxPmsEvr_SupplyMode',0,11,204,2,3
	.word	124987
	.byte	17,11,209,2,9,1,18
	.byte	'IfxPmsEvr_UnderVoltageMonitoring_inactive',0,0,18
	.byte	'IfxPmsEvr_UnderVoltageMonitoring_lowToHighVoltageTransition',0,1,18
	.byte	'IfxPmsEvr_UnderVoltageMonitoring_highToLowVoltageTransition',0,2,18
	.byte	'IfxPmsEvr_UnderVoltageMonitoring_eitherDirectionVoltageTransition',0,3,0,30
	.byte	'IfxPmsEvr_UnderVoltageMonitoring',0,11,215,2,3
	.word	125191
	.byte	14
	.word	464
	.byte	8
	.word	125476
	.byte	32,11,223,2,9,12,13
	.byte	'regAddr',0
	.word	125481
	.byte	4,2,35,0,13
	.byte	'value',0
	.word	9940
	.byte	4,2,35,4,13
	.byte	'mask',0
	.word	9940
	.byte	4,2,35,8,0,30
	.byte	'IfxPmsEvr_StepDownRegulatorRegConfig',0,11,228,2,3
	.word	125486
	.byte	20
	.word	125486
	.byte	8
	.word	125585
	.byte	32,11,230,2,9,12,13
	.byte	'numOfRegisters',0
	.word	715
	.byte	1,2,35,0,13
	.byte	'regConfig',0
	.word	125590
	.byte	4,2,35,4,13
	.byte	'waitInSecs',0
	.word	352
	.byte	4,2,35,8,0,30
	.byte	'IfxPmsEvr_initSequencePhase',0,11,235,2,3
	.word	125595
	.byte	32,11,237,2,9,8,13
	.byte	'numOfRegisters',0
	.word	715
	.byte	1,2,35,0,13
	.byte	'regConfig',0
	.word	125590
	.byte	4,2,35,4,0,30
	.byte	'IfxPmsEvr_checkRegConfig',0,11,241,2,3
	.word	125702
	.byte	20
	.word	125595
	.byte	8
	.word	125786
	.byte	32,11,243,2,9,8,13
	.byte	'numOfPhases',0
	.word	715
	.byte	1,2,35,0,13
	.byte	'phaseConfig',0
	.word	125791
	.byte	4,2,35,4,0,30
	.byte	'IfxPmsEvr_initSequence',0,11,247,2,3
	.word	125796
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L68:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	0,0,0,4,36,0,3,8,11,15,62,15,0,0,5,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,6,5,0,3,8,58
	.byte	15,59,15,57,15,73,19,0,0,7,21,0,54,15,39,12,0,0,8,15,0,73,19,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,11,1,0,0,20,38,0,73,19,0,0,21,46,1,3,8,54,15,39,12,63,12,60
	.byte	12,0,0,22,5,0,73,19,0,0,23,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,24,5,0,3,8,73,19,0,0,25,46,1,49
	.byte	19,0,0,26,5,0,49,19,0,0,27,29,1,49,19,0,0,28,11,0,49,19,0,0,29,46,0,3,8,58,15,59,15,57,15,54,15,39,12
	.byte	63,12,60,12,0,0,30,22,0,3,8,58,15,59,15,57,15,73,19,0,0,31,21,0,54,15,0,0,32,19,1,58,15,59,15,57,15,11
	.byte	15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L69:
	.word	.L326-.L325
.L325:
	.half	3
	.word	.L328-.L327
.L327:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms\\Std',0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_CompilersTasking.h',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxScuWdt.h',0,2,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxPort.h',0,4,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,2,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,5,0,0
	.byte	'IfxPmsEvr.h',0,6,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'Ifx_TypesReg.h',0,3,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxScu_cfg.h',0,5,0,0
	.byte	'IfxSmu_regdef.h',0,3,0,0
	.byte	'IfxPms_regdef.h',0,3,0,0,0
.L328:
.L326:
	.sdecl	'.debug_info',debug,cluster('Ifx_Ssw_getCpuWatchdogPassword')
	.sect	'.debug_info'
.L70:
	.word	324
	.half	3
	.word	.L71
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L73,.L72
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Ifx_Ssw_getCpuWatchdogPassword',0,1,48,16
	.word	.L195
	.byte	1,1,1
	.word	.L17,.L196,.L16
	.byte	4
	.byte	'watchdog',0,1,48,63
	.word	.L197,.L198
	.byte	5
	.word	.L17,.L196
	.byte	6
	.word	.L199,.L17,.L196
	.byte	7
	.word	.L200,.L201
	.byte	8
	.word	.L202,.L17,.L196
	.byte	9
	.byte	'password',0,2,203,2,20
	.word	.L195,.L203
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Ssw_getCpuWatchdogPassword')
	.sect	'.debug_abbrev'
.L71:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	29,1,49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,52,0,3,8,58,15,59,15,57,15,73
	.byte	16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Ssw_getCpuWatchdogPassword')
	.sect	'.debug_line'
.L72:
	.word	.L330-.L329
.L329:
	.half	3
	.word	.L332-.L331
.L331:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L332:
	.byte	4,2,5,33,7,0,5,2
	.word	.L17
	.byte	3,207,2,1,5,14,9
	.half	.L333-.L17
	.byte	3,1,1,4,1,5,1,3,226,125,1,7,9
	.half	.L74-.L333
	.byte	0,1,1
.L330:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Ssw_getCpuWatchdogPassword')
	.sect	'.debug_ranges'
.L73:
	.word	-1,.L17,0,.L74-.L17,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Ssw_getSafetyWatchdogPassword')
	.sect	'.debug_info'
.L75:
	.word	297
	.half	3
	.word	.L76
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L78,.L77
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Ifx_Ssw_getSafetyWatchdogPassword',0,1,54,16
	.word	.L195
	.byte	1,1,1
	.word	.L19,.L204,.L18
	.byte	4
	.word	.L19,.L204
	.byte	5
	.word	.L205,.L19,.L204
	.byte	6
	.word	.L206,.L19,.L204
	.byte	7
	.byte	'password',0,2,217,2,20
	.word	.L195,.L207
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Ssw_getSafetyWatchdogPassword')
	.sect	'.debug_abbrev'
.L76:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,1,49,16,17,1
	.byte	18,1,0,0,7,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Ssw_getSafetyWatchdogPassword')
	.sect	'.debug_line'
.L77:
	.word	.L335-.L334
.L334:
	.half	3
	.word	.L337-.L336
.L336:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L337:
	.byte	4,2,5,33,7,0,5,2
	.word	.L19
	.byte	3,222,2,1,5,14,9
	.half	.L338-.L19
	.byte	3,1,1,4,1,5,1,3,217,125,1,7,9
	.half	.L79-.L338
	.byte	0,1,1
.L335:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Ssw_getSafetyWatchdogPassword')
	.sect	'.debug_ranges'
.L78:
	.word	-1,.L19,0,.L79-.L19,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Ssw_clearCpuEndinit')
	.sect	'.debug_info'
.L80:
	.word	316
	.half	3
	.word	.L81
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L83,.L82
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Ifx_Ssw_clearCpuEndinit',0,1,60,6,1,1,1
	.word	.L21,.L208,.L20
	.byte	4
	.byte	'watchdog',0,1,60,46
	.word	.L197,.L209
	.byte	4
	.byte	'password',0,1,60,71
	.word	.L195,.L210
	.byte	5
	.word	.L21,.L208
	.byte	6
	.word	.L211,.L21,.L212
	.byte	7
	.word	.L213,.L214
	.byte	7
	.word	.L215,.L216
	.byte	8
	.word	.L217,.L218
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Ssw_clearCpuEndinit')
	.sect	'.debug_abbrev'
.L81:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Ssw_clearCpuEndinit')
	.sect	'.debug_line'
.L82:
	.word	.L340-.L339
.L339:
	.half	3
	.word	.L342-.L341
.L341:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L342:
	.byte	4,2,5,25,7,0,5,2
	.word	.L21
	.byte	3,231,2,1,5,48,9
	.half	.L343-.L21
	.byte	3,12,1,5,55,9
	.half	.L344-.L343
	.byte	3,1,1,4,1,5,1,9
	.half	.L212-.L344
	.byte	3,202,125,1,7,9
	.half	.L84-.L212
	.byte	0,1,1
.L340:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Ssw_clearCpuEndinit')
	.sect	'.debug_ranges'
.L83:
	.word	-1,.L21,0,.L84-.L21,0,0
.L218:
	.word	-1,.L21,0,.L212-.L21,-1,.L23,0,.L179-.L23,-1,.L25,0,.L189-.L25,-1,.L27,0,.L174-.L27,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Ssw_setCpuEndinit')
	.sect	'.debug_info'
.L85:
	.word	314
	.half	3
	.word	.L86
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L88,.L87
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Ifx_Ssw_setCpuEndinit',0,1,66,6,1,1,1
	.word	.L29,.L219,.L28
	.byte	4
	.byte	'watchdog',0,1,66,44
	.word	.L197,.L220
	.byte	4
	.byte	'password',0,1,66,69
	.word	.L195,.L221
	.byte	5
	.word	.L29,.L219
	.byte	6
	.word	.L222,.L29,.L223
	.byte	7
	.word	.L224,.L225
	.byte	7
	.word	.L226,.L227
	.byte	8
	.word	.L228,.L229
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Ssw_setCpuEndinit')
	.sect	'.debug_abbrev'
.L86:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Ssw_setCpuEndinit')
	.sect	'.debug_line'
.L87:
	.word	.L346-.L345
.L345:
	.half	3
	.word	.L348-.L347
.L347:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L348:
	.byte	4,2,5,25,7,0,5,2
	.word	.L29
	.byte	3,147,3,1,4,1,5,1,9
	.half	.L223-.L29
	.byte	3,177,125,1,7,9
	.half	.L89-.L223
	.byte	0,1,1
.L346:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Ssw_setCpuEndinit')
	.sect	'.debug_ranges'
.L88:
	.word	-1,.L29,0,.L89-.L29,0,0
.L229:
	.word	-1,.L29,0,.L223-.L29,-1,.L31,0,.L159-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Ssw_clearSafetyEndinit')
	.sect	'.debug_info'
.L90:
	.word	289
	.half	3
	.word	.L91
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L93,.L92
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Ifx_Ssw_clearSafetyEndinit',0,1,72,6,1,1,1
	.word	.L33,.L230,.L32
	.byte	4
	.byte	'password',0,1,72,48
	.word	.L195,.L231
	.byte	5
	.word	.L33,.L230
	.byte	6
	.word	.L232,.L33,.L233
	.byte	7
	.word	.L234,.L235
	.byte	8
	.word	.L236,.L237
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Ssw_clearSafetyEndinit')
	.sect	'.debug_abbrev'
.L91:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Ssw_clearSafetyEndinit')
	.sect	'.debug_line'
.L92:
	.word	.L350-.L349
.L349:
	.half	3
	.word	.L352-.L351
.L351:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L352:
	.byte	4,2,5,24,7,0,5,2
	.word	.L33
	.byte	3,253,2,1,5,47,9
	.half	.L353-.L33
	.byte	3,12,1,5,53,9
	.half	.L354-.L353
	.byte	3,1,1,4,1,5,1,9
	.half	.L233-.L354
	.byte	3,192,125,1,7,9
	.half	.L94-.L233
	.byte	0,1,1
.L350:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Ssw_clearSafetyEndinit')
	.sect	'.debug_ranges'
.L93:
	.word	-1,.L33,0,.L94-.L33,0,0
.L237:
	.word	-1,.L33,0,.L233-.L33,-1,.L35,0,.L184-.L35,-1,.L37,0,.L194-.L37,-1,.L39,0,.L169-.L39,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Ssw_setSafetyEndinit')
	.sect	'.debug_info'
.L95:
	.word	287
	.half	3
	.word	.L96
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L98,.L97
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Ifx_Ssw_setSafetyEndinit',0,1,78,6,1,1,1
	.word	.L41,.L238,.L40
	.byte	4
	.byte	'password',0,1,78,46
	.word	.L195,.L239
	.byte	5
	.word	.L41,.L238
	.byte	6
	.word	.L240,.L41,.L241
	.byte	7
	.word	.L242,.L243
	.byte	8
	.word	.L244,.L245
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Ssw_setSafetyEndinit')
	.sect	'.debug_abbrev'
.L96:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Ssw_setSafetyEndinit')
	.sect	'.debug_line'
.L97:
	.word	.L356-.L355
.L355:
	.half	3
	.word	.L358-.L357
.L357:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L358:
	.byte	4,2,5,24,7,0,5,2
	.word	.L41
	.byte	3,169,3,1,4,1,5,1,9
	.half	.L241-.L41
	.byte	3,167,125,1,7,9
	.half	.L99-.L241
	.byte	0,1,1
.L356:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Ssw_setSafetyEndinit')
	.sect	'.debug_ranges'
.L98:
	.word	-1,.L41,0,.L99-.L41,0,0
.L245:
	.word	-1,.L41,0,.L241-.L41,-1,.L43,0,.L154-.L43,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Ssw_disableCpuWatchdog')
	.sect	'.debug_info'
.L100:
	.word	321
	.half	3
	.word	.L101
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L103,.L102
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Ifx_Ssw_disableCpuWatchdog',0,1,96,6,1,1,1
	.word	.L49,.L246,.L48
	.byte	4
	.byte	'watchdog',0,1,96,49
	.word	.L197,.L247
	.byte	4
	.byte	'password',0,1,96,74
	.word	.L195,.L248
	.byte	5
	.word	.L249
	.byte	6
	.byte	'cpuIndex',0,1,99,21
	.word	.L250,.L251
	.byte	7
	.word	.L252,.L246
	.byte	6
	.byte	'wdt',0,1,103,21
	.word	.L197,.L253
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Ssw_disableCpuWatchdog')
	.sect	'.debug_abbrev'
.L101:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,11,1,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Ssw_disableCpuWatchdog')
	.sect	'.debug_line'
.L102:
	.word	.L360-.L359
.L359:
	.half	3
	.word	.L362-.L361
.L361:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0,0
.L362:
	.byte	5,6,7,0,5,2
	.word	.L49
	.byte	3,223,0,1,5,16,9
	.half	.L299-.L49
	.byte	3,4,1,5,86,9
	.half	.L296-.L299
	.byte	3,1,1,5,34,9
	.half	.L252-.L296
	.byte	3,4,1,5,32,9
	.half	.L300-.L252
	.byte	3,2,1,5,16,3,127,1,5,32,9
	.half	.L302-.L300
	.byte	3,1,1,5,20,9
	.half	.L303-.L302
	.byte	3,127,1,5,32,9
	.half	.L363-.L303
	.byte	3,1,1,5,1,7,9
	.half	.L104-.L363
	.byte	3,1,0,1,1
.L360:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Ssw_disableCpuWatchdog')
	.sect	'.debug_ranges'
.L103:
	.word	-1,.L49,0,.L104-.L49,0,0
.L249:
	.word	-1,.L49,0,.L246-.L49,-1,.L51,0,.L164-.L51,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Ssw_enableCpuWatchdog')
	.sect	'.debug_info'
.L105:
	.word	324
	.half	3
	.word	.L106
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L108,.L107
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Ifx_Ssw_enableCpuWatchdog',0,1,111,6,1,1,1
	.word	.L53,.L254,.L52
	.byte	4
	.byte	'watchdog',0,1,111,48
	.word	.L197,.L255
	.byte	4
	.byte	'password',0,1,111,73
	.word	.L195,.L256
	.byte	5
	.word	.L53,.L254
	.byte	6
	.byte	'cpuIndex',0,1,114,21
	.word	.L250,.L257
	.byte	5
	.word	.L258,.L254
	.byte	6
	.byte	'wdt',0,1,118,21
	.word	.L197,.L259
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Ssw_enableCpuWatchdog')
	.sect	'.debug_abbrev'
.L106:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Ssw_enableCpuWatchdog')
	.sect	'.debug_line'
.L107:
	.word	.L365-.L364
.L364:
	.half	3
	.word	.L367-.L366
.L366:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0,0
.L367:
	.byte	5,6,7,0,5,2
	.word	.L53
	.byte	3,238,0,1,5,16,9
	.half	.L305-.L53
	.byte	3,4,1,5,86,9
	.half	.L304-.L305
	.byte	3,1,1,5,34,9
	.half	.L258-.L304
	.byte	3,4,1,5,32,9
	.half	.L306-.L258
	.byte	3,2,1,5,16,3,127,1,5,32,9
	.half	.L307-.L306
	.byte	3,1,1,5,20,9
	.half	.L308-.L307
	.byte	3,127,1,5,32,9
	.half	.L368-.L308
	.byte	3,1,1,5,1,7,9
	.half	.L109-.L368
	.byte	3,1,0,1,1
.L365:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Ssw_enableCpuWatchdog')
	.sect	'.debug_ranges'
.L108:
	.word	-1,.L53,0,.L109-.L53,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Ssw_disableSafetyWatchdog')
	.sect	'.debug_info'
.L110:
	.word	259
	.half	3
	.word	.L111
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L113,.L112
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Ifx_Ssw_disableSafetyWatchdog',0,1,126,6,1,1,1
	.word	.L55,.L260,.L54
	.byte	4
	.byte	'password',0,1,126,51
	.word	.L195,.L261
	.byte	5
	.word	.L55,.L260
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Ssw_disableSafetyWatchdog')
	.sect	'.debug_abbrev'
.L111:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Ssw_disableSafetyWatchdog')
	.sect	'.debug_line'
.L112:
	.word	.L370-.L369
.L369:
	.half	3
	.word	.L372-.L371
.L371:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0,0
.L372:
	.byte	5,6,7,0,5,2
	.word	.L55
	.byte	3,253,0,1,5,32,3,2,1,5,20,9
	.half	.L309-.L55
	.byte	3,1,1,5,30,9
	.half	.L373-.L309
	.byte	3,1,1,5,20,9
	.half	.L310-.L373
	.byte	3,127,1,5,24,9
	.half	.L374-.L310
	.byte	1,5,30,9
	.half	.L375-.L374
	.byte	3,1,1,5,1,7,9
	.half	.L114-.L375
	.byte	3,1,0,1,1
.L370:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Ssw_disableSafetyWatchdog')
	.sect	'.debug_ranges'
.L113:
	.word	-1,.L55,0,.L114-.L55,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Ssw_enableSafetyWatchdog')
	.sect	'.debug_info'
.L115:
	.word	260
	.half	3
	.word	.L116
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L118,.L117
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Ifx_Ssw_enableSafetyWatchdog',0,1,134,1,6,1,1,1
	.word	.L57,.L262,.L56
	.byte	4
	.byte	'password',0,1,134,1,50
	.word	.L195,.L263
	.byte	5
	.word	.L57,.L262
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Ssw_enableSafetyWatchdog')
	.sect	'.debug_abbrev'
.L116:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Ssw_enableSafetyWatchdog')
	.sect	'.debug_line'
.L117:
	.word	.L377-.L376
.L376:
	.half	3
	.word	.L379-.L378
.L378:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0,0
.L379:
	.byte	5,6,7,0,5,2
	.word	.L57
	.byte	3,133,1,1,5,32,3,2,1,5,20,9
	.half	.L311-.L57
	.byte	3,1,1,5,30,9
	.half	.L380-.L311
	.byte	3,1,1,5,20,9
	.half	.L312-.L380
	.byte	3,127,1,5,24,9
	.half	.L381-.L312
	.byte	1,5,30,9
	.half	.L382-.L381
	.byte	3,1,1,5,1,7,9
	.half	.L119-.L382
	.byte	3,1,0,1,1
.L377:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Ssw_enableSafetyWatchdog')
	.sect	'.debug_ranges'
.L118:
	.word	-1,.L57,0,.L119-.L57,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Ssw_startCore')
	.sect	'.debug_info'
.L120:
	.word	303
	.half	3
	.word	.L121
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L123,.L122
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Ifx_Ssw_startCore',0,1,142,1,6,1,1,1
	.word	.L59,.L264,.L58
	.byte	4
	.byte	'cpu',0,1,142,1,33
	.word	.L265,.L266
	.byte	4
	.byte	'programCounter',0,1,142,1,51
	.word	.L250,.L267
	.byte	5
	.word	.L59,.L264
	.byte	5
	.word	.L268,.L264
	.byte	6
	.byte	'syscon',0,1,148,1,20
	.word	.L269,.L270
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Ssw_startCore')
	.sect	'.debug_abbrev'
.L121:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Ssw_startCore')
	.sect	'.debug_line'
.L122:
	.word	.L384-.L383
.L383:
	.half	3
	.word	.L386-.L385
.L385:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0,0
.L386:
	.byte	5,14,7,0,5,2
	.word	.L59
	.byte	3,144,1,1,5,49,9
	.half	.L387-.L59
	.byte	1,5,14,1,5,18,9
	.half	.L313-.L387
	.byte	1,5,17,9
	.half	.L268-.L313
	.byte	3,4,1,5,5,9
	.half	.L314-.L268
	.byte	3,2,1,5,24,7,9
	.half	.L388-.L314
	.byte	3,2,1,3,1,1,5,1,9
	.half	.L10-.L388
	.byte	3,3,1,7,9
	.half	.L124-.L10
	.byte	0,1,1
.L384:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Ssw_startCore')
	.sect	'.debug_ranges'
.L123:
	.word	-1,.L59,0,.L124-.L59,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Ssw_setCpu0Idle')
	.sect	'.debug_info'
.L125:
	.word	252
	.half	3
	.word	.L126
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L128,.L127
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Ifx_Ssw_setCpu0Idle',0,1,160,1,6,1,1,1
	.word	.L61,.L271,.L60
	.byte	4
	.word	.L61,.L271
	.byte	5
	.byte	'cpuWdtPw',0,1,163,1,21
	.word	.L195,.L272
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Ssw_setCpu0Idle')
	.sect	'.debug_abbrev'
.L126:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Ssw_setCpu0Idle')
	.sect	'.debug_line'
.L127:
	.word	.L390-.L389
.L389:
	.half	3
	.word	.L392-.L391
.L391:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0,0
.L392:
	.byte	5,50,7,0,5,2
	.word	.L61
	.byte	3,161,1,1,5,30,9
	.half	.L315-.L61
	.byte	3,1,1,5,34,3,1,1,5,17,9
	.half	.L316-.L315
	.byte	3,1,1,5,32,9
	.half	.L393-.L316
	.byte	3,1,1,5,17,9
	.half	.L318-.L393
	.byte	3,127,1,5,25,9
	.half	.L394-.L318
	.byte	1,5,32,9
	.half	.L395-.L394
	.byte	3,1,1,5,1,7,9
	.half	.L129-.L395
	.byte	3,1,0,1,1
.L390:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Ssw_setCpu0Idle')
	.sect	'.debug_ranges'
.L128:
	.word	-1,.L61,0,.L129-.L61,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Ssw_C_Init')
	.sect	'.debug_info'
.L130:
	.word	252
	.half	3
	.word	.L131
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L133,.L132
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Ifx_Ssw_C_Init',0,1,198,1,6,1,1,1
	.word	.L65,.L273,.L64
	.byte	4
	.word	.L65,.L273
	.byte	5
	.word	.L274,.L65,.L273
	.byte	6
	.word	.L275,.L65,.L273
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Ssw_C_Init')
	.sect	'.debug_abbrev'
.L131:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,0,49,16,17,1,18,1
	.byte	0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Ssw_C_Init')
	.sect	'.debug_line'
.L132:
	.word	.L397-.L396
.L396:
	.half	3
	.word	.L399-.L398
.L398:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L399:
	.byte	4,2,5,12,7,0,5,2
	.word	.L65
	.byte	3,184,1,1,4,1,5,1,7,9
	.half	.L134-.L65
	.byte	3,16,0,1,1
.L397:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Ssw_C_Init')
	.sect	'.debug_ranges'
.L133:
	.word	-1,.L65,0,.L134-.L65,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Ssw_getStmFrequency')
	.sect	'.debug_info'
.L135:
	.word	302
	.half	3
	.word	.L136
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L138,.L137
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Ifx_Ssw_getStmFrequency',0,1,170,1,7
	.word	.L276
	.byte	1,1,1
	.word	.L63,.L277,.L62
	.byte	4
	.word	.L63,.L277
	.byte	5
	.byte	'oscFreq',0,1,172,1,18
	.word	.L276,.L278
	.byte	5
	.byte	'sourcefreq',0,1,173,1,18
	.word	.L276,.L279
	.byte	5
	.byte	'insel',0,1,174,1,18
	.word	.L250,.L280
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Ssw_getStmFrequency')
	.sect	'.debug_abbrev'
.L136:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Ssw_getStmFrequency')
	.sect	'.debug_line'
.L137:
	.word	.L401-.L400
.L400:
	.half	3
	.word	.L403-.L402
.L402:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0,0
.L403:
	.byte	5,47,7,0,5,2
	.word	.L63
	.byte	3,173,1,1,5,31,9
	.half	.L404-.L63
	.byte	3,127,1,5,47,9
	.half	.L319-.L404
	.byte	3,1,1,5,5,9
	.half	.L321-.L319
	.byte	3,2,1,5,10,7,9
	.half	.L405-.L321
	.byte	3,4,1,5,19,7,9
	.half	.L11-.L405
	.byte	3,2,1,5,45,9
	.half	.L323-.L11
	.byte	1,5,17,9
	.half	.L12-.L323
	.byte	3,4,1,5,22,9
	.half	.L13-.L12
	.byte	3,3,1,5,5,9
	.half	.L406-.L13
	.byte	1,5,50,7,9
	.half	.L407-.L406
	.byte	3,2,1,5,56,9
	.half	.L408-.L407
	.byte	1,5,31,9
	.half	.L409-.L408
	.byte	1,5,40,3,1,1,5,46,9
	.half	.L410-.L409
	.byte	1,5,71,1,5,78,9
	.half	.L411-.L410
	.byte	1,5,52,9
	.half	.L412-.L411
	.byte	1,5,63,9
	.half	.L413-.L412
	.byte	3,127,1,5,38,9
	.half	.L14-.L413
	.byte	3,4,1,5,23,9
	.half	.L414-.L14
	.byte	1,5,1,3,1,1,7,9
	.half	.L139-.L414
	.byte	0,1,1
.L401:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Ssw_getStmFrequency')
	.sect	'.debug_ranges'
.L138:
	.word	-1,.L63,0,.L139-.L63,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Ssw_serviceCpuWatchdog')
	.sect	'.debug_info'
.L140:
	.word	323
	.half	3
	.word	.L141
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L143,.L142
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Ifx_Ssw_serviceCpuWatchdog',0,1,84,6,1,1,1
	.word	.L45,.L281,.L44
	.byte	4
	.byte	'watchdog',0,1,84,49
	.word	.L197,.L282
	.byte	4
	.byte	'password',0,1,84,74
	.word	.L195,.L283
	.byte	5
	.word	.L45,.L281
	.byte	6
	.word	.L222,.L45,.L284
	.byte	7
	.word	.L224,.L285
	.byte	7
	.word	.L226,.L286
	.byte	8
	.word	.L228,.L45,.L284
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Ssw_serviceCpuWatchdog')
	.sect	'.debug_abbrev'
.L141:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Ssw_serviceCpuWatchdog')
	.sect	'.debug_line'
.L142:
	.word	.L416-.L415
.L415:
	.half	3
	.word	.L418-.L417
.L417:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L418:
	.byte	4,2,5,25,7,0,5,2
	.word	.L45
	.byte	3,147,3,1,4,1,5,1,9
	.half	.L284-.L45
	.byte	3,195,125,1,7,9
	.half	.L144-.L284
	.byte	0,1,1
.L416:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Ssw_serviceCpuWatchdog')
	.sect	'.debug_ranges'
.L143:
	.word	-1,.L45,0,.L144-.L45,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Ssw_serviceSafetyWatchdog')
	.sect	'.debug_info'
.L145:
	.word	296
	.half	3
	.word	.L146
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L148,.L147
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Ifx_Ssw_serviceSafetyWatchdog',0,1,90,6,1,1,1
	.word	.L47,.L287,.L46
	.byte	4
	.byte	'password',0,1,90,51
	.word	.L195,.L288
	.byte	5
	.word	.L47,.L287
	.byte	6
	.word	.L240,.L47,.L289
	.byte	7
	.word	.L242,.L290
	.byte	8
	.word	.L244,.L47,.L289
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Ssw_serviceSafetyWatchdog')
	.sect	'.debug_abbrev'
.L146:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Ssw_serviceSafetyWatchdog')
	.sect	'.debug_line'
.L147:
	.word	.L420-.L419
.L419:
	.half	3
	.word	.L422-.L421
.L421:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L422:
	.byte	4,2,5,24,7,0,5,2
	.word	.L47
	.byte	3,169,3,1,4,1,5,1,9
	.half	.L289-.L47
	.byte	3,179,125,1,7,9
	.half	.L149-.L289
	.byte	0,1,1
.L420:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Ssw_serviceSafetyWatchdog')
	.sect	'.debug_ranges'
.L148:
	.word	-1,.L47,0,.L149-.L47,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_11')
	.sect	'.debug_info'
.L150:
	.word	208
	.half	3
	.word	.L151
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L153,.L152
	.byte	2
	.word	.L66
	.byte	3
	.byte	'.cocofun_11',0,1,78,6,1
	.word	.L43,.L154,.L42
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_11')
	.sect	'.debug_abbrev'
.L151:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_11')
	.sect	'.debug_line'
.L152:
	.word	.L424-.L423
.L423:
	.half	3
	.word	.L426-.L425
.L425:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L426:
	.byte	4,2,5,24,7,0,5,2
	.word	.L43
	.byte	3,169,3,1,5,47,9
	.half	.L427-.L43
	.byte	3,12,1,5,53,9
	.half	.L428-.L427
	.byte	3,1,1,5,18,9
	.half	.L429-.L428
	.byte	3,3,1,7,9
	.half	.L154-.L429
	.byte	0,1,1,4,2,5,24,0,5,2
	.word	.L43
	.byte	3,169,3,1,5,47,9
	.half	.L427-.L43
	.byte	3,12,1,5,53,9
	.half	.L428-.L427
	.byte	3,1,1,5,18,9
	.half	.L429-.L428
	.byte	3,3,1,7,9
	.half	.L154-.L429
	.byte	0,1,1
.L424:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_11')
	.sect	'.debug_ranges'
.L153:
	.word	-1,.L43,0,.L154-.L43,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_12')
	.sect	'.debug_info'
.L155:
	.word	208
	.half	3
	.word	.L156
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L158,.L157
	.byte	2
	.word	.L66
	.byte	3
	.byte	'.cocofun_12',0,1,66,6,1
	.word	.L31,.L159,.L30
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_12')
	.sect	'.debug_abbrev'
.L156:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_12')
	.sect	'.debug_line'
.L157:
	.word	.L431-.L430
.L430:
	.half	3
	.word	.L433-.L432
.L432:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L433:
	.byte	4,2,5,25,7,0,5,2
	.word	.L31
	.byte	3,147,3,1,5,48,9
	.half	.L293-.L31
	.byte	3,12,1,5,55,9
	.half	.L434-.L293
	.byte	3,1,1,5,19,9
	.half	.L294-.L434
	.byte	3,3,1,7,9
	.half	.L159-.L294
	.byte	0,1,1,4,2,5,25,0,5,2
	.word	.L31
	.byte	3,147,3,1,5,48,9
	.half	.L293-.L31
	.byte	3,12,1,5,55,9
	.half	.L434-.L293
	.byte	3,1,1,5,19,9
	.half	.L294-.L434
	.byte	3,3,1,7,9
	.half	.L159-.L294
	.byte	0,1,1
.L431:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_12')
	.sect	'.debug_ranges'
.L158:
	.word	-1,.L31,0,.L159-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_13')
	.sect	'.debug_info'
.L160:
	.word	208
	.half	3
	.word	.L161
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L163,.L162
	.byte	2
	.word	.L66
	.byte	3
	.byte	'.cocofun_13',0,1,96,6,1
	.word	.L51,.L164,.L50
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_13')
	.sect	'.debug_abbrev'
.L161:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_13')
	.sect	'.debug_line'
.L162:
	.word	.L436-.L435
.L435:
	.half	3
	.word	.L438-.L437
.L437:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L438:
	.byte	5,86,7,0,5,2
	.word	.L51
	.byte	3,228,0,1,4,2,5,18,9
	.half	.L439-.L51
	.byte	3,38,1,4,1,5,45,9
	.half	.L297-.L439
	.byte	3,92,1,5,34,9
	.half	.L298-.L297
	.byte	3,2,1,9
	.half	.L164-.L298
	.byte	0,1,1,5,86,0,5,2
	.word	.L51
	.byte	3,243,0,1,4,2,5,18,9
	.half	.L439-.L51
	.byte	3,23,1,4,1,5,45,9
	.half	.L297-.L439
	.byte	3,107,1,5,34,9
	.half	.L298-.L297
	.byte	3,2,1,9
	.half	.L301-.L298
	.byte	3,113,1,7,9
	.half	.L164-.L301
	.byte	0,1,1
.L436:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_13')
	.sect	'.debug_ranges'
.L163:
	.word	-1,.L51,0,.L164-.L51,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_14')
	.sect	'.debug_info'
.L165:
	.word	208
	.half	3
	.word	.L166
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L168,.L167
	.byte	2
	.word	.L66
	.byte	3
	.byte	'.cocofun_14',0,1,72,6,1
	.word	.L39,.L169,.L38
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_14')
	.sect	'.debug_abbrev'
.L166:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_14')
	.sect	'.debug_line'
.L167:
	.word	.L441-.L440
.L440:
	.half	3
	.word	.L443-.L442
.L442:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L443:
	.byte	4,2,5,24,7,0,5,2
	.word	.L39
	.byte	3,253,2,1,5,5,9
	.half	.L444-.L39
	.byte	1,5,51,7,9
	.half	.L445-.L444
	.byte	3,5,1,5,57,9
	.half	.L446-.L445
	.byte	3,1,1,5,25,9
	.half	.L447-.L446
	.byte	3,125,1,5,22,9
	.half	.L6-.L447
	.byte	1,5,47,9
	.half	.L448-.L6
	.byte	3,9,1,5,5,9
	.half	.L295-.L448
	.byte	3,116,1,5,47,9
	.half	.L449-.L295
	.byte	3,12,1,7,9
	.half	.L169-.L449
	.byte	0,1,1,4,2,5,24,0,5,2
	.word	.L39
	.byte	3,169,3,1,5,5,9
	.half	.L444-.L39
	.byte	1,5,51,7,9
	.half	.L445-.L444
	.byte	3,5,1,5,57,9
	.half	.L446-.L445
	.byte	3,85,1,5,25,9
	.half	.L447-.L446
	.byte	3,41,1,5,22,9
	.half	.L6-.L447
	.byte	1,5,47,9
	.half	.L448-.L6
	.byte	3,9,1,5,5,9
	.half	.L295-.L448
	.byte	3,116,1,5,47,9
	.half	.L449-.L295
	.byte	3,96,1,7,9
	.half	.L169-.L449
	.byte	0,1,1,4,2,5,24,0,5,2
	.word	.L39
	.byte	3,169,3,1,5,5,9
	.half	.L444-.L39
	.byte	1,5,51,7,9
	.half	.L445-.L444
	.byte	3,5,1,5,57,9
	.half	.L446-.L445
	.byte	3,85,1,5,25,9
	.half	.L447-.L446
	.byte	3,41,1,5,22,9
	.half	.L6-.L447
	.byte	1,5,47,9
	.half	.L448-.L6
	.byte	3,9,1,5,5,9
	.half	.L295-.L448
	.byte	3,116,1,5,47,9
	.half	.L449-.L295
	.byte	3,96,1,7,9
	.half	.L169-.L449
	.byte	0,1,1
.L441:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_14')
	.sect	'.debug_ranges'
.L168:
	.word	-1,.L39,0,.L169-.L39,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_15')
	.sect	'.debug_info'
.L170:
	.word	208
	.half	3
	.word	.L171
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L173,.L172
	.byte	2
	.word	.L66
	.byte	3
	.byte	'.cocofun_15',0,1,60,6,1
	.word	.L27,.L174,.L26
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_15')
	.sect	'.debug_abbrev'
.L171:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_15')
	.sect	'.debug_line'
.L172:
	.word	.L451-.L450
.L450:
	.half	3
	.word	.L453-.L452
.L452:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L453:
	.byte	4,2,5,25,7,0,5,2
	.word	.L27
	.byte	3,231,2,1,5,5,9
	.half	.L454-.L27
	.byte	1,5,52,7,9
	.half	.L455-.L454
	.byte	3,5,1,5,59,9
	.half	.L456-.L455
	.byte	3,1,1,5,48,9
	.half	.L4-.L456
	.byte	3,6,1,9
	.half	.L174-.L4
	.byte	0,1,1,4,2,5,25,0,5,2
	.word	.L27
	.byte	3,147,3,1,5,5,9
	.half	.L454-.L27
	.byte	1,5,52,7,9
	.half	.L455-.L454
	.byte	3,5,1,5,59,9
	.half	.L456-.L455
	.byte	3,85,1,5,48,9
	.half	.L4-.L456
	.byte	3,50,1,3,84,1,7,9
	.half	.L174-.L4
	.byte	0,1,1,4,2,5,25,0,5,2
	.word	.L27
	.byte	3,147,3,1,5,5,9
	.half	.L454-.L27
	.byte	1,5,52,7,9
	.half	.L455-.L454
	.byte	3,5,1,5,59,9
	.half	.L456-.L455
	.byte	3,85,1,5,48,9
	.half	.L4-.L456
	.byte	3,50,1,3,84,1,7,9
	.half	.L174-.L4
	.byte	0,1,1
.L451:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_15')
	.sect	'.debug_ranges'
.L173:
	.word	-1,.L27,0,.L174-.L27,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_16')
	.sect	'.debug_info'
.L175:
	.word	208
	.half	3
	.word	.L176
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L178,.L177
	.byte	2
	.word	.L66
	.byte	3
	.byte	'.cocofun_16',0,1,60,6,1
	.word	.L23,.L179,.L22
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_16')
	.sect	'.debug_abbrev'
.L176:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_16')
	.sect	'.debug_line'
.L177:
	.word	.L458-.L457
.L457:
	.half	3
	.word	.L460-.L459
.L459:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L460:
	.byte	4,2,5,55,7,0,5,2
	.word	.L23
	.byte	3,244,2,1,5,19,9
	.half	.L292-.L23
	.byte	3,3,1,9
	.half	.L179-.L292
	.byte	0,1,1,4,2,5,55,0,5,2
	.word	.L23
	.byte	3,244,2,1,5,19,9
	.half	.L292-.L23
	.byte	3,47,1,9
	.half	.L461-.L292
	.byte	3,84,1,7,9
	.half	.L179-.L461
	.byte	0,1,1,4,2,5,55,0,5,2
	.word	.L23
	.byte	3,244,2,1,5,19,9
	.half	.L292-.L23
	.byte	3,47,1,9
	.half	.L461-.L292
	.byte	3,84,1,7,9
	.half	.L179-.L461
	.byte	0,1,1
.L458:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_16')
	.sect	'.debug_ranges'
.L178:
	.word	-1,.L23,0,.L179-.L23,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_17')
	.sect	'.debug_info'
.L180:
	.word	208
	.half	3
	.word	.L181
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L183,.L182
	.byte	2
	.word	.L66
	.byte	3
	.byte	'.cocofun_17',0,1,72,6,1
	.word	.L35,.L184,.L34
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_17')
	.sect	'.debug_abbrev'
.L181:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_17')
	.sect	'.debug_line'
.L182:
	.word	.L463-.L462
.L462:
	.half	3
	.word	.L465-.L464
.L464:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L465:
	.byte	4,2,5,53,7,0,5,2
	.word	.L35
	.byte	3,138,3,1,5,21,9
	.half	.L466-.L35
	.byte	3,125,1,5,18,9
	.half	.L467-.L466
	.byte	3,6,1,9
	.half	.L184-.L467
	.byte	0,1,1,4,2,5,53,0,5,2
	.word	.L35
	.byte	3,138,3,1,5,21,9
	.half	.L466-.L35
	.byte	3,41,1,5,18,9
	.half	.L467-.L466
	.byte	3,6,1,9
	.half	.L468-.L467
	.byte	3,84,1,7,9
	.half	.L184-.L468
	.byte	0,1,1,4,2,5,53,0,5,2
	.word	.L35
	.byte	3,138,3,1,5,21,9
	.half	.L466-.L35
	.byte	3,41,1,5,18,9
	.half	.L467-.L466
	.byte	3,6,1,9
	.half	.L468-.L467
	.byte	3,84,1,7,9
	.half	.L184-.L468
	.byte	0,1,1
.L463:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_17')
	.sect	'.debug_ranges'
.L183:
	.word	-1,.L35,0,.L184-.L35,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_18')
	.sect	'.debug_info'
.L185:
	.word	208
	.half	3
	.word	.L186
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L188,.L187
	.byte	2
	.word	.L66
	.byte	3
	.byte	'.cocofun_18',0,1,60,6,1
	.word	.L25,.L189,.L24
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_18')
	.sect	'.debug_abbrev'
.L186:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_18')
	.sect	'.debug_line'
.L187:
	.word	.L470-.L469
.L469:
	.half	3
	.word	.L472-.L471
.L471:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L472:
	.byte	4,2,5,55,7,0,5,2
	.word	.L25
	.byte	3,244,2,1,5,60,9
	.half	.L473-.L25
	.byte	1,5,79,9
	.half	.L474-.L473
	.byte	3,127,1,5,22,3,126,1,9
	.half	.L189-.L474
	.byte	0,1,1,4,2,5,55,0,5,2
	.word	.L25
	.byte	3,160,3,1,5,60,9
	.half	.L473-.L25
	.byte	1,5,79,9
	.half	.L474-.L473
	.byte	3,127,1,5,22,3,126,1,9
	.half	.L291-.L474
	.byte	3,84,1,7,9
	.half	.L189-.L291
	.byte	0,1,1,4,2,5,55,0,5,2
	.word	.L25
	.byte	3,160,3,1,5,60,9
	.half	.L473-.L25
	.byte	1,5,79,9
	.half	.L474-.L473
	.byte	3,127,1,5,22,3,126,1,9
	.half	.L291-.L474
	.byte	3,84,1,7,9
	.half	.L189-.L291
	.byte	0,1,1,4,2,5,59,0,5,2
	.word	.L25
	.byte	3,237,2,1,5,64,9
	.half	.L473-.L25
	.byte	1,5,83,9
	.half	.L474-.L473
	.byte	3,127,1,5,26,3,126,1,5,22,9
	.half	.L291-.L474
	.byte	3,7,1,7,9
	.half	.L189-.L291
	.byte	0,1,1,4,2,5,59,0,5,2
	.word	.L25
	.byte	3,153,3,1,5,64,9
	.half	.L473-.L25
	.byte	1,5,83,9
	.half	.L474-.L473
	.byte	3,127,1,5,26,3,126,1,5,22,9
	.half	.L291-.L474
	.byte	3,91,1,7,9
	.half	.L189-.L291
	.byte	0,1,1,4,2,5,59,0,5,2
	.word	.L25
	.byte	3,153,3,1,5,64,9
	.half	.L473-.L25
	.byte	1,5,83,9
	.half	.L474-.L473
	.byte	3,127,1,5,26,3,126,1,5,22,9
	.half	.L291-.L474
	.byte	3,91,1,7,9
	.half	.L189-.L291
	.byte	0,1,1
.L470:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_18')
	.sect	'.debug_ranges'
.L188:
	.word	-1,.L25,0,.L189-.L25,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_19')
	.sect	'.debug_info'
.L190:
	.word	208
	.half	3
	.word	.L191
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L193,.L192
	.byte	2
	.word	.L66
	.byte	3
	.byte	'.cocofun_19',0,1,72,6,1
	.word	.L37,.L194,.L36
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_19')
	.sect	'.debug_abbrev'
.L191:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_19')
	.sect	'.debug_line'
.L192:
	.word	.L476-.L475
.L475:
	.half	3
	.word	.L478-.L477
.L477:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L478:
	.byte	4,2,5,53,7,0,5,2
	.word	.L37
	.byte	3,138,3,1,5,58,9
	.half	.L479-.L37
	.byte	1,5,76,9
	.half	.L480-.L479
	.byte	3,127,1,9
	.half	.L194-.L480
	.byte	0,1,1,4,2,5,53,0,5,2
	.word	.L37
	.byte	3,182,3,1,5,58,9
	.half	.L479-.L37
	.byte	1,5,76,9
	.half	.L480-.L479
	.byte	3,127,1,3,84,1,7,9
	.half	.L194-.L480
	.byte	0,1,1,4,2,5,53,0,5,2
	.word	.L37
	.byte	3,182,3,1,5,58,9
	.half	.L479-.L37
	.byte	1,5,76,9
	.half	.L480-.L479
	.byte	3,127,1,3,84,1,7,9
	.half	.L194-.L480
	.byte	0,1,1,4,2,5,57,0,5,2
	.word	.L37
	.byte	3,131,3,1,5,62,9
	.half	.L479-.L37
	.byte	1,5,80,9
	.half	.L480-.L479
	.byte	3,127,1,5,76,3,7,1,7,9
	.half	.L194-.L480
	.byte	0,1,1,4,2,5,57,0,5,2
	.word	.L37
	.byte	3,175,3,1,5,62,9
	.half	.L479-.L37
	.byte	1,5,80,9
	.half	.L480-.L479
	.byte	3,127,1,5,76,3,91,1,7,9
	.half	.L194-.L480
	.byte	0,1,1,4,2,5,57,0,5,2
	.word	.L37
	.byte	3,175,3,1,5,62,9
	.half	.L479-.L37
	.byte	1,5,80,9
	.half	.L480-.L479
	.byte	3,127,1,5,76,3,91,1,7,9
	.half	.L194-.L480
	.byte	0,1,1
.L476:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_19')
	.sect	'.debug_ranges'
.L193:
	.word	-1,.L37,0,.L194-.L37,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_11')
	.sect	'.debug_loc'
.L42:
	.word	-1,.L43,0,.L154-.L43
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_12')
	.sect	'.debug_loc'
.L30:
	.word	-1,.L31,0,.L159-.L31
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_13')
	.sect	'.debug_loc'
.L50:
	.word	-1,.L51,0,.L164-.L51
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_14')
	.sect	'.debug_loc'
.L38:
	.word	-1,.L39,0,.L169-.L39
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_15')
	.sect	'.debug_loc'
.L26:
	.word	-1,.L27,0,.L174-.L27
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_16')
	.sect	'.debug_loc'
.L22:
	.word	-1,.L23,0,.L179-.L23
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_17')
	.sect	'.debug_loc'
.L34:
	.word	-1,.L35,0,.L184-.L35
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_18')
	.sect	'.debug_loc'
.L24:
	.word	-1,.L25,0,.L189-.L25
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_19')
	.sect	'.debug_loc'
.L36:
	.word	-1,.L37,0,.L194-.L37
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Ssw_C_Init')
	.sect	'.debug_loc'
.L64:
	.word	-1,.L65,0,.L273-.L65
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Ssw_clearCpuEndinit')
	.sect	'.debug_loc'
.L20:
	.word	-1,.L21,0,.L208-.L21
	.half	2
	.byte	138,0
	.word	0,0
.L210:
	.word	-1,.L21,.L25-.L21,.L189-.L21
	.half	1
	.byte	84
	.word	.L27-.L21,.L174-.L21
	.half	1
	.byte	84
	.word	0,0
.L216:
	.word	0,0
.L209:
	.word	-1,.L21,.L25-.L21,.L189-.L21
	.half	1
	.byte	100
	.word	.L27-.L21,.L174-.L21
	.half	1
	.byte	100
	.word	.L25-.L21,.L291-.L21
	.half	1
	.byte	100
	.word	.L292-.L21,.L179-.L21
	.half	1
	.byte	100
	.word	.L212-.L21,.L208-.L21
	.half	1
	.byte	100
	.word	0,0
.L214:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Ssw_clearSafetyEndinit')
	.sect	'.debug_loc'
.L32:
	.word	-1,.L33,0,.L230-.L33
	.half	2
	.byte	138,0
	.word	0,0
.L231:
	.word	-1,.L33,.L37-.L33,.L194-.L33
	.half	1
	.byte	84
	.word	.L39-.L33,.L295-.L33
	.half	1
	.byte	84
	.word	0,0
.L235:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Ssw_disableCpuWatchdog')
	.sect	'.debug_loc'
.L48:
	.word	-1,.L49,0,.L246-.L49
	.half	2
	.byte	138,0
	.word	0,0
.L251:
	.word	-1,.L49,.L296-.L49,.L252-.L49
	.half	1
	.byte	95
	.word	.L51-.L49,.L297-.L49
	.half	1
	.byte	95
	.word	0,0
.L248:
	.word	-1,.L49,.L51-.L49,.L164-.L49
	.half	1
	.byte	88
	.word	.L51-.L49,.L164-.L49
	.half	1
	.byte	84
	.word	.L299-.L49,.L246-.L49
	.half	1
	.byte	88
	.word	0,.L300-.L49
	.half	1
	.byte	84
	.word	.L302-.L49,.L246-.L49
	.half	1
	.byte	84
	.word	0,0
.L247:
	.word	-1,.L49,0,.L252-.L49
	.half	1
	.byte	100
	.word	.L51-.L49,.L164-.L49
	.half	1
	.byte	100
	.word	0,0
.L253:
	.word	-1,.L49,.L298-.L49,.L164-.L49
	.half	1
	.byte	111
	.word	.L301-.L49,.L164-.L49
	.half	1
	.byte	100
	.word	.L252-.L49,.L300-.L49
	.half	1
	.byte	100
	.word	.L252-.L49,.L246-.L49
	.half	1
	.byte	111
	.word	.L303-.L49,.L246-.L49
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Ssw_disableSafetyWatchdog')
	.sect	'.debug_loc'
.L54:
	.word	-1,.L55,0,.L260-.L55
	.half	2
	.byte	138,0
	.word	0,0
.L261:
	.word	-1,.L55,0,.L309-.L55
	.half	1
	.byte	84
	.word	.L309-.L55,.L260-.L55
	.half	1
	.byte	88
	.word	.L310-.L55,.L260-.L55
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Ssw_enableCpuWatchdog')
	.sect	'.debug_loc'
.L52:
	.word	-1,.L53,0,.L254-.L53
	.half	2
	.byte	138,0
	.word	0,0
.L257:
	.word	-1,.L53,.L304-.L53,.L258-.L53
	.half	1
	.byte	95
	.word	.L51-.L53,.L297-.L53
	.half	1
	.byte	95
	.word	0,0
.L256:
	.word	-1,.L53,.L51-.L53,.L164-.L53
	.half	1
	.byte	88
	.word	.L51-.L53,.L164-.L53
	.half	1
	.byte	84
	.word	.L305-.L53,.L254-.L53
	.half	1
	.byte	88
	.word	0,.L306-.L53
	.half	1
	.byte	84
	.word	.L307-.L53,.L254-.L53
	.half	1
	.byte	84
	.word	0,0
.L255:
	.word	-1,.L53,0,.L258-.L53
	.half	1
	.byte	100
	.word	.L51-.L53,.L164-.L53
	.half	1
	.byte	100
	.word	0,0
.L259:
	.word	-1,.L53,.L298-.L53,.L164-.L53
	.half	1
	.byte	111
	.word	.L301-.L53,.L164-.L53
	.half	1
	.byte	100
	.word	.L258-.L53,.L306-.L53
	.half	1
	.byte	100
	.word	.L258-.L53,.L254-.L53
	.half	1
	.byte	111
	.word	.L308-.L53,.L254-.L53
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Ssw_enableSafetyWatchdog')
	.sect	'.debug_loc'
.L56:
	.word	-1,.L57,0,.L262-.L57
	.half	2
	.byte	138,0
	.word	0,0
.L263:
	.word	-1,.L57,0,.L311-.L57
	.half	1
	.byte	84
	.word	.L311-.L57,.L262-.L57
	.half	1
	.byte	95
	.word	.L312-.L57,.L262-.L57
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Ssw_getCpuWatchdogPassword')
	.sect	'.debug_loc'
.L16:
	.word	-1,.L17,0,.L196-.L17
	.half	2
	.byte	138,0
	.word	0,0
.L203:
	.word	0,0
.L198:
	.word	-1,.L17,0,.L196-.L17
	.half	1
	.byte	100
	.word	0,0
.L201:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Ssw_getSafetyWatchdogPassword')
	.sect	'.debug_loc'
.L18:
	.word	-1,.L19,0,.L204-.L19
	.half	2
	.byte	138,0
	.word	0,0
.L207:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Ssw_getStmFrequency')
	.sect	'.debug_loc'
.L62:
	.word	-1,.L63,0,.L277-.L63
	.half	2
	.byte	138,0
	.word	0,0
.L280:
	.word	-1,.L63,.L321-.L63,.L322-.L63
	.half	1
	.byte	95
	.word	0,0
.L278:
	.word	-1,.L63,.L323-.L63,.L12-.L63
	.half	1
	.byte	81
	.word	.L13-.L63,.L324-.L63
	.half	1
	.byte	81
	.word	0,0
.L279:
	.word	-1,.L63,.L319-.L63,.L320-.L63
	.half	5
	.byte	144,32,157,32,0
	.word	.L14-.L63,.L277-.L63
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Ssw_serviceCpuWatchdog')
	.sect	'.debug_loc'
.L44:
	.word	-1,.L45,0,.L281-.L45
	.half	2
	.byte	138,0
	.word	0,0
.L283:
	.word	-1,.L45,.L25-.L45,.L189-.L45
	.half	1
	.byte	84
	.word	.L27-.L45,.L174-.L45
	.half	1
	.byte	84
	.word	0,0
.L286:
	.word	0,0
.L282:
	.word	-1,.L45,.L25-.L45,.L189-.L45
	.half	1
	.byte	100
	.word	.L27-.L45,.L174-.L45
	.half	1
	.byte	100
	.word	.L293-.L45,.L294-.L45
	.half	1
	.byte	100
	.word	.L292-.L45,.L179-.L45
	.half	1
	.byte	100
	.word	.L284-.L45,.L281-.L45
	.half	1
	.byte	100
	.word	0,0
.L285:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Ssw_serviceSafetyWatchdog')
	.sect	'.debug_loc'
.L46:
	.word	-1,.L47,0,.L287-.L47
	.half	2
	.byte	138,0
	.word	0,0
.L288:
	.word	-1,.L47,.L37-.L47,.L194-.L47
	.half	1
	.byte	84
	.word	.L39-.L47,.L295-.L47
	.half	1
	.byte	84
	.word	0,0
.L290:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Ssw_setCpu0Idle')
	.sect	'.debug_loc'
.L60:
	.word	-1,.L61,0,.L271-.L61
	.half	2
	.byte	138,0
	.word	0,0
.L272:
	.word	-1,.L61,.L315-.L61,.L316-.L61
	.half	1
	.byte	82
	.word	.L317-.L61,.L271-.L61
	.half	1
	.byte	95
	.word	.L318-.L61,.L271-.L61
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Ssw_setCpuEndinit')
	.sect	'.debug_loc'
.L28:
	.word	-1,.L29,0,.L219-.L29
	.half	2
	.byte	138,0
	.word	0,0
.L221:
	.word	-1,.L29,.L25-.L29,.L189-.L29
	.half	1
	.byte	84
	.word	.L27-.L29,.L174-.L29
	.half	1
	.byte	84
	.word	0,0
.L227:
	.word	0,0
.L220:
	.word	-1,.L29,.L25-.L29,.L189-.L29
	.half	1
	.byte	100
	.word	.L27-.L29,.L174-.L29
	.half	1
	.byte	100
	.word	.L293-.L29,.L294-.L29
	.half	1
	.byte	100
	.word	.L292-.L29,.L179-.L29
	.half	1
	.byte	100
	.word	.L223-.L29,.L219-.L29
	.half	1
	.byte	100
	.word	0,0
.L225:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Ssw_setSafetyEndinit')
	.sect	'.debug_loc'
.L40:
	.word	-1,.L41,0,.L238-.L41
	.half	2
	.byte	138,0
	.word	0,0
.L239:
	.word	-1,.L41,.L37-.L41,.L194-.L41
	.half	1
	.byte	84
	.word	.L39-.L41,.L295-.L41
	.half	1
	.byte	84
	.word	0,0
.L243:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Ssw_startCore')
	.sect	'.debug_loc'
.L58:
	.word	-1,.L59,0,.L264-.L59
	.half	2
	.byte	138,0
	.word	0,0
.L266:
	.word	-1,.L59,0,.L264-.L59
	.half	1
	.byte	100
	.word	0,0
.L267:
	.word	-1,.L59,0,.L313-.L59
	.half	1
	.byte	84
	.word	0,0
.L270:
	.word	-1,.L59,.L314-.L59,.L10-.L59
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L481:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Ifx_Ssw_getCpuWatchdogPassword')
	.sect	'.debug_frame'
	.word	24
	.word	.L481,.L17,.L196-.L17
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Ssw_getSafetyWatchdogPassword')
	.sect	'.debug_frame'
	.word	24
	.word	.L481,.L19,.L204-.L19
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Ifx_Ssw_clearCpuEndinit')
	.sect	'.debug_frame'
	.word	24
	.word	.L481,.L21,.L208-.L21
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Ssw_setCpuEndinit')
	.sect	'.debug_frame'
	.word	24
	.word	.L481,.L29,.L219-.L29
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Ssw_clearSafetyEndinit')
	.sect	'.debug_frame'
	.word	24
	.word	.L481,.L33,.L230-.L33
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Ssw_setSafetyEndinit')
	.sect	'.debug_frame'
	.word	24
	.word	.L481,.L41,.L238-.L41
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Ssw_serviceCpuWatchdog')
	.sect	'.debug_frame'
	.word	24
	.word	.L481,.L45,.L281-.L45
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Ssw_serviceSafetyWatchdog')
	.sect	'.debug_frame'
	.word	24
	.word	.L481,.L47,.L287-.L47
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Ssw_disableCpuWatchdog')
	.sect	'.debug_frame'
	.word	12
	.word	.L481,.L49,.L246-.L49
	.sdecl	'.debug_frame',debug,cluster('Ifx_Ssw_enableCpuWatchdog')
	.sect	'.debug_frame'
	.word	12
	.word	.L481,.L53,.L254-.L53
	.sdecl	'.debug_frame',debug,cluster('Ifx_Ssw_disableSafetyWatchdog')
	.sect	'.debug_frame'
	.word	12
	.word	.L481,.L55,.L260-.L55
	.sdecl	'.debug_frame',debug,cluster('Ifx_Ssw_enableSafetyWatchdog')
	.sect	'.debug_frame'
	.word	12
	.word	.L481,.L57,.L262-.L57
	.sdecl	'.debug_frame',debug,cluster('Ifx_Ssw_startCore')
	.sect	'.debug_frame'
	.word	24
	.word	.L481,.L59,.L264-.L59
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Ssw_setCpu0Idle')
	.sect	'.debug_frame'
	.word	12
	.word	.L481,.L61,.L271-.L61
	.sdecl	'.debug_frame',debug,cluster('Ifx_Ssw_getStmFrequency')
	.sect	'.debug_frame'
	.word	24
	.word	.L481,.L63,.L277-.L63
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Ssw_C_Init')
	.sect	'.debug_frame'
	.word	12
	.word	.L481,.L65,.L273-.L65
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L482:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_16')
	.sect	'.debug_frame'
	.word	24
	.word	.L482,.L23,.L179-.L23
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_18')
	.sect	'.debug_frame'
	.word	24
	.word	.L482,.L25,.L189-.L25
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_15')
	.sect	'.debug_frame'
	.word	24
	.word	.L482,.L27,.L174-.L27
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_12')
	.sect	'.debug_frame'
	.word	24
	.word	.L482,.L31,.L159-.L31
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_17')
	.sect	'.debug_frame'
	.word	24
	.word	.L482,.L35,.L184-.L35
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_19')
	.sect	'.debug_frame'
	.word	24
	.word	.L482,.L37,.L194-.L37
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_14')
	.sect	'.debug_frame'
	.word	24
	.word	.L482,.L39,.L169-.L39
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_11')
	.sect	'.debug_frame'
	.word	24
	.word	.L482,.L43,.L154-.L43
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_13')
	.sect	'.debug_frame'
	.word	24
	.word	.L482,.L51,.L164-.L51
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   199  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   200      Ifx_Ssw_C_InitInline();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   201  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   202  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   203  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   204  #if defined(__TASKING__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   205  #pragma optimize RL
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   206  #elif defined(__HIGHTEC__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   207  #pragma GCC optimize "O2"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   208  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   210  #if (IFX_CFG_SSW_ENABLE_MONBIST == 1U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   211  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   212  static void Ifx_Ssw_MonbistCheck(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   213  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   214  void Ifx_Ssw_Monbist(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   215  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   216       uint32 timeout;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   217  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   218       /* Disable the write-protection for registers */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   219      IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   220      /* Enable SMU Standby */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   221      PMS_CMD_STDBY.U    = 0x40000001U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   222      /* clears the TSTEN, TSTRUN, TSTDONE, TSTOK, SMUERR and PMSERR flags */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   223      PMS_MONBISTCTRL.U  = 0x40000002U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   224      /* Clear the filter */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   225      PMS_MONFILT.U = 0x20000000U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   226      /* Wait until register is updated */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   227      timeout = 0x1000U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   228      while ((PMS_MONFILT.U != 0x20000000U) && (timeout--))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   229      {};
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   230      /* Activate under voltage and over voltage alarms */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   231      PMS_MONCTRL.U = 0xa5a5a5U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   232      /* Wait until register is updated */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   233      timeout = 0x1000U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   234      while ((PMS_MONCTRL.U != 0xa5a5a5U) && (timeout--))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   235      {};
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   236      /* corresponding Over-voltage and Under-voltage interrupts are disabled */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   237      PMS_PMSIEN.U &= ~0x00000FFFU;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   238      /* Fault Signal reaction on alarms are disabled */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   239      PMS_AGFSP_STDBY0.U = 0x40000000U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   240      PMS_AGFSP_STDBY1.U = 0x40000000U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   241      /* FSP0EN and FSP1EN configuration bits are cleared to avoid spurious Error pin activation */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   242      PMS_CMD_STDBY.U |= 0x40000000U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   243      PMS_CMD_STDBY.U |= 0x40000008U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   244      /* Reset the MONFILT register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   245      PMS_MONFILT.U = 0x00000000U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   246      /* Start MONBIST test */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   247      PMS_MONBISTCTRL.U = 0x40000001U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   248  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   249      /* Wait until MONBIST execution is done */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   250      timeout = 0x1000U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   251      while (((PMS_MONBISTSTAT.B.TSTRUN == 1) || (PMS_MONBISTSTAT.B.TSTDONE == 0)) && (timeout--))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   252      {};
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   253  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   254      /* Disable SMU Standby */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   255      PMS_CMD_STDBY.U    = 0x40000000U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   256      IFX_CFG_SSW_SET_SAFETY_ENDINIT();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   257  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   258      Ifx_Ssw_jumpToFunction(&Ifx_Ssw_MonbistCheck);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   259  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   260  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   261  void Ifx_Ssw_MonbistCheck(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   262  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   263      /* Check for MONBIST error state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   264      if ((PMS_MONBISTSTAT.B.TSTOK == 0U) || (PMS_MONBISTSTAT.B.SMUERR == 1U) || (PMS_MONBISTSTAT.B.PMSERR == 1U))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   265      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   266          __debug();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   267      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   269      Ifx_Ssw_jumpBackToLink();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   270  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   271  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   272  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   273  #if (IFX_CFG_SSW_ENABLE_EMEM_INIT == 1U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   274  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   275  void Ifx_Ssw_UnlockEmem(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   276  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   277      if(SCU_CHIPID.B.EEA == 1U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   278      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   279        /* Enable EMEM clock */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   280        EMEM_CLC.U = 0x00000000U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   281        /* sync access */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   282        EMEM_CLC.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   283        /* Disable Lock */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   284        EMEM_SBRCTR.U = 0x00000002U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   285        EMEM_SBRCTR.U = 0x00000006U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   286        EMEM_SBRCTR.U = 0x0000000EU;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   287      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   288  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   289  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   290  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   291  #if defined(__TASKING__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   292  #pragma endoptimize
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   293  #elif defined(__HIGHTEC__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   294  #pragma GCC reset_options
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.c	   295  #endif

	; Module end
