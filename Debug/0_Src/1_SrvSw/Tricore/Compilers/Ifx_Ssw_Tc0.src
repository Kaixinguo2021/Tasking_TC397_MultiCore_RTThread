	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\1_SrvSw\\Tricore\\Compilers\\.Ifx_Ssw_Tc0.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include\\libc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.src ..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c'

	
$TC162
	.sdecl	'.zrodata.Ifx_Ssw_Tc0..2.cnt',data,rom
	.sect	'.zrodata.Ifx_Ssw_Tc0..2.cnt'
	.align	2
.2.cnt:	.type	object
	.size	.2.cnt,4
	.word	-268213684
	

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	     2   * \file Ifx_Ssw_Tc0.c
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	     3   * \brief Startup Software for Core0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    42  /*******************************************************************************
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    43  **                      Includes                                              **
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    44  *******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    45  #include "Ifx_Cfg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    46  #include "Ifx_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    47  #include "Ifx_Ssw_Infra.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    48  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    49  /*******************************************************************************
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    50  **                       Macros                                               **
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    51  *******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    52  #ifndef IFX_CFG_SSW_ENABLE_TRICORE0_PCACHE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    53  #define IFX_CFG_SSW_ENABLE_TRICORE0_PCACHE (1U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    54  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    56  #ifndef IFX_CFG_SSW_ENABLE_TRICORE0_DCACHE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    57  #define IFX_CFG_SSW_ENABLE_TRICORE0_DCACHE (1U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    58  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    59  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    60  #ifndef IFX_CFG_SSW_CALLOUT_PMS_INIT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    61  #define IFX_CFG_SSW_CALLOUT_PMS_INIT()
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    62  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    63  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    64  #ifndef IFX_CFG_SSW_CALLOUT_LBIST
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    65  #define IFX_CFG_SSW_CALLOUT_LBIST()
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    66  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    67  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    68  #ifndef IFX_CFG_SSW_CALLOUT_MONBIST
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    69  #define IFX_CFG_SSW_CALLOUT_MONBIST()
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    70  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    71  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    72  #ifndef IFX_CFG_SSW_CALLOUT_MMIC_CHECK
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    73  #define IFX_CFG_SSW_CALLOUT_MMIC_CHECK()
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    74  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    75  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    76  #ifndef IFX_CFG_SSW_CALLOUT_PLL_INIT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    77  #define IFX_CFG_SSW_CALLOUT_PLL_INIT()
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    78  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    79  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    80  #ifndef IFX_CFG_SSW_CALLOUT_MBIST
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    81  #define IFX_CFG_SSW_CALLOUT_MBIST()
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    82  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    83  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    84  #ifndef IFX_CFG_SSW_CALLOUT_SMU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    85  #define IFX_CFG_SSW_CALLOUT_SMU()
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    86  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    87  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    88  #ifndef IFX_CFG_SSW_CALLOUT_EMEM_INIT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    89  #define IFX_CFG_SSW_CALLOUT_EMEM_INIT()
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    90  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    91  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    92  #define IFX_SSW_INIT_CONTEXT()                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    93      {                                                                            \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    94          /* Load user stack pointer */                                            \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    95          Ifx_Ssw_setAddressReg(a10, __USTACK(0));                                 \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    96          Ifx_Ssw_DSYNC();                                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    97                                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    98          /*Initialize the context save area for CPU0. Function Calls Possible */  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	    99          /* Setup the context save area linked list */                            \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   100          Ifx_Ssw_initCSA((unsigned int *)__CSA(0), (unsigned int *)__CSA_END(0)); \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   101          /* Clears any instruction buffer */                                      \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   102          Ifx_Ssw_ISYNC();                                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   103      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   104  /*******************************************************************************
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   105  **                       Prototypes & Externals                               **
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   106  *******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   107  /** !IMPORTANT: The SSW Configuration shall be defined at Application SW Configuration
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   108   * Please refer to iLLD demos for startup sw configuration (Ifx_Cfg_Ssw.c and .h)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   109   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   110  static void __StartUpSoftware(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   111  static void __StartUpSoftware_Phase2(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   112  static void __StartUpSoftware_Phase3ApplicationResetPath(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   113  static void __StartUpSoftware_Phase3PowerOnResetPath(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   114  static void __StartUpSoftware_Phase4(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   115  static void __StartUpSoftware_Phase5(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   116  static void __StartUpSoftware_Phase6(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   117  static void __Core0_start(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   118  IFX_SSW_COMMON_LINKER_SYMBOLS();
		 .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   119  IFX_SSW_CORE_LINKER_SYMBOLS(0);
		 .extern __USTACK0

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   120  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   121  /*******************************************************************************
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   122  **                       Defines                                              **
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   123  *******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   124  extern void core0_main(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   125  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   126  #if defined(__TASKING__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   127  __asm("\t .extern core0_main");
		 .extern core0_main
	.sdecl	'.text.Ifx_Ssw_Tc0.__StartUpSoftware',code,cluster('__StartUpSoftware')
	.sect	'.text.Ifx_Ssw_Tc0.__StartUpSoftware'
	.align	2
	

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   128  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   129  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   130  /*Add options to eliminate usage of stack pointers unnecessarily*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   131  #if defined(__HIGHTEC__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   132  #pragma GCC optimize "O2"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   133  #elif defined(__TASKING__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   134  #pragma optimize R
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   135  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   136  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   137  static void __StartUpSoftware(void)
; Function __StartUpSoftware
.L25:
__StartUpSoftware:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   138  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   139      /* Initialize A1 pointer to use the global constants with small data addressing */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   140      Ifx_Ssw_setAddressReg(a1, __SDATA2(0));
	 movh.a	 a1,#@his(_LITERAL_DATA_)
 lea	 a1,[a1]@los(_LITERAL_DATA_)
.L288:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   141  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   142      /* Set the PSW to its reset value in case of a warm start,clear PSW.IS */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   143      Ifx_Ssw_MTCR(CPU_PSW, IFX_CFG_SSW_PSW_DEFAULT);
	mov	d15,#2432
	mtcr	#65028,d15
	isync
.L121:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   353  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   354      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   355  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   356  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   357  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   358  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   359  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   361      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   362          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   363          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   364                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   365                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   366                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   367      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   368  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   369      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   370      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   371                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   372                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   373                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   374  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   375      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   376      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   377  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   378  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   379  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   380  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   381  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   382      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   383      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   384          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   385          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   386                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   387                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   388                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   389      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   390  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   391      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   392      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   393                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   394                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   395                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   396  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   397      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   398      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   399  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   400  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   401  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   402  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   403  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   404      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   405      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   406          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   407          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   408                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   409                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   410                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   411      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   412  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   413      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   414      watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   415                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   416                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   417                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   418  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   419      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   420      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   421  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   422  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   423  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   424  IFX_SSW_INLINE void Ifx_Ssw_setSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   425  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   426      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   427      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   428          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   429          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   430                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   431                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   432                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   433      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   434  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   435      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   436      SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   437                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   438                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   439                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   440  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   441      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   442      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   443  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   444  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   445  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   446  /* Check if Cold PowerOn Reset */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   447  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   448  IFX_SSW_INLINE char Ifx_Ssw_isColdPoweronReset(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   449  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   450      return (char)((SCU_RSTSTAT.U & IFX_SSW_COLD_POWERONRESET_MASK) > 0);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   451  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   452  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   453  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   454  /*Add options to eliminate usage of stack pointers unnecessarily*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   455  #if defined(__HIGHTEC__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   456  #pragma GCC optimize "O2"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   457  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   458  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   459  IFX_SSW_INLINE unsigned char Ifx_Ssw_isApplicationReset(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   460  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   461      unsigned char returnVal;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   462      unsigned int  tempValue = SCU_RSTSTAT.U;
	movh.a	a15,#61443
	ld.w	d0,[a15]@los(0xf0036050)
.L257:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   463  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   464      if ((tempValue & IFX_SSW_POWERONRESET_MASK) > 0U)
	movh	d15,#5005
.L289:
	and	d15,d0
.L290:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   464      if ((tempValue & IFX_SSW_POWERONRESET_MASK) > 0U)      (inlined)
	jne	d15,#0,.L2
.L291:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   465      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   466          returnVal = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   467      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   468      else if ((tempValue & IFX_SSW_APPLICATIONRESET_MASK) > 0U)
	mov	d15,#2043
.L292:
	and	d15,d0
.L293:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   468      else if ((tempValue & IFX_SSW_APPLICATIONRESET_MASK) > 0U)      (inlined)
	jeq	d15,#0,.L3
.L294:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   469      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   470          /* get the bit which is set at RSTSTAT (assumption: RSTSTAT register was cleared before and only one bit can be set) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   471          tempValue = tempValue & IFX_SSW_APPLICATIONRESET_MASK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   472          tempValue = (SCU_RSTCON.U >> ((31U - Ifx_Ssw_CLZ(tempValue)) << 1U)) & 3U;
	clz	d15,d15
	ld.w	d0,[a15]@los(0xf0036058)
.L258:
	rsub	d15,d15,#31
.L295:
	sh	d15,#1
.L296:
	extr.u	d15,d0,d15,#2
.L259:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   474          if (tempValue == IFX_SSW_APPLICATIONRESET)      (inlined)
	jne	d15,#2,.L4
.L297:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   476              returnVal = 1U;      (inlined)
	j	.L5

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   468      else if ((tempValue & IFX_SSW_APPLICATIONRESET_MASK) > 0U)      (inlined)
.L3:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   483      else if (((unsigned int)tempValue & ((unsigned int)IFX_SCU_RSTSTAT_CB3_MSK << IFX_SCU_RSTSTAT_CB3_OFF)))      (inlined)
	jnz.t	d0:20,.L6
.L298:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   473  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   474          if (tempValue == IFX_SSW_APPLICATIONRESET)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   475          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   476              returnVal = 1U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   477          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   478          else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   479          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   480              returnVal = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   481          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   482      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   483      else if (((unsigned int)tempValue & ((unsigned int)IFX_SCU_RSTSTAT_CB3_MSK << IFX_SCU_RSTSTAT_CB3_OFF)))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   484      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   485          /* CB3 reset is not configurable and is always application reset */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   486          returnVal = 1U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   487      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   488      else if (CPU0_KRST0.B.RSTSTAT != 0)   /*CPU0 KRST status */
	movh.a	a15,#63617
	ld.w	d15,[a15]@los(0xf880d000)
	extr.u	d15,d15,#1,#2
.L299:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   488      else if (CPU0_KRST0.B.RSTSTAT != 0)   /*CPU0 KRST status */      (inlined)
	jeq	d15,#0,.L7
.L6:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   478          else      (inlined)
.L5:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   489      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   490          returnVal = 1U;
	mov	d15,#1

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   490          returnVal = 1U;      (inlined)
	j	.L8

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   488      else if (CPU0_KRST0.B.RSTSTAT != 0)   /*CPU0 KRST status */      (inlined)
.L7:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   474          if (tempValue == IFX_SSW_APPLICATIONRESET)      (inlined)
.L4:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   468      else if ((tempValue & IFX_SSW_APPLICATIONRESET_MASK) > 0U)      (inlined)
.L2:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   491      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   492      else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   493      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   494          returnVal = 0U;
	mov	d15,#0

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   492      else      (inlined)
.L8:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   144  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   145      /* This phase is executed only if last reset is not of type application reset */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   146      if (Ifx_Ssw_isApplicationReset() != 1)
	jne	d15,#0,.L9
.L122:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   147      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   148          Ifx_Ssw_jumpToFunction(__StartUpSoftware_Phase2);
	movh.a	a15,#@his(__StartUpSoftware_Phase2)
	lea	a15,[a15]@los(__StartUpSoftware_Phase2)
.L300:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   166      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L129:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   149      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   150      else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   151      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   152          Ifx_Ssw_jumpToFunction(__StartUpSoftware_Phase3ApplicationResetPath);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   153      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   154  }
	ret
.L9:
	movh.a	a15,#@his(__StartUpSoftware_Phase3ApplicationResetPath)
	lea	a15,[a15]@los(__StartUpSoftware_Phase3ApplicationResetPath)
.L301:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   166      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L133:
	ret
.L119:
	
____StartUpSoftware_function_end:
	.size	__StartUpSoftware,____StartUpSoftware_function_end-__StartUpSoftware
.L58:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase2',code,cluster('__StartUpSoftware_Phase2')
	.sect	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase2'
	.align	2
	

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   155  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   156  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   157  static void __StartUpSoftware_Phase2(void)
; Function __StartUpSoftware_Phase2
.L27:
__StartUpSoftware_Phase2:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   158  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   159      /* Power and EVRC configurations */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   160      IFX_CFG_SSW_CALLOUT_PMS_INIT();
	movh.a	a15,#@his(Ifx_Ssw_Pms_Init)
	lea	a15,[a15]@los(Ifx_Ssw_Pms_Init)
.L306:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   172      __asm("jli %0" ::"a" (fun));      (inlined)
	jli a15
.L136:
	movh.a	a15,#@his(Ifx_Ssw_Pms_InitCheck)
	lea	a15,[a15]@los(Ifx_Ssw_Pms_InitCheck)
.L307:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   172      __asm("jli %0" ::"a" (fun));      (inlined)
	jli a15
.L140:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   161  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   162      /* LBIST Tests and evaluation */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   163      IFX_CFG_SSW_CALLOUT_LBIST();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   164  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   165      /* MONBIST Tests and evaluation */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   166      IFX_CFG_SSW_CALLOUT_MONBIST();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   167  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   168      Ifx_Ssw_jumpToFunction(__StartUpSoftware_Phase3PowerOnResetPath);
	movh.a	a15,#@his(__StartUpSoftware_Phase3PowerOnResetPath)
	lea	a15,[a15]@los(__StartUpSoftware_Phase3PowerOnResetPath)
.L308:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   166      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L141:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   169  }
	ret
.L134:
	
____StartUpSoftware_Phase2_function_end:
	.size	__StartUpSoftware_Phase2,____StartUpSoftware_Phase2_function_end-__StartUpSoftware_Phase2
.L63:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase3PowerOnResetPath',code,cluster('__StartUpSoftware_Phase3PowerOnResetPath')
	.sect	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase3PowerOnResetPath'
	.align	2
	

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   170  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   171  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   172  static void __StartUpSoftware_Phase3PowerOnResetPath(void)
; Function __StartUpSoftware_Phase3PowerOnResetPath
.L29:
__StartUpSoftware_Phase3PowerOnResetPath:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   173  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   174      IFX_SSW_INIT_CONTEXT();
	 movh.a	 a10,#@his(__USTACK0)
 lea	 a10,[a10]@los(__USTACK0)
.L168:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     2   * \file Ifx_Ssw_CompilersTasking.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     3   * \brief Startup Software for Tasking compiler options
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     8   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     9   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    10   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    11   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    12   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    13   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    14   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    15   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    16   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    17   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    18   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    19   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    20   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    21   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    22   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    23   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    24   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    25   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    26   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    27   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    28   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    29   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    30   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    31   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    32   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    33   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    34   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    35   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    36   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    37   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    38   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    39   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    40  #ifndef IFX_SSW_COMPILERSTASKING_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    41  #define IFX_SSW_COMPILERSTASKING_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    42  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    43  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    44  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    45  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    46  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    47  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    48  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    49  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    50  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    51  /*Linker definitions which are specific to Tasking */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    52  /* IFX_CFG_USE_COMPILER_DEFAULT_LINKER shall be defined in Ifx_Cfg.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    53   * to use the default compiler linker varaibles and startup */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    54  #ifndef IFX_CFG_USE_COMPILER_DEFAULT_LINKER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    56  /*Start: Common definitions ********************************************** */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    57  #define IFX_SSW_COMMON_LINKER_SYMBOLS()                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    58      __asm("\t .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_"); \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    59      extern unsigned int __START0[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    60      extern unsigned int __START1[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    61      extern unsigned int __START2[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    62      extern unsigned int __START3[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    63      extern unsigned int __START4[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    64      extern unsigned int __START5[];     /**< Pointer to the startup code */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    65  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    66  /*End: Common definitions ************************************************ */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    67  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    68  /*Start: Core 0 definitions ********************************************** */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    69  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    70  /*C extern defintions */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    71  #define IFX_SSW_CORE_LINKER_SYMBOLS(cpu)                                                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    72      __asm("\t .extern __USTACK"#cpu);         /**< user stack end is required as asm to be used with setreg macro */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    73      extern unsigned int __ISTACK##cpu[];      /**< interrupt stack end */                                            \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    74      extern unsigned int __INTTAB_CPU##cpu[];  /**< interrupt vector table */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    75      extern unsigned int __TRAPTAB_CPU##cpu[]; /**< trap vector table */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    76      extern unsigned int __CSA##cpu[];         /**< context save area begin */                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    77      extern unsigned int __CSA##cpu##_END[];   /**< context save area end   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    78  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    79  #define __USTACK(cpu)      __USTACK##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    80  #define __ISTACK(cpu)      __ISTACK##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    81  #define __INTTAB_CPU(cpu)  __INTTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    82  #define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    83  #define __CSA(cpu)         __CSA##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    84  #define __CSA_END(cpu)     __CSA##cpu##_END
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    85  #define __START(cpu)       __START##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    86  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    87  /*Wrapper macros for the tool specific definitions */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    88  #if defined(IFX_USE_SW_MANAGED_INT)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    89  #define __INTTAB(cpu)      ((unsigned int)__INTTAB_CPU##cpu | (unsigned int)0x1FE0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    90  #else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    91  #define __INTTAB(cpu)      __INTTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    92  #endif /*defined(IFX_USE_SW_MANAGED_INT) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    94  #define __TRAPTAB(cpu)     __TRAPTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    95  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    96  #define __SDATA1(cpu)      _SMALL_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    97  #define __SDATA2(cpu)      _LITERAL_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    98  #define __SDATA3(cpu)      _A8_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    99  #define __SDATA4(cpu)      _A9_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   100  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   101  #endif /*IFX_CFG_USE_COMPILER_DEFAULT_LINKER*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   103  #ifdef __cplusplus
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   104  #define IFX_SSW_INLINE   static inline
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   105  #else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   106  #define IFX_SSW_INLINE   inline
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   107  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   108  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   109  #define IFX_SSW_NULL_PTR ((void *)0x0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   111  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   112  /*----------------------------   GNU Intrinsics  -----------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   113  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   115  #define Ifx_Ssw_MTCR(reg, val) __mtcr(reg, val);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   116  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   117  #define Ifx_Ssw_MFCR(reg)      __mfcr(reg);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   119  IFX_SSW_INLINE void Ifx_Ssw_NOP(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   120  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   121      __nop();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   122  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   123  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   124  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   125  IFX_SSW_INLINE void Ifx_Ssw_DSYNC(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   126  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   127      __dsync();
	dsync
.L169:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   353  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   354      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   355  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   356  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   357  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   358  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   359  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   361      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   362          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   363          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   364                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   365                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   366                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   367      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   368  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   369      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   370      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   371                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   372                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   373                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   374  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   375      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   376      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   377  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   378  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   379  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   380  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   381  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   382      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   383      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   384          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   385          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   386                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   387                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   388                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   389      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   390  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   391      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   392      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   393                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   394                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   395                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   396  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   397      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   398      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   399  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   400  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   401  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   402  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   403  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   404      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   405      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   406          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   407          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   408                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   409                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   410                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   411      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   412  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   413      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   414      watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   415                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   416                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   417                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   418  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   419      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   420      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   421  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   422  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   423  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   424  IFX_SSW_INLINE void Ifx_Ssw_setSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   425  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   426      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   427      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   428          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   429          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   430                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   431                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   432                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   433      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   434  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   435      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   436      SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   437                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   438                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   439                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   440  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   441      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   442      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   443  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   444  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   445  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   446  /* Check if Cold PowerOn Reset */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   447  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   448  IFX_SSW_INLINE char Ifx_Ssw_isColdPoweronReset(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   449  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   450      return (char)((SCU_RSTSTAT.U & IFX_SSW_COLD_POWERONRESET_MASK) > 0);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   451  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   452  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   453  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   454  /*Add options to eliminate usage of stack pointers unnecessarily*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   455  #if defined(__HIGHTEC__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   456  #pragma GCC optimize "O2"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   457  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   458  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   459  IFX_SSW_INLINE unsigned char Ifx_Ssw_isApplicationReset(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   460  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   461      unsigned char returnVal;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   462      unsigned int  tempValue = SCU_RSTSTAT.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   463  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   464      if ((tempValue & IFX_SSW_POWERONRESET_MASK) > 0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   465      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   466          returnVal = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   467      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   468      else if ((tempValue & IFX_SSW_APPLICATIONRESET_MASK) > 0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   469      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   470          /* get the bit which is set at RSTSTAT (assumption: RSTSTAT register was cleared before and only one bit can be set) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   471          tempValue = tempValue & IFX_SSW_APPLICATIONRESET_MASK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   472          tempValue = (SCU_RSTCON.U >> ((31U - Ifx_Ssw_CLZ(tempValue)) << 1U)) & 3U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   473  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   474          if (tempValue == IFX_SSW_APPLICATIONRESET)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   475          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   476              returnVal = 1U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   477          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   478          else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   479          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   480              returnVal = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   481          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   482      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   483      else if (((unsigned int)tempValue & ((unsigned int)IFX_SCU_RSTSTAT_CB3_MSK << IFX_SCU_RSTSTAT_CB3_OFF)))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   484      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   485          /* CB3 reset is not configurable and is always application reset */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   486          returnVal = 1U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   487      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   488      else if (CPU0_KRST0.B.RSTSTAT != 0)   /*CPU0 KRST status */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   489      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   490          returnVal = 1U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   491      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   492      else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   493      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   494          returnVal = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   495      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   496  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   497      return returnVal;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   498  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   499  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   500  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   501  /*Restore the options to command line provided ones*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   502  #if defined(__HIGHTEC__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   503  #pragma GCC reset_options
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   504  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   505  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   506  IFX_SSW_INLINE void Ifx_Ssw_initCSA(unsigned int *csaBegin, unsigned int *csaEnd)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   507  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   508      unsigned int  k;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   509      unsigned int  nxt_cxi_val = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   510      unsigned int *prvCsa      = 0U;
	mov.a	a15,#0
.L260:
	movh.a	a2,#@his(__CSA0)
.L262:
	lea	a2,[a2]@los(__CSA0)
	movh.a	a4,#@his(__CSA0_END)
	lea	a4,[a4]@los(__CSA0_END)
	mov.d	d15,a4
	mov.d	d0,a2
.L324:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   353  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   354      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   355  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   356  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   357  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   358  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   359  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   361      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   362          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   363          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   364                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   365                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   366                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   367      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   368  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   369      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   370      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   371                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   372                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   373                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   374  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   375      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   376      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   377  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   378  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   379  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   380  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   381  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   382      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   383      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   384          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   385          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   386                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   387                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   388                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   389      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   390  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   391      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   392      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   393                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   394                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   395                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   396  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   397      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   398      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   399  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   400  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   401  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   402  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   403  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   404      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   405      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   406          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   407          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   408                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   409                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   410                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   411      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   412  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   413      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   414      watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   415                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   416                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   417                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   418  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   419      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   420      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   421  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   422  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   423  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   424  IFX_SSW_INLINE void Ifx_Ssw_setSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   425  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   426      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   427      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   428          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   429          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   430                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   431                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   432                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   433      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   434  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   435      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   436      SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   437                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   438                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   439                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   440  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   441      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   442      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   443  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   444  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   445  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   446  /* Check if Cold PowerOn Reset */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   447  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   448  IFX_SSW_INLINE char Ifx_Ssw_isColdPoweronReset(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   449  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   450      return (char)((SCU_RSTSTAT.U & IFX_SSW_COLD_POWERONRESET_MASK) > 0);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   451  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   452  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   453  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   454  /*Add options to eliminate usage of stack pointers unnecessarily*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   455  #if defined(__HIGHTEC__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   456  #pragma GCC optimize "O2"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   457  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   458  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   459  IFX_SSW_INLINE unsigned char Ifx_Ssw_isApplicationReset(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   460  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   461      unsigned char returnVal;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   462      unsigned int  tempValue = SCU_RSTSTAT.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   463  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   464      if ((tempValue & IFX_SSW_POWERONRESET_MASK) > 0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   465      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   466          returnVal = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   467      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   468      else if ((tempValue & IFX_SSW_APPLICATIONRESET_MASK) > 0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   469      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   470          /* get the bit which is set at RSTSTAT (assumption: RSTSTAT register was cleared before and only one bit can be set) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   471          tempValue = tempValue & IFX_SSW_APPLICATIONRESET_MASK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   472          tempValue = (SCU_RSTCON.U >> ((31U - Ifx_Ssw_CLZ(tempValue)) << 1U)) & 3U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   473  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   474          if (tempValue == IFX_SSW_APPLICATIONRESET)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   475          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   476              returnVal = 1U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   477          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   478          else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   479          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   480              returnVal = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   481          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   482      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   483      else if (((unsigned int)tempValue & ((unsigned int)IFX_SCU_RSTSTAT_CB3_MSK << IFX_SCU_RSTSTAT_CB3_OFF)))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   484      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   485          /* CB3 reset is not configurable and is always application reset */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   486          returnVal = 1U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   487      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   488      else if (CPU0_KRST0.B.RSTSTAT != 0)   /*CPU0 KRST status */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   489      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   490          returnVal = 1U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   491      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   492      else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   493      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   494          returnVal = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   495      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   496  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   497      return returnVal;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   498  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   499  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   500  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   501  /*Restore the options to command line provided ones*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   502  #if defined(__HIGHTEC__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   503  #pragma GCC reset_options
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   504  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   505  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   506  IFX_SSW_INLINE void Ifx_Ssw_initCSA(unsigned int *csaBegin, unsigned int *csaEnd)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   507  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   508      unsigned int  k;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   509      unsigned int  nxt_cxi_val = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   510      unsigned int *prvCsa      = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   511      unsigned int *nxtCsa      = csaBegin;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   512      unsigned int  numOfCsa    = (((unsigned int)csaEnd - (unsigned int)csaBegin) / 64U);
	fcall	.cocofun_5
.L261:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   514      for (k = 0U; k < numOfCsa; k++)      (inlined)
	j	.L11
.L12:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   513  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   514      for (k = 0U; k < numOfCsa; k++)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   515      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   516          nxt_cxi_val = ((unsigned int)((unsigned int)nxtCsa & ((unsigned int)0XFU << 28U)) >> 12U) | \ 
	fcall	.cocofun_3
.L325:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   519          if (k == 0U)      (inlined)
	jne	d1,#0,.L13
.L266:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   517                        ((unsigned int)((unsigned int)nxtCsa & ((unsigned int)0XFFFFU << 6U)) >> 6U);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   518  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   519          if (k == 0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   520          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   521              Ifx_Ssw_MTCR(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
	mtcr	#65080,d2
	isync

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   521              Ifx_Ssw_MTCR(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */      (inlined)
	j	.L14

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   519          if (k == 0U)      (inlined)
.L13:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   522          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   523          else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   524          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   525              *prvCsa = nxt_cxi_val;
	st.w	[a15],d2

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   523          else      (inlined)
.L14:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   526          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   527  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   528          if (k == (numOfCsa - 3U))
	add	d15,d0,#-3
.L326:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   528          if (k == (numOfCsa - 3U))      (inlined)
	jne	d15,d1,.L15
.L327:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   529          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   530              Ifx_Ssw_MTCR(CPU_LCX, nxt_cxi_val);   /* Last but 2 context save area is pointed in LCX to know if there is CSA depletion */
	mtcr	#65084,d2
	isync

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   528          if (k == (numOfCsa - 3U))      (inlined)
.L15:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   531          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   532  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   533          prvCsa  = (unsigned int *)nxtCsa;
	add	d1,#1
	mov.aa	a15,a2
.L328:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   534          nxtCsa += IFX_SSW_CSA_SIZE; /* next CSA */
	lea	a2,[a2]64

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   514      for (k = 0U; k < numOfCsa; k++)      (inlined)
.L11:
	jlt.u	d1,d0,.L12
.L329:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   535      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   536  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   537      *prvCsa = 0U;                   /* Store null pointer in last CSA (= very first time!) */
	mov	d15,#0
	st.w	[a15],d15
.L179:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     2   * \file Ifx_Ssw_CompilersTasking.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     3   * \brief Startup Software for Tasking compiler options
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     8   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     9   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    10   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    11   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    12   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    13   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    14   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    15   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    16   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    17   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    18   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    19   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    20   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    21   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    22   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    23   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    24   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    25   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    26   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    27   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    28   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    29   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    30   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    31   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    32   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    33   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    34   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    35   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    36   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    37   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    38   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    39   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    40  #ifndef IFX_SSW_COMPILERSTASKING_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    41  #define IFX_SSW_COMPILERSTASKING_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    42  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    43  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    44  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    45  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    46  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    47  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    48  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    49  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    50  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    51  /*Linker definitions which are specific to Tasking */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    52  /* IFX_CFG_USE_COMPILER_DEFAULT_LINKER shall be defined in Ifx_Cfg.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    53   * to use the default compiler linker varaibles and startup */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    54  #ifndef IFX_CFG_USE_COMPILER_DEFAULT_LINKER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    56  /*Start: Common definitions ********************************************** */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    57  #define IFX_SSW_COMMON_LINKER_SYMBOLS()                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    58      __asm("\t .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_"); \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    59      extern unsigned int __START0[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    60      extern unsigned int __START1[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    61      extern unsigned int __START2[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    62      extern unsigned int __START3[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    63      extern unsigned int __START4[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    64      extern unsigned int __START5[];     /**< Pointer to the startup code */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    65  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    66  /*End: Common definitions ************************************************ */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    67  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    68  /*Start: Core 0 definitions ********************************************** */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    69  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    70  /*C extern defintions */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    71  #define IFX_SSW_CORE_LINKER_SYMBOLS(cpu)                                                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    72      __asm("\t .extern __USTACK"#cpu);         /**< user stack end is required as asm to be used with setreg macro */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    73      extern unsigned int __ISTACK##cpu[];      /**< interrupt stack end */                                            \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    74      extern unsigned int __INTTAB_CPU##cpu[];  /**< interrupt vector table */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    75      extern unsigned int __TRAPTAB_CPU##cpu[]; /**< trap vector table */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    76      extern unsigned int __CSA##cpu[];         /**< context save area begin */                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    77      extern unsigned int __CSA##cpu##_END[];   /**< context save area end   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    78  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    79  #define __USTACK(cpu)      __USTACK##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    80  #define __ISTACK(cpu)      __ISTACK##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    81  #define __INTTAB_CPU(cpu)  __INTTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    82  #define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    83  #define __CSA(cpu)         __CSA##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    84  #define __CSA_END(cpu)     __CSA##cpu##_END
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    85  #define __START(cpu)       __START##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    86  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    87  /*Wrapper macros for the tool specific definitions */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    88  #if defined(IFX_USE_SW_MANAGED_INT)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    89  #define __INTTAB(cpu)      ((unsigned int)__INTTAB_CPU##cpu | (unsigned int)0x1FE0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    90  #else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    91  #define __INTTAB(cpu)      __INTTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    92  #endif /*defined(IFX_USE_SW_MANAGED_INT) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    94  #define __TRAPTAB(cpu)     __TRAPTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    95  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    96  #define __SDATA1(cpu)      _SMALL_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    97  #define __SDATA2(cpu)      _LITERAL_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    98  #define __SDATA3(cpu)      _A8_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    99  #define __SDATA4(cpu)      _A9_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   100  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   101  #endif /*IFX_CFG_USE_COMPILER_DEFAULT_LINKER*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   103  #ifdef __cplusplus
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   104  #define IFX_SSW_INLINE   static inline
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   105  #else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   106  #define IFX_SSW_INLINE   inline
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   107  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   108  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   109  #define IFX_SSW_NULL_PTR ((void *)0x0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   111  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   112  /*----------------------------   GNU Intrinsics  -----------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   113  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   115  #define Ifx_Ssw_MTCR(reg, val) __mtcr(reg, val);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   116  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   117  #define Ifx_Ssw_MFCR(reg)      __mfcr(reg);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   119  IFX_SSW_INLINE void Ifx_Ssw_NOP(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   120  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   121      __nop();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   122  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   123  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   124  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   125  IFX_SSW_INLINE void Ifx_Ssw_DSYNC(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   126  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   127      __dsync();
	dsync
.L170:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   128  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   129  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   130  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   131  IFX_SSW_INLINE void Ifx_Ssw_ISYNC(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   132  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   133      __isync();
	isync
.L180:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   175  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   176      Ifx_Ssw_jumpToFunction(__StartUpSoftware_Phase4);
	movh.a	a15,#@his(__StartUpSoftware_Phase4)
.L267:
	lea	a15,[a15]@los(__StartUpSoftware_Phase4)
.L330:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   166      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L181:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   177  }
	ret
.L167:
	
____StartUpSoftware_Phase3PowerOnResetPath_function_end:
	.size	__StartUpSoftware_Phase3PowerOnResetPath,____StartUpSoftware_Phase3PowerOnResetPath_function_end-__StartUpSoftware_Phase3PowerOnResetPath
.L73:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Tc0..cocofun_5',code,cluster('.cocofun_5')
	.sect	'.text.Ifx_Ssw_Tc0..cocofun_5'
	.align	2
; Function .cocofun_5
.L31:
.cocofun_5:	.type	func
; Function body .cocofun_5, coco_iter:0

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   353  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   354      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   355  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   356  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   357  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   358  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   359  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   361      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   362          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   363          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   364                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   365                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   366                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   367      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   368  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   369      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   370      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   371                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   372                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   373                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   374  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   375      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   376      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   377  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   378  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   379  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   380  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   381  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   382      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   383      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   384          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   385          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   386                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   387                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   388                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   389      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   390  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   391      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   392      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   393                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   394                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   395                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   396  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   397      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   398      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   399  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   400  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   401  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   402  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   403  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   404      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   405      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   406          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   407          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   408                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   409                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   410                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   411      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   412  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   413      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   414      watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   415                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   416                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   417                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   418  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   419      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   420      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   421  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   422  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   423  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   424  IFX_SSW_INLINE void Ifx_Ssw_setSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   425  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   426      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   427      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   428          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   429          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   430                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   431                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   432                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   433      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   434  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   435      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   436      SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   437                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   438                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   439                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   440  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   441      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   442      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   443  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   444  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   445  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   446  /* Check if Cold PowerOn Reset */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   447  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   448  IFX_SSW_INLINE char Ifx_Ssw_isColdPoweronReset(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   449  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   450      return (char)((SCU_RSTSTAT.U & IFX_SSW_COLD_POWERONRESET_MASK) > 0);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   451  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   452  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   453  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   454  /*Add options to eliminate usage of stack pointers unnecessarily*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   455  #if defined(__HIGHTEC__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   456  #pragma GCC optimize "O2"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   457  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   458  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   459  IFX_SSW_INLINE unsigned char Ifx_Ssw_isApplicationReset(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   460  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   461      unsigned char returnVal;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   462      unsigned int  tempValue = SCU_RSTSTAT.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   463  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   464      if ((tempValue & IFX_SSW_POWERONRESET_MASK) > 0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   465      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   466          returnVal = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   467      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   468      else if ((tempValue & IFX_SSW_APPLICATIONRESET_MASK) > 0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   469      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   470          /* get the bit which is set at RSTSTAT (assumption: RSTSTAT register was cleared before and only one bit can be set) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   471          tempValue = tempValue & IFX_SSW_APPLICATIONRESET_MASK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   472          tempValue = (SCU_RSTCON.U >> ((31U - Ifx_Ssw_CLZ(tempValue)) << 1U)) & 3U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   473  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   474          if (tempValue == IFX_SSW_APPLICATIONRESET)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   475          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   476              returnVal = 1U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   477          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   478          else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   479          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   480              returnVal = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   481          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   482      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   483      else if (((unsigned int)tempValue & ((unsigned int)IFX_SCU_RSTSTAT_CB3_MSK << IFX_SCU_RSTSTAT_CB3_OFF)))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   484      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   485          /* CB3 reset is not configurable and is always application reset */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   486          returnVal = 1U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   487      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   488      else if (CPU0_KRST0.B.RSTSTAT != 0)   /*CPU0 KRST status */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   489      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   490          returnVal = 1U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   491      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   492      else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   493      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   494          returnVal = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   495      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   496  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   497      return returnVal;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   498  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   499  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   500  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   501  /*Restore the options to command line provided ones*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   502  #if defined(__HIGHTEC__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   503  #pragma GCC reset_options
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   504  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   505  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   506  IFX_SSW_INLINE void Ifx_Ssw_initCSA(unsigned int *csaBegin, unsigned int *csaEnd)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   507  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   508      unsigned int  k;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   509      unsigned int  nxt_cxi_val = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   510      unsigned int *prvCsa      = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   511      unsigned int *nxtCsa      = csaBegin;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   512      unsigned int  numOfCsa    = (((unsigned int)csaEnd - (unsigned int)csaBegin) / 64U);
	sub	d15,d0
	sh	d0,d15,#-6
.L263:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   513  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   514      for (k = 0U; k < numOfCsa; k++)
	mov	d1,#0
.L264:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   515      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   516          nxt_cxi_val = ((unsigned int)((unsigned int)nxtCsa & ((unsigned int)0XFU << 28U)) >> 12U) | \ 
	movh	d3,#15
	fret
.L113:
	; End of function
	.sdecl	'.text.Ifx_Ssw_Tc0..cocofun_3',code,cluster('.cocofun_3')
	.sect	'.text.Ifx_Ssw_Tc0..cocofun_3'
	.align	2
; Function .cocofun_3
.L33:
.cocofun_3:	.type	func
; Function body .cocofun_3, coco_iter:0
	mov.d	d2,a2
.L392:
	sh	d15,d2,#-12
.L393:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   517                        ((unsigned int)((unsigned int)nxtCsa & ((unsigned int)0XFFFFU << 6U)) >> 6U);
	extr.u	d2,d2,#6,#16
.L394:
	and	d15,d3
.L265:
	or	d2,d15
	fret
.L103:
	; End of function
	.sdecl	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase3ApplicationResetPath',code,cluster('__StartUpSoftware_Phase3ApplicationResetPath')
	.sect	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase3ApplicationResetPath'
	.align	2
	

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   178  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   179  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   180  static void __StartUpSoftware_Phase3ApplicationResetPath(void)
; Function __StartUpSoftware_Phase3ApplicationResetPath
.L35:
__StartUpSoftware_Phase3ApplicationResetPath:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   181  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   182      IFX_SSW_INIT_CONTEXT();
	 movh.a	 a10,#@his(__USTACK0)
 lea	 a10,[a10]@los(__USTACK0)
.L145:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     2   * \file Ifx_Ssw_CompilersTasking.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     3   * \brief Startup Software for Tasking compiler options
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     8   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     9   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    10   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    11   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    12   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    13   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    14   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    15   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    16   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    17   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    18   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    19   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    20   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    21   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    22   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    23   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    24   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    25   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    26   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    27   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    28   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    29   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    30   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    31   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    32   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    33   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    34   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    35   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    36   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    37   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    38   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    39   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    40  #ifndef IFX_SSW_COMPILERSTASKING_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    41  #define IFX_SSW_COMPILERSTASKING_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    42  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    43  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    44  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    45  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    46  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    47  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    48  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    49  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    50  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    51  /*Linker definitions which are specific to Tasking */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    52  /* IFX_CFG_USE_COMPILER_DEFAULT_LINKER shall be defined in Ifx_Cfg.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    53   * to use the default compiler linker varaibles and startup */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    54  #ifndef IFX_CFG_USE_COMPILER_DEFAULT_LINKER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    56  /*Start: Common definitions ********************************************** */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    57  #define IFX_SSW_COMMON_LINKER_SYMBOLS()                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    58      __asm("\t .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_"); \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    59      extern unsigned int __START0[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    60      extern unsigned int __START1[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    61      extern unsigned int __START2[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    62      extern unsigned int __START3[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    63      extern unsigned int __START4[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    64      extern unsigned int __START5[];     /**< Pointer to the startup code */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    65  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    66  /*End: Common definitions ************************************************ */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    67  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    68  /*Start: Core 0 definitions ********************************************** */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    69  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    70  /*C extern defintions */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    71  #define IFX_SSW_CORE_LINKER_SYMBOLS(cpu)                                                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    72      __asm("\t .extern __USTACK"#cpu);         /**< user stack end is required as asm to be used with setreg macro */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    73      extern unsigned int __ISTACK##cpu[];      /**< interrupt stack end */                                            \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    74      extern unsigned int __INTTAB_CPU##cpu[];  /**< interrupt vector table */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    75      extern unsigned int __TRAPTAB_CPU##cpu[]; /**< trap vector table */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    76      extern unsigned int __CSA##cpu[];         /**< context save area begin */                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    77      extern unsigned int __CSA##cpu##_END[];   /**< context save area end   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    78  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    79  #define __USTACK(cpu)      __USTACK##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    80  #define __ISTACK(cpu)      __ISTACK##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    81  #define __INTTAB_CPU(cpu)  __INTTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    82  #define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    83  #define __CSA(cpu)         __CSA##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    84  #define __CSA_END(cpu)     __CSA##cpu##_END
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    85  #define __START(cpu)       __START##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    86  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    87  /*Wrapper macros for the tool specific definitions */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    88  #if defined(IFX_USE_SW_MANAGED_INT)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    89  #define __INTTAB(cpu)      ((unsigned int)__INTTAB_CPU##cpu | (unsigned int)0x1FE0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    90  #else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    91  #define __INTTAB(cpu)      __INTTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    92  #endif /*defined(IFX_USE_SW_MANAGED_INT) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    94  #define __TRAPTAB(cpu)     __TRAPTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    95  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    96  #define __SDATA1(cpu)      _SMALL_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    97  #define __SDATA2(cpu)      _LITERAL_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    98  #define __SDATA3(cpu)      _A8_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    99  #define __SDATA4(cpu)      _A9_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   100  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   101  #endif /*IFX_CFG_USE_COMPILER_DEFAULT_LINKER*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   103  #ifdef __cplusplus
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   104  #define IFX_SSW_INLINE   static inline
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   105  #else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   106  #define IFX_SSW_INLINE   inline
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   107  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   108  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   109  #define IFX_SSW_NULL_PTR ((void *)0x0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   111  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   112  /*----------------------------   GNU Intrinsics  -----------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   113  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   115  #define Ifx_Ssw_MTCR(reg, val) __mtcr(reg, val);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   116  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   117  #define Ifx_Ssw_MFCR(reg)      __mfcr(reg);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   119  IFX_SSW_INLINE void Ifx_Ssw_NOP(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   120  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   121      __nop();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   122  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   123  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   124  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   125  IFX_SSW_INLINE void Ifx_Ssw_DSYNC(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   126  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   127      __dsync();
	dsync
.L146:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   353  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   354      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   355  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   356  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   357  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   358  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   359  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   361      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   362          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   363          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   364                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   365                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   366                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   367      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   368  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   369      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   370      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   371                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   372                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   373                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   374  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   375      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   376      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   377  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   378  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   379  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   380  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   381  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   382      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   383      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   384          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   385          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   386                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   387                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   388                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   389      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   390  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   391      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   392      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   393                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   394                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   395                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   396  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   397      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   398      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   399  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   400  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   401  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   402  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   403  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   404      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   405      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   406          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   407          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   408                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   409                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   410                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   411      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   412  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   413      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   414      watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   415                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   416                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   417                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   418  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   419      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   420      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   421  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   422  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   423  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   424  IFX_SSW_INLINE void Ifx_Ssw_setSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   425  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   426      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   427      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   428          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   429          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   430                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   431                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   432                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   433      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   434  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   435      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   436      SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   437                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   438                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   439                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   440  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   441      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   442      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   443  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   444  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   445  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   446  /* Check if Cold PowerOn Reset */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   447  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   448  IFX_SSW_INLINE char Ifx_Ssw_isColdPoweronReset(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   449  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   450      return (char)((SCU_RSTSTAT.U & IFX_SSW_COLD_POWERONRESET_MASK) > 0);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   451  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   452  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   453  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   454  /*Add options to eliminate usage of stack pointers unnecessarily*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   455  #if defined(__HIGHTEC__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   456  #pragma GCC optimize "O2"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   457  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   458  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   459  IFX_SSW_INLINE unsigned char Ifx_Ssw_isApplicationReset(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   460  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   461      unsigned char returnVal;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   462      unsigned int  tempValue = SCU_RSTSTAT.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   463  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   464      if ((tempValue & IFX_SSW_POWERONRESET_MASK) > 0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   465      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   466          returnVal = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   467      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   468      else if ((tempValue & IFX_SSW_APPLICATIONRESET_MASK) > 0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   469      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   470          /* get the bit which is set at RSTSTAT (assumption: RSTSTAT register was cleared before and only one bit can be set) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   471          tempValue = tempValue & IFX_SSW_APPLICATIONRESET_MASK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   472          tempValue = (SCU_RSTCON.U >> ((31U - Ifx_Ssw_CLZ(tempValue)) << 1U)) & 3U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   473  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   474          if (tempValue == IFX_SSW_APPLICATIONRESET)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   475          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   476              returnVal = 1U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   477          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   478          else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   479          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   480              returnVal = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   481          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   482      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   483      else if (((unsigned int)tempValue & ((unsigned int)IFX_SCU_RSTSTAT_CB3_MSK << IFX_SCU_RSTSTAT_CB3_OFF)))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   484      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   485          /* CB3 reset is not configurable and is always application reset */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   486          returnVal = 1U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   487      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   488      else if (CPU0_KRST0.B.RSTSTAT != 0)   /*CPU0 KRST status */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   489      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   490          returnVal = 1U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   491      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   492      else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   493      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   494          returnVal = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   495      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   496  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   497      return returnVal;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   498  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   499  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   500  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   501  /*Restore the options to command line provided ones*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   502  #if defined(__HIGHTEC__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   503  #pragma GCC reset_options
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   504  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   505  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   506  IFX_SSW_INLINE void Ifx_Ssw_initCSA(unsigned int *csaBegin, unsigned int *csaEnd)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   507  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   508      unsigned int  k;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   509      unsigned int  nxt_cxi_val = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   510      unsigned int *prvCsa      = 0U;
	mov.a	a15,#0
.L271:
	movh.a	a2,#@his(__CSA0)
.L269:
	lea	a2,[a2]@los(__CSA0)
	movh.a	a4,#@his(__CSA0_END)
	lea	a4,[a4]@los(__CSA0_END)
	mov.d	d15,a4
	mov.d	d0,a2
.L313:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   353  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   354      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   355  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   356  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   357  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   358  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   359  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   361      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   362          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   363          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   364                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   365                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   366                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   367      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   368  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   369      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   370      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   371                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   372                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   373                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   374  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   375      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   376      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   377  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   378  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   379  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   380  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   381  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   382      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   383      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   384          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   385          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   386                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   387                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   388                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   389      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   390  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   391      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   392      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   393                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   394                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   395                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   396  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   397      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   398      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   399  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   400  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   401  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   402  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   403  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   404      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   405      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   406          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   407          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   408                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   409                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   410                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   411      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   412  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   413      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   414      watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   415                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   416                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   417                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   418  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   419      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   420      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   421  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   422  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   423  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   424  IFX_SSW_INLINE void Ifx_Ssw_setSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   425  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   426      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   427      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   428          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   429          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   430                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   431                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   432                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   433      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   434  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   435      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   436      SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   437                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   438                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   439                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   440  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   441      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   442      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   443  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   444  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   445  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   446  /* Check if Cold PowerOn Reset */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   447  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   448  IFX_SSW_INLINE char Ifx_Ssw_isColdPoweronReset(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   449  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   450      return (char)((SCU_RSTSTAT.U & IFX_SSW_COLD_POWERONRESET_MASK) > 0);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   451  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   452  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   453  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   454  /*Add options to eliminate usage of stack pointers unnecessarily*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   455  #if defined(__HIGHTEC__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   456  #pragma GCC optimize "O2"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   457  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   458  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   459  IFX_SSW_INLINE unsigned char Ifx_Ssw_isApplicationReset(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   460  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   461      unsigned char returnVal;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   462      unsigned int  tempValue = SCU_RSTSTAT.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   463  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   464      if ((tempValue & IFX_SSW_POWERONRESET_MASK) > 0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   465      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   466          returnVal = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   467      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   468      else if ((tempValue & IFX_SSW_APPLICATIONRESET_MASK) > 0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   469      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   470          /* get the bit which is set at RSTSTAT (assumption: RSTSTAT register was cleared before and only one bit can be set) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   471          tempValue = tempValue & IFX_SSW_APPLICATIONRESET_MASK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   472          tempValue = (SCU_RSTCON.U >> ((31U - Ifx_Ssw_CLZ(tempValue)) << 1U)) & 3U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   473  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   474          if (tempValue == IFX_SSW_APPLICATIONRESET)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   475          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   476              returnVal = 1U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   477          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   478          else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   479          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   480              returnVal = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   481          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   482      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   483      else if (((unsigned int)tempValue & ((unsigned int)IFX_SCU_RSTSTAT_CB3_MSK << IFX_SCU_RSTSTAT_CB3_OFF)))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   484      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   485          /* CB3 reset is not configurable and is always application reset */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   486          returnVal = 1U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   487      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   488      else if (CPU0_KRST0.B.RSTSTAT != 0)   /*CPU0 KRST status */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   489      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   490          returnVal = 1U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   491      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   492      else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   493      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   494          returnVal = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   495      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   496  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   497      return returnVal;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   498  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   499  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   500  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   501  /*Restore the options to command line provided ones*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   502  #if defined(__HIGHTEC__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   503  #pragma GCC reset_options
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   504  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   505  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   506  IFX_SSW_INLINE void Ifx_Ssw_initCSA(unsigned int *csaBegin, unsigned int *csaEnd)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   507  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   508      unsigned int  k;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   509      unsigned int  nxt_cxi_val = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   510      unsigned int *prvCsa      = 0U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   511      unsigned int *nxtCsa      = csaBegin;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   512      unsigned int  numOfCsa    = (((unsigned int)csaEnd - (unsigned int)csaBegin) / 64U);
	fcall	.cocofun_5
.L268:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   514      for (k = 0U; k < numOfCsa; k++)      (inlined)
	j	.L16
.L17:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   513  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   514      for (k = 0U; k < numOfCsa; k++)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   515      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   516          nxt_cxi_val = ((unsigned int)((unsigned int)nxtCsa & ((unsigned int)0XFU << 28U)) >> 12U) | \ 
	fcall	.cocofun_3
.L270:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   519          if (k == 0U)      (inlined)
	jne	d1,#0,.L18
.L314:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   517                        ((unsigned int)((unsigned int)nxtCsa & ((unsigned int)0XFFFFU << 6U)) >> 6U);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   518  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   519          if (k == 0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   520          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   521              Ifx_Ssw_MTCR(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
	mtcr	#65080,d2
	isync

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   521              Ifx_Ssw_MTCR(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */      (inlined)
	j	.L19

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   519          if (k == 0U)      (inlined)
.L18:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   522          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   523          else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   524          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   525              *prvCsa = nxt_cxi_val;
	st.w	[a15],d2

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   523          else      (inlined)
.L19:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   526          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   527  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   528          if (k == (numOfCsa - 3U))
	add	d15,d0,#-3
.L315:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   528          if (k == (numOfCsa - 3U))      (inlined)
	jne	d15,d1,.L20
.L316:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   529          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   530              Ifx_Ssw_MTCR(CPU_LCX, nxt_cxi_val);   /* Last but 2 context save area is pointed in LCX to know if there is CSA depletion */
	mtcr	#65084,d2
	isync

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   528          if (k == (numOfCsa - 3U))      (inlined)
.L20:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   531          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   532  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   533          prvCsa  = (unsigned int *)nxtCsa;
	add	d1,#1
	mov.aa	a15,a2
.L317:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   534          nxtCsa += IFX_SSW_CSA_SIZE; /* next CSA */
	lea	a2,[a2]64

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   514      for (k = 0U; k < numOfCsa; k++)      (inlined)
.L16:
	jlt.u	d1,d0,.L17
.L318:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   535      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   536  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   537      *prvCsa = 0U;                   /* Store null pointer in last CSA (= very first time!) */
	mov	d15,#0
	st.w	[a15],d15
.L161:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     2   * \file Ifx_Ssw_CompilersTasking.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     3   * \brief Startup Software for Tasking compiler options
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     8   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     9   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    10   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    11   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    12   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    13   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    14   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    15   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    16   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    17   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    18   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    19   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    20   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    21   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    22   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    23   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    24   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    25   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    26   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    27   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    28   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    29   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    30   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    31   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    32   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    33   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    34   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    35   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    36   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    37   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    38   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    39   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    40  #ifndef IFX_SSW_COMPILERSTASKING_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    41  #define IFX_SSW_COMPILERSTASKING_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    42  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    43  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    44  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    45  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    46  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    47  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    48  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    49  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    50  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    51  /*Linker definitions which are specific to Tasking */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    52  /* IFX_CFG_USE_COMPILER_DEFAULT_LINKER shall be defined in Ifx_Cfg.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    53   * to use the default compiler linker varaibles and startup */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    54  #ifndef IFX_CFG_USE_COMPILER_DEFAULT_LINKER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    56  /*Start: Common definitions ********************************************** */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    57  #define IFX_SSW_COMMON_LINKER_SYMBOLS()                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    58      __asm("\t .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_"); \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    59      extern unsigned int __START0[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    60      extern unsigned int __START1[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    61      extern unsigned int __START2[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    62      extern unsigned int __START3[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    63      extern unsigned int __START4[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    64      extern unsigned int __START5[];     /**< Pointer to the startup code */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    65  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    66  /*End: Common definitions ************************************************ */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    67  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    68  /*Start: Core 0 definitions ********************************************** */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    69  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    70  /*C extern defintions */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    71  #define IFX_SSW_CORE_LINKER_SYMBOLS(cpu)                                                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    72      __asm("\t .extern __USTACK"#cpu);         /**< user stack end is required as asm to be used with setreg macro */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    73      extern unsigned int __ISTACK##cpu[];      /**< interrupt stack end */                                            \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    74      extern unsigned int __INTTAB_CPU##cpu[];  /**< interrupt vector table */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    75      extern unsigned int __TRAPTAB_CPU##cpu[]; /**< trap vector table */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    76      extern unsigned int __CSA##cpu[];         /**< context save area begin */                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    77      extern unsigned int __CSA##cpu##_END[];   /**< context save area end   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    78  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    79  #define __USTACK(cpu)      __USTACK##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    80  #define __ISTACK(cpu)      __ISTACK##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    81  #define __INTTAB_CPU(cpu)  __INTTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    82  #define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    83  #define __CSA(cpu)         __CSA##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    84  #define __CSA_END(cpu)     __CSA##cpu##_END
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    85  #define __START(cpu)       __START##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    86  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    87  /*Wrapper macros for the tool specific definitions */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    88  #if defined(IFX_USE_SW_MANAGED_INT)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    89  #define __INTTAB(cpu)      ((unsigned int)__INTTAB_CPU##cpu | (unsigned int)0x1FE0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    90  #else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    91  #define __INTTAB(cpu)      __INTTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    92  #endif /*defined(IFX_USE_SW_MANAGED_INT) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    94  #define __TRAPTAB(cpu)     __TRAPTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    95  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    96  #define __SDATA1(cpu)      _SMALL_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    97  #define __SDATA2(cpu)      _LITERAL_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    98  #define __SDATA3(cpu)      _A8_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    99  #define __SDATA4(cpu)      _A9_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   100  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   101  #endif /*IFX_CFG_USE_COMPILER_DEFAULT_LINKER*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   103  #ifdef __cplusplus
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   104  #define IFX_SSW_INLINE   static inline
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   105  #else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   106  #define IFX_SSW_INLINE   inline
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   107  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   108  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   109  #define IFX_SSW_NULL_PTR ((void *)0x0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   111  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   112  /*----------------------------   GNU Intrinsics  -----------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   113  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   115  #define Ifx_Ssw_MTCR(reg, val) __mtcr(reg, val);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   116  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   117  #define Ifx_Ssw_MFCR(reg)      __mfcr(reg);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   119  IFX_SSW_INLINE void Ifx_Ssw_NOP(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   120  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   121      __nop();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   122  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   123  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   124  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   125  IFX_SSW_INLINE void Ifx_Ssw_DSYNC(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   126  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   127      __dsync();
	dsync
.L149:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   128  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   129  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   130  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   131  IFX_SSW_INLINE void Ifx_Ssw_ISYNC(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   132  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   133      __isync();
	isync
.L163:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   183  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   184      Ifx_Ssw_jumpToFunction(__StartUpSoftware_Phase5);
	movh.a	a15,#@his(__StartUpSoftware_Phase5)
.L272:
	lea	a15,[a15]@los(__StartUpSoftware_Phase5)
.L319:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   166      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L165:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   185  }
	ret
.L143:
	
____StartUpSoftware_Phase3ApplicationResetPath_function_end:
	.size	__StartUpSoftware_Phase3ApplicationResetPath,____StartUpSoftware_Phase3ApplicationResetPath_function_end-__StartUpSoftware_Phase3ApplicationResetPath
.L68:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase4',code,cluster('__StartUpSoftware_Phase4')
	.sect	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase4'
	.align	2
	

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   186  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   187  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   188  static void __StartUpSoftware_Phase4(void)
; Function __StartUpSoftware_Phase4
.L37:
__StartUpSoftware_Phase4:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
	movh.a	a15,#61443
	ld.w	d15,[a15]@los(0xf003624c)
.L186:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   189  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   190      /* This is for ADAS chip, where clock is provided by MMIC chip. This has to be
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   191       * implemented according the board.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   192       */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   193      IFX_CFG_SSW_CALLOUT_MMIC_CHECK();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   194  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   195      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   196          /* Update safety and cpu watchdog reload value*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   197          unsigned short cpuWdtPassword    = Ifx_Ssw_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[0]);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   198          unsigned short safetyWdtPassword = Ifx_Ssw_getSafetyWatchdogPasswordInline();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   199  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   200          /* servicing watchdog timers */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   201          Ifx_Ssw_serviceCpuWatchdog(&MODULE_SCU.WDTCPU[0], cpuWdtPassword);
	ld.w	d0,.2.cnt
.L191:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
	extr.u	d15,d15,#2,#14
.L192:
	mov.a	a4,d0
.L193:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
	xor	d4,d15,#63
	ld.w	d15,[a15]@los(0xf00362a8)
.L194:
	extr.u	d15,d15,#2,#14
.L335:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
	xor	d15,d15,#63
	call	Ifx_Ssw_serviceCpuWatchdog
.L273:
	mov	d4,d15
	call	Ifx_Ssw_serviceSafetyWatchdog
.L184:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   202          Ifx_Ssw_serviceSafetyWatchdog(safetyWdtPassword);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   203      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   204  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   205      /* Initialize the clock system */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   206      IFX_CFG_SSW_CALLOUT_PLL_INIT();
	movh.a	a4,#@his(IfxScuCcu_defaultClockConfig)
	lea	a4,[a4]@los(IfxScuCcu_defaultClockConfig)
	call	IfxScuCcu_init
	jne	d2,#1,.L21
	debug
.L21:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   207  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   208      /* MBIST Tests and evaluation */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   209      IFX_CFG_SSW_CALLOUT_MBIST();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   210  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   211      Ifx_Ssw_jumpToFunction(__StartUpSoftware_Phase5);
	movh.a	a15,#@his(__StartUpSoftware_Phase5)
	lea	a15,[a15]@los(__StartUpSoftware_Phase5)
.L336:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   166      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L200:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   212  }
	ret
.L183:
	
____StartUpSoftware_Phase4_function_end:
	.size	__StartUpSoftware_Phase4,____StartUpSoftware_Phase4_function_end-__StartUpSoftware_Phase4
.L78:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase5',code,cluster('__StartUpSoftware_Phase5')
	.sect	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase5'
	.align	2
	

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   213  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   214  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   215  static void __StartUpSoftware_Phase5(void)
; Function __StartUpSoftware_Phase5
.L39:
__StartUpSoftware_Phase5:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   216  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   217      /* SMU alarm handling */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   218      IFX_CFG_SSW_CALLOUT_SMU();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   219  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   220      Ifx_Ssw_jumpToFunction(__StartUpSoftware_Phase6);
	movh.a	a15,#@his(__StartUpSoftware_Phase6)
	lea	a15,[a15]@los(__StartUpSoftware_Phase6)
.L341:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   166      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L203:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   221  }
	ret
.L202:
	
____StartUpSoftware_Phase5_function_end:
	.size	__StartUpSoftware_Phase5,____StartUpSoftware_Phase5_function_end-__StartUpSoftware_Phase5
.L83:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase6',code,cluster('__StartUpSoftware_Phase6')
	.sect	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase6'
	.align	2
	

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   222  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   223  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   224  static void __StartUpSoftware_Phase6(void)
; Function __StartUpSoftware_Phase6
.L41:
__StartUpSoftware_Phase6:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   225  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   226      /* Start remaining cores as a daisy-chain */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   227  #if (IFX_CFG_SSW_ENABLE_TRICORE1 != 0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   228      Ifx_Ssw_startCore(&MODULE_CPU1, (unsigned int)__START(1));           /*The status returned by function call is ignored */
	movh.a	a4,#63618
.L346:
	movh.a	a15,#@his(__START1)
	lea	a15,[a15]@los(__START1)
	mov.d	d4,a15
.L347:
	call	Ifx_Ssw_startCore
.L348:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   229  #endif /* #if (IFX_CFG_CPU_CSTART_ENABLE_TRICORE1 != 0)*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   230  #if (IFX_CFG_SSW_ENABLE_TRICORE1 != 0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   231  #if (IFX_CFG_SSW_ENABLE_TRICORE2 != 0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   232      Ifx_Ssw_startCore(&MODULE_CPU2, (unsigned int)__START(2));           /*The status returned by function call is ignored */
	movh.a	a4,#63620
.L349:
	movh.a	a15,#@his(__START2)
	lea	a15,[a15]@los(__START2)
	mov.d	d4,a15
.L350:
	call	Ifx_Ssw_startCore
.L351:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   233  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   234  #if (IFX_CFG_SSW_ENABLE_TRICORE2 != 0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   235  #if (IFX_CFG_SSW_ENABLE_TRICORE3 != 0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   236      Ifx_Ssw_startCore(&MODULE_CPU3, (unsigned int)__START(3));           /*The status returned by function call is ignored */
	movh.a	a4,#63622
.L352:
	movh.a	a15,#@his(__START3)
	lea	a15,[a15]@los(__START3)
	mov.d	d4,a15
.L353:
	call	Ifx_Ssw_startCore
.L354:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   237  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   238  #if (IFX_CFG_SSW_ENABLE_TRICORE3 != 0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   239  #if (IFX_CFG_SSW_ENABLE_TRICORE4 != 0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   240      Ifx_Ssw_startCore(&MODULE_CPU4, (unsigned int)__START(4));           /*The status returned by function call is ignored */
	movh.a	a4,#63624
.L355:
	movh.a	a15,#@his(__START4)
	lea	a15,[a15]@los(__START4)
	mov.d	d4,a15
.L356:
	call	Ifx_Ssw_startCore
.L206:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   241  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   242  #if (IFX_CFG_SSW_ENABLE_TRICORE4 == 0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   243  #if (IFX_CFG_SSW_ENABLE_TRICORE5 != 0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   244      Ifx_Ssw_startCore(&MODULE_CPU5, (unsigned int)__START(5));           /*The status returned by function call is ignored */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   245  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   246  #endif /* #if (IFX_CFG_SSW_ENABLE_TRICORE4 == 0) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   247  #endif /* #if (IFX_CFG_SSW_ENABLE_TRICORE3 == 0) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   248  #endif /* #if (IFX_CFG_SSW_ENABLE_TRICORE2 == 0) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   249  #endif /* #if (IFX_CFG_SSW_ENABLE_TRICORE1 == 0) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   250  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   251      Ifx_Ssw_jumpToFunction(__Core0_start);
	movh.a	a15,#@his(__Core0_start)
	lea	a15,[a15]@los(__Core0_start)
.L357:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   166      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L207:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   252  }
	ret
.L205:
	
____StartUpSoftware_Phase6_function_end:
	.size	__StartUpSoftware_Phase6,____StartUpSoftware_Phase6_function_end-__StartUpSoftware_Phase6
.L88:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Tc0.__Core0_start',code,cluster('__Core0_start')
	.sect	'.text.Ifx_Ssw_Tc0.__Core0_start'
	.align	2
	

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   253  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   254  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   255  static void __Core0_start(void)
; Function __Core0_start
.L43:
__Core0_start:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
	ld.w	d15,.2.cnt
.L210:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
	movh.a	a2,#61443
.L213:
	mov.a	a15,d15
	ld.w	d15,[a15]
	extr.u	d15,d15,#2,#14
.L362:
	xor	d8,d15,#63
	ld.w	d15,[a2]@los(0xf00362a8)
.L214:
	extr.u	d15,d15,#2,#14
.L363:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   353  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   354      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   355  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   356  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   357  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   358  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   359  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)
	xor	d9,d15,#63
	ld.w	d15,[a15]
.L221:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)      (inlined)
	jz.t	d15:1,.L22
.L364:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   361      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   362          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   363          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   364                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   365                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sh	d15,d8,#2
	or	d15,#1
.L365:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   366                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	fcall	.cocofun_6
.L274:
	st.w	[a15],d15

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)      (inlined)
.L22:
	sh	d2,d8,#2
	ld.w	d0,.2.cnt
.L366:
	mov.a	a2,d0
.L367:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   367      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   368  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   369      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   370      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   371                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   372                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   373                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	or	d15,d2,#2
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L368:
	sh	d0,d0,#16
.L369:
	or	d0,d15
	st.w	[a2],d0
.L370:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   374  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   375      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   376      watchdog->CON0.U;
	ld.w	d0,[a2]
.L228:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   256  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   257      /* Update safety and cpu/safety watchdog reload values */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   258      /* Password value is read again, because there is chance that local variables may be overridden. */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   259      unsigned short cpuWdtPassword    = Ifx_Ssw_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[0]);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   260      unsigned short safetyWdtPassword = Ifx_Ssw_getSafetyWatchdogPasswordInline();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   261  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   262      Ifx_Ssw_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[0], cpuWdtPassword);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   263  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   264      /* Enable/ Disable the caches depending on the configuration. At this point cache are invalidated */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   265      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   266          Ifx_CPU_PCON0 pcon0;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   267          pcon0.U       = 0;
	mov	d0,#0
.L275:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   268          pcon0.B.PCBYP = IFX_CFG_SSW_ENABLE_TRICORE0_PCACHE ? 0 : 1; /* depending on the enable bypass bit is reset/set */
	insert	d1,d0,#0,#1,#1
.L276:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   269          Ifx_Ssw_MTCR(CPU_PCON0, pcon0.U);
	mtcr	#37388,d1
	isync
.L238:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     2   * \file Ifx_Ssw_CompilersTasking.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     3   * \brief Startup Software for Tasking compiler options
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     8   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     9   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    10   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    11   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    12   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    13   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    14   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    15   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    16   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    17   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    18   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    19   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    20   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    21   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    22   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    23   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    24   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    25   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    26   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    27   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    28   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    29   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    30   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    31   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    32   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    33   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    34   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    35   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    36   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    37   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    38   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    39   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    40  #ifndef IFX_SSW_COMPILERSTASKING_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    41  #define IFX_SSW_COMPILERSTASKING_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    42  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    43  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    44  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    45  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    46  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    47  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    48  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    49  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    50  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    51  /*Linker definitions which are specific to Tasking */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    52  /* IFX_CFG_USE_COMPILER_DEFAULT_LINKER shall be defined in Ifx_Cfg.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    53   * to use the default compiler linker varaibles and startup */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    54  #ifndef IFX_CFG_USE_COMPILER_DEFAULT_LINKER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    56  /*Start: Common definitions ********************************************** */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    57  #define IFX_SSW_COMMON_LINKER_SYMBOLS()                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    58      __asm("\t .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_"); \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    59      extern unsigned int __START0[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    60      extern unsigned int __START1[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    61      extern unsigned int __START2[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    62      extern unsigned int __START3[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    63      extern unsigned int __START4[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    64      extern unsigned int __START5[];     /**< Pointer to the startup code */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    65  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    66  /*End: Common definitions ************************************************ */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    67  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    68  /*Start: Core 0 definitions ********************************************** */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    69  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    70  /*C extern defintions */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    71  #define IFX_SSW_CORE_LINKER_SYMBOLS(cpu)                                                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    72      __asm("\t .extern __USTACK"#cpu);         /**< user stack end is required as asm to be used with setreg macro */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    73      extern unsigned int __ISTACK##cpu[];      /**< interrupt stack end */                                            \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    74      extern unsigned int __INTTAB_CPU##cpu[];  /**< interrupt vector table */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    75      extern unsigned int __TRAPTAB_CPU##cpu[]; /**< trap vector table */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    76      extern unsigned int __CSA##cpu[];         /**< context save area begin */                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    77      extern unsigned int __CSA##cpu##_END[];   /**< context save area end   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    78  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    79  #define __USTACK(cpu)      __USTACK##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    80  #define __ISTACK(cpu)      __ISTACK##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    81  #define __INTTAB_CPU(cpu)  __INTTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    82  #define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    83  #define __CSA(cpu)         __CSA##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    84  #define __CSA_END(cpu)     __CSA##cpu##_END
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    85  #define __START(cpu)       __START##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    86  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    87  /*Wrapper macros for the tool specific definitions */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    88  #if defined(IFX_USE_SW_MANAGED_INT)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    89  #define __INTTAB(cpu)      ((unsigned int)__INTTAB_CPU##cpu | (unsigned int)0x1FE0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    90  #else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    91  #define __INTTAB(cpu)      __INTTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    92  #endif /*defined(IFX_USE_SW_MANAGED_INT) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    94  #define __TRAPTAB(cpu)     __TRAPTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    95  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    96  #define __SDATA1(cpu)      _SMALL_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    97  #define __SDATA2(cpu)      _LITERAL_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    98  #define __SDATA3(cpu)      _A8_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    99  #define __SDATA4(cpu)      _A9_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   100  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   101  #endif /*IFX_CFG_USE_COMPILER_DEFAULT_LINKER*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   103  #ifdef __cplusplus
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   104  #define IFX_SSW_INLINE   static inline
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   105  #else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   106  #define IFX_SSW_INLINE   inline
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   107  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   108  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   109  #define IFX_SSW_NULL_PTR ((void *)0x0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   111  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   112  /*----------------------------   GNU Intrinsics  -----------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   113  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   115  #define Ifx_Ssw_MTCR(reg, val) __mtcr(reg, val);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   116  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   117  #define Ifx_Ssw_MFCR(reg)      __mfcr(reg);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   119  IFX_SSW_INLINE void Ifx_Ssw_NOP(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   120  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   121      __nop();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   122  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   123  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   124  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   125  IFX_SSW_INLINE void Ifx_Ssw_DSYNC(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   126  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   127      __dsync();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   128  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   129  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   130  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   131  IFX_SSW_INLINE void Ifx_Ssw_ISYNC(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   132  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   133      __isync();
	isync
.L235:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   270          Ifx_Ssw_ISYNC();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   271      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   272  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   273      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   274          Ifx_CPU_DCON0 dcon0;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   275          dcon0.U       = 0;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   276          dcon0.B.DCBYP = IFX_CFG_SSW_ENABLE_TRICORE0_DCACHE ? 0 : 1; /* depending on the enable bypass bit is reset/set */
	insert	d0,d0,#0,#1,#1
.L277:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   277          Ifx_Ssw_MTCR(CPU_DCON0, dcon0.U);
	mtcr	#36928,d0
	isync
.L242:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     2   * \file Ifx_Ssw_CompilersTasking.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     3   * \brief Startup Software for Tasking compiler options
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     8   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	     9   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    10   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    11   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    12   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    13   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    14   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    15   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    16   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    17   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    18   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    19   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    20   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    21   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    22   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    23   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    24   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    25   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    26   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    27   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    28   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    29   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    30   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    31   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    32   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    33   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    34   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    35   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    36   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    37   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    38   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    39   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    40  #ifndef IFX_SSW_COMPILERSTASKING_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    41  #define IFX_SSW_COMPILERSTASKING_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    42  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    43  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    44  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    45  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    46  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    47  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    48  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    49  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    50  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    51  /*Linker definitions which are specific to Tasking */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    52  /* IFX_CFG_USE_COMPILER_DEFAULT_LINKER shall be defined in Ifx_Cfg.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    53   * to use the default compiler linker varaibles and startup */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    54  #ifndef IFX_CFG_USE_COMPILER_DEFAULT_LINKER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    56  /*Start: Common definitions ********************************************** */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    57  #define IFX_SSW_COMMON_LINKER_SYMBOLS()                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    58      __asm("\t .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_"); \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    59      extern unsigned int __START0[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    60      extern unsigned int __START1[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    61      extern unsigned int __START2[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    62      extern unsigned int __START3[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    63      extern unsigned int __START4[];     /**< Pointer to the startup code */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    64      extern unsigned int __START5[];     /**< Pointer to the startup code */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    65  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    66  /*End: Common definitions ************************************************ */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    67  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    68  /*Start: Core 0 definitions ********************************************** */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    69  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    70  /*C extern defintions */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    71  #define IFX_SSW_CORE_LINKER_SYMBOLS(cpu)                                                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    72      __asm("\t .extern __USTACK"#cpu);         /**< user stack end is required as asm to be used with setreg macro */ \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    73      extern unsigned int __ISTACK##cpu[];      /**< interrupt stack end */                                            \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    74      extern unsigned int __INTTAB_CPU##cpu[];  /**< interrupt vector table */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    75      extern unsigned int __TRAPTAB_CPU##cpu[]; /**< trap vector table */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    76      extern unsigned int __CSA##cpu[];         /**< context save area begin */                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    77      extern unsigned int __CSA##cpu##_END[];   /**< context save area end   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    78  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    79  #define __USTACK(cpu)      __USTACK##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    80  #define __ISTACK(cpu)      __ISTACK##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    81  #define __INTTAB_CPU(cpu)  __INTTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    82  #define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    83  #define __CSA(cpu)         __CSA##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    84  #define __CSA_END(cpu)     __CSA##cpu##_END
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    85  #define __START(cpu)       __START##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    86  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    87  /*Wrapper macros for the tool specific definitions */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    88  #if defined(IFX_USE_SW_MANAGED_INT)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    89  #define __INTTAB(cpu)      ((unsigned int)__INTTAB_CPU##cpu | (unsigned int)0x1FE0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    90  #else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    91  #define __INTTAB(cpu)      __INTTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    92  #endif /*defined(IFX_USE_SW_MANAGED_INT) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    94  #define __TRAPTAB(cpu)     __TRAPTAB_CPU##cpu
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    95  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    96  #define __SDATA1(cpu)      _SMALL_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    97  #define __SDATA2(cpu)      _LITERAL_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    98  #define __SDATA3(cpu)      _A8_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	    99  #define __SDATA4(cpu)      _A9_DATA_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   100  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   101  #endif /*IFX_CFG_USE_COMPILER_DEFAULT_LINKER*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   103  #ifdef __cplusplus
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   104  #define IFX_SSW_INLINE   static inline
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   105  #else
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   106  #define IFX_SSW_INLINE   inline
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   107  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   108  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   109  #define IFX_SSW_NULL_PTR ((void *)0x0U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   111  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   112  /*----------------------------   GNU Intrinsics  -----------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   113  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   115  #define Ifx_Ssw_MTCR(reg, val) __mtcr(reg, val);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   116  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   117  #define Ifx_Ssw_MFCR(reg)      __mfcr(reg);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   119  IFX_SSW_INLINE void Ifx_Ssw_NOP(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   120  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   121      __nop();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   122  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   123  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   124  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   125  IFX_SSW_INLINE void Ifx_Ssw_DSYNC(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   126  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   127      __dsync();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   128  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   129  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   130  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   131  IFX_SSW_INLINE void Ifx_Ssw_ISYNC(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   132  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   133      __isync();
	isync
.L239:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   278          Ifx_Ssw_ISYNC();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   279      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   280  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   281      /* Set A0 Pointer to access global variables with small data addressing */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   282      Ifx_Ssw_setAddressReg(a0, __SDATA1(0));
	 movh.a	 a0,#@his(_SMALL_DATA_)
 lea	 a0,[a0]@los(_SMALL_DATA_)
.L371:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   283  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   284      /* These to be un commented if A8 and A9 are required to be initialized */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   285      Ifx_Ssw_setAddressReg(a8, __SDATA3(0));
	 movh.a	 a8,#@his(_A8_DATA_)
 lea	 a8,[a8]@los(_A8_DATA_)
.L372:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   286      Ifx_Ssw_setAddressReg(a9, __SDATA4(0));
	 movh.a	 a9,#@his(_A9_DATA_)
 lea	 a9,[a9]@los(_A9_DATA_)
.L373:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   287  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   288      /* Trap vector table initialization is necessary if it is not same as default value */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   289      Ifx_Ssw_MTCR(CPU_BTV, (unsigned int)__TRAPTAB(0));
	movh.a	a4,#@his(__TRAPTAB_CPU0)
	lea	a4,[a4]@los(__TRAPTAB_CPU0)
	mov.d	d0,a4
.L278:
	mtcr	#65060,d0
	isync
.L374:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   290      /* Base interrupt vector table initialized */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   291      Ifx_Ssw_MTCR(CPU_BIV, (unsigned int)__INTTAB(0));
	movh.a	a4,#@his(__INTTAB_CPU0)
	lea	a4,[a4]@los(__INTTAB_CPU0)
	mov.d	d0,a4
	mtcr	#65056,d0
	isync
.L375:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   292      /* Interrupt stack pointer is configured */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   293      Ifx_Ssw_MTCR(CPU_ISP, (unsigned int)__ISTACK(0));
	movh.a	a4,#@his(__ISTACK0)
	lea	a4,[a4]@los(__ISTACK0)
	mov.d	d0,a4
	mtcr	#65064,d0
	isync
.L244:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   353  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   354      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   355  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   356  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   357  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   358  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   359  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   361      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   362          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   363          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   364                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   365                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   366                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   367      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   368  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   369      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   370      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   371                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   372                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   373                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   374  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   375      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   376      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   377  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   378  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   379  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   380  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   381  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   382      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   383      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   384          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   385          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   386                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   387                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   388                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   389      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   390  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   391      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   392      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   393                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   394                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   395                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   396  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   397      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   398      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   399  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   400  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   401  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   402  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   403  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   404      if (watchdog->CON0.B.LCK)
	ld.w	d15,[a15]
.L376:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   404      if (watchdog->CON0.B.LCK)      (inlined)
	jz.t	d15:1,.L23
.L377:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   405      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   406          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   407          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   408                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   409                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	or	d15,d2,#1
.L378:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   410                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	fcall	.cocofun_4

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   404      if (watchdog->CON0.B.LCK)      (inlined)
.L23:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   411      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   412  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   413      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   414      watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   415                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   416                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	or	d15,d2,#3
.L379:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   417                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	fcall	.cocofun_4
.L380:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   418  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   419      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   420      watchdog->CON0.U;
	ld.w	d15,[a2]
.L245:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   294      /* EMEM Initialization */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   295      IFX_CFG_SSW_CALLOUT_EMEM_INIT();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   296  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   297      Ifx_Ssw_setCpuEndinitInline(&MODULE_SCU.WDTCPU[0], cpuWdtPassword);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   298  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   299      /* CPU and safety watchdogs are enabled by default,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   300       * C initialization functions are not servicing the watchdogs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   301       */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   302      Ifx_Ssw_disableCpuWatchdog(&MODULE_SCU.WDTCPU[0], cpuWdtPassword);
	ld.w	d15,.2.cnt
.L215:
	mov	d4,d8
.L216:
	mov.a	a15,d15
.L381:
	mov.aa	a4,a15
	call	Ifx_Ssw_disableCpuWatchdog
.L222:
	mov	d4,d9
	call	Ifx_Ssw_disableSafetyWatchdog
.L223:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   303      Ifx_Ssw_disableSafetyWatchdog(safetyWdtPassword);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   304  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   305      /* Initialization of C runtime variables */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   306      Ifx_Ssw_C_Init();
	call	Ifx_Ssw_C_Init
.L224:
	mov	d4,d9
	call	Ifx_Ssw_enableSafetyWatchdog
.L225:
	mov.aa	a4,a15
.L217:
	mov	d4,d8
	call	Ifx_Ssw_enableCpuWatchdog
.L218:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   307  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   308      Ifx_Ssw_enableSafetyWatchdog(safetyWdtPassword);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   309  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   310  #if (IFX_CFG_SSW_ENABLE_TRICORE0 == 0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   311      /* Set the CPU 0 to Idle mode, if it is not needed to be enabled */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   312      Ifx_Ssw_setCpu0Idle();
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   313  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   314  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   315      Ifx_Ssw_enableCpuWatchdog(&MODULE_SCU.WDTCPU[0], cpuWdtPassword);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   317      /*Call main function of Cpu0 */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   318      Ifx_Ssw_jumpToFunction(core0_main);
	movh.a	a15,#@his(core0_main)
	lea	a15,[a15]@los(core0_main)
.L382:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   166      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L252:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   319  }
	ret
.L209:
	
____Core0_start_function_end:
	.size	__Core0_start,____Core0_start_function_end-__Core0_start
.L93:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Tc0..cocofun_6',code,cluster('.cocofun_6')
	.sect	'.text.Ifx_Ssw_Tc0..cocofun_6'
	.align	2
; Function .cocofun_6
.L45:
.cocofun_6:	.type	func
; Function body .cocofun_6, coco_iter:1

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     4   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     8   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    17   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    24   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    30   * language processor.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    31   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    39   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    40   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    42  #ifndef IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    43  #define IFX_SSW_INFRA_H_
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    44  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    45  #include "Ifx_Ssw_Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    46  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    47  #include "IfxScu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    48  #include "IfxCpu_reg.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    49  #include "IfxScu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    50  #include "IfxCpu_bf.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    51  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    52  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    53  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    54  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    55  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    56  /** \brief PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    57   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    58  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    59      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    63       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    64       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    65       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    66  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    67  /** \brief Application Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    68   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    69  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    70      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    71       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    72       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    73       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    74       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    75       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    76       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    77       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    78       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    79       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    80  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    81  /** \brief Cold PowerOn Reset Mask
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    82   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    83  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    84      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    85       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    86       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    87       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    88  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    89  /** \brief Application reset enabled
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    90   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    91   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    92  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    93  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    94  /** \brief Reload value mask */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    95  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    96  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    97  /** \brief Mask values is used to invert the password value bits */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    98  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	    99  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   100  /** \brief CSA size */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   101  #define IFX_SSW_CSA_SIZE                          16U
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   102  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   103  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   104  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   105  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   106  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   107  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   109  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   110  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   111  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   112  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   113  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   115  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   116  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   117  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   118  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   119  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   120  /*-------------------------Infrastructure Functions---------------------------*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   121  /******************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   122  /** \brief clear safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   123   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   124   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   125  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   126      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   127          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   128          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   129                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   130                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   131                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   132          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   133          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   134                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   135                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   136                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   137          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   138          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   139      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   140  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   141  /** \brief set safety endinit.\n
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   142   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   143   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   144  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   145      {                                                                                                        \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   146          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   147          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   148                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   149                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   150                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   151          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   152          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   153                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   154                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   155                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   156          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   157          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   158      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   159  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   160  /** \brief Fetch current password of CPU Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   161   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   162   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   163   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   164   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   165   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   166   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   167  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   168  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   169  /** \brief Fetch current password of Safety Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   170   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   171   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   172   * password is needed to be passed with most of the WDT APIs.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   173   * \return password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   174   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   175  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   176  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   177  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   178   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   179   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   180   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   181   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   182   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   183   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   185   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   186   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   187  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   188  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   189  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   190   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   191   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   192   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   193   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   194   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   195   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   196   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   197  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   198  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   199  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   200   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   201   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   202   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   203   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   204   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   205   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   206   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   207   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   208  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   209  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   210  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   211   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   212   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   213   * User need to use this API call after modifying any ENDINIT protected register.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   215   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   216   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   217  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   218  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   219  /** \brief Disable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   220   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   221   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   222   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   223   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   224   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   225   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   226   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   227  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   228  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   229  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   230   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   231   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   232   *   periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   233   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   235   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   236   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   237  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   238  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   239  /** \brief Disable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   240   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   241   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   242   * after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   243   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   244   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   245   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   246  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   247  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   248  /** \brief Enable Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   249   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   250   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   251   * periodically after this API call.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   252   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   253   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   254   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   255  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   256  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   257  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   258   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   259   * \param programCounter Program counter value to start the CPU
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   260   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   261  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   262  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   263  /** \brief Set CPU0 to idle state */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   264  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   265  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   266  /** \brief Initialise the C runtime environment */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   267  extern void Ifx_Ssw_C_Init(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   268  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   269  /** \brief Returns the system timer frequency.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   270   * \return the system timer frequency in Hz.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   271   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   272  extern float Ifx_Ssw_getStmFrequency(void);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   273  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   274  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   275   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   276   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   277   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   278   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   279   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   280   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   281   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   282   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   283  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   284  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   285  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   286   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   287   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   288   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   289   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   290   * \param password Existing (Application specific) password for the Watchdog module.
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   291   * \return None
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   292   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   293  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   294  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   295  /*Endinit Functions*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   296  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   297  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   298      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   299       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   300       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   301  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   302      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   303      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   304  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   305  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   306  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   307  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   308  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   309      /* Clear EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   310      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   311  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   312      /* Read back of the register is mandatory to ensure the register update */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   313      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   314  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   315  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   316  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   317  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   318  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   319      /* Set EndInit Watch-dog*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   320      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   321                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   322                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   323  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   324      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   325      MODULE_SCU.SEICON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   326  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   327  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   328  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   329  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   330  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   331      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   332  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   333      /* Read Password from CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   334       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   335       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   336      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   337      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   338  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   339      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   340  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   341  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   342  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   343  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   344  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   345      unsigned short password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   346      Ifx_SCU_WDTS  *watchdog;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   347      watchdog  = &MODULE_SCU.WDTS;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   348      /* Read Password from Safety WDT CON0 register
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   349       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   350       * to toggle them before returning password */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   351      password  = watchdog->CON0.B.PW;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   352      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   353  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   354      return password;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   355  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   356  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   357  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   358  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   359  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   360      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   361      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   362          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   363          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   364                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   365                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   366                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L408:
	sh	d0,d0,#16
.L409:
	or	d15,d0
	fret
.L118:
	; End of function
	.sdecl	'.text.Ifx_Ssw_Tc0..cocofun_4',code,cluster('.cocofun_4')
	.sect	'.text.Ifx_Ssw_Tc0..cocofun_4'
	.align	2
; Function .cocofun_4
.L47:
.cocofun_4:	.type	func
; Function body .cocofun_4, coco_iter:0

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   367      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   368  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   369      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   370      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   371                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   372                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   373                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   374  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   375      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   376      watchdog->CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   377  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   378  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   379  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   380  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   381  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   382      if (SCU_WDTS_CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   383      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   384          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   385          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   386                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   387                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   388                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   389      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   390  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   391      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   392      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   393                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   394                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   395                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   396  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   397      /* Read back of the register is mandatory to ensure the register update  */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   398      SCU_WDTS_CON0.U;
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   399  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   400  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   401  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   402  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   403  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   404      if (watchdog->CON0.B.LCK)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   405      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   406          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   407          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   408                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   409                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Infra.h	   410                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	fcall	.cocofun_6
.L279:
	st.w	[a2],d15
.L399:
	fret
.L108:
	; End of function
	.sdecl	'.text.start',code,cluster('_START'),protect
	.sect	'.text.start'
	.align	2
	
	.global	_START

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   320  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   321  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   322  /******************************************************************************
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   323   *                        reset vector address                                *
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   324   *****************************************************************************/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   325  #if defined(__HIGHTEC__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   326  #pragma section
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   327  #pragma section ".start" x
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   328  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   329  #if defined(__TASKING__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   330  #pragma protect on
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   331  #pragma section code "start"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   332  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   333  #if defined(__DCC__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   334  #pragma section CODE ".start" X
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   335  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   336  #if defined(__ghs__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   337  #pragma ghs section text=".start"
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   338  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   339  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   340  void _START(void)
; Function _START
.L49:
_START:	.type	func

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   341  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   342      Ifx_Ssw_jumpToFunction(__StartUpSoftware);
	movh.a	a15,#@his(__StartUpSoftware)
	lea	a15,[a15]@los(__StartUpSoftware)
.L387:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   166      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L255:

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   343  }
	ret
.L254:
	
___START_function_end:
	.size	_START,___START_function_end-_START
.L98:
	; End of function
	
	.calls	'__INDIRECT__','Ifx_Ssw_Pms_Init'
	.calls	'__INDIRECT__','Ifx_Ssw_Pms_InitCheck'
	.calls	'__INDIRECT__','__StartUpSoftware'
	.calls	'__INDIRECT__','__StartUpSoftware_Phase2'
	.calls	'__INDIRECT__','__StartUpSoftware_Phase3ApplicationResetPath'
	.calls	'__INDIRECT__','__StartUpSoftware_Phase3PowerOnResetPath'
	.calls	'__INDIRECT__','__StartUpSoftware_Phase4'
	.calls	'__INDIRECT__','__StartUpSoftware_Phase5'
	.calls	'__INDIRECT__','__StartUpSoftware_Phase6'
	.calls	'__INDIRECT__','__Core0_start'
	.calls	'__INDIRECT__','core0_main'
	.calls	'__StartUpSoftware_Phase4','Ifx_Ssw_serviceCpuWatchdog'
	.calls	'__StartUpSoftware_Phase4','Ifx_Ssw_serviceSafetyWatchdog'
	.calls	'__StartUpSoftware_Phase4','IfxScuCcu_init'
	.calls	'__StartUpSoftware_Phase6','Ifx_Ssw_startCore'
	.calls	'__Core0_start','Ifx_Ssw_disableCpuWatchdog'
	.calls	'__Core0_start','Ifx_Ssw_disableSafetyWatchdog'
	.calls	'__Core0_start','Ifx_Ssw_C_Init'
	.calls	'__Core0_start','Ifx_Ssw_enableSafetyWatchdog'
	.calls	'__Core0_start','Ifx_Ssw_enableCpuWatchdog'
	.calls	'__StartUpSoftware_Phase3PowerOnResetPath','.cocofun_5'
	.calls	'__StartUpSoftware_Phase3PowerOnResetPath','.cocofun_3'
	.calls	'__StartUpSoftware_Phase3ApplicationResetPath','.cocofun_5'
	.calls	'__StartUpSoftware_Phase3ApplicationResetPath','.cocofun_3'
	.calls	'__Core0_start','.cocofun_6'
	.calls	'__Core0_start','.cocofun_4'
	.calls	'.cocofun_4','.cocofun_6'
	.calls	'__StartUpSoftware','',0
	.calls	'__StartUpSoftware_Phase2','',0
	.calls	'__StartUpSoftware_Phase3PowerOnResetPath','',0
	.calls	'.cocofun_5','',0
	.calls	'.cocofun_3','',0
	.calls	'__StartUpSoftware_Phase3ApplicationResetPath','',0
	.calls	'__StartUpSoftware_Phase4','',0
	.calls	'__StartUpSoftware_Phase5','',0
	.calls	'__StartUpSoftware_Phase6','',0
	.calls	'__Core0_start','',0
	.calls	'.cocofun_6','',0
	.calls	'.cocofun_4','',0
	.extern	IfxScuCcu_init
	.extern	IfxScuCcu_defaultClockConfig
	.extern	Ifx_Ssw_Pms_Init
	.extern	Ifx_Ssw_Pms_InitCheck
	.extern	Ifx_Ssw_disableCpuWatchdog
	.extern	Ifx_Ssw_enableCpuWatchdog
	.extern	Ifx_Ssw_disableSafetyWatchdog
	.extern	Ifx_Ssw_enableSafetyWatchdog
	.extern	Ifx_Ssw_startCore
	.extern	Ifx_Ssw_C_Init
	.extern	Ifx_Ssw_serviceCpuWatchdog
	.extern	Ifx_Ssw_serviceSafetyWatchdog
	.extern	__START1
	.extern	__START2
	.extern	__START3
	.extern	__START4
	.extern	__ISTACK0
	.extern	__INTTAB_CPU0
	.extern	__TRAPTAB_CPU0
	.extern	__CSA0
	.extern	__CSA0_END
	.extern	core0_main
	.extern	__INDIRECT__
	.calls	'_START','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L51:
	.word	126995
	.half	3
	.word	.L52
	.byte	4
.L50:
	.byte	1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L53
.L144:
	.byte	2
	.byte	'Ifx_Ssw_DSYNC',0,3,1,125,21,1,1
.L147:
	.byte	3,0
.L162:
	.byte	2
	.byte	'Ifx_Ssw_ISYNC',0,3,1,131,1,21,1,1
.L164:
	.byte	3,0,4
	.byte	'void',0,5
	.word	218
.L128:
	.byte	2
	.byte	'Ifx_Ssw_jumpToFunction',0,3,1,164,1,21,1,1
.L130:
	.byte	6
	.byte	'fun',0,1,164,1,50
	.word	224
.L132:
	.byte	3,0
.L135:
	.byte	2
	.byte	'Ifx_Ssw_jumpToFunctionWithLink',0,3,1,170,1,21,1,1
.L137:
	.byte	6
	.byte	'fun',0,1,170,1,58
	.word	224
.L139:
	.byte	3,0,7,1,1,5
	.word	329
	.byte	2
	.byte	'Ifx__jump_and_link',0,3,2,58,17,1,1,6
	.byte	'fun',0,2,58,43
	.word	332
	.byte	3,0,8
	.byte	'__fract',0,4,128,1,8
	.byte	'float',0,4,4,9
	.byte	'Ifx__float_to_fract',0,3,2,149,2,18
	.word	377
	.byte	1,1,6
	.byte	'a',0,2,149,2,44
	.word	389
	.byte	3,0,2
	.byte	'Ifx__stopPerfCounters',0,3,2,169,2,17,1,1,3,0,8
	.byte	'unsigned long long int',0,8,7,9
	.byte	'__ld64',0,3,3,132,1,19
	.word	475
	.byte	1,1,6
	.byte	'addr',0,3,132,1,32
	.word	224
	.byte	3,0,2
	.byte	'__st64',0,3,3,140,1,17,1,1,6
	.byte	'addr',0,3,140,1,30
	.word	224
	.byte	6
	.byte	'value',0,3,140,1,43
	.word	475
	.byte	3,0
.L126:
	.byte	8
	.byte	'unsigned int',0,4,7,8
	.byte	'int',0,4,5,8
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,5,238,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	605
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	605
	.byte	16,0,2,35,0,0,12,5,189,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	621
	.byte	4,2,35,0,0
.L124:
	.byte	8
	.byte	'unsigned char',0,1,8
.L195:
	.byte	8
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,5,247,9,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	757
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	16,0,2,35,2,0,12,5,197,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	796
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,5,135,10,16,4,11
	.byte	'AE',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	757
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	774
	.byte	16,0,2,35,2,0,12,5,205,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1062
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,5,136,17,25,12,13
	.byte	'CON0',0
	.word	717
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	1022
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1253
	.byte	4,2,35,8,0,14
	.word	1293
	.byte	5
	.word	1356
	.byte	2
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,4,164,4,17,1,1,6
	.byte	'watchdog',0,4,164,4,65
	.word	1361
	.byte	6
	.byte	'password',0,4,164,4,82
	.word	774
	.byte	3,0,2
	.byte	'IfxScuWdt_clearGlobalSafetyEndinitInline',0,3,4,187,4,17,1,1,6
	.byte	'password',0,4,187,4,65
	.word	774
	.byte	3,0,2
	.byte	'IfxScuWdt_clearSafetyEndinitInline',0,3,4,197,4,17,1,1,6
	.byte	'password',0,4,197,4,59
	.word	774
	.byte	3,0,9
	.byte	'IfxScuWdt_getGlobalSafetyEndinitPasswordInline',0,3,4,240,4,19
	.word	774
	.byte	1,1,3,0,2
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,4,144,5,17,1,1,6
	.byte	'watchdog',0,4,144,5,63
	.word	1361
	.byte	6
	.byte	'password',0,4,144,5,80
	.word	774
	.byte	3,0,2
	.byte	'IfxScuWdt_setGlobalSafetyEndinitInline',0,3,4,167,5,17,1,1,6
	.byte	'password',0,4,167,5,63
	.word	774
	.byte	3,0,2
	.byte	'IfxScuWdt_setSafetyEndinitInline',0,3,4,177,5,17,1,1,6
	.byte	'password',0,4,177,5,57
	.word	774
	.byte	3,0,9
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,4,220,4,19
	.word	774
	.byte	1,1,6
	.byte	'watchdog',0,4,220,4,74
	.word	1361
	.byte	3,0,9
	.byte	'IfxScuWdt_getSafetyWatchdogPasswordInline',0,3,4,129,5,19
	.word	774
	.byte	1,1,3,0,10
	.byte	'_Ifx_P_OUT_Bits',0,7,145,3,16,4,11
	.byte	'P0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	16,0,2,35,2,0,12,7,171,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1968
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,7,171,2,16,4,11
	.byte	'PS0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	757
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	757
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	757
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	757
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	757
	.byte	1,0,2,35,3,0,12,7,251,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2284
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,7,133,1,16,4,11
	.byte	'MODREV',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	774
	.byte	16,0,2,35,2,0,12,7,155,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2855
	.byte	4,2,35,0,0,15,4
	.word	757
	.byte	16,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,7,163,1,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	757
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	757
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	757
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	757
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	757
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	757
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	757
	.byte	5,0,2,35,3,0,12,7,171,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2984
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,7,189,1,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	757
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	757
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	757
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	757
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	757
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	757
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	757
	.byte	5,0,2,35,3,0,12,7,187,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3199
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,7,202,1,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	757
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	757
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	757
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	757
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	757
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	757
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	757
	.byte	5,0,2,35,3,0,12,7,195,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3414
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,7,176,1,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	757
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	757
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	757
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	757
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	757
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	757
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	757
	.byte	5,0,2,35,3,0,12,7,179,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3631
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,7,141,1,16,4,11
	.byte	'P0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	16,0,2,35,2,0,12,7,163,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3851
	.byte	4,2,35,0,0,15,24
	.word	757
	.byte	16,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,7,212,3,16,4,11
	.byte	'PD0',0,1
	.word	757
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	757
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	757
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	757
	.byte	2,0,2,35,0,11
	.byte	'PD2',0,1
	.word	757
	.byte	2,6,2,35,1,11
	.byte	'PL2',0,1
	.word	757
	.byte	2,4,2,35,1,11
	.byte	'PD3',0,1
	.word	757
	.byte	2,2,2,35,1,11
	.byte	'PL3',0,1
	.word	757
	.byte	2,0,2,35,1,11
	.byte	'PD4',0,1
	.word	757
	.byte	2,6,2,35,2,11
	.byte	'PL4',0,1
	.word	757
	.byte	2,4,2,35,2,11
	.byte	'PD5',0,1
	.word	757
	.byte	2,2,2,35,2,11
	.byte	'PL5',0,1
	.word	757
	.byte	2,0,2,35,2,11
	.byte	'PD6',0,1
	.word	757
	.byte	2,6,2,35,3,11
	.byte	'PL6',0,1
	.word	757
	.byte	2,4,2,35,3,11
	.byte	'PD7',0,1
	.word	757
	.byte	2,2,2,35,3,11
	.byte	'PL7',0,1
	.word	757
	.byte	2,0,2,35,3,0,12,7,195,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4175
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,7,233,3,16,4,11
	.byte	'PD8',0,1
	.word	757
	.byte	2,6,2,35,0,11
	.byte	'PL8',0,1
	.word	757
	.byte	2,4,2,35,0,11
	.byte	'PD9',0,1
	.word	757
	.byte	2,2,2,35,0,11
	.byte	'PL9',0,1
	.word	757
	.byte	2,0,2,35,0,11
	.byte	'PD10',0,1
	.word	757
	.byte	2,6,2,35,1,11
	.byte	'PL10',0,1
	.word	757
	.byte	2,4,2,35,1,11
	.byte	'PD11',0,1
	.word	757
	.byte	2,2,2,35,1,11
	.byte	'PL11',0,1
	.word	757
	.byte	2,0,2,35,1,11
	.byte	'PD12',0,1
	.word	757
	.byte	2,6,2,35,2,11
	.byte	'PL12',0,1
	.word	757
	.byte	2,4,2,35,2,11
	.byte	'PD13',0,1
	.word	757
	.byte	2,2,2,35,2,11
	.byte	'PL13',0,1
	.word	757
	.byte	2,0,2,35,2,11
	.byte	'PD14',0,1
	.word	757
	.byte	2,6,2,35,3,11
	.byte	'PL14',0,1
	.word	757
	.byte	2,4,2,35,3,11
	.byte	'PD15',0,1
	.word	757
	.byte	2,2,2,35,3,11
	.byte	'PL15',0,1
	.word	757
	.byte	2,0,2,35,3,0,12,7,203,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4479
	.byte	4,2,35,0,0,15,8
	.word	757
	.byte	16,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,7,111,16,4,11
	.byte	'EN0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	16,0,2,35,2,0,12,7,147,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4804
	.byte	4,2,35,0,0,15,12
	.word	757
	.byte	16,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,7,190,3,16,4,11
	.byte	'PDIS0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	16,0,2,35,2,0,12,7,187,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5144
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,7,167,3,16,4,11
	.byte	'SEL0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'SEL8',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'SEL9',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'SEL12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'SEL13',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'SEL14',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'SEL15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,12,7,179,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5510
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,7,230,2,16,4,11
	.byte	'PS0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	582
	.byte	28,0,2,35,0,0,12,7,139,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5874
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,7,251,2,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	582
	.byte	24,0,2,35,0,0,12,7,155,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6021
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,7,134,3,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	582
	.byte	20,0,2,35,0,0,12,7,163,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6190
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,7,240,2,16,4,11
	.byte	'reserved_0',0,2
	.word	774
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	16,0,2,35,2,0,12,7,147,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6362
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,7,128,2,16,4,11
	.byte	'reserved_0',0,2
	.word	774
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	774
	.byte	12,0,2,35,2,0,12,7,219,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6537
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,7,149,2,16,4,11
	.byte	'reserved_0',0,4
	.word	582
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	757
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	757
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	757
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	757
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	757
	.byte	8,0,2,35,3,0,12,7,235,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6711
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,7,160,2,16,4,11
	.byte	'reserved_0',0,4
	.word	582
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	757
	.byte	4,0,2,35,3,0,12,7,243,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6885
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,7,139,2,16,4,11
	.byte	'reserved_0',0,4
	.word	582
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	757
	.byte	1,0,2,35,3,0,12,7,227,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7061
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,7,208,2,16,4,11
	.byte	'PS0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	16,0,2,35,2,0,12,7,131,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7217
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,7,234,1,16,4,11
	.byte	'reserved_0',0,2
	.word	774
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	757
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	757
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	757
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	757
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	757
	.byte	1,0,2,35,3,0,12,7,211,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7550
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR_Bits',0,7,215,1,16,4,11
	.byte	'REN_CTRL',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'RX_EN',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	757
	.byte	3,2,2,35,0,11
	.byte	'LVDSM',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'PS',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'TEN_CTRL',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'TX_EN',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'VDIFFADJ',0,1
	.word	757
	.byte	2,4,2,35,1,11
	.byte	'VOSDYN',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'VOSEXT',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	16,0,2,35,2,0,12,7,203,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7898
	.byte	4,2,35,0,0,15,32
	.word	8178
	.byte	16,7,0,15,56
	.word	757
	.byte	16,55,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,7,105,16,4,11
	.byte	'reserved_0',0,4
	.word	582
	.byte	32,0,2,35,0,0,12,7,139,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8236
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,7,68,16,4,11
	.byte	'EN0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	757
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	757
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	757
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	757
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	757
	.byte	1,0,2,35,3,0,12,7,131,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8323
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,7,220,5,25,128,2,13
	.byte	'OUT',0
	.word	2244
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	2815
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	2935
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2975
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	3159
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	3374
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3591
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	3811
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	2975
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	4126
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4166
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	4439
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4755
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	4795
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	5095
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	5135
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5470
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5834
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	4795
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	5981
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	6150
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	6322
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	6497
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6671
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6845
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	7021
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	7177
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	7510
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	7858
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	4795
	.byte	8,3,35,152,1,13
	.byte	'LPCR',0
	.word	8218
	.byte	32,3,35,160,1,13
	.byte	'reserved_C0',0
	.word	8227
	.byte	56,3,35,192,1,13
	.byte	'ACCEN1',0
	.word	8283
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	8850
	.byte	4,3,35,252,1,0,14
	.word	8890
	.byte	5
	.word	9460
	.byte	17,6,187,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0,2
	.byte	'IfxPort_setPinState',0,3,6,169,5,17,1,1,6
	.byte	'port',0,6,169,5,44
	.word	9465
	.byte	6
	.byte	'pinIndex',0,6,169,5,56
	.word	757
	.byte	6
	.byte	'action',0,6,169,5,80
	.word	9470
	.byte	3,0,2
	.byte	'IfxScuCcu_wait',0,3,8,157,14,17,1,1,6
	.byte	'timeSec',0,8,157,14,40
	.word	389
	.byte	19,3,0,0,9
	.byte	'IfxScuCcu_getStmFrequency',0,3,8,188,13,20
	.word	389
	.byte	1,1,3,0,17,10,161,1,9,1,18
	.byte	'IfxCpu_ResourceCpu_0',0,0,18
	.byte	'IfxCpu_ResourceCpu_1',0,1,18
	.byte	'IfxCpu_ResourceCpu_2',0,2,18
	.byte	'IfxCpu_ResourceCpu_3',0,3,18
	.byte	'IfxCpu_ResourceCpu_4',0,4,18
	.byte	'IfxCpu_ResourceCpu_5',0,5,18
	.byte	'IfxCpu_ResourceCpu_none',0,6,0,9
	.byte	'IfxCpu_getCoreIndex',0,3,9,235,6,31
	.word	9735
	.byte	1,1,3,0,9
	.byte	'IfxCpu_areInterruptsEnabled',0,3,9,233,5,20
	.word	757
	.byte	1,1,3,0,8
	.byte	'unsigned long int',0,4,7,9
	.byte	'IfxCpu_getPerformanceCounter',0,3,9,255,6,19
	.word	9982
	.byte	1,1,6
	.byte	'address',0,9,255,6,55
	.word	774
	.byte	3,0,9
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,9,156,7,20
	.word	757
	.byte	1,1,6
	.byte	'address',0,9,156,7,70
	.word	774
	.byte	3,0,2
	.byte	'IfxCpu_updatePerformanceCounter',0,3,9,138,9,17,1,1,6
	.byte	'address',0,9,138,9,56
	.word	9982
	.byte	6
	.byte	'count',0,9,138,9,72
	.word	9982
	.byte	19,3,0,0,2
	.byte	'IfxPmsEvr_wait',0,3,11,205,9,17,1,1,6
	.byte	'waitInSec',0,11,205,9,40
	.word	389
	.byte	3,0
.L185:
	.byte	9
	.byte	'Ifx_Ssw_getCpuWatchdogPasswordInline',0,3,12,201,2,31
	.word	774
	.byte	1,1
.L187:
	.byte	6
	.byte	'watchdog',0,12,201,2,84
	.word	1361
.L189:
	.byte	3,0
.L197:
	.byte	9
	.byte	'Ifx_Ssw_getSafetyWatchdogPasswordInline',0,3,12,215,2,31
	.word	774
	.byte	1,1
.L198:
	.byte	3,0
.L227:
	.byte	2
	.byte	'Ifx_Ssw_clearCpuEndinitInline',0,3,12,230,2,21,1,1
.L229:
	.byte	6
	.byte	'watchdog',0,12,230,2,67
	.word	1361
.L231:
	.byte	6
	.byte	'password',0,12,230,2,92
	.word	774
.L233:
	.byte	3,0
.L243:
	.byte	2
	.byte	'Ifx_Ssw_setCpuEndinitInline',0,3,12,146,3,21,1,1
.L246:
	.byte	6
	.byte	'watchdog',0,12,146,3,65
	.word	1361
.L248:
	.byte	6
	.byte	'password',0,12,146,3,90
	.word	774
.L250:
	.byte	3,0
.L120:
	.byte	9
	.byte	'Ifx_Ssw_isApplicationReset',0,3,12,203,3,30
	.word	757
	.byte	1,1
.L123:
	.byte	3,0
.L157:
	.byte	5
	.word	582
.L148:
	.byte	2
	.byte	'Ifx_Ssw_initCSA',0,3,12,250,3,21,1,1
.L150:
	.byte	6
	.byte	'csaBegin',0,12,250,3,51
	.word	10571
.L152:
	.byte	6
	.byte	'csaEnd',0,12,250,3,75
	.word	10571
.L154:
	.byte	19,3,0,0,20
	.word	598
	.byte	21
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,22
	.word	10638
	.byte	0,14
	.word	582
	.byte	23
	.byte	'__cmpswapw',0
	.word	10680
	.byte	1,1,1,1,24
	.byte	'p',0
	.word	10571
	.byte	24
	.byte	'value',0
	.word	582
	.byte	24
	.byte	'compare',0
	.word	582
	.byte	0,23
	.byte	'__clz',0
	.word	598
	.byte	1,1,1,1,22
	.word	598
	.byte	0,21
	.byte	'__mtcr',0,1,1,1,1,22
	.word	598
	.byte	22
	.word	598
	.byte	0,25
	.byte	'__debug',0,1,1,1,1,25
	.byte	'__isync',0,1,1,1,1,25
	.byte	'__dsync',0,1,1,1,1,26
	.word	171
	.byte	3,0,26
	.word	194
	.byte	3,0,26
	.word	229
	.byte	27
	.word	260
	.byte	3,0,26
	.word	275
	.byte	27
	.word	314
	.byte	3,0,26
	.word	337
	.byte	27
	.word	363
	.byte	3,0,26
	.word	398
	.byte	27
	.word	430
	.byte	3,0,26
	.word	443
	.byte	3,0,26
	.word	501
	.byte	27
	.word	520
	.byte	3,0,26
	.word	536
	.byte	27
	.word	551
	.byte	27
	.word	565
	.byte	3,0,26
	.word	1366
	.byte	27
	.word	1406
	.byte	27
	.word	1424
	.byte	3,0,26
	.word	1444
	.byte	27
	.word	1493
	.byte	3,0,26
	.word	1513
	.byte	27
	.word	1556
	.byte	3,0,26
	.word	1576
	.byte	3,0,26
	.word	1637
	.byte	27
	.word	1675
	.byte	27
	.word	1693
	.byte	3,0,26
	.word	1713
	.byte	27
	.word	1760
	.byte	3,0,26
	.word	1780
	.byte	27
	.word	1821
	.byte	3,0,26
	.word	1841
	.byte	27
	.word	1892
	.byte	3,0,26
	.word	1912
	.byte	3,0,26
	.word	9573
	.byte	27
	.word	9601
	.byte	27
	.word	9615
	.byte	27
	.word	9633
	.byte	3,0,26
	.word	9651
	.byte	27
	.word	9674
	.byte	19,28
	.word	9695
	.byte	29
	.word	9733
	.byte	0,3,0,0,26
	.word	9695
	.byte	3,0,17,8,254,3,9,1,18
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc1',0,0,18
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc0',0,1,18
	.byte	'IfxScuCcu_PllInputClockSelection_fSysclk',0,2,0,30,8,176,4,9,4,13
	.byte	'pDivider',0
	.word	757
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	757
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	757
	.byte	1,2,35,2,0,30,8,162,4,9,6,13
	.byte	'pDivider',0
	.word	757
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	757
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	757
	.byte	1,2,35,2,13
	.byte	'k3Divider',0
	.word	757
	.byte	1,2,35,3,13
	.byte	'k3DividerBypass',0
	.word	757
	.byte	1,2,35,4,0,30,8,205,4,9,16,13
	.byte	'xtalFrequency',0
	.word	9982
	.byte	4,2,35,0,13
	.byte	'pllInputClockSelection',0
	.word	11080
	.byte	1,2,35,4,13
	.byte	'sysPllConfig',0
	.word	11212
	.byte	4,2,35,6,13
	.byte	'perPllConfig',0
	.word	11274
	.byte	6,2,35,10,0,30,8,247,4,9,20,13
	.byte	'pllsParameters',0
	.word	11380
	.byte	16,2,35,0,13
	.byte	'waitTime',0
	.word	389
	.byte	4,2,35,16,0,30,8,197,4,9,6,13
	.byte	'k2Step',0
	.word	757
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	389
	.byte	4,2,35,2,0,20
	.word	11535
	.byte	5
	.word	11576
	.byte	30,8,255,4,9,8,13
	.byte	'numOfSteps',0
	.word	757
	.byte	1,2,35,0,13
	.byte	'pllSteps',0
	.word	11581
	.byte	4,2,35,4,0,30,8,189,4,9,8,13
	.byte	'value',0
	.word	9982
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	9982
	.byte	4,2,35,4,0,30,8,231,4,9,80,13
	.byte	'ccucon0',0
	.word	11631
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	11631
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	11631
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	11631
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	11631
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	11631
	.byte	8,2,35,40,13
	.byte	'ccucon8',0
	.word	11631
	.byte	8,2,35,48,13
	.byte	'ccucon9',0
	.word	11631
	.byte	8,2,35,56,13
	.byte	'ccucon10',0
	.word	11631
	.byte	8,2,35,64,13
	.byte	'ccucon11',0
	.word	11631
	.byte	8,2,35,72,0,30,8,219,4,9,8,13
	.byte	'value',0
	.word	9982
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	9982
	.byte	4,2,35,4,0,20
	.word	11846
	.byte	5
	.word	11882
	.byte	17,8,147,4,9,1,18
	.byte	'IfxScuCcu_ModEn_disabled',0,0,18
	.byte	'IfxScuCcu_ModEn_enabled',0,1,0,17,8,220,2,9,1,18
	.byte	'IfxScuCcu_ModulationAmplitude_0p5',0,0,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p0',0,1,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p25',0,2,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p5',0,3,18
	.byte	'IfxScuCcu_ModulationAmplitude_2p0',0,4,18
	.byte	'IfxScuCcu_ModulationAmplitude_2p5',0,5,18
	.byte	'IfxScuCcu_ModulationAmplitude_count',0,6,0,30,8,137,5,9,2,13
	.byte	'Mod_Enable',0
	.word	11892
	.byte	1,2,35,0,13
	.byte	'Mod_Amp',0
	.word	11952
	.byte	1,2,35,1,0,20
	.word	12214
	.byte	5
	.word	12258
	.byte	30,8,147,5,9,116,13
	.byte	'pllInitialStepConfig',0
	.word	11486
	.byte	20,2,35,0,13
	.byte	'sysPllThrottleConfig',0
	.word	11586
	.byte	8,2,35,20,13
	.byte	'clockDistribution',0
	.word	11667
	.byte	80,2,35,28,13
	.byte	'flashFconWaitStateConfig',0
	.word	11887
	.byte	4,2,35,108,13
	.byte	'modulationConfig',0
	.word	12263
	.byte	4,2,35,112,0,20
	.word	12268
	.byte	5
	.word	12422
	.byte	31
	.byte	'IfxScuCcu_init',0,8,189,8,20
	.word	757
	.byte	1,1,1,1,6
	.byte	'config',0,8,189,8,59
	.word	12427
	.byte	0,26
	.word	9906
	.byte	3,0,26
	.word	9940
	.byte	3,0,26
	.word	10003
	.byte	27
	.word	10044
	.byte	3,0,26
	.word	10063
	.byte	27
	.word	10118
	.byte	3,0,26
	.word	10137
	.byte	27
	.word	10177
	.byte	27
	.word	10194
	.byte	19,3,0,0,26
	.word	10213
	.byte	27
	.word	10236
	.byte	3,0,32
	.byte	'Ifx_Ssw_Pms_Init',0,13,92,13,1,1,1,1,32
	.byte	'Ifx_Ssw_Pms_InitCheck',0,13,93,13,1,1,1,1,33
	.byte	'Ifx_Ssw_disableCpuWatchdog',0,12,227,1,13,1,1,1,1,6
	.byte	'watchdog',0,12,227,1,56
	.word	1361
	.byte	6
	.byte	'password',0,12,227,1,81
	.word	774
	.byte	0,33
	.byte	'Ifx_Ssw_enableCpuWatchdog',0,12,237,1,13,1,1,1,1,6
	.byte	'watchdog',0,12,237,1,55
	.word	1361
	.byte	6
	.byte	'password',0,12,237,1,80
	.word	774
	.byte	0,33
	.byte	'Ifx_Ssw_disableSafetyWatchdog',0,12,246,1,13,1,1,1,1,6
	.byte	'password',0,12,246,1,58
	.word	774
	.byte	0,33
	.byte	'Ifx_Ssw_enableSafetyWatchdog',0,12,255,1,13,1,1,1,1,6
	.byte	'password',0,12,255,1,57
	.word	774
	.byte	0,15,128,34
	.word	757
	.byte	16,255,33,0,10
	.byte	'_Ifx_CPU_FLASHCON0_Bits',0,14,144,4,16,4,11
	.byte	'TAG1',0,4
	.word	605
	.byte	6,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	605
	.byte	2,24,2,35,0,11
	.byte	'TAG2',0,4
	.word	605
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	605
	.byte	2,16,2,35,0,11
	.byte	'TAG3',0,4
	.word	605
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	605
	.byte	2,8,2,35,0,11
	.byte	'TAG4',0,4
	.word	605
	.byte	6,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	605
	.byte	2,0,2,35,0,0,12,14,236,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12872
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FLASHCON1_Bits',0,14,157,4,16,4,11
	.byte	'STALL',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	605
	.byte	15,16,2,35,0,11
	.byte	'MASKUECC',0,4
	.word	605
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	605
	.byte	6,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	605
	.byte	2,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	605
	.byte	6,0,2,35,0,0,12,14,244,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13098
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FLASHCON2_Bits',0,14,168,4,16,4,11
	.byte	'RECDIS',0,4
	.word	605
	.byte	2,30,2,35,0,11
	.byte	'ECCCORDIS',0,4
	.word	605
	.byte	2,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	605
	.byte	4,24,2,35,0,11
	.byte	'HMARGIN',0,4
	.word	605
	.byte	2,22,2,35,0,11
	.byte	'MSEL',0,4
	.word	605
	.byte	2,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	605
	.byte	4,16,2,35,0,11
	.byte	'ECCSCLR',0,4
	.word	605
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	605
	.byte	6,8,2,35,0,11
	.byte	'SBABCLR',0,4
	.word	605
	.byte	2,6,2,35,0,11
	.byte	'DBABCLR',0,4
	.word	605
	.byte	2,4,2,35,0,11
	.byte	'MBABCLR',0,4
	.word	605
	.byte	2,2,2,35,0,11
	.byte	'ZBABCLR',0,4
	.word	605
	.byte	2,0,2,35,0,0,12,14,252,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13297
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FLASHCON3_Bits',0,14,185,4,16,4,11
	.byte	'ECCERRINJ',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'EDCERRINJ',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'SBABERRINJ',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'DBABERRINJ',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'MBABERRINJ',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'ZBABERRINJ',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'SBERERRINJ',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'DBERERRINJ',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'NVMCERRINJ',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'FLCONERRINJ',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	605
	.byte	22,0,2,35,0,0,12,14,132,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13605
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FLASHCON4_Bits',0,14,201,4,16,4,11
	.byte	'DDIS',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	605
	.byte	31,0,2,35,0,0,12,14,140,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13918
	.byte	4,2,35,0,0,15,236,253,2
	.word	757
	.byte	16,235,253,2,0,10
	.byte	'_Ifx_CPU_KRST0_Bits',0,14,159,5,16,4,11
	.byte	'RST',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'RSTSTAT',0,4
	.word	605
	.byte	2,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	605
	.byte	29,0,2,35,0,0,12,14,220,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14040
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_KRST1_Bits',0,14,167,5,16,4,11
	.byte	'RST',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	605
	.byte	31,0,2,35,0,0,12,14,228,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14163
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_KRSTCLR_Bits',0,14,174,5,16,4,11
	.byte	'CLR',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	605
	.byte	31,0,2,35,0,0,12,14,236,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14267
	.byte	4,2,35,0,0,15,244,31
	.word	757
	.byte	16,243,31,0,10
	.byte	'_Ifx_CPU_RGN_LA_Bits',0,14,222,7,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	605
	.byte	27,0,2,35,0,0,12,14,156,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14384
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_RGN_UA_Bits',0,14,229,7,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	605
	.byte	27,0,2,35,0,0,12,14,164,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14490
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_RGN_ACCENA_Bits',0,14,148,7,16,4,11
	.byte	'EN0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,140,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14596
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_RGN_ACCENB_Bits',0,14,185,7,16,4,11
	.byte	'EN32',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,148,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15170
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_RGN',0,14,221,16,25,16,13
	.byte	'LA',0
	.word	14450
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	14556
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	15130
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	15714
	.byte	4,2,35,12,0,15,128,1
	.word	15754
	.byte	16,7,0,14
	.word	15830
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,14,199,8,16,4,11
	.byte	'EN0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,204,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15845
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,14,236,8,16,4,11
	.byte	'EN32',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,212,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16430
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,14,245,7,16,4,11
	.byte	'EN0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,180,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17025
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,14,154,8,16,4,11
	.byte	'EN32',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,188,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17607
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,14,189,5,16,4,11
	.byte	'EN0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,252,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18199
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,14,226,5,16,4,11
	.byte	'EN32',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,132,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18781
	.byte	4,2,35,0,0,15,232,1
	.word	757
	.byte	16,231,1,0,10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,14,182,3,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	605
	.byte	27,0,2,35,0,0,12,14,156,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19384
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,14,189,3,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	605
	.byte	27,0,2,35,0,0,12,14,164,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19500
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,14,199,2,16,4,11
	.byte	'EN0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,132,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19616
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,14,145,3,16,4,11
	.byte	'EN32',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,148,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20202
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,14,162,2,16,4,11
	.byte	'EN0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,252,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20798
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,14,236,2,16,4,11
	.byte	'EN32',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,140,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21384
	.byte	4,2,35,0,0,15,128,48
	.word	757
	.byte	16,255,47,0,10
	.byte	'_Ifx_CPU_OSEL_Bits',0,14,156,6,16,4,11
	.byte	'SHOVEN_X',0,4
	.word	605
	.byte	32,0,2,35,0,0,12,14,164,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21991
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_BLK_RABR_Bits',0,14,98,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	5,27,2,35,0,11
	.byte	'OBASE',0,4
	.word	605
	.byte	17,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	605
	.byte	2,8,2,35,0,11
	.byte	'OMEM',0,4
	.word	605
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	605
	.byte	3,1,2,35,0,11
	.byte	'OVEN',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,204,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22077
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_BLK_OTAR_Bits',0,14,90,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	5,27,2,35,0,11
	.byte	'TBASE',0,4
	.word	605
	.byte	23,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	605
	.byte	4,0,2,35,0,0,12,14,196,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22263
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_BLK_OMASK_Bits',0,14,81,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	5,27,2,35,0,11
	.byte	'OMASK',0,4
	.word	605
	.byte	12,15,2,35,0,11
	.byte	'ONE',0,4
	.word	605
	.byte	11,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	605
	.byte	4,0,2,35,0,0,12,14,188,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22394
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_BLK',0,14,242,16,25,12,13
	.byte	'RABR',0
	.word	22223
	.byte	4,2,35,0,13
	.byte	'OTAR',0
	.word	22354
	.byte	4,2,35,4,13
	.byte	'OMASK',0
	.word	22501
	.byte	4,2,35,8,0,15,128,3
	.word	22541
	.byte	16,31,0,14
	.word	22604
	.byte	15,160,39
	.word	757
	.byte	16,159,39,0,10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,14,236,7,16,4,11
	.byte	'ADFLIP',0,4
	.word	605
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	605
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	605
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,172,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22630
	.byte	4,2,35,0,0,15,208,223,1
	.word	757
	.byte	16,207,223,1,0,10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,14,174,9,16,4,11
	.byte	'ASI',0,4
	.word	605
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	605
	.byte	27,0,2,35,0,0,12,14,236,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22783
	.byte	4,2,35,0,0,15,248,1
	.word	757
	.byte	16,247,1,0,10
	.byte	'_Ifx_CPU_PMA0_Bits',0,14,227,6,16,4,11
	.byte	'DAC',0,4
	.word	605
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	605
	.byte	16,0,2,35,0,0,12,14,228,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22901
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PMA1_Bits',0,14,234,6,16,4,11
	.byte	'CAC',0,4
	.word	605
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	605
	.byte	16,0,2,35,0,0,12,14,236,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23005
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PMA2_Bits',0,14,241,6,16,4,11
	.byte	'PSI',0,4
	.word	605
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	605
	.byte	16,0,2,35,0,0,12,14,244,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23109
	.byte	4,2,35,0,0,15,244,29
	.word	757
	.byte	16,243,29,0,10
	.byte	'_Ifx_CPU_DCON2_Bits',0,14,246,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	605
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	605
	.byte	16,0,2,35,0,0,12,14,212,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23224
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_SMACON_Bits',0,14,191,8,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	24,8,2,35,0,11
	.byte	'IODT',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	605
	.byte	7,0,2,35,0,0,12,14,196,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23337
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DSTR_Bits',0,14,231,3,16,4,11
	.byte	'SRE',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'DRE',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	605
	.byte	2,26,2,35,0,11
	.byte	'CRE',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	605
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	605
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	605
	.byte	7,0,2,35,0,0,12,14,212,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23466
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DATR_Bits',0,14,203,1,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	605
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	605
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	605
	.byte	16,0,2,35,0,0,12,14,180,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23818
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DEADD_Bits',0,14,132,2,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	605
	.byte	32,0,2,35,0,0,12,14,228,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24057
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,14,138,2,16,4,11
	.byte	'TA',0,4
	.word	605
	.byte	32,0,2,35,0,0,12,14,236,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24149
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DIETR_Bits',0,14,144,2,16,4,11
	.byte	'IED',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	605
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'IE_DLMU',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	605
	.byte	15,0,2,35,0,0,12,14,244,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24230
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DCON0_Bits',0,14,238,1,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	605
	.byte	30,0,2,35,0,0
.L240:
	.byte	12,14,204,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24526
	.byte	4,2,35,0,0,15,188,3
	.word	757
	.byte	16,187,3,0,10
	.byte	'_Ifx_CPU_PSTR_Bits',0,14,248,6,16,4,11
	.byte	'FRE',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	605
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	605
	.byte	17,0,2,35,0,0,12,14,252,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24665
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PCON1_Bits',0,14,177,6,16,4,11
	.byte	'PCINV',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	605
	.byte	30,0,2,35,0,0,12,14,188,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24881
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PCON2_Bits',0,14,185,6,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	605
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	605
	.byte	16,0,2,35,0,0,12,14,196,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25004
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PCON0_Bits',0,14,169,6,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	605
	.byte	30,0,2,35,0,0
.L236:
	.byte	12,14,180,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25117
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,14,203,6,16,4,11
	.byte	'TA',0,4
	.word	605
	.byte	32,0,2,35,0,0,12,14,212,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25245
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PIETR_Bits',0,14,209,6,16,4,11
	.byte	'IED',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	605
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'IE_ADDR',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	605
	.byte	15,0,2,35,0,0,12,14,220,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25326
	.byte	4,2,35,0,0,15,232,3
	.word	757
	.byte	16,231,3,0,10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,14,134,1,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	605
	.byte	27,0,2,35,0,0,12,14,236,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25633
	.byte	4,2,35,0,0,15,252,23
	.word	757
	.byte	16,251,23,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,14,208,4,16,4,11
	.byte	'TST',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	605
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	605
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	605
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	605
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,148,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25784
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,14,240,4,16,4,11
	.byte	'PC',0,4
	.word	605
	.byte	32,0,2,35,0,0,12,14,164,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26138
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,14,230,4,16,4,11
	.byte	'OPC',0,4
	.word	605
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	605
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	605
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	605
	.byte	12,0,2,35,0,0,12,14,156,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26225
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,14,246,4,16,4,11
	.byte	'SRC1',0,4
	.word	605
	.byte	32,0,2,35,0,0,12,14,172,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26390
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,14,252,4,16,4,11
	.byte	'SRC2',0,4
	.word	605
	.byte	32,0,2,35,0,0,12,14,180,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26481
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,14,130,5,16,4,11
	.byte	'SRC3',0,4
	.word	605
	.byte	32,0,2,35,0,0,12,14,188,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26572
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP',0,14,134,17,25,28,13
	.byte	'CON',0
	.word	26098
	.byte	4,2,35,0,13
	.byte	'PC',0
	.word	26185
	.byte	4,2,35,4,13
	.byte	'OPC',0
	.word	26350
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2975
	.byte	4,2,35,12,13
	.byte	'SRC1',0
	.word	26441
	.byte	4,2,35,16,13
	.byte	'SRC2',0
	.word	26532
	.byte	4,2,35,20,13
	.byte	'SRC3',0
	.word	26623
	.byte	4,2,35,24,0,14
	.word	26663
	.byte	15,228,63
	.word	757
	.byte	16,227,63,0,10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,14,210,3,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	605
	.byte	29,0,2,35,0,0,12,14,188,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26804
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,14,217,3,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	605
	.byte	29,0,2,35,0,0,12,14,196,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26911
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DPR',0,14,158,17,25,8,13
	.byte	'L',0
	.word	26871
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	26978
	.byte	4,2,35,4,0,15,144,1
	.word	27018
	.byte	16,17,0,14
	.word	27060
	.byte	15,240,30
	.word	757
	.byte	16,239,30,0,10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,14,150,1,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	5,27,2,35,0,11
	.byte	'LOWBND',0,4
	.word	605
	.byte	27,0,2,35,0,0,12,14,252,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27086
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,14,157,1,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	5,27,2,35,0,11
	.byte	'UPPBND',0,4
	.word	605
	.byte	27,0,2,35,0,0,12,14,132,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27193
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CPR',0,14,177,17,25,8,13
	.byte	'L',0
	.word	27153
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	27260
	.byte	4,2,35,4,0,15,80
	.word	27300
	.byte	16,9,0,14
	.word	27342
	.byte	15,176,31
	.word	757
	.byte	16,175,31,0,10
	.byte	'_Ifx_CPU_CPXE_Bits',0,14,172,1,16,4,11
	.byte	'XE_N',0,4
	.word	605
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	605
	.byte	22,0,2,35,0,0,12,14,148,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27367
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DPRE_Bits',0,14,203,3,16,4,11
	.byte	'RE_N',0,4
	.word	605
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	605
	.byte	14,0,2,35,0,0,12,14,180,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27472
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DPWE_Bits',0,14,224,3,16,4,11
	.byte	'WE_N',0,4
	.word	605
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	605
	.byte	14,0,2,35,0,0,12,14,204,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27577
	.byte	4,2,35,0,0,15,16
	.word	757
	.byte	16,15,0,15,152,7
	.word	757
	.byte	16,151,7,0,10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,14,181,9,16,4,11
	.byte	'TEXP0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	605
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	605
	.byte	15,0,2,35,0,0,12,14,244,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27702
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,14,249,9,16,4,11
	.byte	'TIMER',0,4
	.word	605
	.byte	32,0,2,35,0,0,12,14,180,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27884
	.byte	4,2,35,0,0,15,12
	.word	27932
	.byte	16,2,0,10
	.byte	'_Ifx_CPU_TPS',0,14,196,17,25,16,13
	.byte	'CON',0
	.word	27844
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	27972
	.byte	12,2,35,4,0,14
	.word	27981
	.byte	15,48
	.word	757
	.byte	16,47,0,10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,14,206,9,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	4,28,2,35,0,11
	.byte	'ENTRY_LVAL',0,4
	.word	605
	.byte	8,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	605
	.byte	20,0,2,35,0,0,12,14,140,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28043
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,14,199,9,16,4,11
	.byte	'ENTRY_CVAL',0,4
	.word	605
	.byte	12,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	605
	.byte	20,0,2,35,0,0,12,14,132,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28192
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,14,221,9,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	4,28,2,35,0,11
	.byte	'EXIT_LVAL',0,4
	.word	605
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	605
	.byte	8,0,2,35,0,0,12,14,156,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28319
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,14,214,9,16,4,11
	.byte	'EXIT_CVAL',0,4
	.word	605
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	605
	.byte	8,0,2,35,0,0,12,14,148,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28466
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,14,192,9,16,4,11
	.byte	'EXTIM_CLASS_EN',0,4
	.word	605
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	605
	.byte	24,0,2,35,0,0,12,14,252,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28591
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TPS_EXTIM_STAT_Bits',0,14,236,9,16,4,11
	.byte	'EXIT_TIN',0,4
	.word	605
	.byte	8,24,2,35,0,11
	.byte	'EXIT_CLASS',0,4
	.word	605
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	605
	.byte	4,17,2,35,0,11
	.byte	'EXIT_AT',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'ENTRY_TIN',0,4
	.word	605
	.byte	8,8,2,35,0,11
	.byte	'ENTRY_CLASS',0,4
	.word	605
	.byte	3,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	605
	.byte	4,1,2,35,0,11
	.byte	'ENTRY_AT',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,172,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28719
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TPS_EXTIM_FCX_Bits',0,14,229,9,16,4,11
	.byte	'EXIT_FCX',0,4
	.word	605
	.byte	20,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	605
	.byte	12,0,2,35,0,0,12,14,164,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28966
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TPS_EXTIM',0,14,215,17,25,28,13
	.byte	'ENTRY_LVAL',0
	.word	28152
	.byte	4,2,35,0,13
	.byte	'ENTRY_CVAL',0
	.word	28279
	.byte	4,2,35,4,13
	.byte	'EXIT_LVAL',0
	.word	28426
	.byte	4,2,35,8,13
	.byte	'EXIT_CVAL',0
	.word	28551
	.byte	4,2,35,12,13
	.byte	'CLASS_EN',0
	.word	28679
	.byte	4,2,35,16,13
	.byte	'STAT',0
	.word	28926
	.byte	4,2,35,20,13
	.byte	'FCX',0
	.word	29044
	.byte	4,2,35,24,0,14
	.word	29084
	.byte	15,164,23
	.word	757
	.byte	16,163,23,0,10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,14,147,10,16,4,11
	.byte	'EVTA',0,4
	.word	605
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	605
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	605
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	605
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	605
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	605
	.byte	3,0,2,35,0,0,12,14,204,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29249
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,14,141,10,16,4,11
	.byte	'ADDR',0,4
	.word	605
	.byte	32,0,2,35,0,0,12,14,196,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29578
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TR',0,14,239,17,25,8,13
	.byte	'EVT',0
	.word	29538
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	29622
	.byte	4,2,35,4,0,15,64
	.word	29662
	.byte	16,7,0,14
	.word	29707
	.byte	15,192,23
	.word	757
	.byte	16,191,23,0,10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,14,123,16,4,11
	.byte	'CM',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	605
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	605
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	605
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	605
	.byte	21,0,2,35,0,0,12,14,228,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29732
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CCNT_Bits',0,14,116,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	605
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,220,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29891
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_ICNT_Bits',0,14,136,5,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	605
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,196,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29994
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,14,135,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	605
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,140,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30098
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,14,142,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	605
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,148,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30203
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,14,149,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	605
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	605
	.byte	1,0,2,35,0,0,12,14,156,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30308
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,14,217,1,16,4,11
	.byte	'DE',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	605
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	605
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	605
	.byte	19,0,2,35,0,0,12,14,188,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30413
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,14,253,3,16,4,11
	.byte	'EVTA',0,4
	.word	605
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	605
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	605
	.byte	24,0,2,35,0,0,12,14,220,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30640
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CREVT_Bits',0,14,179,1,16,4,11
	.byte	'EVTA',0,4
	.word	605
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	605
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	605
	.byte	24,0,2,35,0,0,12,14,156,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30806
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,14,145,9,16,4,11
	.byte	'EVTA',0,4
	.word	605
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	605
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	605
	.byte	24,0,2,35,0,0,12,14,220,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30972
	.byte	4,2,35,0,0,15,28
	.word	757
	.byte	16,27,0,10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,14,255,9,16,4,11
	.byte	'T0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	605
	.byte	24,0,2,35,0,0,12,14,188,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31147
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DMS_Bits',0,14,196,3,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'DMSVALUE',0,4
	.word	605
	.byte	31,0,2,35,0,0,12,14,172,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31351
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DCX_Bits',0,14,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	6,26,2,35,0,11
	.byte	'DCXVALUE',0,4
	.word	605
	.byte	26,0,2,35,0,0,12,14,220,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31458
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,14,231,1,16,4,11
	.byte	'DTA',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	605
	.byte	31,0,2,35,0,0,12,14,196,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31565
	.byte	4,2,35,0,0,15,180,1
	.word	757
	.byte	16,179,1,0,10
	.byte	'_Ifx_CPU_PCXI_Bits',0,14,192,6,16,4,11
	.byte	'PCXO',0,4
	.word	605
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	605
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	605
	.byte	8,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	605
	.byte	2,0,2,35,0,0,12,14,204,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31681
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PSW_Bits',0,14,133,7,16,4,11
	.byte	'CDC',0,4
	.word	605
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	605
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	605
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'PRS2',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	605
	.byte	8,8,2,35,0,11
	.byte	'USB',0,4
	.word	605
	.byte	8,0,2,35,0,0,12,14,132,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31847
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PC_Bits',0,14,162,6,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	605
	.byte	31,0,2,35,0,0,12,14,172,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32066
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,14,156,9,16,4,11
	.byte	'FCDSF',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'TS',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	605
	.byte	3,24,2,35,0,11
	.byte	'ESDIS',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	605
	.byte	7,16,2,35,0,11
	.byte	'U1_IED',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'U1_IOS',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	605
	.byte	6,8,2,35,0,11
	.byte	'BHALT',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	605
	.byte	7,0,2,35,0,0,12,14,228,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32166
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,14,164,1,16,4,11
	.byte	'MOD_REV',0,4
	.word	605
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	605
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	605
	.byte	16,0,2,35,0,0,12,14,140,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32476
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,14,143,1,16,4,11
	.byte	'CORE_ID',0,4
	.word	605
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	605
	.byte	29,0,2,35,0,0,12,14,244,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32597
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_BIV_Bits',0,14,74,16,4,11
	.byte	'VSS',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	605
	.byte	31,0,2,35,0,0,12,14,180,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32707
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_BTV_Bits',0,14,109,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	605
	.byte	31,0,2,35,0,0,12,14,212,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32801
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_ISP_Bits',0,14,153,5,16,4,11
	.byte	'ISP',0,4
	.word	605
	.byte	32,0,2,35,0,0,12,14,212,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32902
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_ICR_Bits',0,14,143,5,16,4,11
	.byte	'CCPN',0,4
	.word	605
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	605
	.byte	7,17,2,35,0,11
	.byte	'IE',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	605
	.byte	8,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	605
	.byte	8,0,2,35,0,0,12,14,204,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32982
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FCX_Bits',0,14,136,4,16,4,11
	.byte	'FCXO',0,4
	.word	605
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	605
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	605
	.byte	12,0,2,35,0,0,12,14,228,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33138
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_LCX_Bits',0,14,181,5,16,4,11
	.byte	'LCXO',0,4
	.word	605
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	605
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	605
	.byte	12,0,2,35,0,0,12,14,244,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33258
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,14,190,1,16,4,11
	.byte	'CID',0,4
	.word	605
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	605
	.byte	29,0,2,35,0,0,12,14,164,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33378
	.byte	4,2,35,0,0,15,172,1
	.word	757
	.byte	16,171,1,0,10
	.byte	'_Ifx_CPU_D_Bits',0,14,197,1,16,4,11
	.byte	'DATA',0,4
	.word	605
	.byte	32,0,2,35,0,0,12,14,172,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33494
	.byte	4,2,35,0,0,15,64
	.word	33533
	.byte	16,15,0,15,64
	.word	757
	.byte	16,63,0,10
	.byte	'_Ifx_CPU_A_Bits',0,14,68,16,4,11
	.byte	'ADDR',0,4
	.word	605
	.byte	32,0,2,35,0,0,12,14,172,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33591
	.byte	4,2,35,0,0,15,64
	.word	33629
	.byte	16,15,0,10
	.byte	'_Ifx_CPU',0,14,130,18,25,128,128,8,13
	.byte	'reserved_0',0
	.word	12861
	.byte	128,34,2,35,0,13
	.byte	'FLASHCON0',0
	.word	13058
	.byte	4,3,35,128,34,13
	.byte	'FLASHCON1',0
	.word	13257
	.byte	4,3,35,132,34,13
	.byte	'FLASHCON2',0
	.word	13565
	.byte	4,3,35,136,34,13
	.byte	'FLASHCON3',0
	.word	13878
	.byte	4,3,35,140,34,13
	.byte	'FLASHCON4',0
	.word	13987
	.byte	4,3,35,144,34,13
	.byte	'reserved_1114',0
	.word	14027
	.byte	236,253,2,3,35,148,34,13
	.byte	'KRST0',0
	.word	14123
	.byte	4,4,35,128,160,3,13
	.byte	'KRST1',0
	.word	14227
	.byte	4,4,35,132,160,3,13
	.byte	'KRSTCLR',0
	.word	14333
	.byte	4,4,35,136,160,3,13
	.byte	'reserved_D00C',0
	.word	14373
	.byte	244,31,4,35,140,160,3,13
	.byte	'RGN',0
	.word	15840
	.byte	128,1,4,35,128,192,3,13
	.byte	'reserved_E080',0
	.word	4795
	.byte	8,4,35,128,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R0',0
	.word	16390
	.byte	4,4,35,136,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R0',0
	.word	16985
	.byte	4,4,35,140,193,3,13
	.byte	'reserved_E090',0
	.word	4795
	.byte	8,4,35,144,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R1',0
	.word	16390
	.byte	4,4,35,152,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R1',0
	.word	16985
	.byte	4,4,35,156,193,3,13
	.byte	'reserved_E0A0',0
	.word	4795
	.byte	8,4,35,160,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R2',0
	.word	16390
	.byte	4,4,35,168,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R2',0
	.word	16985
	.byte	4,4,35,172,193,3,13
	.byte	'reserved_E0B0',0
	.word	4795
	.byte	8,4,35,176,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R3',0
	.word	16390
	.byte	4,4,35,184,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R3',0
	.word	16985
	.byte	4,4,35,188,193,3,13
	.byte	'reserved_E0C0',0
	.word	4795
	.byte	8,4,35,192,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R4',0
	.word	16390
	.byte	4,4,35,200,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R4',0
	.word	16985
	.byte	4,4,35,204,193,3,13
	.byte	'reserved_E0D0',0
	.word	4795
	.byte	8,4,35,208,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R5',0
	.word	16390
	.byte	4,4,35,216,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R5',0
	.word	16985
	.byte	4,4,35,220,193,3,13
	.byte	'reserved_E0E0',0
	.word	4795
	.byte	8,4,35,224,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R6',0
	.word	16390
	.byte	4,4,35,232,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R6',0
	.word	16985
	.byte	4,4,35,236,193,3,13
	.byte	'reserved_E0F0',0
	.word	4795
	.byte	8,4,35,240,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R7',0
	.word	16390
	.byte	4,4,35,248,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R7',0
	.word	16985
	.byte	4,4,35,252,193,3,13
	.byte	'SFR_SPROT_ACCENA_W',0
	.word	17567
	.byte	4,4,35,128,194,3,13
	.byte	'SFR_SPROT_ACCENB_W',0
	.word	18159
	.byte	4,4,35,132,194,3,13
	.byte	'reserved_E108',0
	.word	4795
	.byte	8,4,35,136,194,3,13
	.byte	'LPB_SPROT_ACCENA_R',0
	.word	18741
	.byte	4,4,35,144,194,3,13
	.byte	'LPB_SPROT_ACCENB_R',0
	.word	19333
	.byte	4,4,35,148,194,3,13
	.byte	'reserved_E118',0
	.word	19373
	.byte	232,1,4,35,152,194,3,13
	.byte	'DLMU_SPROT_RGNLA0',0
	.word	19460
	.byte	4,4,35,128,196,3,13
	.byte	'DLMU_SPROT_RGNUA0',0
	.word	19576
	.byte	4,4,35,132,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W0',0
	.word	20162
	.byte	4,4,35,136,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W0',0
	.word	20758
	.byte	4,4,35,140,196,3,13
	.byte	'DLMU_SPROT_RGNLA1',0
	.word	19460
	.byte	4,4,35,144,196,3,13
	.byte	'DLMU_SPROT_RGNUA1',0
	.word	19576
	.byte	4,4,35,148,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W1',0
	.word	20162
	.byte	4,4,35,152,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W1',0
	.word	20758
	.byte	4,4,35,156,196,3,13
	.byte	'DLMU_SPROT_RGNLA2',0
	.word	19460
	.byte	4,4,35,160,196,3,13
	.byte	'DLMU_SPROT_RGNUA2',0
	.word	19576
	.byte	4,4,35,164,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W2',0
	.word	20162
	.byte	4,4,35,168,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W2',0
	.word	20758
	.byte	4,4,35,172,196,3,13
	.byte	'DLMU_SPROT_RGNLA3',0
	.word	19460
	.byte	4,4,35,176,196,3,13
	.byte	'DLMU_SPROT_RGNUA3',0
	.word	19576
	.byte	4,4,35,180,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W3',0
	.word	20162
	.byte	4,4,35,184,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W3',0
	.word	20758
	.byte	4,4,35,188,196,3,13
	.byte	'DLMU_SPROT_RGNLA4',0
	.word	19460
	.byte	4,4,35,192,196,3,13
	.byte	'DLMU_SPROT_RGNUA4',0
	.word	19576
	.byte	4,4,35,196,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W4',0
	.word	20162
	.byte	4,4,35,200,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W4',0
	.word	20758
	.byte	4,4,35,204,196,3,13
	.byte	'DLMU_SPROT_RGNLA5',0
	.word	19460
	.byte	4,4,35,208,196,3,13
	.byte	'DLMU_SPROT_RGNUA5',0
	.word	19576
	.byte	4,4,35,212,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W5',0
	.word	20162
	.byte	4,4,35,216,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W5',0
	.word	20758
	.byte	4,4,35,220,196,3,13
	.byte	'DLMU_SPROT_RGNLA6',0
	.word	19460
	.byte	4,4,35,224,196,3,13
	.byte	'DLMU_SPROT_RGNUA6',0
	.word	19576
	.byte	4,4,35,228,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W6',0
	.word	20162
	.byte	4,4,35,232,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W6',0
	.word	20758
	.byte	4,4,35,236,196,3,13
	.byte	'DLMU_SPROT_RGNLA7',0
	.word	19460
	.byte	4,4,35,240,196,3,13
	.byte	'DLMU_SPROT_RGNUA7',0
	.word	19576
	.byte	4,4,35,244,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W7',0
	.word	20162
	.byte	4,4,35,248,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W7',0
	.word	20758
	.byte	4,4,35,252,196,3,13
	.byte	'reserved_E280',0
	.word	4795
	.byte	8,4,35,128,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R0',0
	.word	21344
	.byte	4,4,35,136,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R0',0
	.word	21940
	.byte	4,4,35,140,197,3,13
	.byte	'reserved_E290',0
	.word	4795
	.byte	8,4,35,144,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R1',0
	.word	21344
	.byte	4,4,35,152,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R1',0
	.word	21940
	.byte	4,4,35,156,197,3,13
	.byte	'reserved_E2A0',0
	.word	4795
	.byte	8,4,35,160,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R2',0
	.word	21344
	.byte	4,4,35,168,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R2',0
	.word	21940
	.byte	4,4,35,172,197,3,13
	.byte	'reserved_E2B0',0
	.word	4795
	.byte	8,4,35,176,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R3',0
	.word	21344
	.byte	4,4,35,184,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R3',0
	.word	21940
	.byte	4,4,35,188,197,3,13
	.byte	'reserved_E2C0',0
	.word	4795
	.byte	8,4,35,192,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R4',0
	.word	21344
	.byte	4,4,35,200,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R4',0
	.word	21940
	.byte	4,4,35,204,197,3,13
	.byte	'reserved_E2D0',0
	.word	4795
	.byte	8,4,35,208,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R5',0
	.word	21344
	.byte	4,4,35,216,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R5',0
	.word	21940
	.byte	4,4,35,220,197,3,13
	.byte	'reserved_E2E0',0
	.word	4795
	.byte	8,4,35,224,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R6',0
	.word	21344
	.byte	4,4,35,232,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R6',0
	.word	21940
	.byte	4,4,35,236,197,3,13
	.byte	'reserved_E2F0',0
	.word	4795
	.byte	8,4,35,240,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R7',0
	.word	21344
	.byte	4,4,35,248,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R7',0
	.word	21940
	.byte	4,4,35,252,197,3,13
	.byte	'reserved_E300',0
	.word	21980
	.byte	128,48,4,35,128,198,3,13
	.byte	'OSEL',0
	.word	22037
	.byte	4,4,35,128,246,3,13
	.byte	'reserved_FB04',0
	.word	5135
	.byte	12,4,35,132,246,3,13
	.byte	'BLK',0
	.word	22614
	.byte	128,3,4,35,144,246,3,13
	.byte	'reserved_FC90',0
	.word	22619
	.byte	160,39,4,35,144,249,3,13
	.byte	'SEGEN',0
	.word	22730
	.byte	4,4,35,176,160,4,13
	.byte	'reserved_11034',0
	.word	22770
	.byte	208,223,1,4,35,180,160,4,13
	.byte	'TASK_ASI',0
	.word	22850
	.byte	4,4,35,132,128,6,13
	.byte	'reserved_18008',0
	.word	22890
	.byte	248,1,4,35,136,128,6,13
	.byte	'PMA0',0
	.word	22965
	.byte	4,4,35,128,130,6,13
	.byte	'PMA1',0
	.word	23069
	.byte	4,4,35,132,130,6,13
	.byte	'PMA2',0
	.word	23173
	.byte	4,4,35,136,130,6,13
	.byte	'reserved_1810C',0
	.word	23213
	.byte	244,29,4,35,140,130,6,13
	.byte	'DCON2',0
	.word	23297
	.byte	4,4,35,128,160,6,13
	.byte	'reserved_19004',0
	.word	4795
	.byte	8,4,35,132,160,6,13
	.byte	'SMACON',0
	.word	23426
	.byte	4,4,35,140,160,6,13
	.byte	'DSTR',0
	.word	23778
	.byte	4,4,35,144,160,6,13
	.byte	'reserved_19014',0
	.word	2975
	.byte	4,4,35,148,160,6,13
	.byte	'DATR',0
	.word	24017
	.byte	4,4,35,152,160,6,13
	.byte	'DEADD',0
	.word	24109
	.byte	4,4,35,156,160,6,13
	.byte	'DIEAR',0
	.word	24190
	.byte	4,4,35,160,160,6,13
	.byte	'DIETR',0
	.word	24486
	.byte	4,4,35,164,160,6,13
	.byte	'reserved_19028',0
	.word	4166
	.byte	24,4,35,168,160,6,13
	.byte	'DCON0',0
	.word	24614
	.byte	4,4,35,192,160,6,13
	.byte	'reserved_19044',0
	.word	24654
	.byte	188,3,4,35,196,160,6,13
	.byte	'PSTR',0
	.word	24841
	.byte	4,4,35,128,164,6,13
	.byte	'PCON1',0
	.word	24964
	.byte	4,4,35,132,164,6,13
	.byte	'PCON2',0
	.word	25077
	.byte	4,4,35,136,164,6,13
	.byte	'PCON0',0
	.word	25205
	.byte	4,4,35,140,164,6,13
	.byte	'PIEAR',0
	.word	25286
	.byte	4,4,35,144,164,6,13
	.byte	'PIETR',0
	.word	25582
	.byte	4,4,35,148,164,6,13
	.byte	'reserved_19218',0
	.word	25622
	.byte	232,3,4,35,152,164,6,13
	.byte	'COMPAT',0
	.word	25733
	.byte	4,4,35,128,168,6,13
	.byte	'reserved_19404',0
	.word	25773
	.byte	252,23,4,35,132,168,6,13
	.byte	'FPU_TRAP',0
	.word	26788
	.byte	28,4,35,128,192,6,13
	.byte	'reserved_1A01C',0
	.word	26793
	.byte	228,63,4,35,156,192,6,13
	.byte	'DPR',0
	.word	27070
	.byte	144,1,4,35,128,128,7,13
	.byte	'reserved_1C090',0
	.word	27075
	.byte	240,30,4,35,144,129,7,13
	.byte	'CPR',0
	.word	27351
	.byte	80,4,35,128,160,7,13
	.byte	'reserved_1D050',0
	.word	27356
	.byte	176,31,4,35,208,160,7,13
	.byte	'CPXE_0',0
	.word	27432
	.byte	4,4,35,128,192,7,13
	.byte	'CPXE_1',0
	.word	27432
	.byte	4,4,35,132,192,7,13
	.byte	'CPXE_2',0
	.word	27432
	.byte	4,4,35,136,192,7,13
	.byte	'CPXE_3',0
	.word	27432
	.byte	4,4,35,140,192,7,13
	.byte	'DPRE_0',0
	.word	27537
	.byte	4,4,35,144,192,7,13
	.byte	'DPRE_1',0
	.word	27537
	.byte	4,4,35,148,192,7,13
	.byte	'DPRE_2',0
	.word	27537
	.byte	4,4,35,152,192,7,13
	.byte	'DPRE_3',0
	.word	27537
	.byte	4,4,35,156,192,7,13
	.byte	'DPWE_0',0
	.word	27642
	.byte	4,4,35,160,192,7,13
	.byte	'DPWE_1',0
	.word	27642
	.byte	4,4,35,164,192,7,13
	.byte	'DPWE_2',0
	.word	27642
	.byte	4,4,35,168,192,7,13
	.byte	'DPWE_3',0
	.word	27642
	.byte	4,4,35,172,192,7,13
	.byte	'reserved_1E030',0
	.word	27682
	.byte	16,4,35,176,192,7,13
	.byte	'CPXE_4',0
	.word	27432
	.byte	4,4,35,192,192,7,13
	.byte	'CPXE_5',0
	.word	27432
	.byte	4,4,35,196,192,7,13
	.byte	'reserved_1E048',0
	.word	4795
	.byte	8,4,35,200,192,7,13
	.byte	'DPRE_4',0
	.word	27537
	.byte	4,4,35,208,192,7,13
	.byte	'DPRE_5',0
	.word	27537
	.byte	4,4,35,212,192,7,13
	.byte	'reserved_1E058',0
	.word	4795
	.byte	8,4,35,216,192,7,13
	.byte	'DPWE_4',0
	.word	27642
	.byte	4,4,35,224,192,7,13
	.byte	'DPWE_5',0
	.word	27642
	.byte	4,4,35,228,192,7,13
	.byte	'reserved_1E068',0
	.word	27691
	.byte	152,7,4,35,232,192,7,13
	.byte	'TPS',0
	.word	28029
	.byte	16,4,35,128,200,7,13
	.byte	'reserved_1E410',0
	.word	28034
	.byte	48,4,35,144,200,7,13
	.byte	'TPS_EXTIM',0
	.word	29233
	.byte	28,4,35,192,200,7,13
	.byte	'reserved_1E45C',0
	.word	29238
	.byte	164,23,4,35,220,200,7,13
	.byte	'TR',0
	.word	29716
	.byte	64,4,35,128,224,7,13
	.byte	'reserved_1F040',0
	.word	29721
	.byte	192,23,4,35,192,224,7,13
	.byte	'CCTRL',0
	.word	29851
	.byte	4,4,35,128,248,7,13
	.byte	'CCNT',0
	.word	29954
	.byte	4,4,35,132,248,7,13
	.byte	'ICNT',0
	.word	30058
	.byte	4,4,35,136,248,7,13
	.byte	'M1CNT',0
	.word	30163
	.byte	4,4,35,140,248,7,13
	.byte	'M2CNT',0
	.word	30268
	.byte	4,4,35,144,248,7,13
	.byte	'M3CNT',0
	.word	30373
	.byte	4,4,35,148,248,7,13
	.byte	'reserved_1FC18',0
	.word	19373
	.byte	232,1,4,35,152,248,7,13
	.byte	'DBGSR',0
	.word	30600
	.byte	4,4,35,128,250,7,13
	.byte	'reserved_1FD04',0
	.word	2975
	.byte	4,4,35,132,250,7,13
	.byte	'EXEVT',0
	.word	30766
	.byte	4,4,35,136,250,7,13
	.byte	'CREVT',0
	.word	30932
	.byte	4,4,35,140,250,7,13
	.byte	'SWEVT',0
	.word	31098
	.byte	4,4,35,144,250,7,13
	.byte	'reserved_1FD14',0
	.word	31138
	.byte	28,4,35,148,250,7,13
	.byte	'TRIG_ACC',0
	.word	31311
	.byte	4,4,35,176,250,7,13
	.byte	'reserved_1FD34',0
	.word	5135
	.byte	12,4,35,180,250,7,13
	.byte	'DMS',0
	.word	31418
	.byte	4,4,35,192,250,7,13
	.byte	'DCX',0
	.word	31525
	.byte	4,4,35,196,250,7,13
	.byte	'DBGTCR',0
	.word	31630
	.byte	4,4,35,200,250,7,13
	.byte	'reserved_1FD4C',0
	.word	31670
	.byte	180,1,4,35,204,250,7,13
	.byte	'PCXI',0
	.word	31807
	.byte	4,4,35,128,252,7,13
	.byte	'PSW',0
	.word	32026
	.byte	4,4,35,132,252,7,13
	.byte	'PC',0
	.word	32126
	.byte	4,4,35,136,252,7,13
	.byte	'reserved_1FE0C',0
	.word	4795
	.byte	8,4,35,140,252,7,13
	.byte	'SYSCON',0
	.word	32436
	.byte	4,4,35,148,252,7,13
	.byte	'CPU_ID',0
	.word	32557
	.byte	4,4,35,152,252,7,13
	.byte	'CORE_ID',0
	.word	32667
	.byte	4,4,35,156,252,7,13
	.byte	'BIV',0
	.word	32761
	.byte	4,4,35,160,252,7,13
	.byte	'BTV',0
	.word	32862
	.byte	4,4,35,164,252,7,13
	.byte	'ISP',0
	.word	32942
	.byte	4,4,35,168,252,7,13
	.byte	'ICR',0
	.word	33098
	.byte	4,4,35,172,252,7,13
	.byte	'reserved_1FE30',0
	.word	4795
	.byte	8,4,35,176,252,7,13
	.byte	'FCX',0
	.word	33218
	.byte	4,4,35,184,252,7,13
	.byte	'LCX',0
	.word	33338
	.byte	4,4,35,188,252,7,13
	.byte	'reserved_1FE40',0
	.word	27682
	.byte	16,4,35,192,252,7,13
	.byte	'CUS_ID',0
	.word	33443
	.byte	4,4,35,208,252,7,13
	.byte	'reserved_1FE54',0
	.word	33483
	.byte	172,1,4,35,212,252,7,13
	.byte	'D',0
	.word	33573
	.byte	64,4,35,128,254,7,13
	.byte	'reserved_1FF40',0
	.word	33582
	.byte	64,4,35,192,254,7,13
	.byte	'A',0
	.word	33669
	.byte	64,4,35,128,255,7,13
	.byte	'reserved_1FFC0',0
	.word	33582
	.byte	64,4,35,192,255,7,0,14
	.word	33678
	.byte	5
	.word	38776
	.byte	33
	.byte	'Ifx_Ssw_startCore',0,12,133,2,13,1,1,1,1,6
	.byte	'cpu',0,12,133,2,40
	.word	38781
	.byte	6
	.byte	'programCounter',0,12,133,2,58
	.word	582
	.byte	0,32
	.byte	'Ifx_Ssw_C_Init',0,12,139,2,13,1,1,1,1,33
	.byte	'Ifx_Ssw_serviceCpuWatchdog',0,12,155,2,13,1,1,1,1,6
	.byte	'watchdog',0,12,155,2,56
	.word	1361
	.byte	6
	.byte	'password',0,12,155,2,81
	.word	774
	.byte	0,33
	.byte	'Ifx_Ssw_serviceSafetyWatchdog',0,12,165,2,13,1,1,1,1,6
	.byte	'password',0,12,165,2,58
	.word	774
	.byte	0,26
	.word	10257
	.byte	27
	.word	10306
	.byte	3,0,26
	.word	10326
	.byte	3,0,26
	.word	10380
	.byte	27
	.word	10418
	.byte	27
	.word	10436
	.byte	3,0,26
	.word	10456
	.byte	27
	.word	10492
	.byte	27
	.word	10510
	.byte	3,0,26
	.word	10530
	.byte	3,0,26
	.word	10576
	.byte	27
	.word	10600
	.byte	27
	.word	10618
	.byte	19,28
	.word	171
	.byte	29
	.word	192
	.byte	0,3,0,0,32
	.byte	'core0_main',0,15,124,13,1,1,1,1,34
	.byte	'__INDIRECT__',0,15,1,1,1,1,1,8
	.byte	'short int',0,2,5,35
	.byte	'__wchar_t',0,15,1,1
	.word	39135
	.byte	35
	.byte	'__size_t',0,15,1,1
	.word	582
	.byte	35
	.byte	'__ptrdiff_t',0,15,1,1
	.word	598
	.byte	36,1,5
	.word	39203
	.byte	35
	.byte	'__codeptr',0,15,1,1
	.word	39205
	.byte	35
	.byte	'boolean',0,16,104,29
	.word	757
	.byte	35
	.byte	'uint8',0,16,108,29
	.word	757
	.byte	35
	.byte	'uint16',0,16,112,29
	.word	774
	.byte	35
	.byte	'uint32',0,16,116,29
	.word	9982
	.byte	35
	.byte	'uint64',0,16,121,29
	.word	475
	.byte	8
	.byte	'char',0,1,6,35
	.byte	'sint8',0,16,125,29
	.word	39303
	.byte	35
	.byte	'sint16',0,16,129,1,29
	.word	39135
	.byte	8
	.byte	'long int',0,4,5,35
	.byte	'sint32',0,16,134,1,29
	.word	39341
	.byte	8
	.byte	'long long int',0,8,5,35
	.byte	'sint64',0,16,141,1,29
	.word	39369
	.byte	35
	.byte	'float32',0,16,170,1,29
	.word	389
	.byte	35
	.byte	'pvoid',0,17,54,28
	.word	224
	.byte	35
	.byte	'Ifx_TickTime',0,17,76,28
	.word	39369
	.byte	17,17,127,9,1,18
	.byte	'Ifx_RxSel_a',0,0,18
	.byte	'Ifx_RxSel_b',0,1,18
	.byte	'Ifx_RxSel_c',0,2,18
	.byte	'Ifx_RxSel_d',0,3,18
	.byte	'Ifx_RxSel_e',0,4,18
	.byte	'Ifx_RxSel_f',0,5,18
	.byte	'Ifx_RxSel_g',0,6,18
	.byte	'Ifx_RxSel_h',0,7,0,35
	.byte	'Ifx_RxSel',0,17,137,1,3
	.word	39454
	.byte	35
	.byte	'Ifx_UReg_8Bit',0,18,96,24
	.word	757
	.byte	35
	.byte	'Ifx_UReg_32Bit',0,18,98,24
	.word	582
	.byte	35
	.byte	'Ifx_SReg_32Bit',0,18,101,24
	.word	598
	.byte	35
	.byte	'Ifx_CPU_A_Bits',0,14,71,3
	.word	33591
	.byte	35
	.byte	'Ifx_CPU_BIV_Bits',0,14,78,3
	.word	32707
	.byte	35
	.byte	'Ifx_CPU_BLK_OMASK_Bits',0,14,87,3
	.word	22394
	.byte	35
	.byte	'Ifx_CPU_BLK_OTAR_Bits',0,14,95,3
	.word	22263
	.byte	35
	.byte	'Ifx_CPU_BLK_RABR_Bits',0,14,106,3
	.word	22077
	.byte	35
	.byte	'Ifx_CPU_BTV_Bits',0,14,113,3
	.word	32801
	.byte	35
	.byte	'Ifx_CPU_CCNT_Bits',0,14,120,3
	.word	29891
	.byte	35
	.byte	'Ifx_CPU_CCTRL_Bits',0,14,131,1,3
	.word	29732
	.byte	35
	.byte	'Ifx_CPU_COMPAT_Bits',0,14,140,1,3
	.word	25633
	.byte	35
	.byte	'Ifx_CPU_CORE_ID_Bits',0,14,147,1,3
	.word	32597
	.byte	35
	.byte	'Ifx_CPU_CPR_L_Bits',0,14,154,1,3
	.word	27086
	.byte	35
	.byte	'Ifx_CPU_CPR_U_Bits',0,14,161,1,3
	.word	27193
	.byte	35
	.byte	'Ifx_CPU_CPU_ID_Bits',0,14,169,1,3
	.word	32476
	.byte	35
	.byte	'Ifx_CPU_CPXE_Bits',0,14,176,1,3
	.word	27367
	.byte	35
	.byte	'Ifx_CPU_CREVT_Bits',0,14,187,1,3
	.word	30806
	.byte	35
	.byte	'Ifx_CPU_CUS_ID_Bits',0,14,194,1,3
	.word	33378
	.byte	35
	.byte	'Ifx_CPU_D_Bits',0,14,200,1,3
	.word	33494
	.byte	35
	.byte	'Ifx_CPU_DATR_Bits',0,14,214,1,3
	.word	23818
	.byte	35
	.byte	'Ifx_CPU_DBGSR_Bits',0,14,228,1,3
	.word	30413
	.byte	35
	.byte	'Ifx_CPU_DBGTCR_Bits',0,14,235,1,3
	.word	31565
	.byte	35
	.byte	'Ifx_CPU_DCON0_Bits',0,14,243,1,3
	.word	24526
	.byte	35
	.byte	'Ifx_CPU_DCON2_Bits',0,14,250,1,3
	.word	23224
	.byte	35
	.byte	'Ifx_CPU_DCX_Bits',0,14,129,2,3
	.word	31458
	.byte	35
	.byte	'Ifx_CPU_DEADD_Bits',0,14,135,2,3
	.word	24057
	.byte	35
	.byte	'Ifx_CPU_DIEAR_Bits',0,14,141,2,3
	.word	24149
	.byte	35
	.byte	'Ifx_CPU_DIETR_Bits',0,14,159,2,3
	.word	24230
	.byte	35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,14,196,2,3
	.word	20798
	.byte	35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,14,233,2,3
	.word	19616
	.byte	35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,14,142,3,3
	.word	21384
	.byte	35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,14,179,3,3
	.word	20202
	.byte	35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,14,186,3,3
	.word	19384
	.byte	35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,14,193,3,3
	.word	19500
	.byte	35
	.byte	'Ifx_CPU_DMS_Bits',0,14,200,3,3
	.word	31351
	.byte	35
	.byte	'Ifx_CPU_DPRE_Bits',0,14,207,3,3
	.word	27472
	.byte	35
	.byte	'Ifx_CPU_DPR_L_Bits',0,14,214,3,3
	.word	26804
	.byte	35
	.byte	'Ifx_CPU_DPR_U_Bits',0,14,221,3,3
	.word	26911
	.byte	35
	.byte	'Ifx_CPU_DPWE_Bits',0,14,228,3,3
	.word	27577
	.byte	35
	.byte	'Ifx_CPU_DSTR_Bits',0,14,250,3,3
	.word	23466
	.byte	35
	.byte	'Ifx_CPU_EXEVT_Bits',0,14,133,4,3
	.word	30640
	.byte	35
	.byte	'Ifx_CPU_FCX_Bits',0,14,141,4,3
	.word	33138
	.byte	35
	.byte	'Ifx_CPU_FLASHCON0_Bits',0,14,154,4,3
	.word	12872
	.byte	35
	.byte	'Ifx_CPU_FLASHCON1_Bits',0,14,165,4,3
	.word	13098
	.byte	35
	.byte	'Ifx_CPU_FLASHCON2_Bits',0,14,182,4,3
	.word	13297
	.byte	35
	.byte	'Ifx_CPU_FLASHCON3_Bits',0,14,198,4,3
	.word	13605
	.byte	35
	.byte	'Ifx_CPU_FLASHCON4_Bits',0,14,205,4,3
	.word	13918
	.byte	35
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,14,227,4,3
	.word	25784
	.byte	35
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,14,237,4,3
	.word	26225
	.byte	35
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,14,243,4,3
	.word	26138
	.byte	35
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,14,249,4,3
	.word	26390
	.byte	35
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,14,255,4,3
	.word	26481
	.byte	35
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,14,133,5,3
	.word	26572
	.byte	35
	.byte	'Ifx_CPU_ICNT_Bits',0,14,140,5,3
	.word	29994
	.byte	35
	.byte	'Ifx_CPU_ICR_Bits',0,14,150,5,3
	.word	32982
	.byte	35
	.byte	'Ifx_CPU_ISP_Bits',0,14,156,5,3
	.word	32902
	.byte	35
	.byte	'Ifx_CPU_KRST0_Bits',0,14,164,5,3
	.word	14040
	.byte	35
	.byte	'Ifx_CPU_KRST1_Bits',0,14,171,5,3
	.word	14163
	.byte	35
	.byte	'Ifx_CPU_KRSTCLR_Bits',0,14,178,5,3
	.word	14267
	.byte	35
	.byte	'Ifx_CPU_LCX_Bits',0,14,186,5,3
	.word	33258
	.byte	35
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,14,223,5,3
	.word	18199
	.byte	35
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,14,132,6,3
	.word	18781
	.byte	35
	.byte	'Ifx_CPU_M1CNT_Bits',0,14,139,6,3
	.word	30098
	.byte	35
	.byte	'Ifx_CPU_M2CNT_Bits',0,14,146,6,3
	.word	30203
	.byte	35
	.byte	'Ifx_CPU_M3CNT_Bits',0,14,153,6,3
	.word	30308
	.byte	35
	.byte	'Ifx_CPU_OSEL_Bits',0,14,159,6,3
	.word	21991
	.byte	35
	.byte	'Ifx_CPU_PC_Bits',0,14,166,6,3
	.word	32066
	.byte	35
	.byte	'Ifx_CPU_PCON0_Bits',0,14,174,6,3
	.word	25117
	.byte	35
	.byte	'Ifx_CPU_PCON1_Bits',0,14,182,6,3
	.word	24881
	.byte	35
	.byte	'Ifx_CPU_PCON2_Bits',0,14,189,6,3
	.word	25004
	.byte	35
	.byte	'Ifx_CPU_PCXI_Bits',0,14,200,6,3
	.word	31681
	.byte	35
	.byte	'Ifx_CPU_PIEAR_Bits',0,14,206,6,3
	.word	25245
	.byte	35
	.byte	'Ifx_CPU_PIETR_Bits',0,14,224,6,3
	.word	25326
	.byte	35
	.byte	'Ifx_CPU_PMA0_Bits',0,14,231,6,3
	.word	22901
	.byte	35
	.byte	'Ifx_CPU_PMA1_Bits',0,14,238,6,3
	.word	23005
	.byte	35
	.byte	'Ifx_CPU_PMA2_Bits',0,14,245,6,3
	.word	23109
	.byte	35
	.byte	'Ifx_CPU_PSTR_Bits',0,14,130,7,3
	.word	24665
	.byte	35
	.byte	'Ifx_CPU_PSW_Bits',0,14,145,7,3
	.word	31847
	.byte	35
	.byte	'Ifx_CPU_RGN_ACCENA_Bits',0,14,182,7,3
	.word	14596
	.byte	35
	.byte	'Ifx_CPU_RGN_ACCENB_Bits',0,14,219,7,3
	.word	15170
	.byte	35
	.byte	'Ifx_CPU_RGN_LA_Bits',0,14,226,7,3
	.word	14384
	.byte	35
	.byte	'Ifx_CPU_RGN_UA_Bits',0,14,233,7,3
	.word	14490
	.byte	35
	.byte	'Ifx_CPU_SEGEN_Bits',0,14,242,7,3
	.word	22630
	.byte	35
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,14,151,8,3
	.word	17025
	.byte	35
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,14,188,8,3
	.word	17607
	.byte	35
	.byte	'Ifx_CPU_SMACON_Bits',0,14,196,8,3
	.word	23337
	.byte	35
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,14,233,8,3
	.word	15845
	.byte	35
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,14,142,9,3
	.word	16430
	.byte	35
	.byte	'Ifx_CPU_SWEVT_Bits',0,14,153,9,3
	.word	30972
	.byte	35
	.byte	'Ifx_CPU_SYSCON_Bits',0,14,171,9,3
	.word	32166
	.byte	35
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,14,178,9,3
	.word	22783
	.byte	35
	.byte	'Ifx_CPU_TPS_CON_Bits',0,14,189,9,3
	.word	27702
	.byte	35
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,14,196,9,3
	.word	28591
	.byte	35
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,14,203,9,3
	.word	28192
	.byte	35
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,14,211,9,3
	.word	28043
	.byte	35
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,14,218,9,3
	.word	28466
	.byte	35
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,14,226,9,3
	.word	28319
	.byte	35
	.byte	'Ifx_CPU_TPS_EXTIM_FCX_Bits',0,14,233,9,3
	.word	28966
	.byte	35
	.byte	'Ifx_CPU_TPS_EXTIM_STAT_Bits',0,14,246,9,3
	.word	28719
	.byte	35
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,14,252,9,3
	.word	27884
	.byte	35
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,14,138,10,3
	.word	31147
	.byte	35
	.byte	'Ifx_CPU_TR_ADR_Bits',0,14,144,10,3
	.word	29578
	.byte	35
	.byte	'Ifx_CPU_TR_EVT_Bits',0,14,164,10,3
	.word	29249
	.byte	35
	.byte	'Ifx_CPU_A',0,14,177,10,3
	.word	33629
	.byte	35
	.byte	'Ifx_CPU_BIV',0,14,185,10,3
	.word	32761
	.byte	35
	.byte	'Ifx_CPU_BLK_OMASK',0,14,193,10,3
	.word	22501
	.byte	35
	.byte	'Ifx_CPU_BLK_OTAR',0,14,201,10,3
	.word	22354
	.byte	35
	.byte	'Ifx_CPU_BLK_RABR',0,14,209,10,3
	.word	22223
	.byte	35
	.byte	'Ifx_CPU_BTV',0,14,217,10,3
	.word	32862
	.byte	35
	.byte	'Ifx_CPU_CCNT',0,14,225,10,3
	.word	29954
	.byte	35
	.byte	'Ifx_CPU_CCTRL',0,14,233,10,3
	.word	29851
	.byte	35
	.byte	'Ifx_CPU_COMPAT',0,14,241,10,3
	.word	25733
	.byte	35
	.byte	'Ifx_CPU_CORE_ID',0,14,249,10,3
	.word	32667
	.byte	35
	.byte	'Ifx_CPU_CPR_L',0,14,129,11,3
	.word	27153
	.byte	35
	.byte	'Ifx_CPU_CPR_U',0,14,137,11,3
	.word	27260
	.byte	35
	.byte	'Ifx_CPU_CPU_ID',0,14,145,11,3
	.word	32557
	.byte	35
	.byte	'Ifx_CPU_CPXE',0,14,153,11,3
	.word	27432
	.byte	35
	.byte	'Ifx_CPU_CREVT',0,14,161,11,3
	.word	30932
	.byte	35
	.byte	'Ifx_CPU_CUS_ID',0,14,169,11,3
	.word	33443
	.byte	35
	.byte	'Ifx_CPU_D',0,14,177,11,3
	.word	33533
	.byte	35
	.byte	'Ifx_CPU_DATR',0,14,185,11,3
	.word	24017
	.byte	35
	.byte	'Ifx_CPU_DBGSR',0,14,193,11,3
	.word	30600
	.byte	35
	.byte	'Ifx_CPU_DBGTCR',0,14,201,11,3
	.word	31630
	.byte	35
	.byte	'Ifx_CPU_DCON0',0,14,209,11,3
	.word	24614
	.byte	35
	.byte	'Ifx_CPU_DCON2',0,14,217,11,3
	.word	23297
	.byte	35
	.byte	'Ifx_CPU_DCX',0,14,225,11,3
	.word	31525
	.byte	35
	.byte	'Ifx_CPU_DEADD',0,14,233,11,3
	.word	24109
	.byte	35
	.byte	'Ifx_CPU_DIEAR',0,14,241,11,3
	.word	24190
	.byte	35
	.byte	'Ifx_CPU_DIETR',0,14,249,11,3
	.word	24486
	.byte	35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R',0,14,129,12,3
	.word	21344
	.byte	35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W',0,14,137,12,3
	.word	20162
	.byte	35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R',0,14,145,12,3
	.word	21940
	.byte	35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W',0,14,153,12,3
	.word	20758
	.byte	35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA',0,14,161,12,3
	.word	19460
	.byte	35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA',0,14,169,12,3
	.word	19576
	.byte	35
	.byte	'Ifx_CPU_DMS',0,14,177,12,3
	.word	31418
	.byte	35
	.byte	'Ifx_CPU_DPRE',0,14,185,12,3
	.word	27537
	.byte	35
	.byte	'Ifx_CPU_DPR_L',0,14,193,12,3
	.word	26871
	.byte	35
	.byte	'Ifx_CPU_DPR_U',0,14,201,12,3
	.word	26978
	.byte	35
	.byte	'Ifx_CPU_DPWE',0,14,209,12,3
	.word	27642
	.byte	35
	.byte	'Ifx_CPU_DSTR',0,14,217,12,3
	.word	23778
	.byte	35
	.byte	'Ifx_CPU_EXEVT',0,14,225,12,3
	.word	30766
	.byte	35
	.byte	'Ifx_CPU_FCX',0,14,233,12,3
	.word	33218
	.byte	35
	.byte	'Ifx_CPU_FLASHCON0',0,14,241,12,3
	.word	13058
	.byte	35
	.byte	'Ifx_CPU_FLASHCON1',0,14,249,12,3
	.word	13257
	.byte	35
	.byte	'Ifx_CPU_FLASHCON2',0,14,129,13,3
	.word	13565
	.byte	35
	.byte	'Ifx_CPU_FLASHCON3',0,14,137,13,3
	.word	13878
	.byte	35
	.byte	'Ifx_CPU_FLASHCON4',0,14,145,13,3
	.word	13987
	.byte	35
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,14,153,13,3
	.word	26098
	.byte	35
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,14,161,13,3
	.word	26350
	.byte	35
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,14,169,13,3
	.word	26185
	.byte	35
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,14,177,13,3
	.word	26441
	.byte	35
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,14,185,13,3
	.word	26532
	.byte	35
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,14,193,13,3
	.word	26623
	.byte	35
	.byte	'Ifx_CPU_ICNT',0,14,201,13,3
	.word	30058
	.byte	35
	.byte	'Ifx_CPU_ICR',0,14,209,13,3
	.word	33098
	.byte	35
	.byte	'Ifx_CPU_ISP',0,14,217,13,3
	.word	32942
	.byte	35
	.byte	'Ifx_CPU_KRST0',0,14,225,13,3
	.word	14123
	.byte	35
	.byte	'Ifx_CPU_KRST1',0,14,233,13,3
	.word	14227
	.byte	35
	.byte	'Ifx_CPU_KRSTCLR',0,14,241,13,3
	.word	14333
	.byte	35
	.byte	'Ifx_CPU_LCX',0,14,249,13,3
	.word	33338
	.byte	35
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R',0,14,129,14,3
	.word	18741
	.byte	35
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R',0,14,137,14,3
	.word	19333
	.byte	35
	.byte	'Ifx_CPU_M1CNT',0,14,145,14,3
	.word	30163
	.byte	35
	.byte	'Ifx_CPU_M2CNT',0,14,153,14,3
	.word	30268
	.byte	35
	.byte	'Ifx_CPU_M3CNT',0,14,161,14,3
	.word	30373
	.byte	35
	.byte	'Ifx_CPU_OSEL',0,14,169,14,3
	.word	22037
	.byte	35
	.byte	'Ifx_CPU_PC',0,14,177,14,3
	.word	32126
	.byte	35
	.byte	'Ifx_CPU_PCON0',0,14,185,14,3
	.word	25205
	.byte	35
	.byte	'Ifx_CPU_PCON1',0,14,193,14,3
	.word	24964
	.byte	35
	.byte	'Ifx_CPU_PCON2',0,14,201,14,3
	.word	25077
	.byte	35
	.byte	'Ifx_CPU_PCXI',0,14,209,14,3
	.word	31807
	.byte	35
	.byte	'Ifx_CPU_PIEAR',0,14,217,14,3
	.word	25286
	.byte	35
	.byte	'Ifx_CPU_PIETR',0,14,225,14,3
	.word	25582
	.byte	35
	.byte	'Ifx_CPU_PMA0',0,14,233,14,3
	.word	22965
	.byte	35
	.byte	'Ifx_CPU_PMA1',0,14,241,14,3
	.word	23069
	.byte	35
	.byte	'Ifx_CPU_PMA2',0,14,249,14,3
	.word	23173
	.byte	35
	.byte	'Ifx_CPU_PSTR',0,14,129,15,3
	.word	24841
	.byte	35
	.byte	'Ifx_CPU_PSW',0,14,137,15,3
	.word	32026
	.byte	35
	.byte	'Ifx_CPU_RGN_ACCENA',0,14,145,15,3
	.word	15130
	.byte	35
	.byte	'Ifx_CPU_RGN_ACCENB',0,14,153,15,3
	.word	15714
	.byte	35
	.byte	'Ifx_CPU_RGN_LA',0,14,161,15,3
	.word	14450
	.byte	35
	.byte	'Ifx_CPU_RGN_UA',0,14,169,15,3
	.word	14556
	.byte	35
	.byte	'Ifx_CPU_SEGEN',0,14,177,15,3
	.word	22730
	.byte	35
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W',0,14,185,15,3
	.word	17567
	.byte	35
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W',0,14,193,15,3
	.word	18159
	.byte	35
	.byte	'Ifx_CPU_SMACON',0,14,201,15,3
	.word	23426
	.byte	35
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R',0,14,209,15,3
	.word	16390
	.byte	35
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R',0,14,217,15,3
	.word	16985
	.byte	35
	.byte	'Ifx_CPU_SWEVT',0,14,225,15,3
	.word	31098
	.byte	35
	.byte	'Ifx_CPU_SYSCON',0,14,233,15,3
	.word	32436
	.byte	35
	.byte	'Ifx_CPU_TASK_ASI',0,14,241,15,3
	.word	22850
	.byte	35
	.byte	'Ifx_CPU_TPS_CON',0,14,249,15,3
	.word	27844
	.byte	35
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN',0,14,129,16,3
	.word	28679
	.byte	35
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL',0,14,137,16,3
	.word	28279
	.byte	35
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL',0,14,145,16,3
	.word	28152
	.byte	35
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL',0,14,153,16,3
	.word	28551
	.byte	35
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL',0,14,161,16,3
	.word	28426
	.byte	35
	.byte	'Ifx_CPU_TPS_EXTIM_FCX',0,14,169,16,3
	.word	29044
	.byte	35
	.byte	'Ifx_CPU_TPS_EXTIM_STAT',0,14,177,16,3
	.word	28926
	.byte	35
	.byte	'Ifx_CPU_TPS_TIMER',0,14,185,16,3
	.word	27932
	.byte	35
	.byte	'Ifx_CPU_TRIG_ACC',0,14,193,16,3
	.word	31311
	.byte	35
	.byte	'Ifx_CPU_TR_ADR',0,14,201,16,3
	.word	29622
	.byte	35
	.byte	'Ifx_CPU_TR_EVT',0,14,209,16,3
	.word	29538
	.byte	14
	.word	15754
	.byte	35
	.byte	'Ifx_CPU_RGN',0,14,227,16,3
	.word	45463
	.byte	14
	.word	22541
	.byte	35
	.byte	'Ifx_CPU_BLK',0,14,247,16,3
	.word	45489
	.byte	14
	.word	26663
	.byte	35
	.byte	'Ifx_CPU_FPU_TRAP',0,14,143,17,3
	.word	45515
	.byte	14
	.word	27018
	.byte	35
	.byte	'Ifx_CPU_DPR',0,14,162,17,3
	.word	45546
	.byte	14
	.word	27300
	.byte	35
	.byte	'Ifx_CPU_CPR',0,14,181,17,3
	.word	45572
	.byte	14
	.word	27981
	.byte	35
	.byte	'Ifx_CPU_TPS',0,14,200,17,3
	.word	45598
	.byte	14
	.word	29084
	.byte	35
	.byte	'Ifx_CPU_TPS_EXTIM',0,14,224,17,3
	.word	45624
	.byte	14
	.word	29662
	.byte	35
	.byte	'Ifx_CPU_TR',0,14,243,17,3
	.word	45656
	.byte	14
	.word	33678
	.byte	35
	.byte	'Ifx_CPU',0,14,210,19,3
	.word	45681
	.byte	17,10,124,9,1,18
	.byte	'IfxCpu_Id_0',0,0,18
	.byte	'IfxCpu_Id_1',0,1,18
	.byte	'IfxCpu_Id_2',0,2,18
	.byte	'IfxCpu_Id_3',0,3,18
	.byte	'IfxCpu_Id_4',0,4,18
	.byte	'IfxCpu_Id_6',0,6,18
	.byte	'IfxCpu_Id_none',0,7,0,35
	.byte	'IfxCpu_Id',0,10,133,1,3
	.word	45703
	.byte	35
	.byte	'IfxCpu_ResourceCpu',0,10,170,1,3
	.word	9735
	.byte	10
	.byte	'_Ifx_SRC_SRCR_Bits',0,19,68,16,4,11
	.byte	'SRPN',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	757
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	757
	.byte	3,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	757
	.byte	2,0,2,35,1,11
	.byte	'ECC',0,1
	.word	757
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	757
	.byte	3,0,2,35,2,11
	.byte	'SRR',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SRC_SRCR_Bits',0,19,85,3
	.word	45857
	.byte	12,19,93,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45857
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SRC_SRCR',0,19,98,3
	.word	46173
	.byte	10
	.byte	'_Ifx_SRC_CPU_CPU',0,19,110,25,4,13
	.byte	'SB',0
	.word	46173
	.byte	4,2,35,0,0,14
	.word	46233
	.byte	35
	.byte	'Ifx_SRC_CPU_CPU',0,19,113,3
	.word	46268
	.byte	15,24
	.word	46233
	.byte	16,5,0,14
	.word	46297
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,19,128,1,25,24,13
	.byte	'CPU',0
	.word	46306
	.byte	24,2,35,0,0,14
	.word	46311
	.byte	35
	.byte	'Ifx_SRC_CPU',0,19,131,1,3
	.word	46344
	.byte	10
	.byte	'_Ifx_SRC_AGBT_AGBT',0,19,146,1,25,4,13
	.byte	'SR',0
	.word	46173
	.byte	4,2,35,0,0,14
	.word	46370
	.byte	35
	.byte	'Ifx_SRC_AGBT_AGBT',0,19,149,1,3
	.word	46408
	.byte	15,4
	.word	46370
	.byte	16,0,0,14
	.word	46440
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,19,164,1,25,4,13
	.byte	'AGBT',0
	.word	46449
	.byte	4,2,35,0,0,14
	.word	46454
	.byte	35
	.byte	'Ifx_SRC_AGBT',0,19,167,1,3
	.word	46489
	.byte	10
	.byte	'_Ifx_SRC_XBAR_XBAR',0,19,182,1,25,4,13
	.byte	'SR',0
	.word	46173
	.byte	4,2,35,0,0,14
	.word	46516
	.byte	35
	.byte	'Ifx_SRC_XBAR_XBAR',0,19,185,1,3
	.word	46554
	.byte	15,12
	.word	46516
	.byte	16,2,0,14
	.word	46586
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,19,200,1,25,12,13
	.byte	'XBAR',0
	.word	46595
	.byte	12,2,35,0,0,14
	.word	46600
	.byte	35
	.byte	'Ifx_SRC_XBAR',0,19,203,1,3
	.word	46635
	.byte	15,8
	.word	46173
	.byte	16,1,0,10
	.byte	'_Ifx_SRC_CERBERUS_CERBERUS',0,19,218,1,25,8,13
	.byte	'SR',0
	.word	46662
	.byte	8,2,35,0,0,14
	.word	46671
	.byte	35
	.byte	'Ifx_SRC_CERBERUS_CERBERUS',0,19,221,1,3
	.word	46717
	.byte	14
	.word	46671
	.byte	10
	.byte	'_Ifx_SRC_CERBERUS',0,19,236,1,25,8,13
	.byte	'CERBERUS',0
	.word	46757
	.byte	8,2,35,0,0,14
	.word	46762
	.byte	35
	.byte	'Ifx_SRC_CERBERUS',0,19,239,1,3
	.word	46805
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN_ASCLIN',0,19,254,1,25,12,13
	.byte	'TX',0
	.word	46173
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	46173
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	46173
	.byte	4,2,35,8,0,14
	.word	46836
	.byte	35
	.byte	'Ifx_SRC_ASCLIN_ASCLIN',0,19,131,2,3
	.word	46903
	.byte	15,144,1
	.word	46836
	.byte	16,11,0,14
	.word	46939
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,19,146,2,25,144,1,13
	.byte	'ASCLIN',0
	.word	46949
	.byte	144,1,2,35,0,0,14
	.word	46954
	.byte	35
	.byte	'Ifx_SRC_ASCLIN',0,19,149,2,3
	.word	46995
	.byte	10
	.byte	'_Ifx_SRC_QSPI_QSPI',0,19,164,2,25,20,13
	.byte	'TX',0
	.word	46173
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	46173
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	46173
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	46173
	.byte	4,2,35,12,13
	.byte	'U',0
	.word	46173
	.byte	4,2,35,16,0,14
	.word	47024
	.byte	35
	.byte	'Ifx_SRC_QSPI_QSPI',0,19,171,2,3
	.word	47110
	.byte	15,120
	.word	47024
	.byte	16,5,0,14
	.word	47142
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,19,186,2,25,120,13
	.byte	'QSPI',0
	.word	47151
	.byte	120,2,35,0,0,14
	.word	47156
	.byte	35
	.byte	'Ifx_SRC_QSPI',0,19,189,2,3
	.word	47191
	.byte	10
	.byte	'_Ifx_SRC_HSCT_HSCT',0,19,204,2,25,4,13
	.byte	'SR',0
	.word	46173
	.byte	4,2,35,0,0,14
	.word	47218
	.byte	35
	.byte	'Ifx_SRC_HSCT_HSCT',0,19,207,2,3
	.word	47256
	.byte	15,8
	.word	47218
	.byte	16,1,0,14
	.word	47288
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,19,222,2,25,8,13
	.byte	'HSCT',0
	.word	47297
	.byte	8,2,35,0,0,14
	.word	47302
	.byte	35
	.byte	'Ifx_SRC_HSCT',0,19,225,2,3
	.word	47337
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL_CH',0,19,240,2,25,16,13
	.byte	'COK',0
	.word	46173
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	46173
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	46173
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	46173
	.byte	4,2,35,12,0,14
	.word	47364
	.byte	35
	.byte	'Ifx_SRC_HSSL_HSSL_CH',0,19,246,2,3
	.word	47445
	.byte	15,64
	.word	47364
	.byte	16,3,0,14
	.word	47480
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL',0,19,133,3,25,68,13
	.byte	'CH',0
	.word	47489
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	46173
	.byte	4,2,35,64,0,14
	.word	47494
	.byte	35
	.byte	'Ifx_SRC_HSSL_HSSL',0,19,137,3,3
	.word	47545
	.byte	15,136,1
	.word	47494
	.byte	16,1,0,14
	.word	47577
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,19,152,3,25,136,1,13
	.byte	'HSSL',0
	.word	47587
	.byte	136,1,2,35,0,0,14
	.word	47592
	.byte	35
	.byte	'Ifx_SRC_HSSL',0,19,155,3,3
	.word	47629
	.byte	10
	.byte	'_Ifx_SRC_I2C_I2C',0,19,170,3,25,16,13
	.byte	'DTR',0
	.word	46173
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	46173
	.byte	4,2,35,4,13
	.byte	'P',0
	.word	46173
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2975
	.byte	4,2,35,12,0,14
	.word	47656
	.byte	35
	.byte	'Ifx_SRC_I2C_I2C',0,19,176,3,3
	.word	47737
	.byte	15,32
	.word	47656
	.byte	16,1,0,14
	.word	47767
	.byte	10
	.byte	'_Ifx_SRC_I2C',0,19,191,3,25,32,13
	.byte	'I2C',0
	.word	47776
	.byte	32,2,35,0,0,14
	.word	47781
	.byte	35
	.byte	'Ifx_SRC_I2C',0,19,194,3,3
	.word	47814
	.byte	10
	.byte	'_Ifx_SRC_SENT_SENT',0,19,209,3,25,4,13
	.byte	'SR',0
	.word	46173
	.byte	4,2,35,0,0,14
	.word	47840
	.byte	35
	.byte	'Ifx_SRC_SENT_SENT',0,19,212,3,3
	.word	47878
	.byte	15,40
	.word	47840
	.byte	16,9,0,14
	.word	47910
	.byte	10
	.byte	'_Ifx_SRC_SENT',0,19,227,3,25,40,13
	.byte	'SENT',0
	.word	47919
	.byte	40,2,35,0,0,14
	.word	47924
	.byte	35
	.byte	'Ifx_SRC_SENT',0,19,230,3,3
	.word	47959
	.byte	15,20
	.word	46173
	.byte	16,4,0,10
	.byte	'_Ifx_SRC_MSC_MSC',0,19,245,3,25,20,13
	.byte	'SR',0
	.word	47986
	.byte	20,2,35,0,0,14
	.word	47995
	.byte	35
	.byte	'Ifx_SRC_MSC_MSC',0,19,248,3,3
	.word	48031
	.byte	15,80
	.word	47995
	.byte	16,3,0,14
	.word	48061
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,19,135,4,25,80,13
	.byte	'MSC',0
	.word	48070
	.byte	80,2,35,0,0,14
	.word	48075
	.byte	35
	.byte	'Ifx_SRC_MSC',0,19,138,4,3
	.word	48108
	.byte	15,16
	.word	46173
	.byte	16,3,0,10
	.byte	'_Ifx_SRC_CCU6_CCU',0,19,153,4,25,16,13
	.byte	'SR',0
	.word	48134
	.byte	16,2,35,0,0,14
	.word	48143
	.byte	35
	.byte	'Ifx_SRC_CCU6_CCU',0,19,156,4,3
	.word	48180
	.byte	15,32
	.word	48143
	.byte	16,1,0,14
	.word	48211
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,19,171,4,25,32,13
	.byte	'CCU',0
	.word	48220
	.byte	32,2,35,0,0,14
	.word	48225
	.byte	35
	.byte	'Ifx_SRC_CCU6',0,19,174,4,3
	.word	48259
	.byte	10
	.byte	'_Ifx_SRC_GPT12_GPT12',0,19,189,4,25,24,13
	.byte	'CIRQ',0
	.word	46173
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	46173
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	46173
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	46173
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	46173
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	46173
	.byte	4,2,35,20,0,14
	.word	48286
	.byte	35
	.byte	'Ifx_SRC_GPT12_GPT12',0,19,197,4,3
	.word	48388
	.byte	15,24
	.word	48286
	.byte	16,0,0,14
	.word	48422
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,19,212,4,25,24,13
	.byte	'GPT12',0
	.word	48431
	.byte	24,2,35,0,0,14
	.word	48436
	.byte	35
	.byte	'Ifx_SRC_GPT12',0,19,215,4,3
	.word	48473
	.byte	10
	.byte	'_Ifx_SRC_STM_STM',0,19,230,4,25,8,13
	.byte	'SR',0
	.word	46662
	.byte	8,2,35,0,0,14
	.word	48501
	.byte	35
	.byte	'Ifx_SRC_STM_STM',0,19,233,4,3
	.word	48537
	.byte	15,48
	.word	48501
	.byte	16,5,0,14
	.word	48567
	.byte	10
	.byte	'_Ifx_SRC_STM',0,19,248,4,25,48,13
	.byte	'STM',0
	.word	48576
	.byte	48,2,35,0,0,14
	.word	48581
	.byte	35
	.byte	'Ifx_SRC_STM',0,19,251,4,3
	.word	48614
	.byte	10
	.byte	'_Ifx_SRC_FCE_FCE0',0,19,138,5,25,4,13
	.byte	'SR',0
	.word	46173
	.byte	4,2,35,0,0,14
	.word	48640
	.byte	35
	.byte	'Ifx_SRC_FCE_FCE0',0,19,141,5,3
	.word	48677
	.byte	14
	.word	48640
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,19,156,5,25,4,13
	.byte	'FCE0',0
	.word	48708
	.byte	4,2,35,0,0,14
	.word	48713
	.byte	35
	.byte	'Ifx_SRC_FCE',0,19,159,5,3
	.word	48747
	.byte	15,32
	.word	757
	.byte	16,31,0,15,128,4
	.word	46173
	.byte	16,127,0,10
	.byte	'_Ifx_SRC_DMA_DMA',0,19,174,5,25,176,4,13
	.byte	'ERR',0
	.word	48134
	.byte	16,2,35,0,13
	.byte	'reserved_10',0
	.word	48773
	.byte	32,2,35,16,13
	.byte	'CH',0
	.word	48782
	.byte	128,4,2,35,48,0,14
	.word	48792
	.byte	35
	.byte	'Ifx_SRC_DMA_DMA',0,19,179,5,3
	.word	48864
	.byte	15,176,4
	.word	48792
	.byte	16,0,0,14
	.word	48894
	.byte	10
	.byte	'_Ifx_SRC_DMA',0,19,194,5,25,176,4,13
	.byte	'DMA',0
	.word	48904
	.byte	176,4,2,35,0,0,14
	.word	48909
	.byte	35
	.byte	'Ifx_SRC_DMA',0,19,197,5,3
	.word	48944
	.byte	10
	.byte	'_Ifx_SRC_SDMMC_SDMMC',0,19,212,5,25,8,13
	.byte	'ERR',0
	.word	46173
	.byte	4,2,35,0,13
	.byte	'DMA',0
	.word	46173
	.byte	4,2,35,4,0,14
	.word	48970
	.byte	35
	.byte	'Ifx_SRC_SDMMC_SDMMC',0,19,216,5,3
	.word	49024
	.byte	15,8
	.word	48970
	.byte	16,0,0,14
	.word	49058
	.byte	10
	.byte	'_Ifx_SRC_SDMMC',0,19,231,5,25,8,13
	.byte	'SDMMC',0
	.word	49067
	.byte	8,2,35,0,0,14
	.word	49072
	.byte	35
	.byte	'Ifx_SRC_SDMMC',0,19,234,5,3
	.word	49109
	.byte	15,40
	.word	46173
	.byte	16,9,0,10
	.byte	'_Ifx_SRC_GETH_GETH',0,19,249,5,25,40,13
	.byte	'SR',0
	.word	49137
	.byte	40,2,35,0,0,14
	.word	49146
	.byte	35
	.byte	'Ifx_SRC_GETH_GETH',0,19,252,5,3
	.word	49184
	.byte	15,40
	.word	49146
	.byte	16,0,0,14
	.word	49216
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,19,139,6,25,40,13
	.byte	'GETH',0
	.word	49225
	.byte	40,2,35,0,0,14
	.word	49230
	.byte	35
	.byte	'Ifx_SRC_GETH',0,19,142,6,3
	.word	49265
	.byte	15,64
	.word	46173
	.byte	16,15,0,10
	.byte	'_Ifx_SRC_CAN_CAN',0,19,157,6,25,64,13
	.byte	'INT',0
	.word	49292
	.byte	64,2,35,0,0,14
	.word	49301
	.byte	35
	.byte	'Ifx_SRC_CAN_CAN',0,19,160,6,3
	.word	49338
	.byte	15,192,1
	.word	49301
	.byte	16,2,0,14
	.word	49368
	.byte	10
	.byte	'_Ifx_SRC_CAN',0,19,175,6,25,192,1,13
	.byte	'CAN',0
	.word	49378
	.byte	192,1,2,35,0,0,14
	.word	49383
	.byte	35
	.byte	'Ifx_SRC_CAN',0,19,178,6,3
	.word	49418
	.byte	10
	.byte	'_Ifx_SRC_VADC_G',0,19,193,6,25,16,13
	.byte	'SR0',0
	.word	46173
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	46173
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	46173
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	46173
	.byte	4,2,35,12,0,14
	.word	49444
	.byte	35
	.byte	'Ifx_SRC_VADC_G',0,19,199,6,3
	.word	49519
	.byte	10
	.byte	'_Ifx_SRC_VADC_FC',0,19,214,6,25,4,13
	.byte	'SR0',0
	.word	46173
	.byte	4,2,35,0,0,14
	.word	49548
	.byte	35
	.byte	'Ifx_SRC_VADC_FC',0,19,217,6,3
	.word	49585
	.byte	15,192,1
	.word	49444
	.byte	16,11,0,14
	.word	49615
	.byte	15,32
	.word	49548
	.byte	16,7,0,14
	.word	49630
	.byte	15,32
	.word	49444
	.byte	16,1,0,14
	.word	49644
	.byte	10
	.byte	'_Ifx_SRC_VADC',0,19,233,6,25,128,2,13
	.byte	'G',0
	.word	49625
	.byte	192,1,2,35,0,13
	.byte	'FC',0
	.word	49639
	.byte	32,3,35,192,1,13
	.byte	'CG',0
	.word	49653
	.byte	32,3,35,224,1,0,14
	.word	49658
	.byte	35
	.byte	'Ifx_SRC_VADC',0,19,238,6,3
	.word	49718
	.byte	10
	.byte	'_Ifx_SRC_DSADC_DSADC',0,19,253,6,25,8,13
	.byte	'SRM',0
	.word	46173
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	46173
	.byte	4,2,35,4,0,14
	.word	49745
	.byte	35
	.byte	'Ifx_SRC_DSADC_DSADC',0,19,129,7,3
	.word	49799
	.byte	15,112
	.word	49745
	.byte	16,13,0,14
	.word	49833
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,19,144,7,25,112,13
	.byte	'DSADC',0
	.word	49842
	.byte	112,2,35,0,0,14
	.word	49847
	.byte	35
	.byte	'Ifx_SRC_DSADC',0,19,147,7,3
	.word	49884
	.byte	10
	.byte	'_Ifx_SRC_ERAY_ERAY',0,19,162,7,25,48,13
	.byte	'INT0',0
	.word	46173
	.byte	4,2,35,0,13
	.byte	'INT1',0
	.word	46173
	.byte	4,2,35,4,13
	.byte	'TINT0',0
	.word	46173
	.byte	4,2,35,8,13
	.byte	'TINT1',0
	.word	46173
	.byte	4,2,35,12,13
	.byte	'NDAT0',0
	.word	46173
	.byte	4,2,35,16,13
	.byte	'NDAT1',0
	.word	46173
	.byte	4,2,35,20,13
	.byte	'MBSC0',0
	.word	46173
	.byte	4,2,35,24,13
	.byte	'MBSC1',0
	.word	46173
	.byte	4,2,35,28,13
	.byte	'OBUSY',0
	.word	46173
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	46173
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4795
	.byte	8,2,35,40,0,14
	.word	49912
	.byte	35
	.byte	'Ifx_SRC_ERAY_ERAY',0,19,175,7,3
	.word	50107
	.byte	15,96
	.word	49912
	.byte	16,1,0,14
	.word	50139
	.byte	10
	.byte	'_Ifx_SRC_ERAY',0,19,190,7,25,96,13
	.byte	'ERAY',0
	.word	50148
	.byte	96,2,35,0,0,14
	.word	50153
	.byte	35
	.byte	'Ifx_SRC_ERAY',0,19,193,7,3
	.word	50188
	.byte	10
	.byte	'_Ifx_SRC_HSM_HSM',0,19,208,7,25,8,13
	.byte	'HSM',0
	.word	46662
	.byte	8,2,35,0,0,14
	.word	50215
	.byte	35
	.byte	'Ifx_SRC_HSM_HSM',0,19,211,7,3
	.word	50252
	.byte	15,8
	.word	50215
	.byte	16,0,0,14
	.word	50282
	.byte	10
	.byte	'_Ifx_SRC_HSM',0,19,226,7,25,8,13
	.byte	'HSM',0
	.word	50291
	.byte	8,2,35,0,0,14
	.word	50296
	.byte	35
	.byte	'Ifx_SRC_HSM',0,19,229,7,3
	.word	50329
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,19,244,7,25,16,13
	.byte	'SCUERU',0
	.word	48134
	.byte	16,2,35,0,0,14
	.word	50355
	.byte	35
	.byte	'Ifx_SRC_SCU',0,19,247,7,3
	.word	50391
	.byte	10
	.byte	'_Ifx_SRC_PMS_PMS',0,19,134,8,25,4,13
	.byte	'SR',0
	.word	46173
	.byte	4,2,35,0,0,14
	.word	50417
	.byte	35
	.byte	'Ifx_SRC_PMS_PMS',0,19,137,8,3
	.word	50453
	.byte	15,16
	.word	50417
	.byte	16,3,0,14
	.word	50483
	.byte	10
	.byte	'_Ifx_SRC_PMS',0,19,152,8,25,16,13
	.byte	'PMS',0
	.word	50492
	.byte	16,2,35,0,0,14
	.word	50497
	.byte	35
	.byte	'Ifx_SRC_PMS',0,19,155,8,3
	.word	50530
	.byte	15,12
	.word	46173
	.byte	16,2,0,10
	.byte	'_Ifx_SRC_SMU_SMU',0,19,170,8,25,12,13
	.byte	'SR',0
	.word	50556
	.byte	12,2,35,0,0,14
	.word	50565
	.byte	35
	.byte	'Ifx_SRC_SMU_SMU',0,19,173,8,3
	.word	50601
	.byte	15,12
	.word	50565
	.byte	16,0,0,14
	.word	50631
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,19,188,8,25,12,13
	.byte	'SMU',0
	.word	50640
	.byte	12,2,35,0,0,14
	.word	50645
	.byte	35
	.byte	'Ifx_SRC_SMU',0,19,191,8,3
	.word	50678
	.byte	15,32
	.word	46173
	.byte	16,7,0,10
	.byte	'_Ifx_SRC_PSI5_PSI5',0,19,206,8,25,32,13
	.byte	'SR',0
	.word	50704
	.byte	32,2,35,0,0,14
	.word	50713
	.byte	35
	.byte	'Ifx_SRC_PSI5_PSI5',0,19,209,8,3
	.word	50751
	.byte	15,32
	.word	50713
	.byte	16,0,0,14
	.word	50783
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,19,224,8,25,32,13
	.byte	'PSI5',0
	.word	50792
	.byte	32,2,35,0,0,14
	.word	50797
	.byte	35
	.byte	'Ifx_SRC_PSI5',0,19,227,8,3
	.word	50832
	.byte	10
	.byte	'_Ifx_SRC_HSPDM_HSPDM0',0,19,242,8,25,12,13
	.byte	'BFR',0
	.word	46173
	.byte	4,2,35,0,13
	.byte	'RAMP',0
	.word	46173
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	46173
	.byte	4,2,35,8,0,14
	.word	50859
	.byte	35
	.byte	'Ifx_SRC_HSPDM_HSPDM0',0,19,247,8,3
	.word	50928
	.byte	14
	.word	50859
	.byte	10
	.byte	'_Ifx_SRC_HSPDM',0,19,134,9,25,12,13
	.byte	'HSPDM0',0
	.word	50963
	.byte	12,2,35,0,0,14
	.word	50968
	.byte	35
	.byte	'Ifx_SRC_HSPDM',0,19,137,9,3
	.word	51006
	.byte	10
	.byte	'_Ifx_SRC_DAM_DAM',0,19,152,9,25,24,13
	.byte	'LI0',0
	.word	46173
	.byte	4,2,35,0,13
	.byte	'RI0',0
	.word	46173
	.byte	4,2,35,4,13
	.byte	'LI1',0
	.word	46173
	.byte	4,2,35,8,13
	.byte	'RI1',0
	.word	46173
	.byte	4,2,35,12,13
	.byte	'DR',0
	.word	46173
	.byte	4,2,35,16,13
	.byte	'ERR',0
	.word	46173
	.byte	4,2,35,20,0,14
	.word	51034
	.byte	35
	.byte	'Ifx_SRC_DAM_DAM',0,19,160,9,3
	.word	51135
	.byte	15,48
	.word	51034
	.byte	16,1,0,14
	.word	51165
	.byte	10
	.byte	'_Ifx_SRC_DAM',0,19,175,9,25,48,13
	.byte	'DAM',0
	.word	51174
	.byte	48,2,35,0,0,14
	.word	51179
	.byte	35
	.byte	'Ifx_SRC_DAM',0,19,178,9,3
	.word	51212
	.byte	10
	.byte	'_Ifx_SRC_PSI5S_PSI5S',0,19,193,9,25,32,13
	.byte	'SR',0
	.word	50704
	.byte	32,2,35,0,0,14
	.word	51238
	.byte	35
	.byte	'Ifx_SRC_PSI5S_PSI5S',0,19,196,9,3
	.word	51278
	.byte	15,32
	.word	51238
	.byte	16,0,0,14
	.word	51312
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,19,211,9,25,32,13
	.byte	'PSI5S',0
	.word	51321
	.byte	32,2,35,0,0,14
	.word	51326
	.byte	35
	.byte	'Ifx_SRC_PSI5S',0,19,214,9,3
	.word	51363
	.byte	10
	.byte	'_Ifx_SRC_RIF_RIF',0,19,229,9,25,8,13
	.byte	'ERR',0
	.word	46173
	.byte	4,2,35,0,13
	.byte	'INT',0
	.word	46173
	.byte	4,2,35,4,0,14
	.word	51391
	.byte	35
	.byte	'Ifx_SRC_RIF_RIF',0,19,233,9,3
	.word	51441
	.byte	15,16
	.word	51391
	.byte	16,1,0,14
	.word	51471
	.byte	10
	.byte	'_Ifx_SRC_RIF',0,19,248,9,25,16,13
	.byte	'RIF',0
	.word	51480
	.byte	16,2,35,0,0,14
	.word	51485
	.byte	35
	.byte	'Ifx_SRC_RIF',0,19,251,9,3
	.word	51518
	.byte	10
	.byte	'_Ifx_SRC_SPU_SPU',0,19,138,10,25,8,13
	.byte	'INT',0
	.word	46173
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	46173
	.byte	4,2,35,4,0,14
	.word	51544
	.byte	35
	.byte	'Ifx_SRC_SPU_SPU',0,19,142,10,3
	.word	51594
	.byte	15,16
	.word	51544
	.byte	16,1,0,14
	.word	51624
	.byte	10
	.byte	'_Ifx_SRC_SPU',0,19,157,10,25,16,13
	.byte	'SPU',0
	.word	51633
	.byte	16,2,35,0,0,14
	.word	51638
	.byte	35
	.byte	'Ifx_SRC_SPU',0,19,160,10,3
	.word	51671
	.byte	10
	.byte	'_Ifx_SRC_GPSR_GPSR',0,19,175,10,25,32,13
	.byte	'SR',0
	.word	50704
	.byte	32,2,35,0,0,14
	.word	51697
	.byte	35
	.byte	'Ifx_SRC_GPSR_GPSR',0,19,178,10,3
	.word	51735
	.byte	15,192,1
	.word	51697
	.byte	16,5,0,14
	.word	51767
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,19,193,10,25,192,1,13
	.byte	'GPSR',0
	.word	51777
	.byte	192,1,2,35,0,0,14
	.word	51782
	.byte	35
	.byte	'Ifx_SRC_GPSR',0,19,196,10,3
	.word	51819
	.byte	10
	.byte	'_Ifx_SCU_ACCEN00_Bits',0,5,68,16,4,11
	.byte	'EN0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	757
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	757
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	757
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	757
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_ACCEN00_Bits',0,5,102,3
	.word	51846
	.byte	10
	.byte	'_Ifx_SCU_ACCEN01_Bits',0,5,105,16,4,11
	.byte	'reserved_0',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_ACCEN01_Bits',0,5,108,3
	.word	52405
	.byte	10
	.byte	'_Ifx_SCU_ACCEN10_Bits',0,5,111,16,4,11
	.byte	'EN0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	757
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	757
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	757
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	757
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_ACCEN10_Bits',0,5,145,1,3
	.word	52484
	.byte	10
	.byte	'_Ifx_SCU_ACCEN11_Bits',0,5,148,1,16,4,11
	.byte	'reserved_0',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_ACCEN11_Bits',0,5,151,1,3
	.word	53044
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,5,154,1,16,4,11
	.byte	'STM0DIS',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'STM3DIS',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'STM4DIS',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'STM5DIS',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	757
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	582
	.byte	24,0,2,35,0,0,35
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,5,164,1,3
	.word	53125
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,5,167,1,16,4,11
	.byte	'STMDIV',0,1
	.word	757
	.byte	4,4,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	757
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	757
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	757
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	757
	.byte	4,4,2,35,2,11
	.byte	'BBBDIV',0,1
	.word	757
	.byte	4,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	757
	.byte	2,6,2,35,3,11
	.byte	'FSI2DIV',0,1
	.word	757
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	757
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_CCUCON0_Bits',0,5,181,1,3
	.word	53342
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,5,184,1,16,4,11
	.byte	'MCANDIV',0,1
	.word	757
	.byte	4,4,2,35,0,11
	.byte	'CLKSELMCAN',0,1
	.word	757
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'PLL1DIVDIS',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'I2CDIV',0,1
	.word	757
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	757
	.byte	4,0,2,35,1,11
	.byte	'MSCDIV',0,1
	.word	757
	.byte	4,4,2,35,2,11
	.byte	'CLKSELMSC',0,1
	.word	757
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	757
	.byte	2,0,2,35,2,11
	.byte	'QSPIDIV',0,1
	.word	757
	.byte	4,4,2,35,3,11
	.byte	'CLKSELQSPI',0,1
	.word	757
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_CCUCON1_Bits',0,5,199,1,3
	.word	53615
	.byte	10
	.byte	'_Ifx_SCU_CCUCON10_Bits',0,5,202,1,16,4,11
	.byte	'CPU4DIV',0,1
	.word	757
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	582
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON10_Bits',0,5,206,1,3
	.word	53941
	.byte	10
	.byte	'_Ifx_SCU_CCUCON11_Bits',0,5,209,1,16,4,11
	.byte	'CPU5DIV',0,1
	.word	757
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	582
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON11_Bits',0,5,213,1,3
	.word	54043
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,5,216,1,16,4,11
	.byte	'ASCLINFDIV',0,1
	.word	757
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	757
	.byte	4,0,2,35,0,11
	.byte	'ASCLINSDIV',0,1
	.word	757
	.byte	4,4,2,35,1,11
	.byte	'CLKSELASCLINS',0,1
	.word	757
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	582
	.byte	10,8,2,35,0,11
	.byte	'EBUPERON',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'ERAYPERON',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'HSPDMPERON',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	757
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_CCUCON2_Bits',0,5,228,1,3
	.word	54145
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,5,231,1,16,4,11
	.byte	'PLL0MONEN',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'PLL1MONEN',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'PLL2MONEN',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'SPBMONEN',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'BACKMONEN',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	757
	.byte	3,0,2,35,0,11
	.byte	'PLL0MONTST',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'PLL1MONTST',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'PLL2MONTST',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'SPBMONTST',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'BACKMONTST',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	582
	.byte	11,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	757
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_CCUCON3_Bits',0,5,248,1,3
	.word	54419
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,5,251,1,16,4,11
	.byte	'LOTHR',0,2
	.word	774
	.byte	12,4,2,35,0,11
	.byte	'UPTHR',0,4
	.word	582
	.byte	12,8,2,35,0,11
	.byte	'MONEN',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'MONTST',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	757
	.byte	4,2,2,35,3,11
	.byte	'UP',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_CCUCON4_Bits',0,5,132,2,3
	.word	54788
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,5,135,2,16,4,11
	.byte	'GETHDIV',0,1
	.word	757
	.byte	4,4,2,35,0,11
	.byte	'MCANHDIV',0,1
	.word	757
	.byte	4,0,2,35,0,11
	.byte	'ADASDIV',0,1
	.word	757
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	582
	.byte	18,2,2,35,0,11
	.byte	'UP',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_CCUCON5_Bits',0,5,143,2,3
	.word	54968
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,5,146,2,16,4,11
	.byte	'CPU0DIV',0,1
	.word	757
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	582
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON6_Bits',0,5,150,2,3
	.word	55137
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,5,153,2,16,4,11
	.byte	'CPU1DIV',0,1
	.word	757
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	582
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON7_Bits',0,5,157,2,3
	.word	55237
	.byte	10
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,5,160,2,16,4,11
	.byte	'CPU2DIV',0,1
	.word	757
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	582
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON8_Bits',0,5,164,2,3
	.word	55337
	.byte	10
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,5,167,2,16,4,11
	.byte	'CPU3DIV',0,1
	.word	757
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	582
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON9_Bits',0,5,171,2,3
	.word	55437
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,5,174,2,16,4,11
	.byte	'CHREV',0,1
	.word	757
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	757
	.byte	2,0,2,35,0,11
	.byte	'CHPK',0,1
	.word	757
	.byte	4,4,2,35,1,11
	.byte	'CHID',0,1
	.word	757
	.byte	4,0,2,35,1,11
	.byte	'EEA',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	757
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	757
	.byte	4,4,2,35,3,11
	.byte	'VART',0,1
	.word	757
	.byte	3,1,2,35,3,11
	.byte	'SEC',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_CHIPID_Bits',0,5,185,2,3
	.word	55537
	.byte	10
	.byte	'_Ifx_SCU_DTSCLIM_Bits',0,5,188,2,16,4,11
	.byte	'LOWER',0,2
	.word	774
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'BGPOK',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'EN',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'LLU',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	774
	.byte	12,4,2,35,2,11
	.byte	'INTEN',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'INT',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_DTSCLIM_Bits',0,5,200,2,3
	.word	55740
	.byte	10
	.byte	'_Ifx_SCU_DTSCSTAT_Bits',0,5,203,2,16,4,11
	.byte	'RESULT',0,2
	.word	774
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	582
	.byte	20,0,2,35,0,0,35
	.byte	'Ifx_SCU_DTSCSTAT_Bits',0,5,207,2,3
	.word	55972
	.byte	10
	.byte	'_Ifx_SCU_EICON0_Bits',0,5,210,2,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	605
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	605
	.byte	16,0,2,35,0,0,35
	.byte	'Ifx_SCU_EICON0_Bits',0,5,216,2,3
	.word	56074
	.byte	10
	.byte	'_Ifx_SCU_EICON1_Bits',0,5,219,2,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	582
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_SCU_EICON1_Bits',0,5,228,2,3
	.word	56202
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,5,231,2,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	757
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	757
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	582
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	757
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	757
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	757
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_EICR_Bits',0,5,250,2,3
	.word	56391
	.byte	10
	.byte	'_Ifx_SCU_EIFILT_Bits',0,5,253,2,16,4,11
	.byte	'FILRQ0A',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'FILRQ5A',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'FILRQ2A',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'FILRQ3A',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'FILRQ0C',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'FILRQ1C',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'FILRQ3C',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'FILRQ2C',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'FILRQ4A',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'FILRQ6A',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'FILRQ1A',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'FILRQ7A',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'FILRQ6D',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'FILRQ4D',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'FILRQ2B',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'FILRQ3B',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'FILRQ7C',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	757
	.byte	7,0,2,35,2,11
	.byte	'FILTDIV',0,1
	.word	757
	.byte	4,4,2,35,3,11
	.byte	'DEPTH',0,1
	.word	757
	.byte	4,0,2,35,3,0,35
	.byte	'Ifx_SCU_EIFILT_Bits',0,5,147,3,3
	.word	56755
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,5,150,3,16,4,11
	.byte	'INTF0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	582
	.byte	24,0,2,35,0,0,35
	.byte	'Ifx_SCU_EIFR_Bits',0,5,161,3,3
	.word	57194
	.byte	10
	.byte	'_Ifx_SCU_EISR_Bits',0,5,164,3,16,4,11
	.byte	'AE',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	774
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	774
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_EISR_Bits',0,5,174,3,3
	.word	57405
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,5,177,3,16,4,11
	.byte	'POL',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	774
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	774
	.byte	14,0,2,35,2,0,35
	.byte	'Ifx_SCU_EMSR_Bits',0,5,187,3,3
	.word	57581
	.byte	10
	.byte	'_Ifx_SCU_EMSSW_Bits',0,5,190,3,16,4,11
	.byte	'reserved_0',0,4
	.word	582
	.byte	24,8,2,35,0,11
	.byte	'EMSFM',0,1
	.word	757
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	757
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	757
	.byte	4,0,2,35,3,0,35
	.byte	'Ifx_SCU_EMSSW_Bits',0,5,196,3,3
	.word	57775
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,5,199,3,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	774
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	582
	.byte	23,0,2,35,0,0,35
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,5,204,3,3
	.word	57910
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,5,207,3,16,4,11
	.byte	'ARI',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	582
	.byte	30,0,2,35,0,0,35
	.byte	'Ifx_SCU_ESROCFG_Bits',0,5,212,3,3
	.word	58046
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,5,215,3,16,4,11
	.byte	'EN0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	757
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	774
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	757
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	757
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	757
	.byte	8,0,2,35,3,0,35
	.byte	'Ifx_SCU_EXTCON_Bits',0,5,226,3,3
	.word	58157
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,5,229,3,16,4,11
	.byte	'STEP',0,2
	.word	774
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	757
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	757
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	774
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	757
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_FDR_Bits',0,5,237,3,3
	.word	58375
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,5,240,3,16,4,11
	.byte	'FS0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	757
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	757
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	757
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	757
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	757
	.byte	8,0,2,35,3,0,35
	.byte	'Ifx_SCU_FMR_Bits',0,5,132,4,3
	.word	58538
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,5,135,4,16,4,11
	.byte	'MODREV',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	774
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_ID_Bits',0,5,140,4,3
	.word	58874
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,5,143,4,16,4,11
	.byte	'IPEN00',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	757
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	757
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	757
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	757
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	757
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	757
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	757
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	757
	.byte	2,0,2,35,3,0,35
	.byte	'Ifx_SCU_IGCR_Bits',0,5,167,4,3
	.word	58981
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,5,170,4,16,4,11
	.byte	'P0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	582
	.byte	30,0,2,35,0,0,35
	.byte	'Ifx_SCU_IN_Bits',0,5,175,4,3
	.word	59433
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,5,178,4,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	757
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	757
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	757
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_IOCR_Bits',0,5,185,4,3
	.word	59532
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,5,188,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'LBISTRES',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,4
	.word	582
	.byte	18,12,2,35,0,11
	.byte	'reserved_20',0,2
	.word	774
	.byte	8,4,2,35,2,11
	.byte	'LBISTDONE',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'LBISTERRINJ',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'LBISTREQRED',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,5,198,4,3
	.word	59682
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,5,201,4,16,4,11
	.byte	'SEED',0,4
	.word	582
	.byte	19,13,2,35,0,11
	.byte	'reserved_19',0,1
	.word	757
	.byte	5,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	757
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	757
	.byte	4,0,2,35,3,0,35
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,5,208,4,3
	.word	59920
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,5,211,4,16,4,11
	.byte	'LENGTH',0,2
	.word	774
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	582
	.byte	20,0,2,35,0,0,35
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,5,215,4,3
	.word	60081
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL3_Bits',0,5,218,4,16,4,11
	.byte	'SIGNATURE',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_LBISTCTRL3_Bits',0,5,221,4,3
	.word	60187
	.byte	10
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,5,224,4,16,4,11
	.byte	'LS2',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	774
	.byte	14,1,2,35,0,11
	.byte	'LSEN2',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'LS0',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	774
	.byte	14,1,2,35,2,11
	.byte	'LSEN0',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_LCLCON0_Bits',0,5,232,4,3
	.word	60273
	.byte	10
	.byte	'_Ifx_SCU_LCLCON1_Bits',0,5,235,4,16,4,11
	.byte	'LS3',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	774
	.byte	14,1,2,35,0,11
	.byte	'LSEN3',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'LS1',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	774
	.byte	14,1,2,35,2,11
	.byte	'LSEN1',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_LCLCON1_Bits',0,5,243,4,3
	.word	60441
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,5,246,4,16,4,11
	.byte	'LCLT0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'LCLT2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'LCLT3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'LCLT4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'LCLT5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	774
	.byte	10,0,2,35,0,11
	.byte	'PLCLT0',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'PLCLT1',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'PLCLT2',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'PLCLT3',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'PLCLT4',0,1
	.word	757
	.byte	1,3,2,35,2,11
	.byte	'PLCLT5',0,1
	.word	757
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	774
	.byte	10,0,2,35,2,0,35
	.byte	'Ifx_SCU_LCLTEST_Bits',0,5,134,5,3
	.word	60609
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,5,137,5,16,4,11
	.byte	'DEPT',0,1
	.word	757
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	774
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_MANID_Bits',0,5,142,5,3
	.word	60923
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,5,145,5,16,4,11
	.byte	'PS0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	774
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	774
	.byte	14,0,2,35,2,0,35
	.byte	'Ifx_SCU_OMR_Bits',0,5,153,5,3
	.word	61034
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,5,156,5,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	757
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	757
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'HYSEN',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'HYSCTL',0,1
	.word	757
	.byte	2,4,2,35,1,11
	.byte	'AMPCTL',0,1
	.word	757
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	757
	.byte	2,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	757
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	757
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	757
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	757
	.byte	4,0,2,35,3,0,35
	.byte	'Ifx_SCU_OSCCON_Bits',0,5,177,5,3
	.word	61192
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,5,180,5,16,4,11
	.byte	'P0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	582
	.byte	30,0,2,35,0,0,35
	.byte	'Ifx_SCU_OUT_Bits',0,5,185,5,3
	.word	61603
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,5,188,5,16,4,11
	.byte	'CSEL0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'CSEL3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'CSEL4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'CSEL5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	774
	.byte	10,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	757
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	757
	.byte	6,0,2,35,3,0,35
	.byte	'Ifx_SCU_OVCCON_Bits',0,5,204,5,3
	.word	61704
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,5,207,5,16,4,11
	.byte	'OVEN0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'OVEN3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'OVEN4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'OVEN5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	582
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,5,216,5,3
	.word	62022
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,5,219,5,16,4,11
	.byte	'PDIS0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	582
	.byte	30,0,2,35,0,0,35
	.byte	'Ifx_SCU_PDISC_Bits',0,5,224,5,3
	.word	62209
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,5,227,5,16,4,11
	.byte	'PD0',0,1
	.word	757
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	757
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	757
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	757
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	582
	.byte	24,0,2,35,0,0,35
	.byte	'Ifx_SCU_PDR_Bits',0,5,234,5,3
	.word	62320
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,5,237,5,16,4,11
	.byte	'PDR0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	582
	.byte	24,0,2,35,0,0,35
	.byte	'Ifx_SCU_PDRR_Bits',0,5,248,5,3
	.word	62453
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON0_Bits',0,5,251,5,16,4,11
	.byte	'DIVBY',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	774
	.byte	8,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	757
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	757
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	757
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	757
	.byte	5,0,2,35,3,0,35
	.byte	'Ifx_SCU_PERPLLCON0_Bits',0,5,134,6,3
	.word	62656
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON1_Bits',0,5,137,6,16,4,11
	.byte	'K2DIV',0,1
	.word	757
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	757
	.byte	5,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	757
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	582
	.byte	21,0,2,35,0,0,35
	.byte	'Ifx_SCU_PERPLLCON1_Bits',0,5,143,6,3
	.word	62896
	.byte	10
	.byte	'_Ifx_SCU_PERPLLSTAT_Bits',0,5,146,6,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'K3RDY',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	582
	.byte	25,0,2,35,0,0,35
	.byte	'Ifx_SCU_PERPLLSTAT_Bits',0,5,156,6,3
	.word	63040
	.byte	10
	.byte	'_Ifx_SCU_PMCSR0_Bits',0,5,159,6,16,4,11
	.byte	'REQSLP',0,1
	.word	757
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	757
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	757
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	582
	.byte	21,0,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR0_Bits',0,5,165,6,3
	.word	63262
	.byte	10
	.byte	'_Ifx_SCU_PMCSR1_Bits',0,5,168,6,16,4,11
	.byte	'REQSLP',0,1
	.word	757
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	757
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	757
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	582
	.byte	21,0,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR1_Bits',0,5,174,6,3
	.word	63398
	.byte	10
	.byte	'_Ifx_SCU_PMCSR2_Bits',0,5,177,6,16,4,11
	.byte	'REQSLP',0,1
	.word	757
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	757
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	757
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	582
	.byte	21,0,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR2_Bits',0,5,183,6,3
	.word	63534
	.byte	10
	.byte	'_Ifx_SCU_PMCSR3_Bits',0,5,186,6,16,4,11
	.byte	'REQSLP',0,1
	.word	757
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	757
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	757
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	582
	.byte	21,0,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR3_Bits',0,5,192,6,3
	.word	63670
	.byte	10
	.byte	'_Ifx_SCU_PMCSR4_Bits',0,5,195,6,16,4,11
	.byte	'REQSLP',0,1
	.word	757
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	757
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	757
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	582
	.byte	21,0,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR4_Bits',0,5,201,6,3
	.word	63806
	.byte	10
	.byte	'_Ifx_SCU_PMCSR5_Bits',0,5,204,6,16,4,11
	.byte	'REQSLP',0,1
	.word	757
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	757
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	757
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	582
	.byte	21,0,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR5_Bits',0,5,210,6,3
	.word	63942
	.byte	10
	.byte	'_Ifx_SCU_PMSTAT0_Bits',0,5,213,6,16,4,11
	.byte	'CPU0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'CPU1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'CPU2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'CPU3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'CPU4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'CPU5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	774
	.byte	10,0,2,35,0,11
	.byte	'CPU0LS',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'CPU1LS',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'CPU2LS',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'CPU3LS',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	774
	.byte	12,0,2,35,2,0,35
	.byte	'Ifx_SCU_PMSTAT0_Bits',0,5,227,6,3
	.word	64078
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,5,230,6,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	757
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	582
	.byte	11,8,2,35,0,11
	.byte	'CPUSEL',0,1
	.word	757
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	757
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,5,241,6,3
	.word	64350
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR0_Bits',0,5,244,6,16,4,11
	.byte	'LJTEN',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'LJTOVEN',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'LJTOVIEN',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'LJTSTRT',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'LJTSTP',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'LJTCLR',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	774
	.byte	6,4,2,35,0,11
	.byte	'SDSTEP',0,1
	.word	757
	.byte	4,0,2,35,1,11
	.byte	'VDTEN',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'VDTOVEN',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'VDTOVIEN',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'VDTSTRT',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'VDTSTP',0,1
	.word	757
	.byte	1,3,2,35,2,11
	.byte	'VDTCLR',0,1
	.word	757
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	774
	.byte	7,3,2,35,2,11
	.byte	'LPSLPEN',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	757
	.byte	2,0,2,35,3,0,35
	.byte	'Ifx_SCU_PMTRCSR0_Bits',0,5,135,7,3
	.word	64595
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR1_Bits',0,5,138,7,16,4,11
	.byte	'LJTCV',0,2
	.word	774
	.byte	16,0,2,35,0,11
	.byte	'VDTCV',0,2
	.word	774
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	757
	.byte	6,0,2,35,3,0,35
	.byte	'Ifx_SCU_PMTRCSR1_Bits',0,5,143,7,3
	.word	64983
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR2_Bits',0,5,146,7,16,4,11
	.byte	'LDJMPREQ',0,1
	.word	757
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	757
	.byte	2,4,2,35,0,11
	.byte	'LJTRUN',0,1
	.word	757
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	757
	.byte	2,0,2,35,0,11
	.byte	'LJTOV',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	757
	.byte	3,4,2,35,1,11
	.byte	'LJTOVCLR',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	757
	.byte	3,0,2,35,1,11
	.byte	'LJTCNT',0,2
	.word	774
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_PMTRCSR2_Bits',0,5,157,7,3
	.word	65101
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR3_Bits',0,5,160,7,16,4,11
	.byte	'VDROOPREQ',0,1
	.word	757
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	757
	.byte	2,4,2,35,0,11
	.byte	'VDTRUN',0,1
	.word	757
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	757
	.byte	2,0,2,35,0,11
	.byte	'VDTOV',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	757
	.byte	3,4,2,35,1,11
	.byte	'VDTOVCLR',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	757
	.byte	3,0,2,35,1,11
	.byte	'VDTCNT',0,2
	.word	774
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	757
	.byte	6,0,2,35,3,0,35
	.byte	'Ifx_SCU_PMTRCSR3_Bits',0,5,172,7,3
	.word	65344
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,5,175,7,16,4,11
	.byte	'ESR0',0,1
	.word	757
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	757
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	757
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	757
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	757
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	757
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	757
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	757
	.byte	2,0,2,35,1,11
	.byte	'STM3',0,1
	.word	757
	.byte	2,6,2,35,2,11
	.byte	'STM4',0,1
	.word	757
	.byte	2,4,2,35,2,11
	.byte	'STM5',0,1
	.word	757
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	774
	.byte	10,0,2,35,2,0,35
	.byte	'Ifx_SCU_RSTCON_Bits',0,5,189,7,3
	.word	65611
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,5,192,7,16,4,11
	.byte	'FRTO',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'CSSX',0,2
	.word	774
	.byte	6,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	774
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_RSTCON2_Bits',0,5,206,7,3
	.word	65870
	.byte	10
	.byte	'_Ifx_SCU_RSTCON3_Bits',0,5,209,7,16,4,11
	.byte	'reserved_0',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_RSTCON3_Bits',0,5,212,7,3
	.word	66175
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,5,215,7,16,4,11
	.byte	'ESR0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'STM3',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'STM4',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'STM5',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	757
	.byte	5,0,2,35,1,11
	.byte	'PORST',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	757
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	757
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	757
	.byte	1,1,2,35,2,11
	.byte	'EVRC',0,1
	.word	757
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'HSMS',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'HSMA',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'LBPORST',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'LBTERM',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,5,245,7,3
	.word	66256
	.byte	10
	.byte	'_Ifx_SCU_SEICON0_Bits',0,5,248,7,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	605
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	605
	.byte	16,0,2,35,0,0,35
	.byte	'Ifx_SCU_SEICON0_Bits',0,5,254,7,3
	.word	66805
	.byte	10
	.byte	'_Ifx_SCU_SEICON1_Bits',0,5,129,8,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	582
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_SCU_SEICON1_Bits',0,5,138,8,3
	.word	66935
	.byte	10
	.byte	'_Ifx_SCU_SEISR_Bits',0,5,141,8,16,4,11
	.byte	'AE',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	774
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	774
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_SEISR_Bits',0,5,151,8,3
	.word	67126
	.byte	10
	.byte	'_Ifx_SCU_STCON_Bits',0,5,154,8,16,4,11
	.byte	'reserved_0',0,2
	.word	774
	.byte	13,3,2,35,0,11
	.byte	'SFCBAE',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'CFCBAE',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'STP',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_STCON_Bits',0,5,161,8,3
	.word	67304
	.byte	10
	.byte	'_Ifx_SCU_STMEM1_Bits',0,5,164,8,16,4,11
	.byte	'MEM',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM1_Bits',0,5,167,8,3
	.word	67455
	.byte	10
	.byte	'_Ifx_SCU_STMEM2_Bits',0,5,170,8,16,4,11
	.byte	'MEM',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM2_Bits',0,5,173,8,3
	.word	67527
	.byte	10
	.byte	'_Ifx_SCU_STMEM3_Bits',0,5,176,8,16,4,11
	.byte	'MEM',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM3_Bits',0,5,179,8,3
	.word	67599
	.byte	10
	.byte	'_Ifx_SCU_STMEM4_Bits',0,5,182,8,16,4,11
	.byte	'MEM',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM4_Bits',0,5,185,8,3
	.word	67671
	.byte	10
	.byte	'_Ifx_SCU_STMEM5_Bits',0,5,188,8,16,4,11
	.byte	'MEM',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM5_Bits',0,5,191,8,3
	.word	67743
	.byte	10
	.byte	'_Ifx_SCU_STMEM6_Bits',0,5,194,8,16,4,11
	.byte	'MEM',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM6_Bits',0,5,197,8,3
	.word	67815
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,5,200,8,16,4,11
	.byte	'HWCFG',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	757
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	757
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	757
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	757
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	757
	.byte	1,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	757
	.byte	3,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	757
	.byte	4,0,2,35,3,0,35
	.byte	'Ifx_SCU_STSTAT_Bits',0,5,216,8,3
	.word	67887
	.byte	10
	.byte	'_Ifx_SCU_SWAPCTRL_Bits',0,5,219,8,16,4,11
	.byte	'ADDRCFG',0,1
	.word	757
	.byte	2,6,2,35,0,11
	.byte	'SPARE',0,2
	.word	774
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_SWAPCTRL_Bits',0,5,224,8,3
	.word	68216
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,5,227,8,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	757
	.byte	6,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,5,234,8,3
	.word	68336
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,5,237,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	757
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'DDC',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	757
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_SYSCON_Bits',0,5,249,8,3
	.word	68506
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON0_Bits',0,5,252,8,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	2,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	774
	.byte	6,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	757
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	757
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	757
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	757
	.byte	3,2,2,35,3,11
	.byte	'INSEL',0,1
	.word	757
	.byte	2,0,2,35,3,0,35
	.byte	'Ifx_SCU_SYSPLLCON0_Bits',0,5,137,9,3
	.word	68769
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON1_Bits',0,5,140,9,16,4,11
	.byte	'K2DIV',0,1
	.word	757
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	582
	.byte	29,0,2,35,0,0,35
	.byte	'Ifx_SCU_SYSPLLCON1_Bits',0,5,144,9,3
	.word	69048
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON2_Bits',0,5,147,9,16,4,11
	.byte	'MODCFG',0,2
	.word	774
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_SYSPLLCON2_Bits',0,5,151,9,3
	.word	69152
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLSTAT_Bits',0,5,154,9,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	757
	.byte	2,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	582
	.byte	24,0,2,35,0,0,35
	.byte	'Ifx_SCU_SYSPLLSTAT_Bits',0,5,164,9,3
	.word	69258
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,5,167,9,16,4,11
	.byte	'ESR0T',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	582
	.byte	28,0,2,35,0,0,35
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,5,174,9,3
	.word	69481
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS0_Bits',0,5,177,9,16,4,11
	.byte	'CPU0ESR0T',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'CPU0ESR1T',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'CPU0TRAP2T',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'CPU0SMUT',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	757
	.byte	4,0,2,35,0,11
	.byte	'CPU1ESR0T',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'CPU1ESR1T',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'CPU1TRAP2T',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'CPU1SMUT',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	757
	.byte	4,0,2,35,1,11
	.byte	'CPU2ESR0T',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'CPU2ESR1T',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'CPU2TRAP2T',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'CPU2SMUT',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	757
	.byte	4,0,2,35,2,11
	.byte	'CPU3ESR0T',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'CPU3ESR1T',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'CPU3TRAP2T',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'CPU3SMUT',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	757
	.byte	4,0,2,35,3,0,35
	.byte	'Ifx_SCU_TRAPDIS0_Bits',0,5,199,9,3
	.word	69629
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS1_Bits',0,5,202,9,16,4,11
	.byte	'CPU4ESR0T',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'CPU4ESR1T',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'CPU4TRAP2T',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'CPU4SMUT',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	757
	.byte	4,0,2,35,0,11
	.byte	'CPU5ESR0T',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'CPU5ESR1T',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'CPU5TRAP2T',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'CPU5SMUT',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	757
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_TRAPDIS1_Bits',0,5,215,9,3
	.word	70117
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,5,218,9,16,4,11
	.byte	'ESR0T',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	582
	.byte	28,0,2,35,0,0,35
	.byte	'Ifx_SCU_TRAPSET_Bits',0,5,225,9,3
	.word	70414
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,5,228,9,16,4,11
	.byte	'ESR0T',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	582
	.byte	28,0,2,35,0,0,35
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,5,235,9,3
	.word	70562
	.byte	35
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,5,244,9,3
	.word	621
	.byte	35
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,5,132,10,3
	.word	796
	.byte	35
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,5,148,10,3
	.word	1062
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,5,151,10,16,4,11
	.byte	'ENDINIT',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	605
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	605
	.byte	16,0,2,35,0,0,35
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,5,157,10,3
	.word	70812
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,5,160,10,16,4,11
	.byte	'CLRIRF',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	757
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,5,173,10,3
	.word	70938
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,5,176,10,16,4,11
	.byte	'AE',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	757
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	774
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,5,189,10,3
	.word	71190
	.byte	12,5,197,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51846
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_ACCEN00',0,5,202,10,3
	.word	71409
	.byte	12,5,205,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52405
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_ACCEN01',0,5,210,10,3
	.word	71474
	.byte	12,5,213,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52484
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_ACCEN10',0,5,218,10,3
	.word	71539
	.byte	12,5,221,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53044
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_ACCEN11',0,5,226,10,3
	.word	71604
	.byte	12,5,229,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53125
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_ARSTDIS',0,5,234,10,3
	.word	71669
	.byte	12,5,237,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53342
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON0',0,5,242,10,3
	.word	71734
	.byte	12,5,245,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53615
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON1',0,5,250,10,3
	.word	71799
	.byte	12,5,253,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53941
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON10',0,5,130,11,3
	.word	71864
	.byte	12,5,133,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54043
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON11',0,5,138,11,3
	.word	71930
	.byte	12,5,141,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54145
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON2',0,5,146,11,3
	.word	71996
	.byte	12,5,149,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54419
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON3',0,5,154,11,3
	.word	72061
	.byte	12,5,157,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54788
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON4',0,5,162,11,3
	.word	72126
	.byte	12,5,165,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54968
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON5',0,5,170,11,3
	.word	72191
	.byte	12,5,173,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55137
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON6',0,5,178,11,3
	.word	72256
	.byte	12,5,181,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55237
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON7',0,5,186,11,3
	.word	72321
	.byte	12,5,189,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55337
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON8',0,5,194,11,3
	.word	72386
	.byte	12,5,197,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55437
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON9',0,5,202,11,3
	.word	72451
	.byte	12,5,205,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55537
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CHIPID',0,5,210,11,3
	.word	72516
	.byte	12,5,213,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55740
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_DTSCLIM',0,5,218,11,3
	.word	72580
	.byte	12,5,221,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55972
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_DTSCSTAT',0,5,226,11,3
	.word	72645
	.byte	12,5,229,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56074
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_EICON0',0,5,234,11,3
	.word	72711
	.byte	12,5,237,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56202
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_EICON1',0,5,242,11,3
	.word	72775
	.byte	12,5,245,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56391
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_EICR',0,5,250,11,3
	.word	72839
	.byte	12,5,253,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56755
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_EIFILT',0,5,130,12,3
	.word	72901
	.byte	12,5,133,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57194
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_EIFR',0,5,138,12,3
	.word	72965
	.byte	12,5,141,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57405
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_EISR',0,5,146,12,3
	.word	73027
	.byte	12,5,149,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57581
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_EMSR',0,5,154,12,3
	.word	73089
	.byte	12,5,157,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57775
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_EMSSW',0,5,162,12,3
	.word	73151
	.byte	12,5,165,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57910
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX',0,5,170,12,3
	.word	73214
	.byte	12,5,173,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58046
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_ESROCFG',0,5,178,12,3
	.word	73287
	.byte	12,5,181,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58157
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_EXTCON',0,5,186,12,3
	.word	73352
	.byte	12,5,189,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58375
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_FDR',0,5,194,12,3
	.word	73416
	.byte	12,5,197,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58538
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_FMR',0,5,202,12,3
	.word	73477
	.byte	12,5,205,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58874
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_ID',0,5,210,12,3
	.word	73538
	.byte	12,5,213,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58981
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_IGCR',0,5,218,12,3
	.word	73598
	.byte	12,5,221,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59433
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_IN',0,5,226,12,3
	.word	73660
	.byte	12,5,229,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59532
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_IOCR',0,5,234,12,3
	.word	73720
	.byte	12,5,237,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59682
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_LBISTCTRL0',0,5,242,12,3
	.word	73782
	.byte	12,5,245,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59920
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_LBISTCTRL1',0,5,250,12,3
	.word	73850
	.byte	12,5,253,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60081
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_LBISTCTRL2',0,5,130,13,3
	.word	73918
	.byte	12,5,133,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60187
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_LBISTCTRL3',0,5,138,13,3
	.word	73986
	.byte	12,5,141,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60273
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_LCLCON0',0,5,146,13,3
	.word	74054
	.byte	12,5,149,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60441
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_LCLCON1',0,5,154,13,3
	.word	74119
	.byte	12,5,157,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60609
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_LCLTEST',0,5,162,13,3
	.word	74184
	.byte	12,5,165,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60923
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_MANID',0,5,170,13,3
	.word	74249
	.byte	12,5,173,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61034
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_OMR',0,5,178,13,3
	.word	74312
	.byte	12,5,181,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61192
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_OSCCON',0,5,186,13,3
	.word	74373
	.byte	12,5,189,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61603
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_OUT',0,5,194,13,3
	.word	74437
	.byte	12,5,197,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61704
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_OVCCON',0,5,202,13,3
	.word	74498
	.byte	12,5,205,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62022
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_OVCENABLE',0,5,210,13,3
	.word	74562
	.byte	12,5,213,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62209
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PDISC',0,5,218,13,3
	.word	74629
	.byte	12,5,221,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62320
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PDR',0,5,226,13,3
	.word	74692
	.byte	12,5,229,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62453
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PDRR',0,5,234,13,3
	.word	74753
	.byte	12,5,237,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62656
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PERPLLCON0',0,5,242,13,3
	.word	74815
	.byte	12,5,245,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62896
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PERPLLCON1',0,5,250,13,3
	.word	74883
	.byte	12,5,253,13,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63040
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PERPLLSTAT',0,5,130,14,3
	.word	74951
	.byte	12,5,133,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63262
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR0',0,5,138,14,3
	.word	75019
	.byte	12,5,141,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63398
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR1',0,5,146,14,3
	.word	75083
	.byte	12,5,149,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63534
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR2',0,5,154,14,3
	.word	75147
	.byte	12,5,157,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63670
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR3',0,5,162,14,3
	.word	75211
	.byte	12,5,165,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63806
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR4',0,5,170,14,3
	.word	75275
	.byte	12,5,173,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63942
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR5',0,5,178,14,3
	.word	75339
	.byte	12,5,181,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64078
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMSTAT0',0,5,186,14,3
	.word	75403
	.byte	12,5,189,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64350
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMSWCR1',0,5,194,14,3
	.word	75468
	.byte	12,5,197,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64595
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMTRCSR0',0,5,202,14,3
	.word	75533
	.byte	12,5,205,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64983
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMTRCSR1',0,5,210,14,3
	.word	75599
	.byte	12,5,213,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65101
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMTRCSR2',0,5,218,14,3
	.word	75665
	.byte	12,5,221,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65344
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMTRCSR3',0,5,226,14,3
	.word	75731
	.byte	12,5,229,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65611
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_RSTCON',0,5,234,14,3
	.word	75797
	.byte	12,5,237,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65870
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_RSTCON2',0,5,242,14,3
	.word	75861
	.byte	12,5,245,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66175
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_RSTCON3',0,5,250,14,3
	.word	75926
	.byte	12,5,253,14,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66256
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_RSTSTAT',0,5,130,15,3
	.word	75991
	.byte	12,5,133,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66805
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SEICON0',0,5,138,15,3
	.word	76056
	.byte	12,5,141,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66935
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SEICON1',0,5,146,15,3
	.word	76121
	.byte	12,5,149,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67126
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SEISR',0,5,154,15,3
	.word	76186
	.byte	12,5,157,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67304
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_STCON',0,5,162,15,3
	.word	76249
	.byte	12,5,165,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67455
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM1',0,5,170,15,3
	.word	76312
	.byte	12,5,173,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67527
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM2',0,5,178,15,3
	.word	76376
	.byte	12,5,181,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67599
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM3',0,5,186,15,3
	.word	76440
	.byte	12,5,189,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67671
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM4',0,5,194,15,3
	.word	76504
	.byte	12,5,197,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67743
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM5',0,5,202,15,3
	.word	76568
	.byte	12,5,205,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67815
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM6',0,5,210,15,3
	.word	76632
	.byte	12,5,213,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67887
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_STSTAT',0,5,218,15,3
	.word	76696
	.byte	12,5,221,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68216
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SWAPCTRL',0,5,226,15,3
	.word	76760
	.byte	12,5,229,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68336
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SWRSTCON',0,5,234,15,3
	.word	76826
	.byte	12,5,237,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68506
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SYSCON',0,5,242,15,3
	.word	76892
	.byte	12,5,245,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68769
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SYSPLLCON0',0,5,250,15,3
	.word	76956
	.byte	12,5,253,15,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69048
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SYSPLLCON1',0,5,130,16,3
	.word	77024
	.byte	12,5,133,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69152
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SYSPLLCON2',0,5,138,16,3
	.word	77092
	.byte	12,5,141,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69258
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SYSPLLSTAT',0,5,146,16,3
	.word	77160
	.byte	12,5,149,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69481
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_TRAPCLR',0,5,154,16,3
	.word	77228
	.byte	12,5,157,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69629
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_TRAPDIS0',0,5,162,16,3
	.word	77293
	.byte	12,5,165,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70117
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_TRAPDIS1',0,5,170,16,3
	.word	77359
	.byte	12,5,173,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70414
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_TRAPSET',0,5,178,16,3
	.word	77425
	.byte	12,5,181,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70562
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_TRAPSTAT',0,5,186,16,3
	.word	77490
	.byte	35
	.byte	'Ifx_SCU_WDTCPU_CON0',0,5,194,16,3
	.word	717
	.byte	35
	.byte	'Ifx_SCU_WDTCPU_CON1',0,5,202,16,3
	.word	1022
	.byte	35
	.byte	'Ifx_SCU_WDTCPU_SR',0,5,210,16,3
	.word	1253
	.byte	12,5,213,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70812
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_WDTS_CON0',0,5,218,16,3
	.word	77641
	.byte	12,5,221,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70938
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_WDTS_CON1',0,5,226,16,3
	.word	77708
	.byte	12,5,229,16,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71190
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_WDTS_SR',0,5,234,16,3
	.word	77775
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX',0,5,246,16,25,4,13
	.byte	'ESRCFGX',0
	.word	73214
	.byte	4,2,35,0,0,14
	.word	77840
	.byte	35
	.byte	'Ifx_SCU_ESRCFGX',0,5,249,16,3
	.word	77881
	.byte	14
	.word	1293
	.byte	35
	.byte	'Ifx_SCU_WDTCPU',0,5,141,17,3
	.word	77911
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,5,156,17,25,12,13
	.byte	'CON0',0
	.word	77641
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	77708
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	77775
	.byte	4,2,35,8,0,14
	.word	77940
	.byte	35
	.byte	'Ifx_SCU_WDTS',0,5,161,17,3
	.word	78001
	.byte	15,8
	.word	77840
	.byte	16,1,0,14
	.word	78028
	.byte	15,20
	.word	757
	.byte	16,19,0,15,36
	.word	757
	.byte	16,35,0,15,16
	.word	72839
	.byte	16,3,0,15,16
	.word	73598
	.byte	16,3,0,15,72
	.word	1293
	.byte	16,5,0,14
	.word	78078
	.byte	14
	.word	77940
	.byte	15,176,2
	.word	757
	.byte	16,175,2,0,10
	.byte	'_Ifx_SCU',0,5,176,17,25,128,8,13
	.byte	'reserved_0',0
	.word	4795
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	73538
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2975
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	74373
	.byte	4,2,35,16,13
	.byte	'SYSPLLSTAT',0
	.word	77160
	.byte	4,2,35,20,13
	.byte	'SYSPLLCON0',0
	.word	76956
	.byte	4,2,35,24,13
	.byte	'SYSPLLCON1',0
	.word	77024
	.byte	4,2,35,28,13
	.byte	'SYSPLLCON2',0
	.word	77092
	.byte	4,2,35,32,13
	.byte	'PERPLLSTAT',0
	.word	74951
	.byte	4,2,35,36,13
	.byte	'PERPLLCON0',0
	.word	74815
	.byte	4,2,35,40,13
	.byte	'PERPLLCON1',0
	.word	74883
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	71734
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	71799
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	73416
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	73352
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	71996
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	72061
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	72126
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	72191
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	75991
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	2975
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	75797
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	71669
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	76826
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	75861
	.byte	4,2,35,100,13
	.byte	'RSTCON3',0
	.word	75926
	.byte	4,2,35,104,13
	.byte	'reserved_6C',0
	.word	2975
	.byte	4,2,35,108,13
	.byte	'ESRCFGX',0
	.word	78037
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	73287
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	76892
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	72256
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	72321
	.byte	4,3,35,132,1,13
	.byte	'CCUCON8',0
	.word	72386
	.byte	4,3,35,136,1,13
	.byte	'CCUCON9',0
	.word	72451
	.byte	4,3,35,140,1,13
	.byte	'CCUCON10',0
	.word	71864
	.byte	4,3,35,144,1,13
	.byte	'CCUCON11',0
	.word	71930
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	2975
	.byte	4,3,35,152,1,13
	.byte	'PDR',0
	.word	74692
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	73720
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	74437
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	74312
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	73660
	.byte	4,3,35,172,1,13
	.byte	'reserved_B0',0
	.word	27682
	.byte	16,3,35,176,1,13
	.byte	'STSTAT',0
	.word	76696
	.byte	4,3,35,192,1,13
	.byte	'STCON',0
	.word	76249
	.byte	4,3,35,196,1,13
	.byte	'PMCSR0',0
	.word	75019
	.byte	4,3,35,200,1,13
	.byte	'PMCSR1',0
	.word	75083
	.byte	4,3,35,204,1,13
	.byte	'PMCSR2',0
	.word	75147
	.byte	4,3,35,208,1,13
	.byte	'PMCSR3',0
	.word	75211
	.byte	4,3,35,212,1,13
	.byte	'PMCSR4',0
	.word	75275
	.byte	4,3,35,216,1,13
	.byte	'PMCSR5',0
	.word	75339
	.byte	4,3,35,220,1,13
	.byte	'reserved_E0',0
	.word	2975
	.byte	4,3,35,224,1,13
	.byte	'PMSTAT0',0
	.word	75403
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	75468
	.byte	4,3,35,232,1,13
	.byte	'reserved_EC',0
	.word	27682
	.byte	16,3,35,236,1,13
	.byte	'EMSR',0
	.word	73089
	.byte	4,3,35,252,1,13
	.byte	'EMSSW',0
	.word	73151
	.byte	4,3,35,128,2,13
	.byte	'DTSCSTAT',0
	.word	72645
	.byte	4,3,35,132,2,13
	.byte	'DTSCLIM',0
	.word	72580
	.byte	4,3,35,136,2,13
	.byte	'reserved_10C',0
	.word	78042
	.byte	20,3,35,140,2,13
	.byte	'TRAPDIS1',0
	.word	77359
	.byte	4,3,35,160,2,13
	.byte	'TRAPSTAT',0
	.word	77490
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	77425
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	77228
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS0',0
	.word	77293
	.byte	4,3,35,176,2,13
	.byte	'LCLCON0',0
	.word	74054
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	74119
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	74184
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	72516
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	74249
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	2975
	.byte	4,3,35,200,2,13
	.byte	'SWAPCTRL',0
	.word	76760
	.byte	4,3,35,204,2,13
	.byte	'reserved_150',0
	.word	78042
	.byte	20,3,35,208,2,13
	.byte	'LBISTCTRL0',0
	.word	73782
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	73850
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	73918
	.byte	4,3,35,236,2,13
	.byte	'LBISTCTRL3',0
	.word	73986
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	27682
	.byte	16,3,35,244,2,13
	.byte	'STMEM1',0
	.word	76312
	.byte	4,3,35,132,3,13
	.byte	'STMEM2',0
	.word	76376
	.byte	4,3,35,136,3,13
	.byte	'PDISC',0
	.word	74629
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	4795
	.byte	8,3,35,144,3,13
	.byte	'PMTRCSR0',0
	.word	75533
	.byte	4,3,35,152,3,13
	.byte	'PMTRCSR1',0
	.word	75599
	.byte	4,3,35,156,3,13
	.byte	'PMTRCSR2',0
	.word	75665
	.byte	4,3,35,160,3,13
	.byte	'PMTRCSR3',0
	.word	75731
	.byte	4,3,35,164,3,13
	.byte	'reserved_1A8',0
	.word	4166
	.byte	24,3,35,168,3,13
	.byte	'STMEM3',0
	.word	76440
	.byte	4,3,35,192,3,13
	.byte	'STMEM4',0
	.word	76504
	.byte	4,3,35,196,3,13
	.byte	'STMEM5',0
	.word	76568
	.byte	4,3,35,200,3,13
	.byte	'STMEM6',0
	.word	76632
	.byte	4,3,35,204,3,13
	.byte	'reserved_1D0',0
	.word	27682
	.byte	16,3,35,208,3,13
	.byte	'OVCENABLE',0
	.word	74562
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	74498
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	78051
	.byte	36,3,35,232,3,13
	.byte	'EIFILT',0
	.word	72901
	.byte	4,3,35,140,4,13
	.byte	'EICR',0
	.word	78060
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	72965
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	73477
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	74753
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	78069
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	27682
	.byte	16,3,35,188,4,13
	.byte	'WDTCPU',0
	.word	78087
	.byte	72,3,35,204,4,13
	.byte	'reserved_294',0
	.word	4795
	.byte	8,3,35,148,5,13
	.byte	'EICON0',0
	.word	72711
	.byte	4,3,35,156,5,13
	.byte	'EICON1',0
	.word	72775
	.byte	4,3,35,160,5,13
	.byte	'EISR',0
	.word	73027
	.byte	4,3,35,164,5,13
	.byte	'WDTS',0
	.word	78092
	.byte	12,3,35,168,5,13
	.byte	'SEICON0',0
	.word	76056
	.byte	4,3,35,180,5,13
	.byte	'SEICON1',0
	.word	76121
	.byte	4,3,35,184,5,13
	.byte	'SEISR',0
	.word	76186
	.byte	4,3,35,188,5,13
	.byte	'reserved_2C0',0
	.word	78097
	.byte	176,2,3,35,192,5,13
	.byte	'ACCEN11',0
	.word	71604
	.byte	4,3,35,240,7,13
	.byte	'ACCEN10',0
	.word	71539
	.byte	4,3,35,244,7,13
	.byte	'ACCEN01',0
	.word	71474
	.byte	4,3,35,248,7,13
	.byte	'ACCEN00',0
	.word	71409
	.byte	4,3,35,252,7,0,14
	.word	78108
	.byte	35
	.byte	'Ifx_SCU',0,5,166,18,3
	.word	80229
	.byte	10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,20,68,16,4,11
	.byte	'EN0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	757
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	757
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	757
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	757
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_STM_ACCEN0_Bits',0,20,102,3
	.word	80251
	.byte	10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,20,105,16,4,11
	.byte	'reserved_0',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_ACCEN1_Bits',0,20,108,3
	.word	80808
	.byte	10
	.byte	'_Ifx_STM_CAP_Bits',0,20,111,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_CAP_Bits',0,20,114,3
	.word	80885
	.byte	10
	.byte	'_Ifx_STM_CAPSV_Bits',0,20,117,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_CAPSV_Bits',0,20,120,3
	.word	80958
	.byte	10
	.byte	'_Ifx_STM_CLC_Bits',0,20,123,16,4,11
	.byte	'DISR',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	582
	.byte	28,0,2,35,0,0,35
	.byte	'Ifx_STM_CLC_Bits',0,20,130,1,3
	.word	81035
	.byte	10
	.byte	'_Ifx_STM_CMCON_Bits',0,20,133,1,16,4,11
	.byte	'MSIZE0',0,1
	.word	757
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	757
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	757
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	757
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	757
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	757
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	757
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	757
	.byte	3,0,2,35,3,0,35
	.byte	'Ifx_STM_CMCON_Bits',0,20,143,1,3
	.word	81177
	.byte	10
	.byte	'_Ifx_STM_CMP_Bits',0,20,146,1,16,4,11
	.byte	'CMPVAL',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_CMP_Bits',0,20,149,1,3
	.word	81397
	.byte	10
	.byte	'_Ifx_STM_ICR_Bits',0,20,152,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	582
	.byte	25,0,2,35,0,0,35
	.byte	'Ifx_STM_ICR_Bits',0,20,162,1,3
	.word	81466
	.byte	10
	.byte	'_Ifx_STM_ID_Bits',0,20,165,1,16,4,11
	.byte	'MODREV',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'MODNUM',0,2
	.word	774
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_STM_ID_Bits',0,20,170,1,3
	.word	81669
	.byte	10
	.byte	'_Ifx_STM_ISCR_Bits',0,20,173,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	582
	.byte	28,0,2,35,0,0,35
	.byte	'Ifx_STM_ISCR_Bits',0,20,180,1,3
	.word	81773
	.byte	10
	.byte	'_Ifx_STM_KRST0_Bits',0,20,183,1,16,4,11
	.byte	'RST',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	582
	.byte	30,0,2,35,0,0,35
	.byte	'Ifx_STM_KRST0_Bits',0,20,188,1,3
	.word	81924
	.byte	10
	.byte	'_Ifx_STM_KRST1_Bits',0,20,191,1,16,4,11
	.byte	'RST',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	582
	.byte	31,0,2,35,0,0,35
	.byte	'Ifx_STM_KRST1_Bits',0,20,195,1,3
	.word	82035
	.byte	10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,20,198,1,16,4,11
	.byte	'CLR',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	582
	.byte	31,0,2,35,0,0,35
	.byte	'Ifx_STM_KRSTCLR_Bits',0,20,202,1,3
	.word	82127
	.byte	10
	.byte	'_Ifx_STM_OCS_Bits',0,20,205,1,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	582
	.byte	21,8,2,35,0,11
	.byte	'SUS',0,1
	.word	757
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	757
	.byte	2,0,2,35,3,0,35
	.byte	'Ifx_STM_OCS_Bits',0,20,213,1,3
	.word	82223
	.byte	10
	.byte	'_Ifx_STM_TIM0_Bits',0,20,216,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_TIM0_Bits',0,20,219,1,3
	.word	82391
	.byte	10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,20,222,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_TIM0SV_Bits',0,20,225,1,3
	.word	82464
	.byte	10
	.byte	'_Ifx_STM_TIM1_Bits',0,20,228,1,16,4,11
	.byte	'STM_35_4',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_TIM1_Bits',0,20,231,1,3
	.word	82541
	.byte	10
	.byte	'_Ifx_STM_TIM2_Bits',0,20,234,1,16,4,11
	.byte	'STM_39_8',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_TIM2_Bits',0,20,237,1,3
	.word	82614
	.byte	10
	.byte	'_Ifx_STM_TIM3_Bits',0,20,240,1,16,4,11
	.byte	'STM_43_12',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_TIM3_Bits',0,20,243,1,3
	.word	82687
	.byte	10
	.byte	'_Ifx_STM_TIM4_Bits',0,20,246,1,16,4,11
	.byte	'STM_47_16',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_TIM4_Bits',0,20,249,1,3
	.word	82761
	.byte	10
	.byte	'_Ifx_STM_TIM5_Bits',0,20,252,1,16,4,11
	.byte	'STM_51_20',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_TIM5_Bits',0,20,255,1,3
	.word	82835
	.byte	10
	.byte	'_Ifx_STM_TIM6_Bits',0,20,130,2,16,4,11
	.byte	'STM_63_32',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_TIM6_Bits',0,20,133,2,3
	.word	82909
	.byte	12,20,141,2,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80251
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_ACCEN0',0,20,146,2,3
	.word	82983
	.byte	12,20,149,2,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80808
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_ACCEN1',0,20,154,2,3
	.word	83047
	.byte	12,20,157,2,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80885
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_CAP',0,20,162,2,3
	.word	83111
	.byte	12,20,165,2,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80958
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_CAPSV',0,20,170,2,3
	.word	83172
	.byte	12,20,173,2,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81035
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_CLC',0,20,178,2,3
	.word	83235
	.byte	12,20,181,2,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81177
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_CMCON',0,20,186,2,3
	.word	83296
	.byte	12,20,189,2,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81397
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_CMP',0,20,194,2,3
	.word	83359
	.byte	12,20,197,2,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81466
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_ICR',0,20,202,2,3
	.word	83420
	.byte	12,20,205,2,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81669
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_ID',0,20,210,2,3
	.word	83481
	.byte	12,20,213,2,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81773
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_ISCR',0,20,218,2,3
	.word	83541
	.byte	12,20,221,2,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81924
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_KRST0',0,20,226,2,3
	.word	83603
	.byte	12,20,229,2,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82035
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_KRST1',0,20,234,2,3
	.word	83666
	.byte	12,20,237,2,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82127
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_KRSTCLR',0,20,242,2,3
	.word	83729
	.byte	12,20,245,2,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82223
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_OCS',0,20,250,2,3
	.word	83794
	.byte	12,20,253,2,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82391
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_TIM0',0,20,130,3,3
	.word	83855
	.byte	12,20,133,3,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82464
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_TIM0SV',0,20,138,3,3
	.word	83917
	.byte	12,20,141,3,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82541
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_TIM1',0,20,146,3,3
	.word	83981
	.byte	12,20,149,3,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82614
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_TIM2',0,20,154,3,3
	.word	84043
	.byte	12,20,157,3,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82687
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_TIM3',0,20,162,3,3
	.word	84105
	.byte	12,20,165,3,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82761
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_TIM4',0,20,170,3,3
	.word	84167
	.byte	12,20,173,3,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82835
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_TIM5',0,20,178,3,3
	.word	84229
	.byte	12,20,181,3,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82909
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_TIM6',0,20,186,3,3
	.word	84291
	.byte	17,21,162,11,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,35
	.byte	'IfxScu_WDTCON1_IR',0,21,167,11,3
	.word	84353
	.byte	35
	.byte	'Ifx_P_ACCEN0_Bits',0,7,102,3
	.word	8323
	.byte	35
	.byte	'Ifx_P_ACCEN1_Bits',0,7,108,3
	.word	8236
	.byte	35
	.byte	'Ifx_P_ESR_Bits',0,7,130,1,3
	.word	4804
	.byte	35
	.byte	'Ifx_P_ID_Bits',0,7,138,1,3
	.word	2855
	.byte	35
	.byte	'Ifx_P_IN_Bits',0,7,160,1,3
	.word	3851
	.byte	35
	.byte	'Ifx_P_IOCR0_Bits',0,7,173,1,3
	.word	2984
	.byte	35
	.byte	'Ifx_P_IOCR12_Bits',0,7,186,1,3
	.word	3631
	.byte	35
	.byte	'Ifx_P_IOCR4_Bits',0,7,199,1,3
	.word	3199
	.byte	35
	.byte	'Ifx_P_IOCR8_Bits',0,7,212,1,3
	.word	3414
	.byte	35
	.byte	'Ifx_P_LPCR_Bits',0,7,231,1,3
	.word	7898
	.byte	35
	.byte	'Ifx_P_OMCR_Bits',0,7,253,1,3
	.word	7550
	.byte	35
	.byte	'Ifx_P_OMCR0_Bits',0,7,136,2,3
	.word	6537
	.byte	35
	.byte	'Ifx_P_OMCR12_Bits',0,7,146,2,3
	.word	7061
	.byte	35
	.byte	'Ifx_P_OMCR4_Bits',0,7,157,2,3
	.word	6711
	.byte	35
	.byte	'Ifx_P_OMCR8_Bits',0,7,168,2,3
	.word	6885
	.byte	35
	.byte	'Ifx_P_OMR_Bits',0,7,205,2,3
	.word	2284
	.byte	35
	.byte	'Ifx_P_OMSR_Bits',0,7,227,2,3
	.word	7217
	.byte	35
	.byte	'Ifx_P_OMSR0_Bits',0,7,237,2,3
	.word	5874
	.byte	35
	.byte	'Ifx_P_OMSR12_Bits',0,7,248,2,3
	.word	6362
	.byte	35
	.byte	'Ifx_P_OMSR4_Bits',0,7,131,3,3
	.word	6021
	.byte	35
	.byte	'Ifx_P_OMSR8_Bits',0,7,142,3,3
	.word	6190
	.byte	35
	.byte	'Ifx_P_OUT_Bits',0,7,164,3,3
	.word	1968
	.byte	35
	.byte	'Ifx_P_PCSR_Bits',0,7,187,3,3
	.word	5510
	.byte	35
	.byte	'Ifx_P_PDISC_Bits',0,7,209,3,3
	.word	5144
	.byte	35
	.byte	'Ifx_P_PDR0_Bits',0,7,230,3,3
	.word	4175
	.byte	35
	.byte	'Ifx_P_PDR1_Bits',0,7,251,3,3
	.word	4479
	.byte	35
	.byte	'Ifx_P_ACCEN0',0,7,136,4,3
	.word	8850
	.byte	35
	.byte	'Ifx_P_ACCEN1',0,7,144,4,3
	.word	8283
	.byte	35
	.byte	'Ifx_P_ESR',0,7,152,4,3
	.word	5095
	.byte	35
	.byte	'Ifx_P_ID',0,7,160,4,3
	.word	2935
	.byte	35
	.byte	'Ifx_P_IN',0,7,168,4,3
	.word	4126
	.byte	35
	.byte	'Ifx_P_IOCR0',0,7,176,4,3
	.word	3159
	.byte	35
	.byte	'Ifx_P_IOCR12',0,7,184,4,3
	.word	3811
	.byte	35
	.byte	'Ifx_P_IOCR4',0,7,192,4,3
	.word	3374
	.byte	35
	.byte	'Ifx_P_IOCR8',0,7,200,4,3
	.word	3591
	.byte	35
	.byte	'Ifx_P_LPCR',0,7,208,4,3
	.word	8178
	.byte	35
	.byte	'Ifx_P_OMCR',0,7,216,4,3
	.word	7858
	.byte	35
	.byte	'Ifx_P_OMCR0',0,7,224,4,3
	.word	6671
	.byte	35
	.byte	'Ifx_P_OMCR12',0,7,232,4,3
	.word	7177
	.byte	35
	.byte	'Ifx_P_OMCR4',0,7,240,4,3
	.word	6845
	.byte	35
	.byte	'Ifx_P_OMCR8',0,7,248,4,3
	.word	7021
	.byte	35
	.byte	'Ifx_P_OMR',0,7,128,5,3
	.word	2815
	.byte	35
	.byte	'Ifx_P_OMSR',0,7,136,5,3
	.word	7510
	.byte	35
	.byte	'Ifx_P_OMSR0',0,7,144,5,3
	.word	5981
	.byte	35
	.byte	'Ifx_P_OMSR12',0,7,152,5,3
	.word	6497
	.byte	35
	.byte	'Ifx_P_OMSR4',0,7,160,5,3
	.word	6150
	.byte	35
	.byte	'Ifx_P_OMSR8',0,7,168,5,3
	.word	6322
	.byte	35
	.byte	'Ifx_P_OUT',0,7,176,5,3
	.word	2244
	.byte	35
	.byte	'Ifx_P_PCSR',0,7,184,5,3
	.word	5834
	.byte	35
	.byte	'Ifx_P_PDISC',0,7,192,5,3
	.word	5470
	.byte	35
	.byte	'Ifx_P_PDR0',0,7,200,5,3
	.word	4439
	.byte	35
	.byte	'Ifx_P_PDR1',0,7,208,5,3
	.word	4755
	.byte	14
	.word	8890
	.byte	35
	.byte	'Ifx_P',0,7,128,6,3
	.word	85669
	.byte	17,6,73,9,1,18
	.byte	'IfxPort_ControlledBy_port',0,0,18
	.byte	'IfxPort_ControlledBy_hsct',0,1,0,35
	.byte	'IfxPort_ControlledBy',0,6,77,3
	.word	85689
	.byte	17,6,81,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,35
	.byte	'IfxPort_InputMode',0,6,87,3
	.word	85780
	.byte	17,6,91,9,1,18
	.byte	'IfxPort_LvdsMode_high',0,0,18
	.byte	'IfxPort_LvdsMode_medium',0,1,0,35
	.byte	'IfxPort_LvdsMode',0,6,95,3
	.word	85931
	.byte	17,6,126,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,35
	.byte	'IfxPort_OutputIdx',0,6,136,1,3
	.word	86012
	.byte	17,6,140,1,9,1,18
	.byte	'IfxPort_OutputMode_none',0,0,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,35
	.byte	'IfxPort_OutputMode',0,6,145,1,3
	.word	86256
	.byte	17,6,151,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed1',0,12,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed2',0,13,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed3',0,14,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed4',0,15,0,35
	.byte	'IfxPort_PadDriver',0,6,165,1,3
	.word	86380
	.byte	17,6,169,1,9,1,18
	.byte	'IfxPort_PadSupply_3v',0,0,18
	.byte	'IfxPort_PadSupply_5v',0,1,0,35
	.byte	'IfxPort_PadSupply',0,6,173,1,3
	.word	86830
	.byte	17,6,177,1,9,1,18
	.byte	'IfxPort_PinFunctionMode_digital',0,0,18
	.byte	'IfxPort_PinFunctionMode_analog',0,1,0,35
	.byte	'IfxPort_PinFunctionMode',0,6,181,1,3
	.word	86910
	.byte	35
	.byte	'IfxPort_State',0,6,193,1,3
	.word	9470
	.byte	30,6,246,1,9,8,13
	.byte	'port',0
	.word	9465
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	757
	.byte	1,2,35,4,0,35
	.byte	'IfxPort_Pin',0,6,250,1,3
	.word	87040
	.byte	10
	.byte	'_Ifx_SMU_ACCEN0_Bits',0,22,68,16,4,11
	.byte	'EN0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	757
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	757
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	757
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	757
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SMU_ACCEN0_Bits',0,22,102,3
	.word	87100
	.byte	10
	.byte	'_Ifx_SMU_ACCEN1_Bits',0,22,105,16,4,11
	.byte	'reserved_0',0,4
	.word	582
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SMU_ACCEN1_Bits',0,22,108,3
	.word	87657
	.byte	10
	.byte	'_Ifx_SMU_AD_Bits',0,22,111,16,4,11
	.byte	'DF0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'DF1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'DF2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'DF3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'DF4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'DF5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'DF6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'DF7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'DF8',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'DF9',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'DF10',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'DF11',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'DF12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'DF13',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'DF14',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'DF15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'DF16',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'DF17',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'DF18',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'DF19',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'DF20',0,1
	.word	757
	.byte	1,3,2,35,2,11
	.byte	'DF21',0,1
	.word	757
	.byte	1,2,2,35,2,11
	.byte	'DF22',0,1
	.word	757
	.byte	1,1,2,35,2,11
	.byte	'DF23',0,1
	.word	757
	.byte	1,0,2,35,2,11
	.byte	'DF24',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'DF25',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'DF26',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'DF27',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'DF28',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'DF29',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'DF30',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'DF31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SMU_AD_Bits',0,22,145,1,3
	.word	87734
	.byte	10
	.byte	'_Ifx_SMU_AEX_Bits',0,22,148,1,16,4,11
	.byte	'IRQ0STS',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'IRQ1STS',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'IRQ2STS',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'RST0STS',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'RST1STS',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'RST2STS',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'RST3STS',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'RST4STS',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'RST5STS',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'NMISTS',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'EMSSTS',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	757
	.byte	4,0,2,35,1,11
	.byte	'IRQ0AEM',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'IRQ1AEM',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'IRQ2AEM',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'RST0AEM',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'RST1AEM',0,1
	.word	757
	.byte	1,3,2,35,2,11
	.byte	'RST2AEM',0,1
	.word	757
	.byte	1,2,2,35,2,11
	.byte	'RST3AEM',0,1
	.word	757
	.byte	1,1,2,35,2,11
	.byte	'RST4AEM',0,1
	.word	757
	.byte	1,0,2,35,2,11
	.byte	'RST5AEM',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'NMIAEM',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'EMSAEM',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	757
	.byte	4,0,2,35,3,0,35
	.byte	'Ifx_SMU_AEX_Bits',0,22,176,1,3
	.word	88284
	.byte	10
	.byte	'_Ifx_SMU_AEXCLR_Bits',0,22,179,1,16,4,11
	.byte	'IRQ0CLR',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'IRQ1CLR',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'IRQ2CLR',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'RST0CLR',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'RST1CLR',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'RST2CLR',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'RST3CLR',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'RST4CLR',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'RST5CLR',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'NMICLR',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'EMSCLR',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	605
	.byte	4,16,2,35,0,11
	.byte	'IRQ0AEMCLR',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'IRQ1AEMCLR',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'IRQ2AEMCLR',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'RST0AEMCLR',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'RST1AEMCLR',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'RST2AEMCLR',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'RST3AEMCLR',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'RST4AEMCLR',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'RST5AEMCLR',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'NMIAEMCLR',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'EMSAEMCLR',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	605
	.byte	4,0,2,35,0,0,35
	.byte	'Ifx_SMU_AEXCLR_Bits',0,22,207,1,3
	.word	88841
	.byte	10
	.byte	'_Ifx_SMU_AFCNT_Bits',0,22,210,1,16,4,11
	.byte	'FCNT',0,1
	.word	757
	.byte	4,4,2,35,0,11
	.byte	'ACNT',0,2
	.word	774
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	14,2,2,35,2,11
	.byte	'FCO',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'ACO',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SMU_AFCNT_Bits',0,22,217,1,3
	.word	89437
	.byte	10
	.byte	'_Ifx_SMU_AG_Bits',0,22,220,1,16,4,11
	.byte	'SF0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'SF1',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'SF2',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'SF3',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'SF4',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'SF5',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'SF6',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'SF7',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'SF8',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'SF9',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'SF10',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'SF11',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'SF12',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'SF13',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'SF14',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'SF15',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'SF16',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'SF17',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'SF18',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'SF19',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'SF20',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'SF21',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'SF22',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'SF23',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'SF24',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'SF25',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'SF26',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'SF27',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'SF28',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'SF29',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'SF30',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'SF31',0,4
	.word	605
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_SMU_AG_Bits',0,22,254,1,3
	.word	89577
	.byte	10
	.byte	'_Ifx_SMU_AGC_Bits',0,22,129,2,16,4,11
	.byte	'IGCS0',0,4
	.word	605
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'IGCS1',0,4
	.word	605
	.byte	3,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'IGCS2',0,4
	.word	605
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	605
	.byte	5,16,2,35,0,11
	.byte	'RCS',0,4
	.word	605
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	605
	.byte	2,8,2,35,0,11
	.byte	'PES',0,4
	.word	605
	.byte	5,3,2,35,0,11
	.byte	'EFRST',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	605
	.byte	2,0,2,35,0,0,35
	.byte	'Ifx_SMU_AGC_Bits',0,22,142,2,3
	.word	90128
	.byte	10
	.byte	'_Ifx_SMU_AGCF_Bits',0,22,145,2,16,4,11
	.byte	'CF0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'CF1',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'CF2',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'CF3',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'CF4',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'CF5',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'CF6',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'CF7',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'CF8',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'CF9',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'CF10',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'CF11',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'CF12',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'CF13',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'CF14',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'CF15',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'CF16',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'CF17',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'CF18',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'CF19',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'CF20',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'CF21',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'CF22',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'CF23',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'CF24',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'CF25',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'CF26',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'CF27',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'CF28',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'CF29',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'CF30',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'CF31',0,4
	.word	605
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_SMU_AGCF_Bits',0,22,179,2,3
	.word	90390
	.byte	10
	.byte	'_Ifx_SMU_AGFSP_Bits',0,22,182,2,16,4,11
	.byte	'FE0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'FE1',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'FE2',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'FE3',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'FE4',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'FE5',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'FE6',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'FE7',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'FE8',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'FE9',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'FE10',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'FE11',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'FE12',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'FE13',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'FE14',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'FE15',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'FE16',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'FE17',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'FE18',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'FE19',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'FE20',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'FE21',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'FE22',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'FE23',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'FE24',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'FE25',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'FE26',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'FE27',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'FE28',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'FE29',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'FE30',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'FE31',0,4
	.word	605
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_SMU_AGFSP_Bits',0,22,216,2,3
	.word	90945
	.byte	10
	.byte	'_Ifx_SMU_CLC_Bits',0,22,219,2,16,4,11
	.byte	'DISR',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	582
	.byte	28,0,2,35,0,0,35
	.byte	'Ifx_SMU_CLC_Bits',0,22,226,2,3
	.word	91502
	.byte	10
	.byte	'_Ifx_SMU_CMD_Bits',0,22,229,2,16,4,11
	.byte	'CMD',0,4
	.word	605
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	605
	.byte	4,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	605
	.byte	24,0,2,35,0,0,35
	.byte	'Ifx_SMU_CMD_Bits',0,22,234,2,3
	.word	91645
	.byte	10
	.byte	'_Ifx_SMU_DBG_Bits',0,22,237,2,16,4,11
	.byte	'SSM',0,1
	.word	757
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	582
	.byte	30,0,2,35,0,0,35
	.byte	'Ifx_SMU_DBG_Bits',0,22,241,2,3
	.word	91748
	.byte	10
	.byte	'_Ifx_SMU_FSP_Bits',0,22,244,2,16,4,11
	.byte	'PRE1',0,4
	.word	605
	.byte	3,29,2,35,0,11
	.byte	'PRE2',0,4
	.word	605
	.byte	2,27,2,35,0,11
	.byte	'MODE',0,4
	.word	605
	.byte	2,25,2,35,0,11
	.byte	'PES',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'TFSP_LOW',0,4
	.word	605
	.byte	14,10,2,35,0,11
	.byte	'TFSP_HIGH',0,4
	.word	605
	.byte	10,0,2,35,0,0,35
	.byte	'Ifx_SMU_FSP_Bits',0,22,252,2,3
	.word	91836
	.byte	10
	.byte	'_Ifx_SMU_ID_Bits',0,22,255,2,16,4,11
	.byte	'MOD_REV',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'MOD_TYPE',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'MOD_NUMBER',0,2
	.word	774
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SMU_ID_Bits',0,22,132,3,3
	.word	91991
	.byte	10
	.byte	'_Ifx_SMU_KEYS_Bits',0,22,135,3,16,4,11
	.byte	'CFGLCK',0,4
	.word	605
	.byte	8,24,2,35,0,11
	.byte	'PERLCK',0,4
	.word	605
	.byte	8,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	605
	.byte	16,0,2,35,0,0,35
	.byte	'Ifx_SMU_KEYS_Bits',0,22,140,3,3
	.word	92101
	.byte	10
	.byte	'_Ifx_SMU_OCS_Bits',0,22,143,3,16,4,11
	.byte	'TGS',0,1
	.word	757
	.byte	2,6,2,35,0,11
	.byte	'TGB',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'TG_P',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	582
	.byte	20,8,2,35,0,11
	.byte	'SUS',0,1
	.word	757
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	757
	.byte	2,0,2,35,3,0,35
	.byte	'Ifx_SMU_OCS_Bits',0,22,153,3,3
	.word	92213
	.byte	10
	.byte	'_Ifx_SMU_PCTL_Bits',0,22,156,3,16,4,11
	.byte	'HWDIR',0,4
	.word	605
	.byte	2,30,2,35,0,11
	.byte	'HWEN',0,4
	.word	605
	.byte	2,28,2,35,0,11
	.byte	'GFSCU_EN',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'GFSTS_EN',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'PCS',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	605
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	605
	.byte	9,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	605
	.byte	9,0,2,35,0,0,35
	.byte	'Ifx_SMU_PCTL_Bits',0,22,167,3,3
	.word	92405
	.byte	10
	.byte	'_Ifx_SMU_RMCTL_Bits',0,22,170,3,16,4,11
	.byte	'TE0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'TE1',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'TE2',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'TE3',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'TE4',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'TE5',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'TE6',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'TE7',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'TE8',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'TE9',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'TE10',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	605
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_SMU_RMCTL_Bits',0,22,204,3,3
	.word	92636
	.byte	10
	.byte	'_Ifx_SMU_RMEF_Bits',0,22,207,3,16,4,11
	.byte	'EF0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'EF1',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'EF2',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'EF3',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'EF4',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'EF5',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'EF6',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'EF7',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'EF8',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'EF9',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'EF10',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	605
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_SMU_RMEF_Bits',0,22,241,3,3
	.word	93340
	.byte	10
	.byte	'_Ifx_SMU_RMSTS_Bits',0,22,244,3,16,4,11
	.byte	'STS0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'STS1',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'STS2',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'STS3',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'STS4',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'STS5',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'STS6',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'STS7',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'STS8',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'STS9',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'STS10',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	605
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_SMU_RMSTS_Bits',0,22,150,4,3
	.word	94042
	.byte	10
	.byte	'_Ifx_SMU_RTAC00_Bits',0,22,153,4,16,4,11
	.byte	'GID0',0,4
	.word	605
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	605
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	605
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	605
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	605
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	605
	.byte	7,0,2,35,0,0,35
	.byte	'Ifx_SMU_RTAC00_Bits',0,22,161,4,3
	.word	94757
	.byte	10
	.byte	'_Ifx_SMU_RTAC01_Bits',0,22,164,4,16,4,11
	.byte	'GID2',0,4
	.word	605
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	605
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	605
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	605
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	605
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	605
	.byte	7,0,2,35,0,0,35
	.byte	'Ifx_SMU_RTAC01_Bits',0,22,172,4,3
	.word	94925
	.byte	10
	.byte	'_Ifx_SMU_RTAC10_Bits',0,22,175,4,16,4,11
	.byte	'GID0',0,4
	.word	605
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	605
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	605
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	605
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	605
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	605
	.byte	7,0,2,35,0,0,35
	.byte	'Ifx_SMU_RTAC10_Bits',0,22,183,4,3
	.word	95093
	.byte	10
	.byte	'_Ifx_SMU_RTAC11_Bits',0,22,186,4,16,4,11
	.byte	'GID2',0,4
	.word	605
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	605
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	605
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	605
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	605
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	605
	.byte	7,0,2,35,0,0,35
	.byte	'Ifx_SMU_RTAC11_Bits',0,22,194,4,3
	.word	95261
	.byte	10
	.byte	'_Ifx_SMU_RTC_Bits',0,22,197,4,16,4,11
	.byte	'RT0E',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'RT1E',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	605
	.byte	6,24,2,35,0,11
	.byte	'RTD',0,4
	.word	605
	.byte	24,0,2,35,0,0,35
	.byte	'Ifx_SMU_RTC_Bits',0,22,203,4,3
	.word	95429
	.byte	10
	.byte	'_Ifx_SMU_STS_Bits',0,22,206,4,16,4,11
	.byte	'CMD',0,4
	.word	605
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	605
	.byte	4,24,2,35,0,11
	.byte	'RES',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'ASCE',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'FSP',0,4
	.word	605
	.byte	2,20,2,35,0,11
	.byte	'FSTS',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	605
	.byte	3,16,2,35,0,11
	.byte	'RTS0',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'RTME0',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'RTS1',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'RTME1',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	605
	.byte	12,0,2,35,0,0,35
	.byte	'Ifx_SMU_STS_Bits',0,22,220,4,3
	.word	95549
	.byte	12,22,228,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87100
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_ACCEN0',0,22,233,4,3
	.word	95804
	.byte	12,22,236,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87657
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_ACCEN1',0,22,241,4,3
	.word	95868
	.byte	12,22,244,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87734
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_AD',0,22,249,4,3
	.word	95932
	.byte	12,22,252,4,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88284
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_AEX',0,22,129,5,3
	.word	95992
	.byte	12,22,132,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88841
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_AEXCLR',0,22,137,5,3
	.word	96053
	.byte	12,22,140,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89437
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_AFCNT',0,22,145,5,3
	.word	96117
	.byte	12,22,148,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89577
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_AG',0,22,153,5,3
	.word	96180
	.byte	12,22,156,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90128
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_AGC',0,22,161,5,3
	.word	96240
	.byte	12,22,164,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90390
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_AGCF',0,22,169,5,3
	.word	96301
	.byte	12,22,172,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90945
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_AGFSP',0,22,177,5,3
	.word	96363
	.byte	12,22,180,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91502
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_CLC',0,22,185,5,3
	.word	96426
	.byte	12,22,188,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91645
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_CMD',0,22,193,5,3
	.word	96487
	.byte	12,22,196,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91748
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_DBG',0,22,201,5,3
	.word	96548
	.byte	12,22,204,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91836
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_FSP',0,22,209,5,3
	.word	96609
	.byte	12,22,212,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91991
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_ID',0,22,217,5,3
	.word	96670
	.byte	12,22,220,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92101
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_KEYS',0,22,225,5,3
	.word	96730
	.byte	12,22,228,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92213
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_OCS',0,22,233,5,3
	.word	96792
	.byte	12,22,236,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92405
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_PCTL',0,22,241,5,3
	.word	96853
	.byte	12,22,244,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92636
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_RMCTL',0,22,249,5,3
	.word	96915
	.byte	12,22,252,5,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	93340
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_RMEF',0,22,129,6,3
	.word	96978
	.byte	12,22,132,6,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	94042
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_RMSTS',0,22,137,6,3
	.word	97040
	.byte	12,22,140,6,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	94757
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_RTAC00',0,22,145,6,3
	.word	97103
	.byte	12,22,148,6,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	94925
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_RTAC01',0,22,153,6,3
	.word	97167
	.byte	12,22,156,6,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95093
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_RTAC10',0,22,161,6,3
	.word	97231
	.byte	12,22,164,6,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95261
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_RTAC11',0,22,169,6,3
	.word	97295
	.byte	12,22,172,6,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95429
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_RTC',0,22,177,6,3
	.word	97359
	.byte	12,22,180,6,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95549
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_STS',0,22,185,6,3
	.word	97420
	.byte	17,8,210,2,9,1,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy30',0,1,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy60',0,2,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy120',0,3,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy240',0,4,0,35
	.byte	'IfxScuCcu_LowPowerDivRatio',0,8,216,2,3
	.word	97481
	.byte	35
	.byte	'IfxScuCcu_ModulationAmplitude',0,8,229,2,3
	.word	11952
	.byte	35
	.byte	'IfxScuCcu_PllInputClockSelection',0,8,131,4,3
	.word	11080
	.byte	17,8,135,4,9,1,18
	.byte	'IfxScuCcu_Traprequest_esr0',0,0,18
	.byte	'IfxScuCcu_Traprequest_esr1',0,1,18
	.byte	'IfxScuCcu_Traprequest_trap2',0,2,18
	.byte	'IfxScuCcu_Traprequest_smu',0,3,0,35
	.byte	'IfxScuCcu_Traprequest',0,8,141,4,3
	.word	97755
	.byte	35
	.byte	'IfxScuCcu_ModEn',0,8,151,4,3
	.word	11892
	.byte	35
	.byte	'IfxScuCcu_PerPllConfig',0,8,171,4,3
	.word	11274
	.byte	35
	.byte	'IfxScuCcu_SysPllConfig',0,8,181,4,3
	.word	11212
	.byte	35
	.byte	'IfxScuCcu_CcuconRegConfig',0,8,193,4,3
	.word	11631
	.byte	35
	.byte	'IfxScuCcu_PllStepConfig',0,8,201,4,3
	.word	11535
	.byte	35
	.byte	'IfxScuCcu_pllsParameterConfig',0,8,211,4,3
	.word	11380
	.byte	35
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,8,223,4,3
	.word	11846
	.byte	35
	.byte	'IfxScuCcu_ClockDistributionConfig',0,8,243,4,3
	.word	11667
	.byte	35
	.byte	'IfxScuCcu_InitialStepConfig',0,8,251,4,3
	.word	11486
	.byte	35
	.byte	'IfxScuCcu_PllThrottleConfig',0,8,131,5,3
	.word	11586
	.byte	35
	.byte	'IfxScuCcu_Mod_Config',0,8,141,5,3
	.word	12214
	.byte	35
	.byte	'IfxScuCcu_Config',0,8,154,5,3
	.word	12268
	.byte	20
	.word	12268
	.byte	37
	.byte	'IfxScuCcu_defaultClockConfig',0,8,150,9,43
	.word	98318
	.byte	1,1,17,9,141,1,9,1,18
	.byte	'IfxCpu_CounterMode_normal',0,0,18
	.byte	'IfxCpu_CounterMode_task',0,1,0,35
	.byte	'IfxCpu_CounterMode',0,9,145,1,3
	.word	98363
	.byte	30,9,198,1,9,6,13
	.byte	'counter',0
	.word	9982
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	757
	.byte	1,2,35,4,0,35
	.byte	'IfxCpu_Counter',0,9,202,1,3
	.word	98452
	.byte	30,9,210,1,9,32,13
	.byte	'instruction',0
	.word	98452
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	98452
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	98452
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	98452
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	98452
	.byte	6,2,35,24,0,35
	.byte	'IfxCpu_Perf',0,9,217,1,3
	.word	98518
	.byte	10
	.byte	'_Ifx_PMS_ACCEN0_Bits',0,23,68,16,4,11
	.byte	'EN0',0,4
	.word	605
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	605
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	605
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	605
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	605
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	605
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	605
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	605
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	605
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	605
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	605
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	605
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	605
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	605
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	605
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	605
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	605
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	605
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	605
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	605
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	605
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	605
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	605
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	605
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	605
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	605
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	605
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	605
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	605
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	605
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	605
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	605
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_PMS_ACCEN0_Bits',0,23,102,3
	.word	98636
	.byte	10
	.byte	'_Ifx_PMS_ACCEN1_Bits',0,23,105,16,4,11
	.byte	'reserved_0',0,4
	.word	605
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_PMS_ACCEN1_Bits',0,23,108,3
	.word	99193
	.byte	10
	.byte	'_Ifx_PMS_AGFSP_STDBY0_Bits',0,23,111,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'FE4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'FE5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'FE6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'FE7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'FE8',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'FE9',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'FE10',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'FE11',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'FE12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'FE13',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'FE14',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'FE15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	774
	.byte	13,2,2,35,2,11
	.byte	'BITPROT',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_AGFSP_STDBY0_Bits',0,23,133,1,3
	.word	99270
	.byte	10
	.byte	'_Ifx_PMS_AGFSP_STDBY1_Bits',0,23,136,1,16,4,11
	.byte	'FE0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'FE1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'FE2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'FE3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'FE4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'FE5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'FE7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'FE8',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'FE9',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'FE10',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'FE11',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'FE12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'FE13',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'FE14',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'FE15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'FE16',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	774
	.byte	13,2,2,35,2,11
	.byte	'BITPROT',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_AGFSP_STDBY1_Bits',0,23,158,1,3
	.word	99700
	.byte	10
	.byte	'_Ifx_PMS_AG_STDBY0_Bits',0,23,161,1,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'SF4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'SF5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'SF6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'SF7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'SF8',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'SF9',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'SF10',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'SF11',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'SF12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'SF13',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'SF14',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'SF15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	774
	.byte	13,2,2,35,2,11
	.byte	'FSPERR',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_AG_STDBY0_Bits',0,23,183,1,3
	.word	100103
	.byte	10
	.byte	'_Ifx_PMS_AG_STDBY1_Bits',0,23,186,1,16,4,11
	.byte	'SF0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'SF1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'SF2',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'SF3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'SF4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'SF5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'SF7',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'SF8',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'SF9',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'SF10',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'SF11',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'SF12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'SF13',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'SF14',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'SF15',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'SF16',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	774
	.byte	13,2,2,35,2,11
	.byte	'reserved_30',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_AG_STDBY1_Bits',0,23,208,1,3
	.word	100527
	.byte	10
	.byte	'_Ifx_PMS_CMD_STDBY_Bits',0,23,211,1,16,4,11
	.byte	'SMUEN',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'FSP0EN',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'FSP1EN',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'ASCE',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	582
	.byte	26,2,2,35,0,11
	.byte	'BITPROT',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_CMD_STDBY_Bits',0,23,220,1,3
	.word	100928
	.byte	10
	.byte	'_Ifx_PMS_DTSLIM_Bits',0,23,223,1,16,4,11
	.byte	'LOWER',0,2
	.word	774
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	757
	.byte	3,1,2,35,1,11
	.byte	'LLU',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	774
	.byte	12,4,2,35,2,11
	.byte	'reserved_28',0,1
	.word	757
	.byte	2,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_DTSLIM_Bits',0,23,232,1,3
	.word	101124
	.byte	10
	.byte	'_Ifx_PMS_DTSSTAT_Bits',0,23,235,1,16,4,11
	.byte	'RESULT',0,2
	.word	774
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	582
	.byte	20,0,2,35,0,0,35
	.byte	'Ifx_PMS_DTSSTAT_Bits',0,23,239,1,3
	.word	101307
	.byte	10
	.byte	'_Ifx_PMS_EVR33CON_Bits',0,23,242,1,16,4,11
	.byte	'SHVH33',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	757
	.byte	4,4,2,35,1,11
	.byte	'SHHVEN',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'SHLVEN',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	757
	.byte	2,0,2,35,1,11
	.byte	'SHVL33',0,1
	.word	757
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	757
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVR33CON_Bits',0,23,255,1,3
	.word	101407
	.byte	10
	.byte	'_Ifx_PMS_EVRADCSTAT_Bits',0,23,130,2,16,4,11
	.byte	'ADCCV',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	757
	.byte	8,0,2,35,2,11
	.byte	'OVC',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'OV33',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'OVSWD',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'UVC',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'UV33',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'UVSWD',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	757
	.byte	2,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRADCSTAT_Bits',0,23,142,2,3
	.word	101693
	.byte	10
	.byte	'_Ifx_PMS_EVROSCCTRL_Bits',0,23,145,2,16,4,11
	.byte	'OSCFTRIM',0,1
	.word	757
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	774
	.byte	10,0,2,35,0,11
	.byte	'OSCFPTRIM',0,1
	.word	757
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	774
	.byte	7,3,2,35,2,11
	.byte	'OSCTEMPOFFS',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'OSCTRIMEN',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVROSCCTRL_Bits',0,23,154,2,3
	.word	101931
	.byte	10
	.byte	'_Ifx_PMS_EVRRSTCON_Bits',0,23,157,2,16,4,11
	.byte	'RSTCTRIM',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'RST33TRIM',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'RSTSWDTRIM',0,1
	.word	757
	.byte	8,0,2,35,2,11
	.byte	'RSTCOFF',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'BPRSTCOFF',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'BPRST33OFF',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRRSTCON_Bits',0,23,170,2,3
	.word	102149
	.byte	10
	.byte	'_Ifx_PMS_EVRRSTSTAT_Bits',0,23,173,2,16,4,11
	.byte	'RSTC',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'RST33',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'RSTSWD',0,1
	.word	757
	.byte	8,0,2,35,2,11
	.byte	'RSTCOFF',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	757
	.byte	3,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRRSTSTAT_Bits',0,23,184,2,3
	.word	102440
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF0_Bits',0,23,187,2,16,4,11
	.byte	'M0S0EN',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'M0S2EN',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'M0S3EN',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'M0S3CLIP',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'M0S4EN',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'M0RAMPEN',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'M0SFRGET',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'M0SKIPEN',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'M0S3COEFF',0,1
	.word	757
	.byte	4,4,2,35,1,11
	.byte	'M0S4COEFF',0,1
	.word	757
	.byte	4,0,2,35,1,11
	.byte	'M0SRMPCOEFF',0,1
	.word	757
	.byte	4,4,2,35,2,11
	.byte	'M0FGETCOEFF',0,1
	.word	757
	.byte	4,0,2,35,2,11
	.byte	'M0S2COEFF',0,1
	.word	757
	.byte	4,4,2,35,3,11
	.byte	'M0S2VINSRC',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'M0S2VOSRC',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'M0SRMPCOEFFFRAC',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF0_Bits',0,23,206,2,3
	.word	102685
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF1_Bits',0,23,209,2,16,4,11
	.byte	'M0VOCFLPF',0,1
	.word	757
	.byte	4,4,2,35,0,11
	.byte	'M0VOCFINC',0,1
	.word	757
	.byte	4,0,2,35,0,11
	.byte	'M0VOUT',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'M0VIN',0,2
	.word	774
	.byte	11,5,2,35,2,11
	.byte	'M0S3COEFFFRAC',0,1
	.word	757
	.byte	2,3,2,35,3,11
	.byte	'M0S2COEFFFRAC',0,1
	.word	757
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF1_Bits',0,23,218,2,3
	.word	103098
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF2_Bits',0,23,221,2,16,4,11
	.byte	'M1S0EN',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'M1S2EN',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'M1S3EN',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'M1S3CLIP',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'M1S4EN',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'M1RAMPEN',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'M1SFRGET',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'M1SKIPEN',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'M1S3COEFF',0,1
	.word	757
	.byte	4,4,2,35,1,11
	.byte	'M1S4COEFF',0,1
	.word	757
	.byte	4,0,2,35,1,11
	.byte	'M1SRMPCOEFF',0,1
	.word	757
	.byte	4,4,2,35,2,11
	.byte	'M1FGETCOEFF',0,1
	.word	757
	.byte	4,0,2,35,2,11
	.byte	'M1S2COEFF',0,1
	.word	757
	.byte	4,4,2,35,3,11
	.byte	'M1S2VINSRC',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'M1S2VOSRC',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	757
	.byte	2,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF2_Bits',0,23,239,2,3
	.word	103307
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF3_Bits',0,23,242,2,16,4,11
	.byte	'M1VOCFLPF',0,1
	.word	757
	.byte	4,4,2,35,0,11
	.byte	'M1VOCFINC',0,1
	.word	757
	.byte	4,0,2,35,0,11
	.byte	'M1VOUT',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'M1VIN',0,2
	.word	774
	.byte	11,5,2,35,2,11
	.byte	'M1S3COEFFFRAC',0,1
	.word	757
	.byte	2,3,2,35,3,11
	.byte	'M1S2COEFFFRAC',0,1
	.word	757
	.byte	2,1,2,35,3,11
	.byte	'M1SRMPCOEFFFRAC',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF3_Bits',0,23,251,2,3
	.word	103701
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF4_Bits',0,23,254,2,16,4,11
	.byte	'M2S0EN',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'M2S2EN',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'M2S3EN',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'M2S3CLIP',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'M2S4EN',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'M2RAMPEN',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'M2SFRGET',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'M2SKIPEN',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'M2S3COEFF',0,1
	.word	757
	.byte	4,4,2,35,1,11
	.byte	'M2S4COEFF',0,1
	.word	757
	.byte	4,0,2,35,1,11
	.byte	'M2SRMPCOEFF',0,1
	.word	757
	.byte	4,4,2,35,2,11
	.byte	'M2FGETCOEFF',0,1
	.word	757
	.byte	4,0,2,35,2,11
	.byte	'M2S2COEFF',0,1
	.word	757
	.byte	4,4,2,35,3,11
	.byte	'M2S2VINSRC',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'M2S2VOSRC',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	757
	.byte	2,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF4_Bits',0,23,144,3,3
	.word	103922
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF5_Bits',0,23,147,3,16,4,11
	.byte	'M2VOCFLPF',0,1
	.word	757
	.byte	4,4,2,35,0,11
	.byte	'M2VOCFINC',0,1
	.word	757
	.byte	4,0,2,35,0,11
	.byte	'M2VOUT',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'M2VIN',0,2
	.word	774
	.byte	11,5,2,35,2,11
	.byte	'M2S3COEFFFRAC',0,1
	.word	757
	.byte	2,3,2,35,3,11
	.byte	'M2S2COEFFFRAC',0,1
	.word	757
	.byte	2,1,2,35,3,11
	.byte	'M2SRMPCOEFFFRAC',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF5_Bits',0,23,156,3,3
	.word	104316
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF6_Bits',0,23,159,3,16,4,11
	.byte	'CT5REG0',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'CT5REG1',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'CT5REG2',0,1
	.word	757
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	757
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF6_Bits',0,23,166,3,3
	.word	104537
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF7_Bits',0,23,169,3,16,4,11
	.byte	'CT5REG3',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'CT5REG4',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF7_Bits',0,23,175,3,3
	.word	104699
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF8_Bits',0,23,178,3,16,4,11
	.byte	'CT33REG0',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'CT33REG1',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'CT33REG2',0,1
	.word	757
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	757
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF8_Bits',0,23,185,3,3
	.word	104842
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF9_Bits',0,23,188,3,16,4,11
	.byte	'CT33REG3',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'CT33REG4',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF9_Bits',0,23,194,3,3
	.word	105007
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL0_Bits',0,23,197,3,16,4,11
	.byte	'SDFREQSPRD',0,2
	.word	774
	.byte	16,0,2,35,0,11
	.byte	'SDFREQ',0,2
	.word	774
	.byte	12,4,2,35,2,11
	.byte	'NGOFF',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'PGOFF',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCTRL0_Bits',0,23,205,3,3
	.word	105152
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL1_Bits',0,23,208,3,16,4,11
	.byte	'M0TOFF',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'M0TON',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'M0S0COEFF',0,1
	.word	757
	.byte	4,4,2,35,2,11
	.byte	'M0DEADBD',0,1
	.word	757
	.byte	2,2,2,35,2,11
	.byte	'M0ADCZB',0,1
	.word	757
	.byte	2,0,2,35,2,11
	.byte	'M0SKIP',0,1
	.word	757
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	757
	.byte	2,2,2,35,3,11
	.byte	'SYNCEN',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCTRL1_Bits',0,23,219,3,3
	.word	105320
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL10_Bits',0,23,222,3,16,4,11
	.byte	'SHVH',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'SHVL',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	12,4,2,35,2,11
	.byte	'SHHVEN',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'SHLVEN',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	757
	.byte	2,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCTRL10_Bits',0,23,230,3,3
	.word	105554
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL11_Bits',0,23,233,3,16,4,11
	.byte	'DROOPVH',0,1
	.word	757
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	757
	.byte	3,0,2,35,0,11
	.byte	'DROOPVL',0,1
	.word	757
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	757
	.byte	3,0,2,35,1,11
	.byte	'SYNCMAXDEV',0,1
	.word	757
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	757
	.byte	3,0,2,35,2,11
	.byte	'SYNCHYST',0,1
	.word	757
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'SYNCMUXSEL',0,1
	.word	757
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCTRL11_Bits',0,23,246,3,3
	.word	105735
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL2_Bits',0,23,249,3,16,4,11
	.byte	'LPBNDOFFSET',0,1
	.word	757
	.byte	4,4,2,35,0,11
	.byte	'LPBNDWIDTH',0,1
	.word	757
	.byte	4,0,2,35,0,11
	.byte	'LPLPFCOEFF',0,1
	.word	757
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	757
	.byte	4,0,2,35,1,11
	.byte	'SDFREQLP',0,2
	.word	774
	.byte	12,4,2,35,2,11
	.byte	'reserved_28',0,1
	.word	757
	.byte	2,2,2,35,3,11
	.byte	'EVRCMOD',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCTRL2_Bits',0,23,131,4,3
	.word	106033
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL3_Bits',0,23,134,4,16,4,11
	.byte	'M1TOFF',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'M1TON',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'M1S0COEFF',0,1
	.word	757
	.byte	4,4,2,35,2,11
	.byte	'M1DEADBD',0,1
	.word	757
	.byte	2,2,2,35,2,11
	.byte	'M1ADCZB',0,1
	.word	757
	.byte	2,0,2,35,2,11
	.byte	'M1SKIP',0,1
	.word	757
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	757
	.byte	4,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCTRL3_Bits',0,23,143,4,3
	.word	106265
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL4_Bits',0,23,146,4,16,4,11
	.byte	'VOKCFG',0,1
	.word	757
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	774
	.byte	10,0,2,35,0,11
	.byte	'SDFREQST',0,2
	.word	774
	.byte	12,4,2,35,2,11
	.byte	'reserved_28',0,1
	.word	757
	.byte	4,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCTRL4_Bits',0,23,152,4,3
	.word	106466
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL5_Bits',0,23,155,4,16,4,11
	.byte	'M2TOFF',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'M2TON',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'M2S0COEFF',0,1
	.word	757
	.byte	4,4,2,35,2,11
	.byte	'M2DEADBD',0,1
	.word	757
	.byte	2,2,2,35,2,11
	.byte	'M2ADCZB',0,1
	.word	757
	.byte	2,0,2,35,2,11
	.byte	'M2SKIP',0,1
	.word	757
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	757
	.byte	4,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCTRL5_Bits',0,23,164,4,3
	.word	106614
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL6_Bits',0,23,167,4,16,4,11
	.byte	'SVINTH',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'SVOTH',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'SINCLO',0,1
	.word	757
	.byte	3,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'SINCHI',0,1
	.word	757
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	774
	.byte	8,1,2,35,2,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCTRL6_Bits',0,23,176,4,3
	.word	106815
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL7_Bits',0,23,179,4,16,4,11
	.byte	'DRVNI',0,1
	.word	757
	.byte	2,6,2,35,0,11
	.byte	'DRVPCBF',0,1
	.word	757
	.byte	2,4,2,35,0,11
	.byte	'DRVP',0,1
	.word	757
	.byte	4,0,2,35,0,11
	.byte	'DRVSLOMODE',0,1
	.word	757
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	757
	.byte	6,0,2,35,1,11
	.byte	'DRVSPR',0,1
	.word	757
	.byte	8,0,2,35,2,11
	.byte	'SYNCDIVFAC',0,1
	.word	757
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	757
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCTRL7_Bits',0,23,190,4,3
	.word	107012
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL8_Bits',0,23,193,4,16,4,11
	.byte	'FBADCOFFS',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'FBADCSMP',0,1
	.word	757
	.byte	6,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	757
	.byte	2,0,2,35,1,11
	.byte	'FBADCBLNK',0,1
	.word	757
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	757
	.byte	2,4,2,35,2,11
	.byte	'FBADCLPF',0,1
	.word	757
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	757
	.byte	2,0,2,35,2,11
	.byte	'FBADCERR',0,1
	.word	757
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	757
	.byte	2,4,2,35,3,11
	.byte	'FBADCLSB',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	757
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCTRL8_Bits',0,23,207,4,3
	.word	107252
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL9_Bits',0,23,210,4,16,4,11
	.byte	'FFADCOFFS',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'FFADCLPF',0,1
	.word	757
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	582
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDCTRL9_Bits',0,23,216,4,3
	.word	107569
	.byte	10
	.byte	'_Ifx_PMS_EVRSDSTAT0_Bits',0,23,219,4,16,4,11
	.byte	'ADCFBCV',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'DPWMOUT',0,2
	.word	774
	.byte	12,4,2,35,2,11
	.byte	'reserved_28',0,1
	.word	757
	.byte	4,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSDSTAT0_Bits',0,23,225,4,3
	.word	107713
	.byte	10
	.byte	'_Ifx_PMS_EVRSTAT_Bits',0,23,228,4,16,4,11
	.byte	'EVRC',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'OVC',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'EVR33',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'OV33',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'UVC',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'UV33',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'SYNCLCK',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'EVR33VOK',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	757
	.byte	3,3,2,35,1,11
	.byte	'RSTC',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'RST33',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'RSTSWD',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'EVRCSHLV',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'EVRCSHHV',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'EVR33SHLV',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'EVR33SHHV',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'SWDLVL',0,1
	.word	757
	.byte	1,3,2,35,2,11
	.byte	'SDVOK',0,1
	.word	757
	.byte	1,2,2,35,2,11
	.byte	'EVRCMOD',0,1
	.word	757
	.byte	2,0,2,35,2,11
	.byte	'OVPRE',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'OVSB',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'OVDDM',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'UVPRE',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'UVSB',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'UVDDM',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	757
	.byte	2,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRSTAT_Bits',0,23,130,5,3
	.word	107861
	.byte	10
	.byte	'_Ifx_PMS_EVRTRIM_Bits',0,23,133,5,16,4,11
	.byte	'EVR33VOUTSEL',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'EVR33VOUTTRIM',0,1
	.word	757
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	757
	.byte	2,0,2,35,2,11
	.byte	'SDVOUTTRIM',0,1
	.word	757
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRTRIM_Bits',0,23,142,5,3
	.word	108421
	.byte	10
	.byte	'_Ifx_PMS_EVRTRIMSTAT_Bits',0,23,145,5,16,4,11
	.byte	'EVR33VOUTSEL',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'EVR33VOUTTRIM',0,1
	.word	757
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	757
	.byte	2,0,2,35,2,11
	.byte	'SDVOUTTRIM',0,1
	.word	757
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	757
	.byte	2,0,2,35,3,0,35
	.byte	'Ifx_PMS_EVRTRIMSTAT_Bits',0,23,153,5,3
	.word	108626
	.byte	10
	.byte	'_Ifx_PMS_HSMOVMON_Bits',0,23,156,5,16,4,11
	.byte	'EVRCOVVAL',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	757
	.byte	8,0,2,35,2,11
	.byte	'EVRCOFF',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'EVR33OFF',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'SWDOFF',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	757
	.byte	4,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_HSMOVMON_Bits',0,23,166,5,3
	.word	108831
	.byte	10
	.byte	'_Ifx_PMS_HSMUVMON_Bits',0,23,169,5,16,4,11
	.byte	'EVRCUVVAL',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	757
	.byte	8,0,2,35,2,11
	.byte	'EVRCOFF',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'EVR33OFF',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'SWDOFF',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'HSMFIL',0,1
	.word	757
	.byte	4,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_HSMUVMON_Bits',0,23,179,5,3
	.word	109051
	.byte	10
	.byte	'_Ifx_PMS_ID_Bits',0,23,182,5,16,4,11
	.byte	'MODREV',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	774
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_PMS_ID_Bits',0,23,187,5,3
	.word	109266
	.byte	10
	.byte	'_Ifx_PMS_MONBISTCTRL_Bits',0,23,190,5,16,4,11
	.byte	'TSTEN',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'TSTCLR',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	582
	.byte	28,2,2,35,0,11
	.byte	'BITPROT',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_MONBISTCTRL_Bits',0,23,197,5,3
	.word	109373
	.byte	10
	.byte	'_Ifx_PMS_MONBISTSTAT_Bits',0,23,200,5,16,4,11
	.byte	'TSTOK',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'TSTRUN',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'TSTDONE',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'SMUERR',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'PMSERR',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	582
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_PMS_MONBISTSTAT_Bits',0,23,209,5,3
	.word	109539
	.byte	10
	.byte	'_Ifx_PMS_MONCTRL_Bits',0,23,212,5,16,4,11
	.byte	'EVRCOVMOD',0,1
	.word	757
	.byte	2,6,2,35,0,11
	.byte	'PREOVMOD',0,1
	.word	757
	.byte	2,4,2,35,0,11
	.byte	'EVRCUVMOD',0,1
	.word	757
	.byte	2,2,2,35,0,11
	.byte	'PREUVMOD',0,1
	.word	757
	.byte	2,0,2,35,0,11
	.byte	'EVR33OVMOD',0,1
	.word	757
	.byte	2,6,2,35,1,11
	.byte	'VDDMOVMOD',0,1
	.word	757
	.byte	2,4,2,35,1,11
	.byte	'EVR33UVMOD',0,1
	.word	757
	.byte	2,2,2,35,1,11
	.byte	'VDDMUVMOD',0,1
	.word	757
	.byte	2,0,2,35,1,11
	.byte	'SWDOVMOD',0,1
	.word	757
	.byte	2,6,2,35,2,11
	.byte	'SBOVMOD',0,1
	.word	757
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	757
	.byte	2,2,2,35,2,11
	.byte	'SBUVMOD',0,1
	.word	757
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	757
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_MONCTRL_Bits',0,23,229,5,3
	.word	109740
	.byte	10
	.byte	'_Ifx_PMS_MONFILT_Bits',0,23,232,5,16,4,11
	.byte	'EVRCFIL',0,1
	.word	757
	.byte	4,4,2,35,0,11
	.byte	'PREFIL',0,1
	.word	757
	.byte	4,0,2,35,0,11
	.byte	'EVR33FIL',0,1
	.word	757
	.byte	4,4,2,35,1,11
	.byte	'VDDMFIL',0,1
	.word	757
	.byte	4,0,2,35,1,11
	.byte	'SWDFIL',0,1
	.word	757
	.byte	4,4,2,35,2,11
	.byte	'SBFIL',0,1
	.word	757
	.byte	4,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	757
	.byte	5,3,2,35,3,11
	.byte	'CLRFIL',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_MONFILT_Bits',0,23,244,5,3
	.word	110107
	.byte	10
	.byte	'_Ifx_PMS_MONSTAT1_Bits',0,23,247,5,16,4,11
	.byte	'ADCCV',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	757
	.byte	8,0,2,35,2,11
	.byte	'ACTVCNT',0,1
	.word	757
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	757
	.byte	2,0,2,35,3,0,35
	.byte	'Ifx_PMS_MONSTAT1_Bits',0,23,254,5,3
	.word	110357
	.byte	10
	.byte	'_Ifx_PMS_MONSTAT2_Bits',0,23,129,6,16,4,11
	.byte	'ADCPRE',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'ADCSB',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'ADCVDDM',0,1
	.word	757
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	757
	.byte	8,0,2,35,3,0,35
	.byte	'Ifx_PMS_MONSTAT2_Bits',0,23,135,6,3
	.word	110514
	.byte	10
	.byte	'_Ifx_PMS_OTSC0_Bits',0,23,138,6,16,4,11
	.byte	'B0LAM',0,1
	.word	757
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	757
	.byte	4,0,2,35,0,11
	.byte	'B0HAM',0,1
	.word	757
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	757
	.byte	4,0,2,35,1,11
	.byte	'B1LAM',0,1
	.word	757
	.byte	4,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	757
	.byte	4,0,2,35,2,11
	.byte	'B1HAM',0,1
	.word	757
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	757
	.byte	4,0,2,35,3,0,35
	.byte	'Ifx_PMS_OTSC0_Bits',0,23,148,6,3
	.word	110652
	.byte	10
	.byte	'_Ifx_PMS_OTSC1_Bits',0,23,151,6,16,4,11
	.byte	'B0EC',0,1
	.word	757
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	757
	.byte	4,0,2,35,0,11
	.byte	'B1EC',0,1
	.word	757
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	757
	.byte	4,0,2,35,1,11
	.byte	'DMONAD',0,1
	.word	757
	.byte	8,0,2,35,2,11
	.byte	'SMCDBG',0,1
	.word	757
	.byte	8,0,2,35,3,0,35
	.byte	'Ifx_PMS_OTSC1_Bits',0,23,159,6,3
	.word	110866
	.byte	10
	.byte	'_Ifx_PMS_OTSS_Bits',0,23,162,6,16,4,11
	.byte	'OTGB0',0,1
	.word	757
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	757
	.byte	4,0,2,35,0,11
	.byte	'OTGB1',0,1
	.word	757
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	757
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	774
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_PMS_OTSS_Bits',0,23,169,6,3
	.word	111034
	.byte	10
	.byte	'_Ifx_PMS_OVMON_Bits',0,23,172,6,16,4,11
	.byte	'EVRCOVVAL',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	757
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	757
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_OVMON_Bits',0,23,180,6,3
	.word	111189
	.byte	10
	.byte	'_Ifx_PMS_OVMON2_Bits',0,23,183,6,16,4,11
	.byte	'PREOVVAL',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'VDDMOVVAL',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'SBOVVAL',0,1
	.word	757
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	757
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_OVMON2_Bits',0,23,191,6,3
	.word	111369
	.byte	10
	.byte	'_Ifx_PMS_PMSIEN_Bits',0,23,194,6,16,4,11
	.byte	'OVSWD',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'UVSWD',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'OV33',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'UV33',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'OVC',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'UVC',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'OVPRE',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'UVPRE',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'OVDDM',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'UVDDM',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'OVSB',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'UVSB',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	757
	.byte	4,0,2,35,1,11
	.byte	'EVRCMOD',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'SDVOK',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'SYNCLCK',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'SWDLVL',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	757
	.byte	1,3,2,35,2,11
	.byte	'WUTWKP',0,1
	.word	757
	.byte	1,2,2,35,2,11
	.byte	'ESR0WKP',0,1
	.word	757
	.byte	1,1,2,35,2,11
	.byte	'ESR1WKP',0,1
	.word	757
	.byte	1,0,2,35,2,11
	.byte	'PINAWKP',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'PINBWKP',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'SCRINT',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'SCRRST',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'SCRECC',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'SCRWDT',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	757
	.byte	2,0,2,35,3,0,35
	.byte	'Ifx_PMS_PMSIEN_Bits',0,23,224,6,3
	.word	111548
	.byte	10
	.byte	'_Ifx_PMS_PMSWCR0_Bits',0,23,227,6,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	2,6,2,35,0,11
	.byte	'VEXTSTBYEN',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'VDDSTBYEN',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	757
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	757
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	757
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	757
	.byte	2,0,2,35,1,11
	.byte	'STBYRAMSEL',0,1
	.word	757
	.byte	3,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'BLNKFIL',0,1
	.word	757
	.byte	4,0,2,35,2,11
	.byte	'ESR0WKEN',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'ESR1WKEN',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'PINAWKEN',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'PINBWKEN',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'PWRWKEN',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'SCRWKEN',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'PORSTWKEN',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'WUTWKEN',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_PMSWCR0_Bits',0,23,251,6,3
	.word	112109
	.byte	10
	.byte	'_Ifx_PMS_PMSWCR2_Bits',0,23,254,6,16,4,11
	.byte	'SCRINT',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'SCRECC',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'SCRWDT',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'SCRRST',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	757
	.byte	4,0,2,35,1,11
	.byte	'TCINT',0,1
	.word	757
	.byte	8,0,2,35,2,11
	.byte	'TCINTREQ',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'SMURST',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'RST',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	757
	.byte	5,0,2,35,3,0,35
	.byte	'Ifx_PMS_PMSWCR2_Bits',0,23,139,7,3
	.word	112619
	.byte	10
	.byte	'_Ifx_PMS_PMSWCR3_Bits',0,23,142,7,16,4,11
	.byte	'WUTREL',0,4
	.word	582
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	757
	.byte	3,5,2,35,3,11
	.byte	'WUTEN',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'BUSY',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'WUTDIV',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'WUTMODE',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_PMSWCR3_Bits',0,23,151,7,3
	.word	112888
	.byte	10
	.byte	'_Ifx_PMS_PMSWCR4_Bits',0,23,154,7,16,4,11
	.byte	'BPSCRSTREQ',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'SCRSTREQ',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	757
	.byte	2,4,2,35,0,11
	.byte	'BPPORSTREQ',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'PORSTREQ',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'SCRCLKSEL',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	774
	.byte	9,0,2,35,0,11
	.byte	'SCRCFG',0,1
	.word	757
	.byte	8,0,2,35,2,11
	.byte	'BPSCREN',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'SCREN',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	757
	.byte	6,0,2,35,3,0,35
	.byte	'Ifx_PMS_PMSWCR4_Bits',0,23,167,7,3
	.word	113081
	.byte	10
	.byte	'_Ifx_PMS_PMSWCR5_Bits',0,23,170,7,16,4,11
	.byte	'BPTRISTREQ',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'TRISTREQ',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'ESR0TRIST',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'PORSTDF',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'DCDCSYNCO',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	582
	.byte	25,0,2,35,0,0,35
	.byte	'Ifx_PMS_PMSWCR5_Bits',0,23,180,7,3
	.word	113366
	.byte	10
	.byte	'_Ifx_PMS_PMSWSTAT_Bits',0,23,183,7,16,4,11
	.byte	'reserved_0',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'HWCFGEVR',0,1
	.word	757
	.byte	2,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'HWCFG4',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'HWCFG5',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'TRIST',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'TESTMODE',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'ESR0TRIST',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	757
	.byte	2,5,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	757
	.byte	4,0,2,35,1,11
	.byte	'SCR',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'SCRST',0,1
	.word	757
	.byte	1,6,2,35,2,11
	.byte	'SCRCLK',0,1
	.word	757
	.byte	1,5,2,35,2,11
	.byte	'PORSTREQ',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	757
	.byte	4,0,2,35,2,11
	.byte	'WUTEN',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'WUTRUN',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'WUTMODE',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'ESR0INT',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'ESR1INT',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'PINAINT',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'PINBINT',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_PMSWSTAT_Bits',0,23,209,7,3
	.word	113594
	.byte	10
	.byte	'_Ifx_PMS_PMSWSTAT2_Bits',0,23,212,7,16,4,11
	.byte	'ESR0WKP',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'PWRWKP',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'SCRWKP',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'PORSTWKP',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'WUTWKP',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'ESR0OVRUN',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'ESR1OVRUN',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'PINAOVRUN',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'PINBOVRUN',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'VDDSTBYEN',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'SCROVRUN',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'PORSTOVRUN',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'WUTOVRUN',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	757
	.byte	3,5,2,35,2,11
	.byte	'VEXTSTBYEN',0,1
	.word	757
	.byte	1,4,2,35,2,11
	.byte	'BLNKFIL',0,1
	.word	757
	.byte	4,0,2,35,2,11
	.byte	'ESR0WKEN',0,1
	.word	757
	.byte	1,7,2,35,3,11
	.byte	'ESR1WKEN',0,1
	.word	757
	.byte	1,6,2,35,3,11
	.byte	'PINAWKEN',0,1
	.word	757
	.byte	1,5,2,35,3,11
	.byte	'PINBWKEN',0,1
	.word	757
	.byte	1,4,2,35,3,11
	.byte	'PWRWKEN',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'SCRWKEN',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'PORSTWKEN',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'WUTWKEN',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_PMSWSTAT2_Bits',0,23,241,7,3
	.word	114123
	.byte	10
	.byte	'_Ifx_PMS_PMSWSTATCLR_Bits',0,23,244,7,16,4,11
	.byte	'ESR0WKPCLR',0,1
	.word	757
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	757
	.byte	1,6,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	757
	.byte	1,5,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	757
	.byte	1,4,2,35,0,11
	.byte	'PWRWKPCLR',0,1
	.word	757
	.byte	1,3,2,35,0,11
	.byte	'SCRWKPCLR',0,1
	.word	757
	.byte	1,2,2,35,0,11
	.byte	'PORSTWKPCLR',0,1
	.word	757
	.byte	1,1,2,35,0,11
	.byte	'WUTWKPCLR',0,1
	.word	757
	.byte	1,0,2,35,0,11
	.byte	'ESR0OVRUNCLR',0,1
	.word	757
	.byte	1,7,2,35,1,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	757
	.byte	1,6,2,35,1,11
	.byte	'PINAOVRUNCLR',0,1
	.word	757
	.byte	1,5,2,35,1,11
	.byte	'PINBOVRUNCLR',0,1
	.word	757
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	757
	.byte	1,3,2,35,1,11
	.byte	'SCROVRUNCLR',0,1
	.word	757
	.byte	1,2,2,35,1,11
	.byte	'PORSTOVRUNCLR',0,1
	.word	757
	.byte	1,1,2,35,1,11
	.byte	'WUTOVRUNCLR',0,1
	.word	757
	.byte	1,0,2,35,1,11
	.byte	'SCRSTCLR',0,1
	.word	757
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	774
	.byte	11,4,2,35,2,11
	.byte	'ESR0INTCLR',0,1
	.word	757
	.byte	1,3,2,35,3,11
	.byte	'ESR1INTCLR',0,1
	.word	757
	.byte	1,2,2,35,3,11
	.byte	'PINAINTCLR',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'PINBINTCLR',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_PMSWSTATCLR_Bits',0,23,140,8,3
	.word	114721
	.byte	10
	.byte	'_Ifx_PMS_PMSWUTCNT_Bits',0,23,143,8,16,4,11
	.byte	'WUTCNT',0,4
	.word	582
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	757
	.byte	8,0,2,35,3,0,35
	.byte	'Ifx_PMS_PMSWUTCNT_Bits',0,23,147,8,3
	.word	115283
	.byte	10
	.byte	'_Ifx_PMS_UVMON_Bits',0,23,150,8,16,4,11
	.byte	'EVRCUVVAL',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	757
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	757
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_UVMON_Bits',0,23,158,8,3
	.word	115387
	.byte	10
	.byte	'_Ifx_PMS_UVMON2_Bits',0,23,161,8,16,4,11
	.byte	'PREUVVAL',0,1
	.word	757
	.byte	8,0,2,35,0,11
	.byte	'VDDMUVVAL',0,1
	.word	757
	.byte	8,0,2,35,1,11
	.byte	'SBUVVAL',0,1
	.word	757
	.byte	8,0,2,35,2,11
	.byte	'VDDMLVLSEL',0,1
	.word	757
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	757
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	757
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_PMS_UVMON2_Bits',0,23,169,8,3
	.word	115567
	.byte	12,23,177,8,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98636
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_ACCEN0',0,23,182,8,3
	.word	115745
	.byte	12,23,185,8,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99193
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_ACCEN1',0,23,190,8,3
	.word	115809
	.byte	12,23,193,8,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99270
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_AGFSP_STDBY0',0,23,198,8,3
	.word	115873
	.byte	12,23,201,8,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99700
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_AGFSP_STDBY1',0,23,206,8,3
	.word	115943
	.byte	12,23,209,8,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100103
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_AG_STDBY0',0,23,214,8,3
	.word	116013
	.byte	12,23,217,8,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100527
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_AG_STDBY1',0,23,222,8,3
	.word	116080
	.byte	12,23,225,8,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100928
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_CMD_STDBY',0,23,230,8,3
	.word	116147
	.byte	12,23,233,8,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101124
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_DTSLIM',0,23,238,8,3
	.word	116214
	.byte	12,23,241,8,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101307
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_DTSSTAT',0,23,246,8,3
	.word	116278
	.byte	12,23,249,8,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101407
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVR33CON',0,23,254,8,3
	.word	116343
	.byte	12,23,129,9,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101693
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRADCSTAT',0,23,134,9,3
	.word	116409
	.byte	12,23,137,9,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101931
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVROSCCTRL',0,23,142,9,3
	.word	116477
	.byte	12,23,145,9,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102149
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRRSTCON',0,23,150,9,3
	.word	116545
	.byte	12,23,153,9,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102440
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRRSTSTAT',0,23,158,9,3
	.word	116612
	.byte	12,23,161,9,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102685
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF0',0,23,166,9,3
	.word	116680
	.byte	12,23,169,9,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103098
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF1',0,23,174,9,3
	.word	116749
	.byte	12,23,177,9,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103307
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF2',0,23,182,9,3
	.word	116818
	.byte	12,23,185,9,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103701
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF3',0,23,190,9,3
	.word	116887
	.byte	12,23,193,9,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103922
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF4',0,23,198,9,3
	.word	116956
	.byte	12,23,201,9,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104316
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF5',0,23,206,9,3
	.word	117025
	.byte	12,23,209,9,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104537
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF6',0,23,214,9,3
	.word	117094
	.byte	12,23,217,9,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104699
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF7',0,23,222,9,3
	.word	117163
	.byte	12,23,225,9,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104842
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF8',0,23,230,9,3
	.word	117232
	.byte	12,23,233,9,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105007
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCOEFF9',0,23,238,9,3
	.word	117301
	.byte	12,23,241,9,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105152
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCTRL0',0,23,246,9,3
	.word	117370
	.byte	12,23,249,9,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105320
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCTRL1',0,23,254,9,3
	.word	117438
	.byte	12,23,129,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105554
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCTRL10',0,23,134,10,3
	.word	117506
	.byte	12,23,137,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105735
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCTRL11',0,23,142,10,3
	.word	117575
	.byte	12,23,145,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106033
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCTRL2',0,23,150,10,3
	.word	117644
	.byte	12,23,153,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106265
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCTRL3',0,23,158,10,3
	.word	117712
	.byte	12,23,161,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106466
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCTRL4',0,23,166,10,3
	.word	117780
	.byte	12,23,169,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106614
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCTRL5',0,23,174,10,3
	.word	117848
	.byte	12,23,177,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106815
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCTRL6',0,23,182,10,3
	.word	117916
	.byte	12,23,185,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107012
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCTRL7',0,23,190,10,3
	.word	117984
	.byte	12,23,193,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107252
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCTRL8',0,23,198,10,3
	.word	118052
	.byte	12,23,201,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107569
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDCTRL9',0,23,206,10,3
	.word	118120
	.byte	12,23,209,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107713
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSDSTAT0',0,23,214,10,3
	.word	118188
	.byte	12,23,217,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107861
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRSTAT',0,23,222,10,3
	.word	118256
	.byte	12,23,225,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108421
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRTRIM',0,23,230,10,3
	.word	118321
	.byte	12,23,233,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108626
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_EVRTRIMSTAT',0,23,238,10,3
	.word	118386
	.byte	12,23,241,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108831
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_HSMOVMON',0,23,246,10,3
	.word	118455
	.byte	12,23,249,10,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109051
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_HSMUVMON',0,23,254,10,3
	.word	118521
	.byte	12,23,129,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109266
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_ID',0,23,134,11,3
	.word	118587
	.byte	12,23,137,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109373
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_MONBISTCTRL',0,23,142,11,3
	.word	118647
	.byte	12,23,145,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109539
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_MONBISTSTAT',0,23,150,11,3
	.word	118716
	.byte	12,23,153,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109740
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_MONCTRL',0,23,158,11,3
	.word	118785
	.byte	12,23,161,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110107
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_MONFILT',0,23,166,11,3
	.word	118850
	.byte	12,23,169,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110357
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_MONSTAT1',0,23,174,11,3
	.word	118915
	.byte	12,23,177,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110514
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_MONSTAT2',0,23,182,11,3
	.word	118981
	.byte	12,23,185,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110652
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_OTSC0',0,23,190,11,3
	.word	119047
	.byte	12,23,193,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110866
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_OTSC1',0,23,198,11,3
	.word	119110
	.byte	12,23,201,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111034
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_OTSS',0,23,206,11,3
	.word	119173
	.byte	12,23,209,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111189
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_OVMON',0,23,214,11,3
	.word	119235
	.byte	12,23,217,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111369
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_OVMON2',0,23,222,11,3
	.word	119298
	.byte	12,23,225,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111548
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_PMSIEN',0,23,230,11,3
	.word	119362
	.byte	12,23,233,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112109
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_PMSWCR0',0,23,238,11,3
	.word	119426
	.byte	12,23,241,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112619
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_PMSWCR2',0,23,246,11,3
	.word	119491
	.byte	12,23,249,11,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112888
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_PMSWCR3',0,23,254,11,3
	.word	119556
	.byte	12,23,129,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113081
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_PMSWCR4',0,23,134,12,3
	.word	119621
	.byte	12,23,137,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113366
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_PMSWCR5',0,23,142,12,3
	.word	119686
	.byte	12,23,145,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113594
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_PMSWSTAT',0,23,150,12,3
	.word	119751
	.byte	12,23,153,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114123
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_PMSWSTAT2',0,23,158,12,3
	.word	119817
	.byte	12,23,161,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114721
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_PMSWSTATCLR',0,23,166,12,3
	.word	119884
	.byte	12,23,169,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	115283
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_PMSWUTCNT',0,23,174,12,3
	.word	119953
	.byte	12,23,177,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	115387
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_UVMON',0,23,182,12,3
	.word	120020
	.byte	12,23,185,12,9,4,13
	.byte	'U',0
	.word	582
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	598
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	115567
	.byte	4,2,35,0,0,35
	.byte	'Ifx_PMS_UVMON2',0,23,190,12,3
	.word	120083
	.byte	10
	.byte	'_Ifx_PMS',0,23,202,12,25,128,4,13
	.byte	'reserved_0',0
	.word	4795
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	118587
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	48773
	.byte	32,2,35,12,13
	.byte	'EVRSTAT',0
	.word	118256
	.byte	4,2,35,44,13
	.byte	'reserved_30',0
	.word	2975
	.byte	4,2,35,48,13
	.byte	'EVRADCSTAT',0
	.word	116409
	.byte	4,2,35,52,13
	.byte	'reserved_38',0
	.word	2975
	.byte	4,2,35,56,13
	.byte	'EVRRSTCON',0
	.word	116545
	.byte	4,2,35,60,13
	.byte	'reserved_40',0
	.word	2975
	.byte	4,2,35,64,13
	.byte	'EVRRSTSTAT',0
	.word	116612
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	2975
	.byte	4,2,35,72,13
	.byte	'EVRTRIM',0
	.word	118321
	.byte	4,2,35,76,13
	.byte	'EVRTRIMSTAT',0
	.word	118386
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	5135
	.byte	12,2,35,84,13
	.byte	'MONSTAT1',0
	.word	118915
	.byte	4,2,35,96,13
	.byte	'MONSTAT2',0
	.word	118981
	.byte	4,2,35,100,13
	.byte	'MONCTRL',0
	.word	118785
	.byte	4,2,35,104,13
	.byte	'reserved_6C',0
	.word	2975
	.byte	4,2,35,108,13
	.byte	'MONFILT',0
	.word	118850
	.byte	4,2,35,112,13
	.byte	'PMSIEN',0
	.word	119362
	.byte	4,2,35,116,13
	.byte	'UVMON',0
	.word	120020
	.byte	4,2,35,120,13
	.byte	'OVMON',0
	.word	119235
	.byte	4,2,35,124,13
	.byte	'UVMON2',0
	.word	120083
	.byte	4,3,35,128,1,13
	.byte	'OVMON2',0
	.word	119298
	.byte	4,3,35,132,1,13
	.byte	'HSMUVMON',0
	.word	118521
	.byte	4,3,35,136,1,13
	.byte	'HSMOVMON',0
	.word	118455
	.byte	4,3,35,140,1,13
	.byte	'EVR33CON',0
	.word	116343
	.byte	4,3,35,144,1,13
	.byte	'reserved_94',0
	.word	5135
	.byte	12,3,35,148,1,13
	.byte	'EVROSCCTRL',0
	.word	116477
	.byte	4,3,35,160,1,13
	.byte	'reserved_A4',0
	.word	27682
	.byte	16,3,35,164,1,13
	.byte	'PMSWCR0',0
	.word	119426
	.byte	4,3,35,180,1,13
	.byte	'PMSWCR2',0
	.word	119491
	.byte	4,3,35,184,1,13
	.byte	'reserved_BC',0
	.word	2975
	.byte	4,3,35,188,1,13
	.byte	'PMSWCR3',0
	.word	119556
	.byte	4,3,35,192,1,13
	.byte	'PMSWCR4',0
	.word	119621
	.byte	4,3,35,196,1,13
	.byte	'PMSWCR5',0
	.word	119686
	.byte	4,3,35,200,1,13
	.byte	'reserved_CC',0
	.word	4795
	.byte	8,3,35,204,1,13
	.byte	'PMSWSTAT',0
	.word	119751
	.byte	4,3,35,212,1,13
	.byte	'PMSWSTAT2',0
	.word	119817
	.byte	4,3,35,216,1,13
	.byte	'PMSWUTCNT',0
	.word	119953
	.byte	4,3,35,220,1,13
	.byte	'reserved_E0',0
	.word	4795
	.byte	8,3,35,224,1,13
	.byte	'PMSWSTATCLR',0
	.word	119884
	.byte	4,3,35,232,1,13
	.byte	'reserved_EC',0
	.word	27682
	.byte	16,3,35,236,1,13
	.byte	'EVRSDSTAT0',0
	.word	118188
	.byte	4,3,35,252,1,13
	.byte	'reserved_100',0
	.word	4795
	.byte	8,3,35,128,2,13
	.byte	'EVRSDCTRL0',0
	.word	117370
	.byte	4,3,35,136,2,13
	.byte	'EVRSDCTRL1',0
	.word	117438
	.byte	4,3,35,140,2,13
	.byte	'EVRSDCTRL2',0
	.word	117644
	.byte	4,3,35,144,2,13
	.byte	'EVRSDCTRL3',0
	.word	117712
	.byte	4,3,35,148,2,13
	.byte	'EVRSDCTRL4',0
	.word	117780
	.byte	4,3,35,152,2,13
	.byte	'EVRSDCTRL5',0
	.word	117848
	.byte	4,3,35,156,2,13
	.byte	'EVRSDCTRL6',0
	.word	117916
	.byte	4,3,35,160,2,13
	.byte	'EVRSDCTRL7',0
	.word	117984
	.byte	4,3,35,164,2,13
	.byte	'EVRSDCTRL8',0
	.word	118052
	.byte	4,3,35,168,2,13
	.byte	'EVRSDCTRL9',0
	.word	118120
	.byte	4,3,35,172,2,13
	.byte	'EVRSDCTRL10',0
	.word	117506
	.byte	4,3,35,176,2,13
	.byte	'EVRSDCTRL11',0
	.word	117575
	.byte	4,3,35,180,2,13
	.byte	'reserved_138',0
	.word	27682
	.byte	16,3,35,184,2,13
	.byte	'EVRSDCOEFF0',0
	.word	116680
	.byte	4,3,35,200,2,13
	.byte	'EVRSDCOEFF1',0
	.word	116749
	.byte	4,3,35,204,2,13
	.byte	'EVRSDCOEFF2',0
	.word	116818
	.byte	4,3,35,208,2,13
	.byte	'EVRSDCOEFF3',0
	.word	116887
	.byte	4,3,35,212,2,13
	.byte	'EVRSDCOEFF4',0
	.word	116956
	.byte	4,3,35,216,2,13
	.byte	'EVRSDCOEFF5',0
	.word	117025
	.byte	4,3,35,220,2,13
	.byte	'EVRSDCOEFF6',0
	.word	117094
	.byte	4,3,35,224,2,13
	.byte	'EVRSDCOEFF7',0
	.word	117163
	.byte	4,3,35,228,2,13
	.byte	'EVRSDCOEFF8',0
	.word	117232
	.byte	4,3,35,232,2,13
	.byte	'EVRSDCOEFF9',0
	.word	117301
	.byte	4,3,35,236,2,13
	.byte	'reserved_170',0
	.word	4166
	.byte	24,3,35,240,2,13
	.byte	'AG_STDBY0',0
	.word	116013
	.byte	4,3,35,136,3,13
	.byte	'AG_STDBY1',0
	.word	116080
	.byte	4,3,35,140,3,13
	.byte	'MONBISTSTAT',0
	.word	118716
	.byte	4,3,35,144,3,13
	.byte	'reserved_194',0
	.word	2975
	.byte	4,3,35,148,3,13
	.byte	'MONBISTCTRL',0
	.word	118647
	.byte	4,3,35,152,3,13
	.byte	'CMD_STDBY',0
	.word	116147
	.byte	4,3,35,156,3,13
	.byte	'reserved_1A0',0
	.word	2975
	.byte	4,3,35,160,3,13
	.byte	'AGFSP_STDBY0',0
	.word	115873
	.byte	4,3,35,164,3,13
	.byte	'AGFSP_STDBY1',0
	.word	115943
	.byte	4,3,35,168,3,13
	.byte	'reserved_1AC',0
	.word	78042
	.byte	20,3,35,172,3,13
	.byte	'DTSSTAT',0
	.word	116278
	.byte	4,3,35,192,3,13
	.byte	'reserved_1C4',0
	.word	2975
	.byte	4,3,35,196,3,13
	.byte	'DTSLIM',0
	.word	116214
	.byte	4,3,35,200,3,13
	.byte	'reserved_1CC',0
	.word	78042
	.byte	20,3,35,204,3,13
	.byte	'OTSS',0
	.word	119173
	.byte	4,3,35,224,3,13
	.byte	'OTSC0',0
	.word	119047
	.byte	4,3,35,228,3,13
	.byte	'OTSC1',0
	.word	119110
	.byte	4,3,35,232,3,13
	.byte	'reserved_1EC',0
	.word	5135
	.byte	12,3,35,236,3,13
	.byte	'ACCEN1',0
	.word	115809
	.byte	4,3,35,248,3,13
	.byte	'ACCEN0',0
	.word	115745
	.byte	4,3,35,252,3,0,14
	.word	120147
	.byte	35
	.byte	'Ifx_PMS',0,23,165,13,3
	.word	121955
	.byte	17,11,94,9,1,18
	.byte	'IfxPmsEvr_EnableInterrupt_ovswd',0,0,18
	.byte	'IfxPmsEvr_EnableInterrupt_uvswd',0,1,18
	.byte	'IfxPmsEvr_EnableInterrupt_ov33',0,2,18
	.byte	'IfxPmsEvr_EnableInterrupt_uv33',0,3,18
	.byte	'IfxPmsEvr_EnableInterrupt_ovc',0,4,18
	.byte	'IfxPmsEvr_EnableInterrupt_uvc',0,5,18
	.byte	'IfxPmsEvr_EnableInterrupt_ovpre',0,6,18
	.byte	'IfxPmsEvr_EnableInterrupt_uvpre',0,7,18
	.byte	'IfxPmsEvr_EnableInterrupt_ovddm',0,8,18
	.byte	'IfxPmsEvr_EnableInterrupt_uvddm',0,9,18
	.byte	'IfxPmsEvr_EnableInterrupt_ovsb',0,10,18
	.byte	'IfxPmsEvr_EnableInterrupt_uvsb',0,11,18
	.byte	'IfxPmsEvr_EnableInterrupt_evrcmod',0,16,18
	.byte	'IfxPmsEvr_EnableInterrupt_sdvok',0,17,18
	.byte	'IfxPmsEvr_EnableInterrupt_synclck',0,18,18
	.byte	'IfxPmsEvr_EnableInterrupt_swdlvl',0,19,18
	.byte	'IfxPmsEvr_EnableInterrupt_wutwkp',0,21,18
	.byte	'IfxPmsEvr_EnableInterrupt_esr0wkp',0,22,18
	.byte	'IfxPmsEvr_EnableInterrupt_esr1wkp',0,23,18
	.byte	'IfxPmsEvr_EnableInterrupt_pinawkp',0,24,18
	.byte	'IfxPmsEvr_EnableInterrupt_pinbwkp',0,25,18
	.byte	'IfxPmsEvr_EnableInterrupt_scrint',0,26,18
	.byte	'IfxPmsEvr_EnableInterrupt_scrrst',0,27,18
	.byte	'IfxPmsEvr_EnableInterrupt_screcc',0,28,18
	.byte	'IfxPmsEvr_EnableInterrupt_scrwdt',0,29,0,35
	.byte	'IfxPmsEvr_EnableInterrupt',0,11,121,3
	.word	121977
	.byte	17,11,125,9,1,18
	.byte	'IfxPmsEvr_EvrcMode_pwmMode',0,0,18
	.byte	'IfxPmsEvr_EvrcMode_lowPowerMode',0,1,18
	.byte	'IfxPmsEvr_EvrcMode_startupMode',0,2,18
	.byte	'IfxPmsEvr_EvrcMode_disableMode',0,3,0,35
	.byte	'IfxPmsEvr_EvrcMode',0,11,134,1,3
	.word	122877
	.byte	17,11,138,1,9,1,18
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_1',0,0,18
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_2',0,1,18
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_4',0,2,18
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_8',0,3,18
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_16',0,4,18
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_32',0,5,0,35
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor',0,11,146,1,3
	.word	123040
	.byte	17,11,151,1,9,1,18
	.byte	'IfxPmsEvr_OverVoltageMonitoring_inactive',0,0,18
	.byte	'IfxPmsEvr_OverVoltageMonitoring_lowToHighVoltageTransition',0,1,18
	.byte	'IfxPmsEvr_OverVoltageMonitoring_highToLowVoltageTransition',0,2,18
	.byte	'IfxPmsEvr_OverVoltageMonitoring_eitherDirectionVoltageTransition',0,3,0,35
	.byte	'IfxPmsEvr_OverVoltageMonitoring',0,11,157,1,3
	.word	123362
	.byte	17,11,162,1,9,1,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_0',0,0,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_1',0,1,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_2',0,2,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_3',0,3,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_4',0,4,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_5',0,5,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_6',0,6,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_7',0,7,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_8',0,8,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_9',0,9,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_10',0,10,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_11',0,11,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_12',0,12,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_13',0,13,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_14',0,14,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_15',0,15,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_16',0,16,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_17',0,17,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_18',0,18,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_19',0,19,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_20',0,20,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_21',0,21,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_22',0,22,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_23',0,23,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_24',0,24,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_25',0,25,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_26',0,26,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_27',0,27,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_28',0,28,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_29',0,29,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_30',0,30,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_31',0,31,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_32',0,32,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_33',0,33,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_34',0,34,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_35',0,35,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_36',0,36,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_37',0,37,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_38',0,38,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_39',0,39,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_40',0,40,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_41',0,41,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_42',0,42,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_43',0,43,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_44',0,44,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_45',0,45,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_46',0,46,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_47',0,47,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_48',0,48,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_49',0,49,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_50',0,50,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_51',0,51,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_52',0,52,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_53',0,53,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_54',0,54,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_55',0,55,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_56',0,56,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_57',0,57,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_58',0,58,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_59',0,59,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_60',0,60,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_61',0,61,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_62',0,62,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_63',0,63,0,35
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue',0,11,228,1,3
	.word	123642
	.byte	17,11,196,2,9,1,18
	.byte	'IfxPmsEvr_SupplyMode_evrc',0,0,18
	.byte	'IfxPmsEvr_SupplyMode_evr33',0,1,18
	.byte	'IfxPmsEvr_SupplyMode_swd',0,2,18
	.byte	'IfxPmsEvr_SupplyMode_evrpr',0,3,18
	.byte	'IfxPmsEvr_SupplyMode_vddm',0,4,18
	.byte	'IfxPmsEvr_SupplyMode_sb',0,5,0,35
	.byte	'IfxPmsEvr_SupplyMode',0,11,204,2,3
	.word	125918
	.byte	17,11,209,2,9,1,18
	.byte	'IfxPmsEvr_UnderVoltageMonitoring_inactive',0,0,18
	.byte	'IfxPmsEvr_UnderVoltageMonitoring_lowToHighVoltageTransition',0,1,18
	.byte	'IfxPmsEvr_UnderVoltageMonitoring_highToLowVoltageTransition',0,2,18
	.byte	'IfxPmsEvr_UnderVoltageMonitoring_eitherDirectionVoltageTransition',0,3,0,35
	.byte	'IfxPmsEvr_UnderVoltageMonitoring',0,11,215,2,3
	.word	126122
	.byte	14
	.word	218
	.byte	5
	.word	126407
	.byte	30,11,223,2,9,12,13
	.byte	'regAddr',0
	.word	126412
	.byte	4,2,35,0,13
	.byte	'value',0
	.word	9982
	.byte	4,2,35,4,13
	.byte	'mask',0
	.word	9982
	.byte	4,2,35,8,0,35
	.byte	'IfxPmsEvr_StepDownRegulatorRegConfig',0,11,228,2,3
	.word	126417
	.byte	20
	.word	126417
	.byte	5
	.word	126516
	.byte	30,11,230,2,9,12,13
	.byte	'numOfRegisters',0
	.word	757
	.byte	1,2,35,0,13
	.byte	'regConfig',0
	.word	126521
	.byte	4,2,35,4,13
	.byte	'waitInSecs',0
	.word	389
	.byte	4,2,35,8,0,35
	.byte	'IfxPmsEvr_initSequencePhase',0,11,235,2,3
	.word	126526
	.byte	30,11,237,2,9,8,13
	.byte	'numOfRegisters',0
	.word	757
	.byte	1,2,35,0,13
	.byte	'regConfig',0
	.word	126521
	.byte	4,2,35,4,0,35
	.byte	'IfxPmsEvr_checkRegConfig',0,11,241,2,3
	.word	126633
	.byte	20
	.word	126526
	.byte	5
	.word	126717
	.byte	30,11,243,2,9,8,13
	.byte	'numOfPhases',0
	.word	757
	.byte	1,2,35,0,13
	.byte	'phaseConfig',0
	.word	126722
	.byte	4,2,35,4,0,35
	.byte	'IfxPmsEvr_initSequence',0,11,247,2,3
	.word	126727
	.byte	38
	.word	582
	.byte	39,0,37
	.byte	'__START1',0,15,118,1
	.word	126808
	.byte	1,1,37
	.byte	'__START2',0,15,118,1
	.word	126808
	.byte	1,1,37
	.byte	'__START3',0,15,118,1
	.word	126808
	.byte	1,1,37
	.byte	'__START4',0,15,118,1
	.word	126808
	.byte	1,1,37
	.byte	'__ISTACK0',0,15,119,1
	.word	126808
	.byte	1,1,37
	.byte	'__INTTAB_CPU0',0,15,119,1
	.word	126808
	.byte	1,1,37
	.byte	'__TRAPTAB_CPU0',0,15,119,1
	.word	126808
	.byte	1,1,37
	.byte	'__CSA0',0,15,119,1
	.word	126808
	.byte	1,1,37
	.byte	'__CSA0_END',0,15,119,1
	.word	126808
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L52:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	0,0,0,4,59,0,3,8,0,0,5,15,0,73,19,0,0,6,5,0,3,8,58,15,59,15,57,15,73,19,0,0,7,21,0,54,15,39,12,0,0,8,36
	.byte	0,3,8,11,15,62,15,0,0,9,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,11,1,0,0,20,38,0,73,19,0,0,21,46,1,3,8,54,15,39,12,63,12,60
	.byte	12,0,0,22,5,0,73,19,0,0,23,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,24,5,0,3,8,73,19,0,0,25,46,0,3,8
	.byte	54,15,39,12,63,12,60,12,0,0,26,46,1,49,19,0,0,27,5,0,49,19,0,0,28,29,1,49,19,0,0,29,11,0,49,19,0,0,30
	.byte	19,1,58,15,59,15,57,15,11,15,0,0,31,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,32,46
	.byte	0,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,33,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60
	.byte	12,0,0,34,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,35,22,0,3,8,58,15,59,15,57,15,73,19,0,0,36
	.byte	21,0,54,15,0,0,37,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,38,1,1,73,19,0,0,39,33,0,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L53:
	.word	.L281-.L280
.L280:
	.half	3
	.word	.L283-.L282
.L282:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common',0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_CompilersTasking.h',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxScuWdt.h',0,2,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxPort.h',0,4,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,2,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,5,0,0
	.byte	'IfxPmsEvr.h',0,6,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0
	.byte	'Ifx_Cfg_Ssw.h',0,7,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'Ifx_TypesReg.h',0,3,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxScu_cfg.h',0,5,0,0
	.byte	'IfxSmu_regdef.h',0,3,0,0
	.byte	'IfxPms_regdef.h',0,3,0,0,0
.L283:
.L281:
	.sdecl	'.debug_info',debug,cluster('__StartUpSoftware')
	.sect	'.debug_info'
.L54:
	.word	371
	.half	3
	.word	.L55
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L57,.L56
	.byte	2
	.word	.L50
	.byte	3
	.byte	'__StartUpSoftware',0,1,137,1,13,1,1
	.word	.L25,.L119,.L24
	.byte	4
	.word	.L25,.L119
	.byte	5
	.word	.L120,.L121,.L122
	.byte	6
	.word	.L123,.L121,.L122
	.byte	7
	.byte	'returnVal',0,2,205,3,19
	.word	.L124,.L125
	.byte	7
	.byte	'tempValue',0,2,206,3,19
	.word	.L126,.L127
	.byte	0,0,5
	.word	.L128,.L122,.L129
	.byte	8
	.word	.L130,.L131
	.byte	9
	.word	.L132,.L122,.L129
	.byte	0,5
	.word	.L128,.L9,.L133
	.byte	8
	.word	.L130,.L131
	.byte	9
	.word	.L132,.L9,.L133
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('__StartUpSoftware')
	.sect	'.debug_abbrev'
.L55:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,1,49,16,17,1,18,1,0,0,7
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('__StartUpSoftware')
	.sect	'.debug_line'
.L56:
	.word	.L285-.L284
.L284:
	.half	3
	.word	.L287-.L286
.L286:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L287:
	.byte	5,5,7,0,5,2
	.word	.L25
	.byte	3,139,1,1,9
	.half	.L288-.L25
	.byte	3,3,1,4,2,5,42,9
	.half	.L121-.L288
	.byte	3,191,2,1,5,22,9
	.half	.L257-.L121
	.byte	3,2,1,5,20,9
	.half	.L289-.L257
	.byte	1,5,5,9
	.half	.L290-.L289
	.byte	1,5,27,7,9
	.half	.L291-.L290
	.byte	3,4,1,5,25,9
	.half	.L292-.L291
	.byte	1,5,10,9
	.half	.L293-.L292
	.byte	1,5,46,7,9
	.half	.L294-.L293
	.byte	3,4,1,5,32,1,5,44,9
	.half	.L258-.L294
	.byte	1,5,70,9
	.half	.L295-.L258
	.byte	1,5,78,9
	.half	.L296-.L295
	.byte	1,5,9,9
	.half	.L259-.L296
	.byte	3,2,1,5,27,7,9
	.half	.L297-.L259
	.byte	3,2,1,5,10,9
	.half	.L3-.L297
	.byte	3,7,1,5,26,7,9
	.half	.L298-.L3
	.byte	3,5,1,5,10,9
	.half	.L299-.L298
	.byte	1,5,19,7,9
	.half	.L5-.L299
	.byte	3,2,1,5,23,1,5,19,9
	.half	.L2-.L5
	.byte	3,4,1,4,1,5,5,9
	.half	.L8-.L2
	.byte	3,164,125,1,5,32,7,9
	.half	.L122-.L8
	.byte	3,2,1,4,3,5,5,9
	.half	.L300-.L122
	.byte	3,18,1,4,1,5,1,9
	.half	.L129-.L300
	.byte	3,116,1,5,32,7,9
	.half	.L9-.L129
	.byte	3,126,1,4,3,5,5,9
	.half	.L301-.L9
	.byte	3,14,1,4,1,5,1,9
	.half	.L133-.L301
	.byte	3,116,1,7,9
	.half	.L58-.L133
	.byte	0,1,1
.L285:
	.sdecl	'.debug_ranges',debug,cluster('__StartUpSoftware')
	.sect	'.debug_ranges'
.L57:
	.word	-1,.L25,0,.L58-.L25,0,0
	.sdecl	'.debug_info',debug,cluster('__StartUpSoftware_Phase2')
	.sect	'.debug_info'
.L59:
	.word	340
	.half	3
	.word	.L60
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L62,.L61
	.byte	2
	.word	.L50
	.byte	3
	.byte	'__StartUpSoftware_Phase2',0,1,157,1,13,1,1
	.word	.L27,.L134,.L26
	.byte	4
	.word	.L27,.L134
	.byte	5
	.word	.L135,.L27,.L136
	.byte	6
	.word	.L137,.L138
	.byte	7
	.word	.L139,.L27,.L136
	.byte	0,5
	.word	.L135,.L136,.L140
	.byte	6
	.word	.L137,.L138
	.byte	7
	.word	.L139,.L136,.L140
	.byte	0,5
	.word	.L128,.L140,.L141
	.byte	6
	.word	.L130,.L142
	.byte	7
	.word	.L132,.L140,.L141
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('__StartUpSoftware_Phase2')
	.sect	'.debug_abbrev'
.L60:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11,0,49
	.byte	16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('__StartUpSoftware_Phase2')
	.sect	'.debug_line'
.L61:
	.word	.L303-.L302
.L302:
	.half	3
	.word	.L305-.L304
.L304:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L305:
	.byte	5,5,7,0,5,2
	.word	.L27
	.byte	3,159,1,1,4,2,9
	.half	.L306-.L27
	.byte	3,12,1,4,1,9
	.half	.L136-.L306
	.byte	3,116,1,4,2,9
	.half	.L307-.L136
	.byte	3,12,1,4,1,5,28,9
	.half	.L140-.L307
	.byte	3,124,1,4,2,5,5,9
	.half	.L308-.L140
	.byte	3,126,1,4,1,5,1,9
	.half	.L141-.L308
	.byte	3,3,1,7,9
	.half	.L63-.L141
	.byte	0,1,1
.L303:
	.sdecl	'.debug_ranges',debug,cluster('__StartUpSoftware_Phase2')
	.sect	'.debug_ranges'
.L62:
	.word	-1,.L27,0,.L63-.L27,0,0
	.sdecl	'.debug_info',debug,cluster('__StartUpSoftware_Phase3ApplicationResetPath')
	.sect	'.debug_info'
.L64:
	.word	517
	.half	3
	.word	.L65
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L67,.L66
	.byte	2
	.word	.L50
	.byte	3
	.byte	'__StartUpSoftware_Phase3ApplicationResetPath',0,1,180,1,13,1,1
	.word	.L35,.L143,.L34
	.byte	4
	.word	.L35,.L143
	.byte	5
	.word	.L144,.L145,.L146
	.byte	6
	.word	.L147,.L145,.L146
	.byte	0,5
	.word	.L148,.L146,.L149
	.byte	7
	.word	.L150,.L151
	.byte	7
	.word	.L152,.L153
	.byte	8
	.word	.L154,.L146,.L149
	.byte	9
	.byte	'k',0,2,252,3,19
	.word	.L126,.L155
	.byte	9
	.byte	'nxt_cxi_val',0,2,253,3,19
	.word	.L126,.L156
	.byte	9
	.byte	'prvCsa',0,2,254,3,19
	.word	.L157,.L158
	.byte	9
	.byte	'nxtCsa',0,2,255,3,19
	.word	.L157,.L159
	.byte	9
	.byte	'numOfCsa',0,2,128,4,19
	.word	.L126,.L160
	.byte	5
	.word	.L144,.L161,.L149
	.byte	6
	.word	.L147,.L161,.L149
	.byte	0,0,0,5
	.word	.L162,.L149,.L163
	.byte	6
	.word	.L164,.L149,.L163
	.byte	0,5
	.word	.L128,.L163,.L165
	.byte	7
	.word	.L130,.L166
	.byte	6
	.word	.L132,.L163,.L165
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('__StartUpSoftware_Phase3ApplicationResetPath')
	.sect	'.debug_abbrev'
.L65:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,0,49,16,17,1,18,1,0,0,7
	.byte	5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('__StartUpSoftware_Phase3ApplicationResetPath')
	.sect	'.debug_line'
.L66:
	.word	.L310-.L309
.L309:
	.half	3
	.word	.L312-.L311
.L311:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L312:
	.byte	5,5,7,0,5,2
	.word	.L35
	.byte	3,181,1,1,4,3,5,12,9
	.half	.L145-.L35
	.byte	3,73,1,4,2,5,31,9
	.half	.L146-.L145
	.byte	3,255,2,1,4,1,5,5,9
	.half	.L271-.L146
	.byte	3,184,125,1,4,2,5,56,9
	.half	.L313-.L271
	.byte	3,202,2,1,5,30,9
	.half	.L268-.L313
	.byte	3,2,1,5,53,9
	.half	.L17-.L268
	.byte	3,2,1,5,9,9
	.half	.L270-.L17
	.byte	3,3,1,5,13,7,9
	.half	.L314-.L270
	.byte	3,2,1,5,21,9
	.half	.L18-.L314
	.byte	3,4,1,5,28,9
	.half	.L19-.L18
	.byte	3,3,1,5,9,9
	.half	.L315-.L19
	.byte	1,5,13,7,9
	.half	.L316-.L315
	.byte	3,2,1,5,33,9
	.half	.L20-.L316
	.byte	3,112,1,5,17,3,19,1,5,16,9
	.half	.L317-.L20
	.byte	3,1,1,5,30,9
	.half	.L16-.L317
	.byte	3,108,1,5,15,7,9
	.half	.L318-.L16
	.byte	3,23,1,5,13,1,4,3,5,12,9
	.half	.L161-.L318
	.byte	3,230,124,1,9
	.half	.L149-.L161
	.byte	3,6,1,4,1,5,28,9
	.half	.L163-.L149
	.byte	3,51,1,4,3,5,5,9
	.half	.L319-.L163
	.byte	3,110,1,4,1,5,1,9
	.half	.L165-.L319
	.byte	3,19,1,7,9
	.half	.L68-.L165
	.byte	0,1,1
.L310:
	.sdecl	'.debug_ranges',debug,cluster('__StartUpSoftware_Phase3ApplicationResetPath')
	.sect	'.debug_ranges'
.L67:
	.word	-1,.L35,0,.L68-.L35,0,0
	.sdecl	'.debug_info',debug,cluster('__StartUpSoftware_Phase3PowerOnResetPath')
	.sect	'.debug_info'
.L69:
	.word	509
	.half	3
	.word	.L70
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L72,.L71
	.byte	2
	.word	.L50
	.byte	3
	.byte	'__StartUpSoftware_Phase3PowerOnResetPath',0,1,172,1,13,1,1
	.word	.L29,.L167,.L28
	.byte	4
	.word	.L29,.L167
	.byte	5
	.word	.L144,.L168,.L169
	.byte	6
	.word	.L147,.L168,.L169
	.byte	0,5
	.word	.L148,.L169,.L170
	.byte	7
	.word	.L150,.L171
	.byte	7
	.word	.L152,.L172
	.byte	8
	.word	.L154,.L173
	.byte	9
	.byte	'k',0,2,252,3,19
	.word	.L126,.L174
	.byte	9
	.byte	'nxt_cxi_val',0,2,253,3,19
	.word	.L126,.L175
	.byte	9
	.byte	'prvCsa',0,2,254,3,19
	.word	.L157,.L176
	.byte	9
	.byte	'nxtCsa',0,2,255,3,19
	.word	.L157,.L177
	.byte	9
	.byte	'numOfCsa',0,2,128,4,19
	.word	.L126,.L178
	.byte	5
	.word	.L144,.L179,.L170
	.byte	6
	.word	.L147,.L179,.L170
	.byte	0,0,0,5
	.word	.L162,.L170,.L180
	.byte	6
	.word	.L164,.L170,.L180
	.byte	0,5
	.word	.L128,.L180,.L181
	.byte	7
	.word	.L130,.L182
	.byte	6
	.word	.L132,.L180,.L181
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('__StartUpSoftware_Phase3PowerOnResetPath')
	.sect	'.debug_abbrev'
.L70:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,0,49,16,17,1,18,1,0,0,7
	.byte	5,0,49,16,2,6,0,0,8,11,1,49,16,85,6,0,0,9,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('__StartUpSoftware_Phase3PowerOnResetPath')
	.sect	'.debug_line'
.L71:
	.word	.L321-.L320
.L320:
	.half	3
	.word	.L323-.L322
.L322:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L323:
	.byte	5,5,7,0,5,2
	.word	.L29
	.byte	3,173,1,1,4,3,5,12,9
	.half	.L168-.L29
	.byte	3,81,1,4,2,5,31,9
	.half	.L169-.L168
	.byte	3,255,2,1,4,1,5,5,9
	.half	.L260-.L169
	.byte	3,176,125,1,4,2,5,56,9
	.half	.L324-.L260
	.byte	3,210,2,1,5,30,9
	.half	.L261-.L324
	.byte	3,2,1,5,53,9
	.half	.L12-.L261
	.byte	3,2,1,5,9,9
	.half	.L325-.L12
	.byte	3,3,1,5,13,7,9
	.half	.L266-.L325
	.byte	3,2,1,5,21,9
	.half	.L13-.L266
	.byte	3,4,1,5,28,9
	.half	.L14-.L13
	.byte	3,3,1,5,9,9
	.half	.L326-.L14
	.byte	1,5,13,7,9
	.half	.L327-.L326
	.byte	3,2,1,5,33,9
	.half	.L15-.L327
	.byte	3,112,1,5,17,3,19,1,5,16,9
	.half	.L328-.L15
	.byte	3,1,1,5,30,9
	.half	.L11-.L328
	.byte	3,108,1,5,15,7,9
	.half	.L329-.L11
	.byte	3,23,1,5,13,1,4,3,5,12,9
	.half	.L179-.L329
	.byte	3,230,124,1,9
	.half	.L170-.L179
	.byte	3,6,1,4,1,5,28,9
	.half	.L180-.L170
	.byte	3,43,1,4,3,5,5,9
	.half	.L330-.L180
	.byte	3,118,1,4,1,5,1,9
	.half	.L181-.L330
	.byte	3,11,1,7,9
	.half	.L73-.L181
	.byte	0,1,1
.L321:
	.sdecl	'.debug_ranges',debug,cluster('__StartUpSoftware_Phase3PowerOnResetPath')
	.sect	'.debug_ranges'
.L72:
	.word	-1,.L29,0,.L73-.L29,0,0
.L173:
	.word	-1,.L29,.L169-.L29,.L170-.L29,-1,.L31,0,.L113-.L31,-1,.L33,0,.L103-.L33,0,0
	.sdecl	'.debug_info',debug,cluster('__StartUpSoftware_Phase4')
	.sect	'.debug_info'
.L74:
	.word	429
	.half	3
	.word	.L75
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L77,.L76
	.byte	2
	.word	.L50
	.byte	3
	.byte	'__StartUpSoftware_Phase4',0,1,188,1,13,1,1
	.word	.L37,.L183,.L36
	.byte	4
	.word	.L37,.L183
	.byte	4
	.word	.L37,.L184
	.byte	5
	.word	.L185,.L37,.L186
	.byte	6
	.word	.L187,.L188
	.byte	7
	.word	.L189,.L190
	.byte	8
	.byte	'password',0,2,203,2,20
	.word	.L195,.L196
	.byte	0,0,5
	.word	.L185,.L191,.L192
	.byte	6
	.word	.L187,.L188
	.byte	0,5
	.word	.L185,.L193,.L194
	.byte	6
	.word	.L187,.L188
	.byte	0,5
	.word	.L197,.L194,.L184
	.byte	9
	.word	.L198,.L194,.L184
	.byte	8
	.byte	'password',0,2,217,2,20
	.word	.L195,.L199
	.byte	0,0,0,5
	.word	.L128,.L21,.L200
	.byte	6
	.word	.L130,.L201
	.byte	10
	.word	.L132,.L21,.L200
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('__StartUpSoftware_Phase4')
	.sect	'.debug_abbrev'
.L75:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11,1,49
	.byte	16,85,6,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,9,11,1,49,16,17,1,18,1,0,0,10,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('__StartUpSoftware_Phase4')
	.sect	'.debug_line'
.L76:
	.word	.L332-.L331
.L331:
	.half	3
	.word	.L334-.L333
.L333:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L334:
	.byte	4,2,5,33,7,0,5,2
	.word	.L37
	.byte	3,207,2,1,4,1,5,54,9
	.half	.L186-.L37
	.byte	3,249,126,1,4,2,5,33,9
	.half	.L191-.L186
	.byte	3,135,1,1,4,1,5,54,9
	.half	.L192-.L191
	.byte	3,249,126,1,4,2,5,14,9
	.half	.L193-.L192
	.byte	3,136,1,1,5,33,3,14,1,5,14,9
	.half	.L335-.L193
	.byte	3,1,1,4,1,5,80,3,229,126,1,5,83,9
	.half	.L273-.L335
	.byte	3,1,1,5,5,9
	.half	.L184-.L273
	.byte	3,8,1,5,28,9
	.half	.L21-.L184
	.byte	3,5,1,4,3,5,5,9
	.half	.L336-.L21
	.byte	3,83,1,4,1,5,1,9
	.half	.L200-.L336
	.byte	3,46,1,7,9
	.half	.L78-.L200
	.byte	0,1,1
.L332:
	.sdecl	'.debug_ranges',debug,cluster('__StartUpSoftware_Phase4')
	.sect	'.debug_ranges'
.L77:
	.word	-1,.L37,0,.L78-.L37,0,0
.L190:
	.word	-1,.L37,0,.L186-.L37,.L191-.L37,.L192-.L37,.L193-.L37,.L194-.L37,0,0
	.sdecl	'.debug_info',debug,cluster('__StartUpSoftware_Phase5')
	.sect	'.debug_info'
.L79:
	.word	268
	.half	3
	.word	.L80
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L82,.L81
	.byte	2
	.word	.L50
	.byte	3
	.byte	'__StartUpSoftware_Phase5',0,1,215,1,13,1,1
	.word	.L39,.L202,.L38
	.byte	4
	.word	.L39,.L202
	.byte	5
	.word	.L128,.L39,.L203
	.byte	6
	.word	.L130,.L204
	.byte	7
	.word	.L132,.L39,.L203
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('__StartUpSoftware_Phase5')
	.sect	'.debug_abbrev'
.L80:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11,0,49
	.byte	16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('__StartUpSoftware_Phase5')
	.sect	'.debug_line'
.L81:
	.word	.L338-.L337
.L337:
	.half	3
	.word	.L340-.L339
.L339:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L340:
	.byte	5,28,7,0,5,2
	.word	.L39
	.byte	3,219,1,1,4,2,5,5,9
	.half	.L341-.L39
	.byte	3,74,1,4,1,5,1,9
	.half	.L203-.L341
	.byte	3,55,1,7,9
	.half	.L83-.L203
	.byte	0,1,1
.L338:
	.sdecl	'.debug_ranges',debug,cluster('__StartUpSoftware_Phase5')
	.sect	'.debug_ranges'
.L82:
	.word	-1,.L39,0,.L83-.L39,0,0
	.sdecl	'.debug_info',debug,cluster('__StartUpSoftware_Phase6')
	.sect	'.debug_info'
.L84:
	.word	268
	.half	3
	.word	.L85
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L87,.L86
	.byte	2
	.word	.L50
	.byte	3
	.byte	'__StartUpSoftware_Phase6',0,1,224,1,13,1,1
	.word	.L41,.L205,.L40
	.byte	4
	.word	.L41,.L205
	.byte	5
	.word	.L128,.L206,.L207
	.byte	6
	.word	.L130,.L208
	.byte	7
	.word	.L132,.L206,.L207
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('__StartUpSoftware_Phase6')
	.sect	'.debug_abbrev'
.L85:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11,0,49
	.byte	16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('__StartUpSoftware_Phase6')
	.sect	'.debug_line'
.L86:
	.word	.L343-.L342
.L342:
	.half	3
	.word	.L345-.L344
.L344:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L345:
	.byte	5,24,7,0,5,2
	.word	.L41
	.byte	3,227,1,1,5,51,9
	.half	.L346-.L41
	.byte	1,5,37,9
	.half	.L347-.L346
	.byte	1,5,24,9
	.half	.L348-.L347
	.byte	3,4,1,5,51,9
	.half	.L349-.L348
	.byte	1,5,37,9
	.half	.L350-.L349
	.byte	1,5,24,9
	.half	.L351-.L350
	.byte	3,4,1,5,51,9
	.half	.L352-.L351
	.byte	1,5,37,9
	.half	.L353-.L352
	.byte	1,5,24,9
	.half	.L354-.L353
	.byte	3,4,1,5,51,9
	.half	.L355-.L354
	.byte	1,5,37,9
	.half	.L356-.L355
	.byte	1,5,28,9
	.half	.L206-.L356
	.byte	3,11,1,4,2,5,5,9
	.half	.L357-.L206
	.byte	3,171,127,1,4,1,5,1,9
	.half	.L207-.L357
	.byte	3,214,0,1,7,9
	.half	.L88-.L207
	.byte	0,1,1
.L343:
	.sdecl	'.debug_ranges',debug,cluster('__StartUpSoftware_Phase6')
	.sect	'.debug_ranges'
.L87:
	.word	-1,.L41,0,.L88-.L41,0,0
	.sdecl	'.debug_info',debug,cluster('__Core0_start')
	.sect	'.debug_info'
.L89:
	.word	660
	.half	3
	.word	.L90
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L92,.L91
	.byte	2
	.word	.L50
	.byte	3
	.byte	'__Core0_start',0,1,255,1,13,1,1
	.word	.L43,.L209,.L42
	.byte	4
	.word	.L43,.L209
	.byte	5
	.word	.L185,.L43,.L210
	.byte	6
	.word	.L187,.L211
	.byte	7
	.word	.L189,.L212
	.byte	8
	.byte	'password',0,2,203,2,20
	.word	.L195,.L219
	.byte	0,0,5
	.word	.L197,.L210,.L213
	.byte	7
	.word	.L198,.L220
	.byte	8
	.byte	'password',0,2,217,2,20
	.word	.L195,.L226
	.byte	0,0,5
	.word	.L185,.L213,.L214
	.byte	6
	.word	.L187,.L211
	.byte	0,9
	.word	.L197,.L214,.L221
	.byte	5
	.word	.L227,.L221,.L228
	.byte	6
	.word	.L229,.L230
	.byte	6
	.word	.L231,.L232
	.byte	10
	.word	.L233,.L234
	.byte	0,4
	.word	.L228,.L235
	.byte	8
	.byte	'pcon0',0,1,138,2,23
	.word	.L236,.L237
	.byte	5
	.word	.L162,.L238,.L235
	.byte	11
	.word	.L164,.L238,.L235
	.byte	0,0,4
	.word	.L235,.L239
	.byte	8
	.byte	'dcon0',0,1,146,2,23
	.word	.L240,.L241
	.byte	5
	.word	.L162,.L242,.L239
	.byte	11
	.word	.L164,.L242,.L239
	.byte	0,0,5
	.word	.L243,.L244,.L245
	.byte	6
	.word	.L246,.L247
	.byte	6
	.word	.L248,.L249
	.byte	10
	.word	.L250,.L251
	.byte	0,5
	.word	.L185,.L215,.L216
	.byte	6
	.word	.L187,.L211
	.byte	0,9
	.word	.L197,.L222,.L223
	.byte	9
	.word	.L197,.L224,.L225
	.byte	5
	.word	.L185,.L217,.L218
	.byte	6
	.word	.L187,.L211
	.byte	0,5
	.word	.L128,.L218,.L252
	.byte	6
	.word	.L130,.L253
	.byte	11
	.word	.L132,.L218,.L252
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('__Core0_start')
	.sect	'.debug_abbrev'
.L90:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11,1,49
	.byte	16,85,6,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,9,29,0,49,16,17,1,18,1,0,0,10,11,0,49,16,85,6,0
	.byte	0,11,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('__Core0_start')
	.sect	'.debug_line'
.L91:
	.word	.L359-.L358
.L358:
	.half	3
	.word	.L361-.L360
.L360:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L361:
	.byte	4,2,5,33,7,0,5,2
	.word	.L43
	.byte	3,207,2,1,9
	.half	.L210-.L43
	.byte	3,15,1,9
	.half	.L213-.L210
	.byte	3,113,1,5,14,9
	.half	.L362-.L213
	.byte	3,1,1,5,33,3,14,1,5,14,9
	.half	.L363-.L362
	.byte	3,1,1,5,25,3,8,1,5,5,9
	.half	.L221-.L363
	.byte	1,5,52,7,9
	.half	.L364-.L221
	.byte	3,5,1,5,59,9
	.half	.L365-.L364
	.byte	3,1,1,5,26,9
	.half	.L274-.L365
	.byte	3,125,1,5,52,9
	.half	.L22-.L274
	.byte	3,2,1,5,23,3,126,1,5,5,9
	.half	.L366-.L22
	.byte	3,125,1,5,48,9
	.half	.L367-.L366
	.byte	3,12,1,5,55,3,1,1,5,60,9
	.half	.L368-.L367
	.byte	1,5,79,9
	.half	.L369-.L368
	.byte	3,127,1,5,22,3,126,1,5,19,9
	.half	.L370-.L369
	.byte	3,6,1,4,1,5,23,9
	.half	.L228-.L370
	.byte	3,147,127,1,9
	.half	.L275-.L228
	.byte	3,1,1,5,9,9
	.half	.L276-.L275
	.byte	3,1,1,4,3,5,12,9
	.half	.L238-.L276
	.byte	3,248,126,1,4,1,5,23,9
	.half	.L235-.L238
	.byte	3,143,1,1,5,9,9
	.half	.L277-.L235
	.byte	3,1,1,4,3,5,12,9
	.half	.L242-.L277
	.byte	3,240,126,1,4,1,5,5,9
	.half	.L239-.L242
	.byte	3,149,1,1,9
	.half	.L371-.L239
	.byte	3,3,1,9
	.half	.L372-.L371
	.byte	3,1,1,9
	.half	.L373-.L372
	.byte	3,3,1,9
	.half	.L374-.L373
	.byte	3,2,1,9
	.half	.L375-.L374
	.byte	3,2,1,4,2,5,25,9
	.half	.L244-.L375
	.byte	3,239,0,1,5,5,9
	.half	.L376-.L244
	.byte	1,5,52,7,9
	.half	.L377-.L376
	.byte	3,5,1,5,59,9
	.half	.L378-.L377
	.byte	3,1,1,5,48,9
	.half	.L23-.L378
	.byte	3,6,1,5,55,9
	.half	.L379-.L23
	.byte	3,1,1,5,19,9
	.half	.L380-.L379
	.byte	3,3,1,4,1,5,50,9
	.half	.L245-.L380
	.byte	3,138,127,1,5,76,9
	.half	.L215-.L245
	.byte	3,85,1,5,50,9
	.half	.L216-.L215
	.byte	3,43,1,5,76,9
	.half	.L381-.L216
	.byte	3,85,1,5,79,9
	.half	.L222-.L381
	.byte	3,1,1,5,19,9
	.half	.L223-.L222
	.byte	3,46,1,5,79,9
	.half	.L224-.L223
	.byte	3,82,1,5,76,9
	.half	.L225-.L224
	.byte	3,127,1,5,28,9
	.half	.L218-.L225
	.byte	3,59,1,4,3,5,5,9
	.half	.L382-.L218
	.byte	3,232,126,1,4,1,5,1,9
	.half	.L252-.L382
	.byte	3,153,1,1,7,9
	.half	.L93-.L252
	.byte	0,1,1
.L359:
	.sdecl	'.debug_ranges',debug,cluster('__Core0_start')
	.sect	'.debug_ranges'
.L92:
	.word	-1,.L43,0,.L93-.L43,0,0
.L212:
	.word	-1,.L43,0,.L210-.L43,.L213-.L43,.L214-.L43,.L215-.L43,.L216-.L43,.L217-.L43,.L218-.L43,0,0
.L220:
	.word	-1,.L43,.L210-.L43,.L213-.L43,.L214-.L43,.L221-.L43,.L222-.L43,.L223-.L43,.L224-.L43,.L225-.L43,0,0
.L234:
	.word	-1,.L43,.L221-.L43,.L228-.L43,-1,.L45,0,.L118-.L45,0,0
.L251:
	.word	-1,.L43,.L244-.L43,.L245-.L43,-1,.L47,0,.L108-.L47,0,0
	.sdecl	'.debug_info',debug,cluster('_START')
	.sect	'.debug_info'
.L94:
	.word	251
	.half	3
	.word	.L95
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L97,.L96
	.byte	2
	.word	.L50
	.byte	3
	.byte	'_START',0,1,212,2,6,1,1,1
	.word	.L49,.L254,.L48
	.byte	4
	.word	.L49,.L254
	.byte	5
	.word	.L128,.L49,.L255
	.byte	6
	.word	.L130,.L256
	.byte	7
	.word	.L132,.L49,.L255
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('_START')
	.sect	'.debug_abbrev'
.L95:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11
	.byte	0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('_START')
	.sect	'.debug_line'
.L96:
	.word	.L384-.L383
.L383:
	.half	3
	.word	.L386-.L385
.L385:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L386:
	.byte	5,28,7,0,5,2
	.word	.L49
	.byte	3,213,2,1,4,2,5,5,9
	.half	.L387-.L49
	.byte	3,208,126,1,4,1,5,1,9
	.half	.L255-.L387
	.byte	3,177,1,1,7,9
	.half	.L98-.L255
	.byte	0,1,1
.L384:
	.sdecl	'.debug_ranges',debug,cluster('_START')
	.sect	'.debug_ranges'
.L97:
	.word	-1,.L49,0,.L98-.L49,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_3')
	.sect	'.debug_info'
.L99:
	.word	206
	.half	3
	.word	.L100
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L102,.L101
	.byte	2
	.word	.L50
	.byte	3
	.byte	'.cocofun_3',0,1,172,1,13,1
	.word	.L33,.L103,.L32
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_3')
	.sect	'.debug_abbrev'
.L100:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_3')
	.sect	'.debug_line'
.L101:
	.word	.L389-.L388
.L388:
	.half	3
	.word	.L391-.L390
.L390:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L391:
	.byte	4,2,5,53,7,0,5,2
	.word	.L33
	.byte	3,131,4,1,5,91,9
	.half	.L392-.L33
	.byte	1,5,60,9
	.half	.L393-.L392
	.byte	3,1,1,9
	.half	.L394-.L393
	.byte	3,127,1,5,99,9
	.half	.L265-.L394
	.byte	1,9
	.half	.L103-.L265
	.byte	0,1,1,4,2,5,53,0,5,2
	.word	.L33
	.byte	3,131,4,1,5,91,9
	.half	.L392-.L33
	.byte	1,5,60,9
	.half	.L393-.L392
	.byte	3,1,1,9
	.half	.L394-.L393
	.byte	3,127,1,5,99,9
	.half	.L265-.L394
	.byte	1,9
	.half	.L103-.L265
	.byte	0,1,1
.L389:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_3')
	.sect	'.debug_ranges'
.L102:
	.word	-1,.L33,0,.L103-.L33,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_4')
	.sect	'.debug_info'
.L104:
	.word	206
	.half	3
	.word	.L105
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L107,.L106
	.byte	2
	.word	.L50
	.byte	3
	.byte	'.cocofun_4',0,1,255,1,13,1
	.word	.L47,.L108,.L46
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_4')
	.sect	'.debug_abbrev'
.L105:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_4')
	.sect	'.debug_line'
.L106:
	.word	.L396-.L395
.L395:
	.half	3
	.word	.L398-.L397
.L397:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L398:
	.byte	4,2,5,59,7,0,5,2
	.word	.L47
	.byte	3,153,3,1,5,26,9
	.half	.L279-.L47
	.byte	3,125,1,9
	.half	.L108-.L279
	.byte	0,1,1,4,2,5,59,0,5,2
	.word	.L47
	.byte	3,153,3,1,5,22,9
	.half	.L279-.L47
	.byte	3,4,1,5,26,9
	.half	.L399-.L279
	.byte	3,121,1,7,9
	.half	.L108-.L399
	.byte	0,1,1
.L396:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_4')
	.sect	'.debug_ranges'
.L107:
	.word	-1,.L47,0,.L108-.L47,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_5')
	.sect	'.debug_info'
.L109:
	.word	206
	.half	3
	.word	.L110
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L112,.L111
	.byte	2
	.word	.L50
	.byte	3
	.byte	'.cocofun_5',0,1,172,1,13,1
	.word	.L31,.L113,.L30
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_5')
	.sect	'.debug_abbrev'
.L110:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_5')
	.sect	'.debug_line'
.L111:
	.word	.L401-.L400
.L400:
	.half	3
	.word	.L403-.L402
.L402:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L403:
	.byte	4,2,5,56,7,0,5,2
	.word	.L31
	.byte	3,255,3,1,5,12,9
	.half	.L263-.L31
	.byte	3,2,1,5,91,9
	.half	.L264-.L263
	.byte	3,2,1,9
	.half	.L113-.L264
	.byte	0,1,1,4,2,5,56,0,5,2
	.word	.L31
	.byte	3,255,3,1,5,12,9
	.half	.L263-.L31
	.byte	3,2,1,5,91,9
	.half	.L264-.L263
	.byte	3,2,1,9
	.half	.L113-.L264
	.byte	0,1,1
.L401:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_5')
	.sect	'.debug_ranges'
.L112:
	.word	-1,.L31,0,.L113-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_6')
	.sect	'.debug_info'
.L114:
	.word	206
	.half	3
	.word	.L115
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L117,.L116
	.byte	2
	.word	.L50
	.byte	3
	.byte	'.cocofun_6',0,1,255,1,13,1
	.word	.L45,.L118,.L44
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_6')
	.sect	'.debug_abbrev'
.L115:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_6')
	.sect	'.debug_line'
.L116:
	.word	.L405-.L404
.L404:
	.half	3
	.word	.L407-.L406
.L406:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\Ifx_Ssw_Infra.h',0,0,0,0,0
.L407:
	.byte	4,2,5,59,7,0,5,2
	.word	.L45
	.byte	3,237,2,1,5,64,9
	.half	.L408-.L45
	.byte	1,5,83,9
	.half	.L409-.L408
	.byte	3,127,1,9
	.half	.L118-.L409
	.byte	0,1,1,4,2,5,59,0,5,2
	.word	.L45
	.byte	3,153,3,1,5,64,9
	.half	.L408-.L45
	.byte	1,5,83,9
	.half	.L409-.L408
	.byte	3,127,1,3,84,1,7,9
	.half	.L118-.L409
	.byte	0,1,1,4,2,5,55,0,5,2
	.word	.L45
	.byte	3,160,3,1,5,60,9
	.half	.L408-.L45
	.byte	1,5,79,9
	.half	.L409-.L408
	.byte	3,127,1,5,83,3,77,1,7,9
	.half	.L118-.L409
	.byte	0,1,1
.L405:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_6')
	.sect	'.debug_ranges'
.L117:
	.word	-1,.L45,0,.L118-.L45,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_3')
	.sect	'.debug_loc'
.L32:
	.word	-1,.L33,0,.L103-.L33
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_4')
	.sect	'.debug_loc'
.L46:
	.word	-1,.L47,0,.L108-.L47
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_5')
	.sect	'.debug_loc'
.L30:
	.word	-1,.L31,0,.L113-.L31
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_6')
	.sect	'.debug_loc'
.L44:
	.word	-1,.L45,0,.L118-.L45
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('_START')
	.sect	'.debug_loc'
.L48:
	.word	-1,.L49,0,.L254-.L49
	.half	2
	.byte	138,0
	.word	0,0
.L256:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('__Core0_start')
	.sect	'.debug_loc'
.L42:
	.word	-1,.L43,0,.L209-.L43
	.half	2
	.byte	138,0
	.word	0,0
.L241:
	.word	-1,.L43,.L277-.L43,.L278-.L43
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L253:
	.word	0,0
.L219:
	.word	-1,.L43,.L214-.L43,.L274-.L43
	.half	1
	.byte	88
	.word	.L45-.L43,.L118-.L43
	.half	1
	.byte	88
	.word	.L279-.L43,.L108-.L43
	.half	1
	.byte	88
	.word	.L22-.L43,.L209-.L43
	.half	1
	.byte	88
	.word	.L216-.L43,.L222-.L43
	.half	1
	.byte	84
	.word	0,0
.L226:
	.word	-1,.L43,.L221-.L43,.L274-.L43
	.half	1
	.byte	89
	.word	.L45-.L43,.L118-.L43
	.half	1
	.byte	89
	.word	.L279-.L43,.L108-.L43
	.half	1
	.byte	89
	.word	.L22-.L43,.L209-.L43
	.half	1
	.byte	89
	.word	0,0
.L232:
	.word	0,0
.L249:
	.word	0,0
.L237:
	.word	-1,.L43,.L275-.L43,.L276-.L43
	.half	5
	.byte	144,32,157,32,0
	.word	.L235-.L43,.L277-.L43
	.half	5
	.byte	144,32,157,32,0
	.word	.L45-.L43,.L118-.L43
	.half	1
	.byte	81
	.word	.L279-.L43,.L108-.L43
	.half	1
	.byte	81
	.word	.L276-.L43,.L222-.L43
	.half	1
	.byte	81
	.word	0,0
.L211:
	.word	0,0
.L230:
	.word	0,0
.L247:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('__StartUpSoftware')
	.sect	'.debug_loc'
.L24:
	.word	-1,.L25,0,.L119-.L25
	.half	2
	.byte	138,0
	.word	0,0
.L131:
	.word	0,0
.L125:
	.word	-1,.L25,.L8-.L25,.L119-.L25
	.half	1
	.byte	95
	.word	0,0
.L127:
	.word	-1,.L25,.L257-.L25,.L258-.L25
	.half	5
	.byte	144,32,157,32,0
	.word	.L259-.L25,.L3-.L25
	.half	1
	.byte	95
	.word	.L3-.L25,.L5-.L25
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('__StartUpSoftware_Phase2')
	.sect	'.debug_loc'
.L26:
	.word	-1,.L27,0,.L134-.L27
	.half	2
	.byte	138,0
	.word	0,0
.L142:
	.word	0,0
.L138:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('__StartUpSoftware_Phase3ApplicationResetPath')
	.sect	'.debug_loc'
.L34:
	.word	-1,.L35,0,.L143-.L35
	.half	2
	.byte	138,0
	.word	0,0
.L151:
	.word	0,0
.L153:
	.word	0,0
.L166:
	.word	0,0
.L155:
	.word	-1,.L35,.L264-.L35,.L113-.L35
	.half	1
	.byte	81
	.word	.L33-.L35,.L103-.L35
	.half	1
	.byte	81
	.word	.L268-.L35,.L143-.L35
	.half	1
	.byte	81
	.word	0,0
.L160:
	.word	-1,.L35,.L263-.L35,.L113-.L35
	.half	5
	.byte	144,32,157,32,0
	.word	.L33-.L35,.L103-.L35
	.half	5
	.byte	144,32,157,32,0
	.word	.L268-.L35,.L143-.L35
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L159:
	.word	-1,.L35,.L31-.L35,.L113-.L35
	.half	1
	.byte	98
	.word	.L33-.L35,.L103-.L35
	.half	1
	.byte	98
	.word	.L269-.L35,.L143-.L35
	.half	1
	.byte	98
	.word	0,0
.L156:
	.word	-1,.L35,.L265-.L35,.L103-.L35
	.half	1
	.byte	82
	.word	.L270-.L35,.L16-.L35
	.half	1
	.byte	82
	.word	0,0
.L158:
	.word	-1,.L35,.L31-.L35,.L113-.L35
	.half	1
	.byte	111
	.word	.L33-.L35,.L103-.L35
	.half	1
	.byte	111
	.word	.L271-.L35,.L272-.L35
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('__StartUpSoftware_Phase3PowerOnResetPath')
	.sect	'.debug_loc'
.L28:
	.word	-1,.L29,0,.L167-.L29
	.half	2
	.byte	138,0
	.word	0,0
.L171:
	.word	0,0
.L172:
	.word	0,0
.L182:
	.word	0,0
.L174:
	.word	-1,.L29,.L264-.L29,.L113-.L29
	.half	1
	.byte	81
	.word	.L33-.L29,.L103-.L29
	.half	1
	.byte	81
	.word	.L266-.L29,.L167-.L29
	.half	1
	.byte	81
	.word	0,0
.L178:
	.word	-1,.L29,.L263-.L29,.L113-.L29
	.half	5
	.byte	144,32,157,32,0
	.word	.L33-.L29,.L103-.L29
	.half	5
	.byte	144,32,157,32,0
	.word	.L266-.L29,.L167-.L29
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L177:
	.word	-1,.L29,.L262-.L29,.L261-.L29
	.half	1
	.byte	98
	.word	.L31-.L29,.L113-.L29
	.half	1
	.byte	98
	.word	.L33-.L29,.L103-.L29
	.half	1
	.byte	98
	.word	.L266-.L29,.L167-.L29
	.half	1
	.byte	98
	.word	0,0
.L175:
	.word	-1,.L29,.L265-.L29,.L103-.L29
	.half	1
	.byte	82
	.word	.L266-.L29,.L11-.L29
	.half	1
	.byte	82
	.word	0,0
.L176:
	.word	-1,.L29,.L260-.L29,.L261-.L29
	.half	1
	.byte	111
	.word	.L31-.L29,.L113-.L29
	.half	1
	.byte	111
	.word	.L33-.L29,.L103-.L29
	.half	1
	.byte	111
	.word	.L266-.L29,.L267-.L29
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('__StartUpSoftware_Phase4')
	.sect	'.debug_loc'
.L36:
	.word	-1,.L37,0,.L183-.L37
	.half	2
	.byte	138,0
	.word	0,0
.L201:
	.word	0,0
.L196:
	.word	-1,.L37,.L194-.L37,.L273-.L37
	.half	1
	.byte	84
	.word	0,0
.L199:
	.word	-1,.L37,.L273-.L37,.L183-.L37
	.half	1
	.byte	95
	.word	0,0
.L188:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('__StartUpSoftware_Phase5')
	.sect	'.debug_loc'
.L38:
	.word	-1,.L39,0,.L202-.L39
	.half	2
	.byte	138,0
	.word	0,0
.L204:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('__StartUpSoftware_Phase6')
	.sect	'.debug_loc'
.L40:
	.word	-1,.L41,0,.L205-.L41
	.half	2
	.byte	138,0
	.word	0,0
.L208:
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L410:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('__StartUpSoftware')
	.sect	'.debug_frame'
	.word	24
	.word	.L410,.L25,.L119-.L25
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('__StartUpSoftware_Phase2')
	.sect	'.debug_frame'
	.word	24
	.word	.L410,.L27,.L134-.L27
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('__StartUpSoftware_Phase3PowerOnResetPath')
	.sect	'.debug_frame'
	.word	20
	.word	.L410,.L29,.L167-.L29
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('__StartUpSoftware_Phase3ApplicationResetPath')
	.sect	'.debug_frame'
	.word	20
	.word	.L410,.L35,.L143-.L35
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('__StartUpSoftware_Phase4')
	.sect	'.debug_frame'
	.word	12
	.word	.L410,.L37,.L183-.L37
	.sdecl	'.debug_frame',debug,cluster('__StartUpSoftware_Phase5')
	.sect	'.debug_frame'
	.word	24
	.word	.L410,.L39,.L202-.L39
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('__StartUpSoftware_Phase6')
	.sect	'.debug_frame'
	.word	12
	.word	.L410,.L41,.L205-.L41
	.sdecl	'.debug_frame',debug,cluster('__Core0_start')
	.sect	'.debug_frame'
	.word	12
	.word	.L410,.L43,.L209-.L43
	.sdecl	'.debug_frame',debug,cluster('_START')
	.sect	'.debug_frame'
	.word	24
	.word	.L410,.L49,.L254-.L49
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L411:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_5')
	.sect	'.debug_frame'
	.word	24
	.word	.L411,.L31,.L113-.L31
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_3')
	.sect	'.debug_frame'
	.word	24
	.word	.L411,.L33,.L103-.L33
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_6')
	.sect	'.debug_frame'
	.word	24
	.word	.L411,.L45,.L118-.L45
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_4')
	.sect	'.debug_frame'
	.word	24
	.word	.L411,.L47,.L108-.L47
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   344  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   345  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   346  /* reset the sections defined above, to normal region */
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   347  #if defined(__HIGHTEC__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   348  #pragma section
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   349  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   350  #if defined(__TASKING__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   351  #pragma protect restore
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   352  #pragma section code restore
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   353  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   354  #if defined(__DCC__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   355  #pragma section CODE
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   356  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   357  #if defined(__ghs__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   358  #pragma ghs section text=default
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   359  #endif
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   360  
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   361  /*Restore the options to command line provided ones*/
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   362  #if defined(__HIGHTEC__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   363  #pragma GCC reset_options
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   364  #elif defined(__TASKING__)
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   365  #pragma endoptimize
; ..\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_Tc0.c	   366  #endif

	; Module end
