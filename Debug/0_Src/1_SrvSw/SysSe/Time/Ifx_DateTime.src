	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\1_SrvSw\\SysSe\\Time\\.Ifx_DateTime.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include\\libc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.src ..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c'

	
$TC162
	.sdecl	'.zrodata.Bsp..2.cnt',data,rom
	.sect	'.zrodata.Bsp..2.cnt'
	.align	4
.2.cnt:	.type	object
	.size	.2.cnt,8
	.word	-1,2147483647
	
	.sdecl	'.text.Ifx_DateTime.DateTime_get',code,cluster('DateTime_get')
	.sect	'.text.Ifx_DateTime.DateTime_get'
	.align	2
	
	.global	DateTime_get

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	     1  /**
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	     2   * \file Ifx_DateTime.c
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	     3   * \brief Date and time functions.
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	     4   *
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	     5   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	     6   *
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	     7   * $Date: 2014-02-27 20:08:37 GMT$
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	     8   *
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    10   *
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    15   *
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    17   *
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    23   * do so, all subject to the following:
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    24   *
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    30   * language processor.
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    31   *
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    39   *
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    40   */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    41  
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    42  #include "Ifx_DateTime.h"
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    43  #include "SysSe/Bsp/Bsp.h"
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    44  
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    45  /******************************************************************************/
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    46  /*                           Macros                                           */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    47  /******************************************************************************/
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    48  #define TIMER_COUNT       (11)                                      /**< \internal \brief number of timer values defined */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    49  #define TIMER_INDEX_10NS  (0)                                       /**< \internal \brief Index of the time value 10ns*/
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    50  #define TIMER_INDEX_100NS (1)                                       /**< \internal \brief Index of the time value 100ns*/
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    51  #define TIMER_INDEX_1US   (2)                                       /**< \internal \brief Index of the time value 1us*/
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    52  #define TIMER_INDEX_10US  (3)                                       /**< \internal \brief Index of the time value 10us*/
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    53  #define TIMER_INDEX_100US (4)                                       /**< \internal \brief Index of the time value 100us*/
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    54  #define TIMER_INDEX_1MS   (5)                                       /**< \internal \brief Index of the time value 1ms*/
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    55  #define TIMER_INDEX_10MS  (6)                                       /**< \internal \brief Index of the time value 10ms*/
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    56  #define TIMER_INDEX_100MS (7)                                       /**< \internal \brief Index of the time value 100ms*/
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    57  #define TIMER_INDEX_1S    (8)                                       /**< \internal \brief Index of the time value 1s*/
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    58  #define TIMER_INDEX_10S   (9)                                       /**< \internal \brief Index of the time value 10s*/
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    59  #define TIMER_INDEX_100S  (10)                                      /**< \internal \brief Index of the time value 100s*/
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    60  
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    61  
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    62  #define TimeConst_0s    ((Ifx_TickTime)0)                           /**< \brief time constant equal to 1s */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    63  #define TimeConst_10ns  (TimeConst[TIMER_INDEX_10NS])               /**< \brief time constant equal to 10ns */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    64  #define TimeConst_100ns (TimeConst[TIMER_INDEX_100NS])              /**< \brief time constant equal to 100ns */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    65  #define TimeConst_1us   (TimeConst[TIMER_INDEX_1US])                /**< \brief time constant equal to 1us */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    66  #define TimeConst_10us  (TimeConst[TIMER_INDEX_10US])               /**< \brief time constant equal to 10us */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    67  #define TimeConst_100us (TimeConst[TIMER_INDEX_100US])              /**< \brief time constant equal to 100us */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    68  #define TimeConst_1ms   (TimeConst[TIMER_INDEX_1MS])                /**< \brief time constant equal to 1ms */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    69  #define TimeConst_10ms  (TimeConst[TIMER_INDEX_10MS])               /**< \brief time constant equal to 10ms */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    70  #define TimeConst_100ms (TimeConst[TIMER_INDEX_100MS])              /**< \brief time constant equal to 100ms */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    71  #define TimeConst_1s    (TimeConst[TIMER_INDEX_1S])                 /**< \brief time constant equal to 1s */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    72  #define TimeConst_10s   (TimeConst[TIMER_INDEX_10S])                /**< \brief time constant equal to 10s */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    73  #define TimeConst_100s  (TimeConst[TIMER_INDEX_100S])               /**< \brief time constant equal to 100s */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    74  
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    75  IFX_STATIC Ifx_TickTime TimeConst[TIMER_COUNT];
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    76  
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    77  /* FIXME make compatible to unix time */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    78  sint32 g_DateTimeOffset;
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    79  
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    80  /** \brief Get the real time
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    81   * Note that this function is valid only if DateTime_set() has been called */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    82  void DateTime_get(Ifx_DateTime *dt)
; Function DateTime_get
.L5:
DateTime_get:	.type	func
	mov.aa	a15,a4
.L69:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    42   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    43   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    44   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    45   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    46   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    47   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    48   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    49   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    50   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    51   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    52   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    53   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    54   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    55   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    56   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    57   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    60  #ifndef IFXCPU_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    61  #define IFXCPU_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    64  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    67  #include "_Impl/IfxCpu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    68  #include "IfxSrc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    69  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    70  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    71  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    72  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    73  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    74  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    75  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    77  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    78  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    80  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    81   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    82   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    83   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    84   * Example usage:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    85   *  \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    86   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    87   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    88   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    89   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    90  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    92  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    93   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    94   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    95   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    96   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    97   *   Example usage:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    98   *   \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    99   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   100   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   101   *   \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   103  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   105  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   106  /*------------------------------Type Definitions------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   107  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   109  /** \brief Lock type Spin lock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   111  typedef unsigned int IfxCpu_spinLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   113  /** \brief Lock type Mutex lock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   114   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   115  typedef unsigned int IfxCpu_mutexLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   116  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   117  /** \brief Event used for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   118   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   119  typedef unsigned int IfxCpu_syncEvent;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   120  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   121  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   122  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   123  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   124  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   125  /** \addtogroup IfxLld_Cpu_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   126   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   127  /** \brief Enumeration for the Cpu mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   129  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   130  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   131      IfxCpu_CoreMode_halt,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   132      IfxCpu_CoreMode_run,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   133      IfxCpu_CoreMode_idle,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_sleep,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_stby,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_unknown
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   137  } IfxCpu_CoreMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   139  /** \brief Performance conunter modes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   140   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   141  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   142  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   143      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   144      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   145  } IfxCpu_CounterMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   147  /** \brief Overlay Address Mask: determines the overlay block size and the bits used for address comparison and translation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   148   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   149  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   150  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   151      IfxCpu_OverlayAddressMask_32byte  = 0xFFF,  /**< \brief 32 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   152      IfxCpu_OverlayAddressMask_64byte  = 0xFFE,  /**< \brief 64 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   153      IfxCpu_OverlayAddressMask_128byte = 0xFFC,  /**< \brief 128 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   154      IfxCpu_OverlayAddressMask_256byte = 0xFF8,  /**< \brief 256 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   155      IfxCpu_OverlayAddressMask_512byte = 0xFF0,  /**< \brief 512 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   156      IfxCpu_OverlayAddressMask_1KB     = 0xFE0,  /**< \brief 1K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   157      IfxCpu_OverlayAddressMask_2KB     = 0xFC0,  /**< \brief 2K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   158      IfxCpu_OverlayAddressMask_4KB     = 0xF80,  /**< \brief 4K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   159      IfxCpu_OverlayAddressMask_8KB     = 0xF00,  /**< \brief 8K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   160      IfxCpu_OverlayAddressMask_16KB    = 0xE00,  /**< \brief 16K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   161      IfxCpu_OverlayAddressMask_32KB    = 0xC00,  /**< \brief 32K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   162      IfxCpu_OverlayAddressMask_64KB    = 0x800,  /**< \brief 64K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   163      IfxCpu_OverlayAddressMask_128KB   = 0x0     /**< \brief 128K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_OverlayAddressMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   166  /** \brief Selects overlay memory used for redirection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   167   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   168  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   169  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   170      IfxCpu_OverlayMemorySelect_core0DsprPspr = 0,  /**< \brief Redirection to Core 0 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   171      IfxCpu_OverlayMemorySelect_core1DsprPspr = 1,  /**< \brief Redirection to Core 1 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   172      IfxCpu_OverlayMemorySelect_core2DsprPspr = 2,  /**< \brief Redirection to Core 2 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   173      IfxCpu_OverlayMemorySelect_core3DsprPspr = 3,  /**< \brief Redirection to Core 3 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_OverlayMemorySelect_core4DsprPspr = 4,  /**< \brief Redirection to Core 4 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_OverlayMemorySelect_core5DsprPspr = 5,  /**< \brief Redirection to Core 5 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_OverlayMemorySelect_lmu           = 8,  /**< \brief Redirection to LMU memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_OverlayMemorySelect_emem          = 9,  /**< \brief Redirection to EMEM memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_OverlayMemorySelect_ebu           = 10  /**< \brief Redirection to EBU memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_OverlayMemorySelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   181  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   182  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   183      IfxCpu_ResetStatus_notCpuReset   = 0,  /**< \brief No Kernel Reset was executed */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   184      IfxCpu_ResetStatus_cpuResetBySmu = 1,  /**< \brief Kernel reset was requested by hardware since last clear (SMU) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   185      IfxCpu_ResetStatus_cpuResetBySw  = 2   /**< \brief Kernel reset was requested by software since last clear (by writing KRST0.RST=1 and KRST1.RST=1) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   186  } IfxCpu_ResetStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   188  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   189  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   191  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   192  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   193  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   194  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   195   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief counter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   198  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   199  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   200      uint32  counter;        /**< \brief Counter value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   201      boolean overlfow;       /**< \brief sticky overlfow */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   202  } IfxCpu_Counter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   203  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   204  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   205  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   206  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   207   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   208  /** \brief Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   209   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   210  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   211  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   212      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   213      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   214      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   215      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   216      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   217  } IfxCpu_Perf;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   218  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   219  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   221  /** \addtogroup IfxLld_Cpu_Std_Core
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   222   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   223  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   224  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   225  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   226  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   228  /** \brief API to get the address for CPU HW module register memory map
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   229   * \param cpu Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   230   * \return CPU module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   232  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   234  /** \brief API to get core id of the CPU of the caller.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   235   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   236   * Use IfxCpu_getCoreIndex() to get cpu no.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   237   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   239  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   241  /** \brief API to get cpu index of the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   242   * Note: This api can be used whereever cpu no/index is needed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   243   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   245  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   247  /** \brief API to initialize the context save area of the CPU where this is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   248   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   249   * This API can initialize the CSA of the host CPU where this API is called. This API
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   250   * shall not be used to initialize the CSA of another CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   251   * \param csaBegin Pointer to start of context save area
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   252   * \param csaEnd Pointer to end of context save area
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   253   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   254   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   255  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   257  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   258   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   259   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   260  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   261  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   262  /** \brief Triggers Software Reset
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   265  IFX_INLINE void IfxCpu_triggerSwReset(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   268  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   271  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   272   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   273   * \return Current mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   275  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   277  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   278   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   279   * \return Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   280   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   281  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   283  /** \brief API to set mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   284   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   285   * \param mode CPU mode to be set by this API
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   286   * \return Success status of the activity (setting the core mode).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   287   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   288   * \retval FALSE: If the activity can't be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   289   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   290  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   291  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   292  /** \brief API to set the program counter for the CPU specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   293   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   294   * \param programCounter Program counter value to be set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   295   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   296   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   297   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   298   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   299  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   301  /** \brief API to set the program counter for the CPU specified and start the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   302   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   303   * \param programCounter Program counter value to start the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   304   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   305   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   306   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   307   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   309  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief To request reset of a particular core, given by coreId
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   311   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   313  IFX_EXTERN void IfxCpu_triggerCpuReset(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   315  /** \brief Retrieve the cause of reset(no reset, hardware(SMU) or software) since last clear by reading KRST0.RSTSTAT and clear it.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_EXTERN IfxCpu_ResetStatus IfxCpu_getCpuResetStatus(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   323  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   327  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   329   * This API provides the status of CPU where this API is called
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   330   * \return Status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   331   * \retval TRUE: Global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   332   * \retval FALSE: Global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   333   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   334  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   335  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   336  /** \brief API to disable global interrupt and return the previous status.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   338   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   339   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   340   * \return Previous status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   341   * \retval TRUE: Previously, global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   342   * \retval FALSE: Previously, global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to enable global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   347   * This API simply enables the global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   348   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   349   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   350  IFX_INLINE void IfxCpu_enableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   352  /** \brief Disable the Global Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   353   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to restore global interrupt with that of the passed parameter.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   358   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enabled Previous status of the global interrupt enable bit
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   362   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   363   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   364  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   366  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   367  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   368  /** \addtogroup IfxLld_Cpu_Std_Cache
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   369   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   370  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   371  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   372  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   373  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   375  /** \brief API to enable/ disable the data cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   376   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   377   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   378   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   379   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   380   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   382  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   384  /** \brief API to enable/ disable the instruction cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   385   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   386   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   387   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   388   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   389   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   390   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   391  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   392  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   393  /** \brief API to invalidate the program cache
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   394   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   395   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   396  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   397  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   398  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   399   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   400   * \return Status TRUE/FALSE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   401   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   402  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   403  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   404  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   406   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   407   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   408   * \param enable Command to enable or bypass the data cache
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   409   * TRUE: Enable the data cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   410   * FALSE: Bypass the data cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   413  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   415  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   416   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   417   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   418   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   419   * \param enable Command to enable or bypass the program cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   420   * TRUE: Enable the program cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   421   * FALSE: Bypass the program cache
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   422   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   423   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   424  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   426  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   428  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   429   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   430  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   431  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   432  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   433  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   434  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   435  /** \brief API to read the clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   436   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   437   * This API can be used to read clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   438   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   440   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   442  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   444   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   445   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   446   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   447   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   448   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   449   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   450   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   451   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   452   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   454  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   456  /** \brief API to read the instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   457   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   458   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   459   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   460   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   462  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   464  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   465   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   466   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   467   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   468   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   469   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   470   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   471   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   472   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   473   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   474   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   475  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   476  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   477  /** \brief API to read the performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   478   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   479   * \return counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   481  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   483  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   484   * This is generic function to get sticky overflow bit of any performance counters
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   485   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   486   * \return Status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   487   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   489  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief Reset and start instruction, clock and multi counters
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   491   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   492   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   493   * \param mode Counter mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   495   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   498  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   499   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   500   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   501   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   502   * \param enable enable Command to enable or disable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   503   * TRUE: Enable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   504   * FALSE: Disable the performance counter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   505   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   507  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   509  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   510  /** \brief Stop instruction and clock counters, return their values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   511   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   512   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   513   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   514   * \return Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   515   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   516  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   517  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   519  /** \brief API to update clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   520   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   521   * This API can be used to update clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   522   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   523   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   524   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   525   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   526  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   528  /** \brief API to update Instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   529   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   530   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   531   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   532   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   533   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   534   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   535  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   536  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   537  /** \brief API to update performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   538   * This is generic function to update any of the performance counters
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   539   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   540   * \param count Count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   541   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   542   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   543  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   545  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   547  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   548   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   550  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   551  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   552  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   554  /** \brief API to acquire the mutex (binary semaphore).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   555   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   556   * This API can be used to acquire/get the mutex.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   557   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   558   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   559   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   560   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   561   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   562   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   563   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   564   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   565   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   566   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   567   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   568   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   570  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   572  /** \brief API to unlock the mutex .
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   573   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   574   * This API can be used to unlock the previously acquired mutex
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   575   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   578   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   579   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   580   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   581   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   582   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   583   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   584   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   585   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   586   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   588  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   590  /** \brief API to unlock the resource .
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   591   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   592   * This API can be used to unlock the previously acquired lock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   593   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   594   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   595   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   596  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   597  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   598  /** \brief API to lock the resource in spin mode with the given timeout.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   599   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   600   * This API can be used to spin lock for the lock for the given timeout period.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   601   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   602   * \param timeoutCount loop counter value used for timeout to acquire lock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   603   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   604   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   605   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   606   *    IfxCpu_spinLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   607   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   608   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   609   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   610   *      IfxCpu_resetSpinLock(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   611   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   612   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   613   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   614   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   615  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   616  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   617  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   619  /** \addtogroup IfxLld_Cpu_Std_Utility
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   620   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   621  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   622  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   623  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   624  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   626  /** \brief This function disables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   627   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   628   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   629   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   630   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   631  IFX_EXTERN void IfxCpu_disableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   633  /** \brief This function configures and enables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   634   * Note:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   635   * The data overlay provides the capability to redirect selected data accesses to the Overlay memory. Data accesses made by the TriCore to Program Flash, Online Data Acquisition space, or EBU space can be redirected. Overlay memory may be located in the Local Memory (if present), in the Emulation Memory (Emulation Device only), or in the EBU space,or in the DPSR/PSPR memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   636   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   637   * How the overlay Memory works?
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   638   * Any data access to segment 8 or segment A is checked against all the activated overlay blocks. For each activated overlay block, address bits 27..5 are compared with the target base address , and this bit-wise comparison is qualified by the content of address mask. Address bits participate in the comparison if the corresponding mask bits are set to one. The access is redirected, if all the address bits selected by mask equal to the corresponding bits in target address.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   639   * The address for redirection is constructed as follows:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   640   * 1. Address bits 31..22 are set according to the overlay memory selection and the cache-ability of the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   641   * 2. For address bits 21..5:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   642   * - If the corresponding address mask bit is set, the address bit value is taken from overlay base address .
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   643   * - If the corresponding address mask bit is cleared, the address bit value is taken from the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   644   * 3. Address bits 4..0 are always taken directly from the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   645   * If there is no redirection, the original address is used to perform the access.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   646   * Target address ranges for activated overlay blocks should not overlap or an exception may occur.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   647   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   648   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   649   * \param overlayMemorySelect Overlay Memory Select
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   650   * \param overlayAddressMask overlay Address Mask
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   651   * \param targetBaseAddress Target Base address (i.e Source address to be re-directed)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   652   * \param overlayBaseAddress Overlay or Re-directed Base address (Bits 21..5 of the base address the overlay memory block in the overlay memory)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   653   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   654   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   655  IFX_EXTERN void IfxCpu_enableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock, IfxCpu_OverlayMemorySelect overlayMemorySelect, IfxCpu_OverlayAddressMask overlayAddressMask, uint32 targetBaseAddress, uint32 overlayBaseAddress);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   657  /** \brief API to get random value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   658   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   659   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   660   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   661  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   663  /** \brief API to get random value with in the range
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   664   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   665   * \param min minimum range value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   666   * \param max maximum range value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   667   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   668   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   670  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   671  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   672   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   673   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   674   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   675   * CORE_ID register.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   676   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   677   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   678   * e.g:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   679   * 1. Check for synchronisation between core 0 and core 5
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   680   * # define 0x41U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   681   * 2. Check for synchronisation between core 0 to core 5
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   682   * # define 0x5FU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   683   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   684   * Note:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   685   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   686   * Core 0: 0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   687   * Core 1: 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   688   * Core 2: 2
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   689   * Core 3: 3
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   690   * Core 4: 4
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   691   * Core 5: 6
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   692   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   693   * \param timeoutMilliSec timeout in millisec
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   694   * \return Error condition
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   695   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   696   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   697   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   698   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   699   * // Global variable. preferably located in  shared memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   700   * IfxCpu_syncEvent event;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   701   * boolean errorVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   702   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   703   * // Below code should be repeated in Each core
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   704   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   705   * // Upon reaching Synchonisation point
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   706   * IfxCpu_emitEvent(&event);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   707   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   708   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   709   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   710   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   711   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   712  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   713  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   714  /** \brief This function sets a bit corresponding to the core in the event.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   715   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   716   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   717   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   718   * A coding example can be found in \ref IfxCpu_waitEvent
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   719   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   720   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   721  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   723  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   725  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   726  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   727  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   728  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   729  /** \brief Sets all CPUs to Idle mode except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   730   * \param masterCpu Master CPU Index- All except this will be set to Idle Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   731   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   732   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   733  IFX_EXTERN void IfxCpu_setAllIdleExceptMasterCpu(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   735  /** \brief Disables interrupts for all CPUs except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   736   * \param masterCpu Master CPU Index- All except this will have their interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   737   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   738   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   739  IFX_EXTERN void IfxCpu_disableInterruptsAllExceptMaster(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   740  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   741  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   742  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   743  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   744  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   745  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   746  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   747      Ifx_CPU_ICR reg;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   748      reg.U = __mfcr(CPU_ICR);
	mfcr	d15,#65068
.L81:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   749      return reg.B.IE != 0;
	extr.u	d15,d15,#15,#1
.L82:
	ne	d15,d15,#0
.L72:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   750  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   751  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   752  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   753  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   754  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   755      boolean enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   756      enabled = IfxCpu_areInterruptsEnabled();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   757      __disable();
	disable
.L113:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   758      __nop();
	nop
.L71:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    41   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    42   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    43   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    44   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    45   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    46   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    48   * \section IfxLld_Stm_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    49   * \subsection IfxLld_Stm_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    50   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    51   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    52   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    53   * #include <Stm/Std/IfxStm.h>
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    54   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    55   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    56   * \subsection IfxLld_Stm_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    57   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    58   * Declare STM variables :
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    59   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    60   * Ifx_STM *stmSfr;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    61   * IfxStm_CompareConfig stmConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    62   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    63   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    64   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    65   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    66   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    67   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    68   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    69   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    70   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    71   * #define IFX_INTPRIO_STM0_SR0  10
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    72   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    73   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    74   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    75   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    76   * evry time the specified number of ticks have been elapsed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    77   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    78   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    79   * {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    80   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    81   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    82   * }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    83   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    84   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    85   * Finally install the interrupt handlers in your initialisation function:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    86   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    87   *     // install interrupt handlers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    88   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    89   *     IfxCpu_enableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    90   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    91   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    92   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    93   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    94   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    95   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    96   * The module initialisation can be done as followed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    97   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    98   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    99   *     stmSfr = &MODULE_STM0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   100   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   101   *     IfxStm_initCompareConfig(&stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   102   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   103   *     // configure to generate interrupt every 10 us
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   104   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   105   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   106   *     stmConfig.ticks = ticks;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   107   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   108   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   109   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   110   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   111   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   112   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   113   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   114   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   115   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   116   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   117   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   118   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   119   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   120   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   121   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   122   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   123   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   124   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   125   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   126   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   127   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   129  #ifndef IFXSTM_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   130  #define IFXSTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   131  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   132  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   133  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   134  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   136  #include "_Impl/IfxStm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   137  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   138  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   139  #include "IfxCbs_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   140  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   141  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   142  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   143  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   144  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   145  #ifndef IFXSTM_DEFAULT_TIMER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   146  #define IFXSTM_DEFAULT_TIMER (&MODULE_STM0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   147  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   148  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   149  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   150  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   151  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   152  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   153  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   154   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   155  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   156   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   157  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   158  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   159      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   160      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   161  } IfxStm_Comparator;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   162  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   163  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   169  } IfxStm_ComparatorInterrupt;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   171  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   172   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   173  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   174  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   181      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   182      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   183      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   184      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   185      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   186      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   207  } IfxStm_ComparatorOffset;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   209  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   210   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   211  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   212  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   219      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   220      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   221      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   222      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   223      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   224      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   225      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   228      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   229      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   230      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   231      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   232      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   233      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   234      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   235      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   236      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   237      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   238      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   239      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   240      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   241      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   242      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   245  } IfxStm_ComparatorSize;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   247  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   248   * Definition in Ifx_STM.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   249   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   250  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   251  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   252      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   253      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   254  } IfxStm_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   256  /** \brief OCDS Suspend Control (OCDS.SUS)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   258  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   259  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   260      IfxStm_SuspendMode_none = 0,  /**< \brief No suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   261      IfxStm_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   262      IfxStm_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   263  } IfxStm_SuspendMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   264  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   265  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   268  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   271  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   272   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   273  /** \brief Comparator Configuration Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   275  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   277      IfxStm_Comparator          comparator;                /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   278      IfxStm_ComparatorInterrupt comparatorInterrupt;       /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   279      IfxStm_ComparatorOffset    compareOffset;             /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   280      IfxStm_ComparatorSize      compareSize;               /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   281      uint32                     ticks;                     /**< \brief count for next comparison from current timer count. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   282      Ifx_Priority               triggerPriority;           /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   283      IfxSrc_Tos                 typeOfService;             /**< \brief Type of service. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   284  } IfxStm_CompareConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   286  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   287  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   288  /** \addtogroup IfxLld_Stm_Std_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   289   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   290  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   291  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   292  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   295  /** \brief Returns system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   296   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   297   * \return system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   298   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   299  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   301  /** \brief Returns the system timer frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   302   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   303   * \return the system timer frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   304   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   305  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   306  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   307  /** \brief Returns the module's suspend state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   308   * TRUE :if module is suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   309   * FALSE:if module is not yet suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   310   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   311   * \return Suspend status (TRUE / FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   313  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   315  /** \brief Configure the Module to Hard/Soft suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   316   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   317   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   318   * \param mode Module suspend mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   319   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   321  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   323  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   324  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   325  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   326  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   327  /** \brief Disables the Stm module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   329   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   330   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   331  IFX_EXTERN void IfxStm_disableModule(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   332  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   333  /** \brief enable suspend by debugger.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   334   * Note: The API will write into the OCS register only if OCDS is enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   335   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   336   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   337   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   338  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   340  /** \brief Returns the module index of the selected STM module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   341   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   342   * \return STM module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   344  IFX_EXTERN Ifx_STM *IfxStm_getAddress(IfxStm_Index stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   346  /** \brief API to get the resource index of the STM specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   347   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   348   * \return system timer module index.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   349   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   350  IFX_EXTERN IfxStm_Index IfxStm_getIndex(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   352  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   353  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   354  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   355   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   357  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   358  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   361  /** \brief Returns the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   362   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   363   * \return the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   365  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   367  /** \brief Gets the TIM3 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   368   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   369   * \return TIM3 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   370   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   371  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   372  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   373  /** \brief Gets the TIM4 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   374   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   375   * \return TIM4 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   376   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   377  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   378  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   379  /** \brief Gets the TIM5 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   380   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   381   * \return TIM5 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   382   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   383  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   384  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   385  /** \brief Gets the TIM6 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   386   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   387   * \return TIM6 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   388   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   389  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   390  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   391  /** \brief Gets the TIM1 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   392   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   393   * \return TIM1 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   394   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   395  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   396  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   397  /** \brief Gets the TIM2 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   398   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   399   * \return TIM2 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   400   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   401  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   403  /** \brief Returns the timer value shifted right by offset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   404   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   405   * \param offset offset value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   406   * \return the lower system timer value shifted by offset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   407   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   408  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   410  /** \brief Wait for requested time.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   411   * The macro waits in while loop for the specified time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   413   * \param ticks ticks Wait time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   414   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   416  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   417  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   418  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   420  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   421   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   422  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   423  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   424  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   425  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   426  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   427  /** \brief Returns the updated compare register value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   428   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   429   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   430   * \return The compare value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   431   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   432  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   434  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   435   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   436   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   437   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   439  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   441  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   442   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   443   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   444   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   446  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   448  /** \brief Update the compare register value increased with given ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   449   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   450   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   451   * \param ticks count for next comparison from current timer count.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   452   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   454  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   456  /** \brief Update the compare register value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   457   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   458   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   459   * \param ticks count for next comparison.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   460   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   462  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   464  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   465  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   466  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   468  /** \brief Clear the compare interrupt flag.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   469   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   470   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   473  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   475  /** \brief Disables the compare interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   476   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   477   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   478   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   479   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   480  IFX_EXTERN void IfxStm_disableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   481  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   482  /** \brief Enables the compare interrupt .
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   483   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   484   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   485   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   486   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   487  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   488  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   489  /** \brief get the interrupt source pointer for the comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   490   * \param stm pointer to the STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   491   * \param comparator comparator selection comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   492   * \return pointer to the interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   494  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxStm_getSrcPointer(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   496  /** \brief Initialise stm compare register.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   497   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   498   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   499   * \return TRUE if Comparator successful otherwise FLASE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   501  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   503  /** \brief Initialise compare configuration with default values.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   504   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   505   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   507  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   509  /** \brief Indicates if the compare interrupt flag is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   510   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   511   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   512   * \return TRUE if the comparator flag is set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   513   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   514  IFX_EXTERN boolean IfxStm_isCompareFlagSet(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   515  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   516  /** \brief Set the compare behavior
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   517   * \param stm pointer to System timer module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   518   * \param comparator comparator selection comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   519   * \param offset Comparator start bit position
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   520   * \param size Size of compare value to compare with timer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   521   * \param interrupt Comparator Interrupt request source defined
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   522   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   523   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   524  IFX_EXTERN void IfxStm_setCompareControl(Ifx_STM *stm, IfxStm_Comparator comparator, IfxStm_ComparatorOffset offset, IfxStm_ComparatorSize size, IfxStm_ComparatorInterrupt interrupt);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   525  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   526  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   528  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   529  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   530  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   531  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   532  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   533   * \param stm pointer STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   534   * \param mode mode selection (enable/ disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   535   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   536   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   537  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   539  /** \brief Returns the STM counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   540   * \return Returns the STM counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   541   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   542  IFX_INLINE sint64 IfxStm_now(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   544  /** \brief Get the deadline value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   545   * \param timeout timeout value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   546   * \return Return the deadline
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   548  IFX_INLINE sint64 IfxStm_getDeadLine(sint64 timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   550  /** \brief Checked if deadline has occured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   551   * \param deadLine Deadline value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   552   * \return Return if deadline occured or not
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   553   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   554  IFX_INLINE boolean IfxStm_isDeadLine(sint64 deadLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   555  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   556  /** \brief Waits for a specific time
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   557   * \param timeout timeout value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   558   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   559   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   560  IFX_INLINE void IfxStm_wait(sint64 timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   561  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   562  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   563  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   564  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   566  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   567   * \param stm pointer to STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   568   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   570  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   572  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   573  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   574  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   576  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   577  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   578      uint64 result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   579  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   580      result  = stm->TIM0.U;
	fcall	.cocofun_3
.L74:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)      (inlined)
	jeq	d15,#0,.L2
.L84:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   759      return enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   760  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   761  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   762  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   763  IFX_INLINE void IfxCpu_enableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   764  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   765      __enable();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   766  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   768  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   769  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   770  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   771      uint32 cpu_pmaVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   772      uint16 checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   773      uint32 coreIndex   = IfxCpu_getCoreIndex();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   774      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   775  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   776      /*resolve the restrictions*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   777      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   778      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   779  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   780      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   781      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   782          segmentNumberMask |= checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   783      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   784  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   785      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   786  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   787      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   788  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   789      /*The CPU_PMA registers are ENDINIT protected*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   790      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   791      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   792      /*Write to PMA0 register for selecting the cacheability for data cache*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   793      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   794      __mtcr(CPU_PMA0, cpu_pmaVal);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   795      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   796      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   797  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   798  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   799  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   800  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   801  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   802      uint32 cpu_pmaVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   803      uint16 checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   804      uint32 coreIndex   = IfxCpu_getCoreIndex();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   805      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   806  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   807      /*resolve the restrictions*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   808      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   809      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   810  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   811      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   812      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   813          segmentNumberMask |= checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   814      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   815  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   816      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   817  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   818      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   819  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   820      /*The CPU_PMA registers are ENDINIT protected*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   821      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   822      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   823      /*Write to PMA1 register for selecting the cacheability for data cache*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   824      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   825      __mtcr(CPU_PMA1, cpu_pmaVal);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   826      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   827      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   828  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   829  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   830  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   831  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   832  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   833      __disable();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   834      __nop();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   835  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   836  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   837  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   838  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   839  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   840      Ifx_CPU *module;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   841  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   842      if (cpu < IfxCpu_ResourceCpu_none)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   843      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   844          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   845      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   846      else
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   847      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   848          module = NULL_PTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   849      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   850  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   851      return module;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   852  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   853  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   854  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   855  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   856  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   857      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   858  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   859  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   860  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   861  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   862  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   863      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   864  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   865  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   866  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   867  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   868  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   869      Ifx_CPU_CORE_ID reg;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   870      reg.U = __mfcr(CPU_CORE_ID);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   871      return (IfxCpu_Id)reg.B.CORE_ID;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   872  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   873  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   874  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   875  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   876  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   877      uint32 reg;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   878      reg = __mfcr(CPU_CORE_ID);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   879      return (IfxCpu_ResourceCpu)__minu(reg, 5);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   880  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   881  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   882  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   883  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   884  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   885      return IfxCpu_getPerformanceCounter(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   886  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   887  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   889  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   890  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   891      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   892  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   893  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   894  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   895  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   896  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   897      Ifx_CPU_CCNT ccnt;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   898  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   899      if (address == CPU_CCNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   900      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   901          ccnt.U = __mfcr(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   902      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   903      else if (address == CPU_ICNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   904      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   905          ccnt.U = __mfcr(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   906      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   907      else if (address == CPU_M1CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   908      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   909          ccnt.U = __mfcr(CPU_M1CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   910      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   911      else if (address == CPU_M2CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   912      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   913          ccnt.U = __mfcr(CPU_M2CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   914      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   915      else if (address == CPU_M3CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   916      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   917          ccnt.U = __mfcr(CPU_M3CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   918      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   919  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   920      return ccnt.B.COUNTVALUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   921  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   922  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   923  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   924  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   925  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   926      Ifx_CPU_CCNT ccnt;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   927  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   928      if (address == CPU_CCNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   929      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   930          ccnt.U = __mfcr(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   931      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   932      else if (address == CPU_ICNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   933      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   934          ccnt.U = __mfcr(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   935      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   936      else if (address == CPU_M1CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   937      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   938          ccnt.U = __mfcr(CPU_M1CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   939      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   940      else if (address == CPU_M2CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   941      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   942          ccnt.U = __mfcr(CPU_M2CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   943      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   944      else if (address == CPU_M3CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   945      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   946          ccnt.U = __mfcr(CPU_M3CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   947      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   948  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   949      return ccnt.B.SOVF;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   950  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   951  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   952  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   953  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   954  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   955      uint32  k;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   956      uint32  nxt_cxi_val = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   957      uint32 *prvCsa      = 0U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   958      uint32 *nxtCsa      = csaBegin;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   959      uint32  numOfCsa    = (((uint32)csaEnd - (uint32)csaBegin) / 64U);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   960  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   961      for (k = 0; k < numOfCsa; k++)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   962      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   963          nxt_cxi_val = ((uint32)nxtCsa & (0XFU << 28)) >> 12 | ((uint32)nxtCsa & (0XFFFFU << 6)) >> 6;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   964  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   965          if (k == 0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   966          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   967              __mtcr(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   968          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   969          else
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   970          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   971              *prvCsa = nxt_cxi_val;  /* Store null pointer in last CSA (= very first time!) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   972          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   973  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   974          if (k == (numOfCsa - 3U))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   975          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   976              __mtcr(CPU_LCX, nxt_cxi_val);   /* Last but 2 context save area is pointed in LCX to know if there is CSA depletion */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   977          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   978  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   979          prvCsa  = (uint32 *)nxtCsa;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   980          nxtCsa += 16;           /* next CSA */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   981      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   982  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   983      *prvCsa = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   984  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   985  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   986  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   987  IFX_INLINE void IfxCpu_invalidateProgramCache(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   988  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   989      uint16 cpuWdtPassword = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   990      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   991          IfxScuWdt_clearCpuEndinit(cpuWdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   992          Ifx_CPU_PCON1 pcon1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   993          pcon1.U       = __mfcr(CPU_PCON1);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   994          pcon1.B.PCINV = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   995          __mtcr(CPU_PCON1, pcon1.U);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   996          IfxScuWdt_setCpuEndinit(cpuWdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   997      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   998  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   999  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1000  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1001  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1002  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1003      uint8 segment = (uint32)address >> 24;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1004      return ((segment == IFXCPU_CACHABLE_FLASH_SEGMENT) || (segment == IFXCPU_CACHABLE_LMU_SEGMENT)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1005  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1006  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1007  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1008  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1009  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1010      Ifx_CPU_CCTRL cctrl;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1011      cctrl.U    = __mfcr(CPU_CCTRL);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1012      /*Disable the counters */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1013      cctrl.B.CE = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1014      __mtcr(CPU_CCTRL, cctrl.U);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1015  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1016      /* reset the counters */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1017      __mtcr(CPU_CCNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1018      __mtcr(CPU_ICNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1019      __mtcr(CPU_M1CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1020      __mtcr(CPU_M2CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1021      __mtcr(CPU_M3CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1022  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1023      /*Enable the counters, set the counter mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1024      cctrl.B.CE = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1025      cctrl.B.CM = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1026      __mtcr(CPU_CCTRL, cctrl.U);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1027  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1028  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1029  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1030  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1031  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1033      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1034          __enable();
	enable

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)      (inlined)
.L2:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    83  {
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    84      sint32 seconds = (sint32)(now() / TimeConst_1s);
	movh.a	a2,#@his(TimeConst)
	lea	a2,[a2]@los(TimeConst)
	ld.d	e6,[a2]64
.L114:
	call	__ll_div64
.L85:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    85  
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    86      seconds     = seconds + g_DateTimeOffset;
	ld.w	d15,g_DateTimeOffset
.L87:
	add	d2,d15
.L115:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    87      dt->hours   = seconds / 3600;
	mov	d15,#3600
.L116:
	div	e0,d2,d15
	st.w	[a15],d0
.L117:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    88      dt->minutes = seconds / 60;
	mov	d15,#60
.L118:
	div	e0,d2,d15
.L119:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    89      dt->minutes = dt->minutes % 60;
	div	e2,d0,d15
	st.w	[a15]4,d3
.L88:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    90      dt->seconds = seconds % 60;
	st.w	[a15]8,d1
.L120:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    91  }
	ret
.L65:
	
__DateTime_get_function_end:
	.size	DateTime_get,__DateTime_get_function_end-DateTime_get
.L23:
	; End of function
	
	.sdecl	'.text.Ifx_DateTime..cocofun_3',code,cluster('.cocofun_3')
	.sect	'.text.Ifx_DateTime..cocofun_3'
	.align	2
; Function .cocofun_3
.L7:
.cocofun_3:	.type	func
; Function body .cocofun_3, coco_iter:0

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    41   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    42   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    43   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    44   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    45   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    46   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    48   * \section IfxLld_Stm_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    49   * \subsection IfxLld_Stm_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    50   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    51   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    52   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    53   * #include <Stm/Std/IfxStm.h>
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    54   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    55   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    56   * \subsection IfxLld_Stm_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    57   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    58   * Declare STM variables :
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    59   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    60   * Ifx_STM *stmSfr;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    61   * IfxStm_CompareConfig stmConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    62   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    63   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    64   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    65   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    66   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    67   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    68   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    69   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    70   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    71   * #define IFX_INTPRIO_STM0_SR0  10
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    72   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    73   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    74   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    75   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    76   * evry time the specified number of ticks have been elapsed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    77   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    78   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    79   * {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    80   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    81   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    82   * }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    83   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    84   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    85   * Finally install the interrupt handlers in your initialisation function:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    86   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    87   *     // install interrupt handlers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    88   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    89   *     IfxCpu_enableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    90   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    91   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    92   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    93   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    94   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    95   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    96   * The module initialisation can be done as followed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    97   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    98   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    99   *     stmSfr = &MODULE_STM0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   100   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   101   *     IfxStm_initCompareConfig(&stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   102   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   103   *     // configure to generate interrupt every 10 us
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   104   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   105   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   106   *     stmConfig.ticks = ticks;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   107   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   108   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   109   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   110   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   111   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   112   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   113   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   114   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   115   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   116   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   117   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   118   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   119   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   120   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   121   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   122   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   123   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   124   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   125   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   126   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   127   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   129  #ifndef IFXSTM_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   130  #define IFXSTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   131  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   132  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   133  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   134  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   136  #include "_Impl/IfxStm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   137  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   138  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   139  #include "IfxCbs_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   140  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   141  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   142  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   143  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   144  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   145  #ifndef IFXSTM_DEFAULT_TIMER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   146  #define IFXSTM_DEFAULT_TIMER (&MODULE_STM0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   147  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   148  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   149  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   150  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   151  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   152  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   153  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   154   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   155  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   156   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   157  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   158  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   159      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   160      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   161  } IfxStm_Comparator;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   162  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   163  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   169  } IfxStm_ComparatorInterrupt;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   171  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   172   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   173  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   174  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   181      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   182      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   183      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   184      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   185      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   186      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   207  } IfxStm_ComparatorOffset;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   209  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   210   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   211  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   212  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   219      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   220      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   221      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   222      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   223      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   224      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   225      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   228      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   229      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   230      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   231      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   232      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   233      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   234      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   235      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   236      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   237      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   238      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   239      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   240      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   241      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   242      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   245  } IfxStm_ComparatorSize;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   247  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   248   * Definition in Ifx_STM.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   249   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   250  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   251  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   252      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   253      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   254  } IfxStm_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   256  /** \brief OCDS Suspend Control (OCDS.SUS)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   258  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   259  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   260      IfxStm_SuspendMode_none = 0,  /**< \brief No suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   261      IfxStm_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   262      IfxStm_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   263  } IfxStm_SuspendMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   264  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   265  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   268  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   271  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   272   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   273  /** \brief Comparator Configuration Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   275  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   277      IfxStm_Comparator          comparator;                /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   278      IfxStm_ComparatorInterrupt comparatorInterrupt;       /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   279      IfxStm_ComparatorOffset    compareOffset;             /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   280      IfxStm_ComparatorSize      compareSize;               /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   281      uint32                     ticks;                     /**< \brief count for next comparison from current timer count. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   282      Ifx_Priority               triggerPriority;           /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   283      IfxSrc_Tos                 typeOfService;             /**< \brief Type of service. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   284  } IfxStm_CompareConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   286  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   287  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   288  /** \addtogroup IfxLld_Stm_Std_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   289   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   290  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   291  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   292  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   295  /** \brief Returns system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   296   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   297   * \return system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   298   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   299  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   301  /** \brief Returns the system timer frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   302   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   303   * \return the system timer frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   304   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   305  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   306  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   307  /** \brief Returns the module's suspend state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   308   * TRUE :if module is suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   309   * FALSE:if module is not yet suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   310   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   311   * \return Suspend status (TRUE / FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   313  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   315  /** \brief Configure the Module to Hard/Soft suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   316   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   317   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   318   * \param mode Module suspend mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   319   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   321  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   323  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   324  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   325  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   326  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   327  /** \brief Disables the Stm module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   329   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   330   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   331  IFX_EXTERN void IfxStm_disableModule(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   332  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   333  /** \brief enable suspend by debugger.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   334   * Note: The API will write into the OCS register only if OCDS is enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   335   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   336   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   337   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   338  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   340  /** \brief Returns the module index of the selected STM module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   341   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   342   * \return STM module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   344  IFX_EXTERN Ifx_STM *IfxStm_getAddress(IfxStm_Index stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   346  /** \brief API to get the resource index of the STM specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   347   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   348   * \return system timer module index.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   349   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   350  IFX_EXTERN IfxStm_Index IfxStm_getIndex(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   352  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   353  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   354  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   355   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   357  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   358  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   361  /** \brief Returns the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   362   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   363   * \return the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   365  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   367  /** \brief Gets the TIM3 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   368   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   369   * \return TIM3 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   370   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   371  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   372  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   373  /** \brief Gets the TIM4 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   374   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   375   * \return TIM4 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   376   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   377  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   378  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   379  /** \brief Gets the TIM5 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   380   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   381   * \return TIM5 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   382   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   383  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   384  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   385  /** \brief Gets the TIM6 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   386   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   387   * \return TIM6 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   388   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   389  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   390  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   391  /** \brief Gets the TIM1 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   392   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   393   * \return TIM1 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   394   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   395  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   396  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   397  /** \brief Gets the TIM2 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   398   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   399   * \return TIM2 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   400   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   401  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   403  /** \brief Returns the timer value shifted right by offset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   404   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   405   * \param offset offset value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   406   * \return the lower system timer value shifted by offset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   407   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   408  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   410  /** \brief Wait for requested time.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   411   * The macro waits in while loop for the specified time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   413   * \param ticks ticks Wait time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   414   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   416  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   417  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   418  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   420  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   421   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   422  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   423  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   424  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   425  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   426  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   427  /** \brief Returns the updated compare register value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   428   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   429   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   430   * \return The compare value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   431   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   432  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   434  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   435   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   436   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   437   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   439  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   441  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   442   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   443   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   444   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   446  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   448  /** \brief Update the compare register value increased with given ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   449   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   450   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   451   * \param ticks count for next comparison from current timer count.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   452   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   454  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   456  /** \brief Update the compare register value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   457   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   458   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   459   * \param ticks count for next comparison.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   460   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   462  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   464  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   465  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   466  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   468  /** \brief Clear the compare interrupt flag.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   469   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   470   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   473  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   475  /** \brief Disables the compare interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   476   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   477   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   478   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   479   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   480  IFX_EXTERN void IfxStm_disableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   481  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   482  /** \brief Enables the compare interrupt .
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   483   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   484   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   485   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   486   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   487  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   488  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   489  /** \brief get the interrupt source pointer for the comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   490   * \param stm pointer to the STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   491   * \param comparator comparator selection comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   492   * \return pointer to the interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   494  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxStm_getSrcPointer(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   496  /** \brief Initialise stm compare register.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   497   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   498   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   499   * \return TRUE if Comparator successful otherwise FLASE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   501  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   503  /** \brief Initialise compare configuration with default values.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   504   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   505   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   507  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   509  /** \brief Indicates if the compare interrupt flag is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   510   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   511   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   512   * \return TRUE if the comparator flag is set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   513   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   514  IFX_EXTERN boolean IfxStm_isCompareFlagSet(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   515  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   516  /** \brief Set the compare behavior
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   517   * \param stm pointer to System timer module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   518   * \param comparator comparator selection comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   519   * \param offset Comparator start bit position
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   520   * \param size Size of compare value to compare with timer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   521   * \param interrupt Comparator Interrupt request source defined
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   522   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   523   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   524  IFX_EXTERN void IfxStm_setCompareControl(Ifx_STM *stm, IfxStm_Comparator comparator, IfxStm_ComparatorOffset offset, IfxStm_ComparatorSize size, IfxStm_ComparatorInterrupt interrupt);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   525  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   526  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   528  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   529  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   530  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   531  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   532  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   533   * \param stm pointer STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   534   * \param mode mode selection (enable/ disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   535   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   536   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   537  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   539  /** \brief Returns the STM counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   540   * \return Returns the STM counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   541   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   542  IFX_INLINE sint64 IfxStm_now(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   544  /** \brief Get the deadline value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   545   * \param timeout timeout value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   546   * \return Return the deadline
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   548  IFX_INLINE sint64 IfxStm_getDeadLine(sint64 timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   550  /** \brief Checked if deadline has occured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   551   * \param deadLine Deadline value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   552   * \return Return if deadline occured or not
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   553   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   554  IFX_INLINE boolean IfxStm_isDeadLine(sint64 deadLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   555  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   556  /** \brief Waits for a specific time
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   557   * \param timeout timeout value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   558   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   559   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   560  IFX_INLINE void IfxStm_wait(sint64 timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   561  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   562  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   563  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   564  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   566  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   567   * \param stm pointer to STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   568   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   570  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   572  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   573  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   574  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   576  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   577  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   578      uint64 result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   579  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   580      result  = stm->TIM0.U;
	ld.w	d0,0xf0001010
.L125:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     2   * \file Bsp.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     3   * \brief Board support package
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     4   * \ingroup library_srvsw_sysse_bsp_bsp
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     7   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     8   * $Date: 2014-02-28 14:15:35 GMT$
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    41   * \defgroup library_srvsw_sysse_bsp_bsp Board support package
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    42   * This module implements the board support package
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    43   * \ingroup library_srvsw_sysse_bsp
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    45   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    46  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    47  #ifndef BSP_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    48  #define BSP_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    50  #include "Ifx_Cfg.h"                   /* Do not remove this include */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    51  #include "Cpu/Std/IfxCpu_Intrinsics.h" /* Do not remove this include */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    52  #include "_Utilities/Ifx_Assert.h"     /* Do not remove this include */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    53  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    54  #include "Cpu/Std/IfxCpu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    55  #include "Port/Std/IfxPort.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    56  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    57  #include "Stm/Std/IfxStm.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    60  #ifndef BSP_DEFAULT_TIMER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    61  /** Defined the default timer used */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    62  #define BSP_DEFAULT_TIMER (&MODULE_STM0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    63  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    64  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    66  /*                           Function prototypes                              */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    67  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    68  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    69  /** \addtogroup library_srvsw_sysse_bsp_bsp
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    70   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    71  /** \name Interrupt APIs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    72   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    73  IFX_INLINE boolean areInterruptsEnabled(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    74  IFX_INLINE boolean disableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    75  IFX_INLINE void    enableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    76  IFX_INLINE void    restoreInterrupts(boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    77  IFX_INLINE void    forceDisableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    78  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    79  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    80  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    81  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    82  /*                           Functions                                        */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    83  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    84  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    85  /** \brief Return the status of the global interrupts
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    86   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    87   * \retval TRUE if the global interrupts are enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    88   * \retval FALSE if the global interrupts are disabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    89   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    90   * \see restoreInterrupts(), disableInterrupts()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    91   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    92  IFX_INLINE boolean areInterruptsEnabled(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    93  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    94      return IfxCpu_areInterruptsEnabled();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    95  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    98  /** \brief Disable the global interrupts
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    99   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   100   * \retval TRUE if the global interrupts were enabled before the call to the function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   101   * \retval FALSE if the global interrupts are disabled before the call to the function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   102   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   103   * \see areInterruptsEnabled(), restoreInterrupts()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   104   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   105  IFX_INLINE boolean disableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   106  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   107      return IfxCpu_disableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   108  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   109  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   110  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   111  /** \brief Disable the global interrupts forcefully
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   112   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   113   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   114   * \see areInterruptsEnabled(), restoreInterrupts()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   115   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   116  IFX_INLINE void forceDisableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   117  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   118      IfxCpu_forceDisableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   119  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   120  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   121  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   122  /** \brief enable the global interrupts
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   123   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   124   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   125  IFX_INLINE void enableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   126  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   127      IfxCpu_enableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   128  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   129  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   130  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   131  /** \brief Restore the state of the global interrupts.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   132   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   133   * \param enabled if TRUE, re-enable the global interrupts, else do nothing.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   134   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   135   * \return None.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   136   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   137   * \see areInterruptsEnabled(), disableInterrupts()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   139  IFX_INLINE void restoreInterrupts(boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   141      IfxCpu_restoreInterrupts(enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   142  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   143  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   144  /** \internal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   145   *  Array containing the time constants. This variable should not be used in the application. TimeConst_0s, TimeConst_10ns, ...  should be used instead
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   146   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   147   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   148  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   150  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   151  /*                           Function prototypes                              */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   152  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   153  /** \addtogroup library_srvsw_sysse_bsp_bsp
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   154   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   155  /** \name Time APIs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   156   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   157  IFX_INLINE Ifx_TickTime addTTime(Ifx_TickTime a, Ifx_TickTime b);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   158  IFX_INLINE Ifx_TickTime elapsed(Ifx_TickTime since);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   159  IFX_INLINE Ifx_TickTime getDeadLine(Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   160  IFX_INLINE Ifx_TickTime getTimeout(Ifx_TickTime deadline);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   161  IFX_EXTERN void         initTime(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   162  IFX_INLINE boolean      isDeadLine(Ifx_TickTime deadLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   163  IFX_INLINE Ifx_TickTime now(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   164  IFX_INLINE Ifx_TickTime nowWithoutCriticalSection(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   165  IFX_INLINE boolean      poll(volatile boolean *test, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   166  IFX_INLINE Ifx_TickTime timingNoInterruptEnd(Ifx_TickTime since, boolean interruptEnabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   167  IFX_INLINE Ifx_TickTime timingNoInterruptStart(boolean *interruptEnabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   168  IFX_INLINE void         wait(Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   169  IFX_EXTERN void         waitPoll(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   170  IFX_EXTERN void         waitTime(Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   171  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   172  /** Prototype for wait() functions */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   173  typedef void (*WaitTimeFunction)(Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   175  /**\}*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   176  /**\}*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   177  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   178  /*                           Functions                                        */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   179  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   181  /** \brief Return system timer value (critical section).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   182   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   183   * The function IfxStm_get() is called in a critical section, disabling
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   184   * the interrupts. The system timer value is limited to TIME_INFINITE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   185   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   186   * \return Returns system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   187   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   188  IFX_INLINE Ifx_TickTime now(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   189  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   190      Ifx_TickTime stmNow;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   191      boolean      interruptState;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   192  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   193      interruptState = disableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   194      stmNow         = (Ifx_TickTime)IfxStm_get(BSP_DEFAULT_TIMER) & TIME_INFINITE;
	ld.d	e2,.2.cnt
.L126:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   581      result |= ((uint64)stm->CAP.U) << 32;
	ld.w	d1,0xf000102c
.L83:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     2   * \file Bsp.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     3   * \brief Board support package
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     4   * \ingroup library_srvsw_sysse_bsp_bsp
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     7   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     8   * $Date: 2014-02-28 14:15:35 GMT$
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    41   * \defgroup library_srvsw_sysse_bsp_bsp Board support package
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    42   * This module implements the board support package
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    43   * \ingroup library_srvsw_sysse_bsp
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    45   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    46  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    47  #ifndef BSP_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    48  #define BSP_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    50  #include "Ifx_Cfg.h"                   /* Do not remove this include */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    51  #include "Cpu/Std/IfxCpu_Intrinsics.h" /* Do not remove this include */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    52  #include "_Utilities/Ifx_Assert.h"     /* Do not remove this include */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    53  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    54  #include "Cpu/Std/IfxCpu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    55  #include "Port/Std/IfxPort.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    56  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    57  #include "Stm/Std/IfxStm.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    60  #ifndef BSP_DEFAULT_TIMER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    61  /** Defined the default timer used */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    62  #define BSP_DEFAULT_TIMER (&MODULE_STM0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    63  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    64  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    66  /*                           Function prototypes                              */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    67  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    68  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    69  /** \addtogroup library_srvsw_sysse_bsp_bsp
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    70   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    71  /** \name Interrupt APIs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    72   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    73  IFX_INLINE boolean areInterruptsEnabled(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    74  IFX_INLINE boolean disableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    75  IFX_INLINE void    enableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    76  IFX_INLINE void    restoreInterrupts(boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    77  IFX_INLINE void    forceDisableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    78  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    79  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    80  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    81  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    82  /*                           Functions                                        */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    83  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    84  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    85  /** \brief Return the status of the global interrupts
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    86   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    87   * \retval TRUE if the global interrupts are enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    88   * \retval FALSE if the global interrupts are disabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    89   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    90   * \see restoreInterrupts(), disableInterrupts()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    91   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    92  IFX_INLINE boolean areInterruptsEnabled(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    93  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    94      return IfxCpu_areInterruptsEnabled();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    95  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    98  /** \brief Disable the global interrupts
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    99   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   100   * \retval TRUE if the global interrupts were enabled before the call to the function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   101   * \retval FALSE if the global interrupts are disabled before the call to the function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   102   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   103   * \see areInterruptsEnabled(), restoreInterrupts()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   104   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   105  IFX_INLINE boolean disableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   106  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   107      return IfxCpu_disableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   108  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   109  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   110  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   111  /** \brief Disable the global interrupts forcefully
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   112   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   113   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   114   * \see areInterruptsEnabled(), restoreInterrupts()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   115   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   116  IFX_INLINE void forceDisableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   117  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   118      IfxCpu_forceDisableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   119  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   120  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   121  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   122  /** \brief enable the global interrupts
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   123   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   124   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   125  IFX_INLINE void enableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   126  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   127      IfxCpu_enableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   128  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   129  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   130  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   131  /** \brief Restore the state of the global interrupts.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   132   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   133   * \param enabled if TRUE, re-enable the global interrupts, else do nothing.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   134   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   135   * \return None.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   136   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   137   * \see areInterruptsEnabled(), disableInterrupts()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   139  IFX_INLINE void restoreInterrupts(boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   141      IfxCpu_restoreInterrupts(enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   142  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   143  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   144  /** \internal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   145   *  Array containing the time constants. This variable should not be used in the application. TimeConst_0s, TimeConst_10ns, ...  should be used instead
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   146   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   147   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   148  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   150  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   151  /*                           Function prototypes                              */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   152  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   153  /** \addtogroup library_srvsw_sysse_bsp_bsp
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   154   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   155  /** \name Time APIs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   156   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   157  IFX_INLINE Ifx_TickTime addTTime(Ifx_TickTime a, Ifx_TickTime b);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   158  IFX_INLINE Ifx_TickTime elapsed(Ifx_TickTime since);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   159  IFX_INLINE Ifx_TickTime getDeadLine(Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   160  IFX_INLINE Ifx_TickTime getTimeout(Ifx_TickTime deadline);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   161  IFX_EXTERN void         initTime(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   162  IFX_INLINE boolean      isDeadLine(Ifx_TickTime deadLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   163  IFX_INLINE Ifx_TickTime now(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   164  IFX_INLINE Ifx_TickTime nowWithoutCriticalSection(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   165  IFX_INLINE boolean      poll(volatile boolean *test, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   166  IFX_INLINE Ifx_TickTime timingNoInterruptEnd(Ifx_TickTime since, boolean interruptEnabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   167  IFX_INLINE Ifx_TickTime timingNoInterruptStart(boolean *interruptEnabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   168  IFX_INLINE void         wait(Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   169  IFX_EXTERN void         waitPoll(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   170  IFX_EXTERN void         waitTime(Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   171  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   172  /** Prototype for wait() functions */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   173  typedef void (*WaitTimeFunction)(Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   175  /**\}*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   176  /**\}*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   177  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   178  /*                           Functions                                        */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   179  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   181  /** \brief Return system timer value (critical section).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   182   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   183   * The function IfxStm_get() is called in a critical section, disabling
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   184   * the interrupts. The system timer value is limited to TIME_INFINITE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   185   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   186   * \return Returns system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   187   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   188  IFX_INLINE Ifx_TickTime now(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   189  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   190      Ifx_TickTime stmNow;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   191      boolean      interruptState;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   192  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   193      interruptState = disableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   194      stmNow         = (Ifx_TickTime)IfxStm_get(BSP_DEFAULT_TIMER) & TIME_INFINITE;
	and	d4,d0,d2
.L86:
	and	d5,d1,d3
	fret
.L28:
	; End of function
	.sdecl	'.text.Ifx_DateTime.DateTime_set',code,cluster('DateTime_set')
	.sect	'.text.Ifx_DateTime.DateTime_set'
	.align	2
	
	.global	DateTime_set

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    92  
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    93  
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    94  /** \brief Set the real time */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    95  void DateTime_set(Ifx_DateTime *dt)
; Function DateTime_set
.L9:
DateTime_set:	.type	func

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    42   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    43   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    44   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    45   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    46   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    47   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    48   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    49   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    50   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    51   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    52   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    53   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    54   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    55   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    56   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    57   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    60  #ifndef IFXCPU_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    61  #define IFXCPU_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    64  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    67  #include "_Impl/IfxCpu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    68  #include "IfxSrc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    69  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    70  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    71  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    72  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    73  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    74  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    75  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    77  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    78  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    80  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    81   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    82   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    83   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    84   * Example usage:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    85   *  \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    86   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    87   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    88   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    89   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    90  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    92  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    93   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    94   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    95   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    96   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    97   *   Example usage:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    98   *   \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    99   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   100   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   101   *   \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   103  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   105  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   106  /*------------------------------Type Definitions------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   107  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   109  /** \brief Lock type Spin lock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   111  typedef unsigned int IfxCpu_spinLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   113  /** \brief Lock type Mutex lock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   114   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   115  typedef unsigned int IfxCpu_mutexLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   116  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   117  /** \brief Event used for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   118   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   119  typedef unsigned int IfxCpu_syncEvent;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   120  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   121  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   122  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   123  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   124  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   125  /** \addtogroup IfxLld_Cpu_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   126   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   127  /** \brief Enumeration for the Cpu mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   129  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   130  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   131      IfxCpu_CoreMode_halt,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   132      IfxCpu_CoreMode_run,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   133      IfxCpu_CoreMode_idle,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_sleep,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_stby,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_unknown
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   137  } IfxCpu_CoreMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   139  /** \brief Performance conunter modes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   140   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   141  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   142  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   143      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   144      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   145  } IfxCpu_CounterMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   147  /** \brief Overlay Address Mask: determines the overlay block size and the bits used for address comparison and translation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   148   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   149  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   150  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   151      IfxCpu_OverlayAddressMask_32byte  = 0xFFF,  /**< \brief 32 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   152      IfxCpu_OverlayAddressMask_64byte  = 0xFFE,  /**< \brief 64 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   153      IfxCpu_OverlayAddressMask_128byte = 0xFFC,  /**< \brief 128 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   154      IfxCpu_OverlayAddressMask_256byte = 0xFF8,  /**< \brief 256 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   155      IfxCpu_OverlayAddressMask_512byte = 0xFF0,  /**< \brief 512 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   156      IfxCpu_OverlayAddressMask_1KB     = 0xFE0,  /**< \brief 1K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   157      IfxCpu_OverlayAddressMask_2KB     = 0xFC0,  /**< \brief 2K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   158      IfxCpu_OverlayAddressMask_4KB     = 0xF80,  /**< \brief 4K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   159      IfxCpu_OverlayAddressMask_8KB     = 0xF00,  /**< \brief 8K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   160      IfxCpu_OverlayAddressMask_16KB    = 0xE00,  /**< \brief 16K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   161      IfxCpu_OverlayAddressMask_32KB    = 0xC00,  /**< \brief 32K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   162      IfxCpu_OverlayAddressMask_64KB    = 0x800,  /**< \brief 64K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   163      IfxCpu_OverlayAddressMask_128KB   = 0x0     /**< \brief 128K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_OverlayAddressMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   166  /** \brief Selects overlay memory used for redirection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   167   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   168  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   169  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   170      IfxCpu_OverlayMemorySelect_core0DsprPspr = 0,  /**< \brief Redirection to Core 0 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   171      IfxCpu_OverlayMemorySelect_core1DsprPspr = 1,  /**< \brief Redirection to Core 1 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   172      IfxCpu_OverlayMemorySelect_core2DsprPspr = 2,  /**< \brief Redirection to Core 2 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   173      IfxCpu_OverlayMemorySelect_core3DsprPspr = 3,  /**< \brief Redirection to Core 3 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_OverlayMemorySelect_core4DsprPspr = 4,  /**< \brief Redirection to Core 4 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_OverlayMemorySelect_core5DsprPspr = 5,  /**< \brief Redirection to Core 5 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_OverlayMemorySelect_lmu           = 8,  /**< \brief Redirection to LMU memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_OverlayMemorySelect_emem          = 9,  /**< \brief Redirection to EMEM memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_OverlayMemorySelect_ebu           = 10  /**< \brief Redirection to EBU memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_OverlayMemorySelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   181  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   182  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   183      IfxCpu_ResetStatus_notCpuReset   = 0,  /**< \brief No Kernel Reset was executed */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   184      IfxCpu_ResetStatus_cpuResetBySmu = 1,  /**< \brief Kernel reset was requested by hardware since last clear (SMU) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   185      IfxCpu_ResetStatus_cpuResetBySw  = 2   /**< \brief Kernel reset was requested by software since last clear (by writing KRST0.RST=1 and KRST1.RST=1) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   186  } IfxCpu_ResetStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   188  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   189  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   191  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   192  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   193  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   194  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   195   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief counter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   198  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   199  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   200      uint32  counter;        /**< \brief Counter value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   201      boolean overlfow;       /**< \brief sticky overlfow */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   202  } IfxCpu_Counter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   203  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   204  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   205  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   206  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   207   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   208  /** \brief Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   209   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   210  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   211  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   212      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   213      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   214      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   215      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   216      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   217  } IfxCpu_Perf;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   218  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   219  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   221  /** \addtogroup IfxLld_Cpu_Std_Core
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   222   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   223  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   224  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   225  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   226  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   228  /** \brief API to get the address for CPU HW module register memory map
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   229   * \param cpu Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   230   * \return CPU module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   232  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   234  /** \brief API to get core id of the CPU of the caller.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   235   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   236   * Use IfxCpu_getCoreIndex() to get cpu no.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   237   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   239  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   241  /** \brief API to get cpu index of the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   242   * Note: This api can be used whereever cpu no/index is needed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   243   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   245  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   247  /** \brief API to initialize the context save area of the CPU where this is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   248   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   249   * This API can initialize the CSA of the host CPU where this API is called. This API
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   250   * shall not be used to initialize the CSA of another CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   251   * \param csaBegin Pointer to start of context save area
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   252   * \param csaEnd Pointer to end of context save area
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   253   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   254   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   255  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   257  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   258   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   259   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   260  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   261  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   262  /** \brief Triggers Software Reset
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   265  IFX_INLINE void IfxCpu_triggerSwReset(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   268  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   271  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   272   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   273   * \return Current mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   275  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   277  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   278   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   279   * \return Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   280   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   281  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   283  /** \brief API to set mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   284   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   285   * \param mode CPU mode to be set by this API
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   286   * \return Success status of the activity (setting the core mode).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   287   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   288   * \retval FALSE: If the activity can't be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   289   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   290  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   291  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   292  /** \brief API to set the program counter for the CPU specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   293   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   294   * \param programCounter Program counter value to be set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   295   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   296   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   297   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   298   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   299  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   301  /** \brief API to set the program counter for the CPU specified and start the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   302   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   303   * \param programCounter Program counter value to start the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   304   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   305   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   306   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   307   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   309  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief To request reset of a particular core, given by coreId
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   311   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   313  IFX_EXTERN void IfxCpu_triggerCpuReset(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   315  /** \brief Retrieve the cause of reset(no reset, hardware(SMU) or software) since last clear by reading KRST0.RSTSTAT and clear it.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_EXTERN IfxCpu_ResetStatus IfxCpu_getCpuResetStatus(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   323  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   327  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   329   * This API provides the status of CPU where this API is called
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   330   * \return Status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   331   * \retval TRUE: Global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   332   * \retval FALSE: Global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   333   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   334  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   335  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   336  /** \brief API to disable global interrupt and return the previous status.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   338   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   339   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   340   * \return Previous status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   341   * \retval TRUE: Previously, global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   342   * \retval FALSE: Previously, global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to enable global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   347   * This API simply enables the global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   348   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   349   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   350  IFX_INLINE void IfxCpu_enableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   352  /** \brief Disable the Global Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   353   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to restore global interrupt with that of the passed parameter.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   358   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enabled Previous status of the global interrupt enable bit
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   362   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   363   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   364  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   366  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   367  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   368  /** \addtogroup IfxLld_Cpu_Std_Cache
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   369   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   370  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   371  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   372  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   373  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   375  /** \brief API to enable/ disable the data cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   376   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   377   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   378   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   379   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   380   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   382  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   384  /** \brief API to enable/ disable the instruction cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   385   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   386   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   387   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   388   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   389   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   390   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   391  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   392  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   393  /** \brief API to invalidate the program cache
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   394   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   395   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   396  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   397  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   398  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   399   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   400   * \return Status TRUE/FALSE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   401   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   402  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   403  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   404  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   406   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   407   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   408   * \param enable Command to enable or bypass the data cache
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   409   * TRUE: Enable the data cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   410   * FALSE: Bypass the data cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   413  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   415  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   416   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   417   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   418   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   419   * \param enable Command to enable or bypass the program cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   420   * TRUE: Enable the program cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   421   * FALSE: Bypass the program cache
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   422   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   423   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   424  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   426  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   428  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   429   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   430  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   431  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   432  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   433  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   434  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   435  /** \brief API to read the clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   436   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   437   * This API can be used to read clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   438   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   440   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   442  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   444   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   445   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   446   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   447   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   448   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   449   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   450   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   451   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   452   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   454  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   456  /** \brief API to read the instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   457   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   458   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   459   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   460   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   462  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   464  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   465   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   466   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   467   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   468   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   469   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   470   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   471   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   472   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   473   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   474   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   475  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   476  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   477  /** \brief API to read the performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   478   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   479   * \return counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   481  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   483  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   484   * This is generic function to get sticky overflow bit of any performance counters
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   485   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   486   * \return Status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   487   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   489  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief Reset and start instruction, clock and multi counters
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   491   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   492   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   493   * \param mode Counter mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   495   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   498  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   499   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   500   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   501   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   502   * \param enable enable Command to enable or disable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   503   * TRUE: Enable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   504   * FALSE: Disable the performance counter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   505   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   507  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   509  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   510  /** \brief Stop instruction and clock counters, return their values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   511   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   512   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   513   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   514   * \return Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   515   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   516  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   517  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   519  /** \brief API to update clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   520   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   521   * This API can be used to update clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   522   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   523   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   524   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   525   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   526  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   528  /** \brief API to update Instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   529   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   530   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   531   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   532   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   533   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   534   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   535  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   536  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   537  /** \brief API to update performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   538   * This is generic function to update any of the performance counters
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   539   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   540   * \param count Count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   541   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   542   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   543  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   545  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   547  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   548   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   550  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   551  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   552  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   554  /** \brief API to acquire the mutex (binary semaphore).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   555   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   556   * This API can be used to acquire/get the mutex.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   557   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   558   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   559   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   560   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   561   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   562   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   563   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   564   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   565   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   566   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   567   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   568   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   570  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   572  /** \brief API to unlock the mutex .
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   573   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   574   * This API can be used to unlock the previously acquired mutex
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   575   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   578   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   579   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   580   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   581   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   582   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   583   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   584   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   585   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   586   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   588  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   590  /** \brief API to unlock the resource .
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   591   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   592   * This API can be used to unlock the previously acquired lock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   593   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   594   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   595   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   596  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   597  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   598  /** \brief API to lock the resource in spin mode with the given timeout.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   599   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   600   * This API can be used to spin lock for the lock for the given timeout period.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   601   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   602   * \param timeoutCount loop counter value used for timeout to acquire lock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   603   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   604   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   605   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   606   *    IfxCpu_spinLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   607   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   608   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   609   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   610   *      IfxCpu_resetSpinLock(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   611   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   612   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   613   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   614   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   615  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   616  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   617  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   619  /** \addtogroup IfxLld_Cpu_Std_Utility
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   620   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   621  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   622  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   623  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   624  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   626  /** \brief This function disables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   627   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   628   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   629   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   630   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   631  IFX_EXTERN void IfxCpu_disableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   633  /** \brief This function configures and enables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   634   * Note:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   635   * The data overlay provides the capability to redirect selected data accesses to the Overlay memory. Data accesses made by the TriCore to Program Flash, Online Data Acquisition space, or EBU space can be redirected. Overlay memory may be located in the Local Memory (if present), in the Emulation Memory (Emulation Device only), or in the EBU space,or in the DPSR/PSPR memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   636   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   637   * How the overlay Memory works?
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   638   * Any data access to segment 8 or segment A is checked against all the activated overlay blocks. For each activated overlay block, address bits 27..5 are compared with the target base address , and this bit-wise comparison is qualified by the content of address mask. Address bits participate in the comparison if the corresponding mask bits are set to one. The access is redirected, if all the address bits selected by mask equal to the corresponding bits in target address.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   639   * The address for redirection is constructed as follows:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   640   * 1. Address bits 31..22 are set according to the overlay memory selection and the cache-ability of the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   641   * 2. For address bits 21..5:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   642   * - If the corresponding address mask bit is set, the address bit value is taken from overlay base address .
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   643   * - If the corresponding address mask bit is cleared, the address bit value is taken from the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   644   * 3. Address bits 4..0 are always taken directly from the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   645   * If there is no redirection, the original address is used to perform the access.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   646   * Target address ranges for activated overlay blocks should not overlap or an exception may occur.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   647   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   648   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   649   * \param overlayMemorySelect Overlay Memory Select
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   650   * \param overlayAddressMask overlay Address Mask
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   651   * \param targetBaseAddress Target Base address (i.e Source address to be re-directed)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   652   * \param overlayBaseAddress Overlay or Re-directed Base address (Bits 21..5 of the base address the overlay memory block in the overlay memory)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   653   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   654   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   655  IFX_EXTERN void IfxCpu_enableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock, IfxCpu_OverlayMemorySelect overlayMemorySelect, IfxCpu_OverlayAddressMask overlayAddressMask, uint32 targetBaseAddress, uint32 overlayBaseAddress);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   657  /** \brief API to get random value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   658   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   659   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   660   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   661  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   663  /** \brief API to get random value with in the range
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   664   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   665   * \param min minimum range value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   666   * \param max maximum range value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   667   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   668   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   670  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   671  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   672   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   673   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   674   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   675   * CORE_ID register.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   676   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   677   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   678   * e.g:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   679   * 1. Check for synchronisation between core 0 and core 5
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   680   * # define 0x41U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   681   * 2. Check for synchronisation between core 0 to core 5
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   682   * # define 0x5FU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   683   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   684   * Note:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   685   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   686   * Core 0: 0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   687   * Core 1: 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   688   * Core 2: 2
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   689   * Core 3: 3
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   690   * Core 4: 4
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   691   * Core 5: 6
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   692   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   693   * \param timeoutMilliSec timeout in millisec
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   694   * \return Error condition
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   695   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   696   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   697   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   698   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   699   * // Global variable. preferably located in  shared memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   700   * IfxCpu_syncEvent event;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   701   * boolean errorVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   702   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   703   * // Below code should be repeated in Each core
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   704   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   705   * // Upon reaching Synchonisation point
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   706   * IfxCpu_emitEvent(&event);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   707   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   708   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   709   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   710   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   711   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   712  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   713  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   714  /** \brief This function sets a bit corresponding to the core in the event.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   715   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   716   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   717   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   718   * A coding example can be found in \ref IfxCpu_waitEvent
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   719   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   720   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   721  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   723  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   725  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   726  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   727  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   728  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   729  /** \brief Sets all CPUs to Idle mode except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   730   * \param masterCpu Master CPU Index- All except this will be set to Idle Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   731   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   732   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   733  IFX_EXTERN void IfxCpu_setAllIdleExceptMasterCpu(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   735  /** \brief Disables interrupts for all CPUs except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   736   * \param masterCpu Master CPU Index- All except this will have their interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   737   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   738   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   739  IFX_EXTERN void IfxCpu_disableInterruptsAllExceptMaster(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   740  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   741  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   742  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   743  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   744  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   745  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   746  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   747      Ifx_CPU_ICR reg;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   748      reg.U = __mfcr(CPU_ICR);
	mfcr	d15,#65068
.L89:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   749      return reg.B.IE != 0;
	extr.u	d15,d15,#15,#1
.L90:
	ne	d15,d15,#0
.L46:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   750  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   751  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   752  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   753  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   754  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   755      boolean enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   756      enabled = IfxCpu_areInterruptsEnabled();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   757      __disable();
	disable
.L100:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   758      __nop();
	nop
.L41:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    41   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    42   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    43   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    44   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    45   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    46   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    48   * \section IfxLld_Stm_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    49   * \subsection IfxLld_Stm_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    50   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    51   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    52   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    53   * #include <Stm/Std/IfxStm.h>
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    54   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    55   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    56   * \subsection IfxLld_Stm_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    57   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    58   * Declare STM variables :
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    59   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    60   * Ifx_STM *stmSfr;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    61   * IfxStm_CompareConfig stmConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    62   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    63   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    64   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    65   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    66   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    67   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    68   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    69   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    70   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    71   * #define IFX_INTPRIO_STM0_SR0  10
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    72   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    73   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    74   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    75   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    76   * evry time the specified number of ticks have been elapsed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    77   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    78   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    79   * {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    80   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    81   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    82   * }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    83   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    84   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    85   * Finally install the interrupt handlers in your initialisation function:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    86   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    87   *     // install interrupt handlers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    88   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    89   *     IfxCpu_enableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    90   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    91   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    92   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    93   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    94   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    95   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    96   * The module initialisation can be done as followed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    97   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    98   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    99   *     stmSfr = &MODULE_STM0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   100   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   101   *     IfxStm_initCompareConfig(&stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   102   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   103   *     // configure to generate interrupt every 10 us
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   104   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   105   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   106   *     stmConfig.ticks = ticks;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   107   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   108   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   109   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   110   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   111   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   112   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   113   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   114   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   115   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   116   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   117   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   118   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   119   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   120   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   121   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   122   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   123   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   124   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   125   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   126   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   127   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   129  #ifndef IFXSTM_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   130  #define IFXSTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   131  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   132  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   133  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   134  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   136  #include "_Impl/IfxStm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   137  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   138  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   139  #include "IfxCbs_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   140  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   141  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   142  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   143  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   144  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   145  #ifndef IFXSTM_DEFAULT_TIMER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   146  #define IFXSTM_DEFAULT_TIMER (&MODULE_STM0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   147  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   148  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   149  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   150  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   151  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   152  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   153  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   154   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   155  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   156   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   157  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   158  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   159      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   160      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   161  } IfxStm_Comparator;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   162  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   163  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   169  } IfxStm_ComparatorInterrupt;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   171  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   172   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   173  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   174  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   181      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   182      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   183      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   184      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   185      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   186      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   207  } IfxStm_ComparatorOffset;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   209  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   210   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   211  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   212  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   219      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   220      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   221      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   222      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   223      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   224      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   225      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   228      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   229      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   230      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   231      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   232      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   233      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   234      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   235      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   236      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   237      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   238      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   239      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   240      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   241      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   242      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   245  } IfxStm_ComparatorSize;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   247  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   248   * Definition in Ifx_STM.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   249   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   250  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   251  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   252      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   253      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   254  } IfxStm_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   256  /** \brief OCDS Suspend Control (OCDS.SUS)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   258  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   259  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   260      IfxStm_SuspendMode_none = 0,  /**< \brief No suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   261      IfxStm_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   262      IfxStm_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   263  } IfxStm_SuspendMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   264  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   265  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   268  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   271  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   272   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   273  /** \brief Comparator Configuration Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   275  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   277      IfxStm_Comparator          comparator;                /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   278      IfxStm_ComparatorInterrupt comparatorInterrupt;       /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   279      IfxStm_ComparatorOffset    compareOffset;             /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   280      IfxStm_ComparatorSize      compareSize;               /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   281      uint32                     ticks;                     /**< \brief count for next comparison from current timer count. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   282      Ifx_Priority               triggerPriority;           /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   283      IfxSrc_Tos                 typeOfService;             /**< \brief Type of service. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   284  } IfxStm_CompareConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   286  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   287  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   288  /** \addtogroup IfxLld_Stm_Std_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   289   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   290  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   291  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   292  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   295  /** \brief Returns system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   296   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   297   * \return system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   298   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   299  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   301  /** \brief Returns the system timer frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   302   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   303   * \return the system timer frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   304   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   305  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   306  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   307  /** \brief Returns the module's suspend state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   308   * TRUE :if module is suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   309   * FALSE:if module is not yet suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   310   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   311   * \return Suspend status (TRUE / FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   313  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   315  /** \brief Configure the Module to Hard/Soft suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   316   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   317   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   318   * \param mode Module suspend mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   319   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   321  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   323  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   324  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   325  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   326  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   327  /** \brief Disables the Stm module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   329   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   330   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   331  IFX_EXTERN void IfxStm_disableModule(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   332  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   333  /** \brief enable suspend by debugger.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   334   * Note: The API will write into the OCS register only if OCDS is enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   335   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   336   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   337   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   338  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   340  /** \brief Returns the module index of the selected STM module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   341   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   342   * \return STM module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   344  IFX_EXTERN Ifx_STM *IfxStm_getAddress(IfxStm_Index stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   346  /** \brief API to get the resource index of the STM specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   347   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   348   * \return system timer module index.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   349   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   350  IFX_EXTERN IfxStm_Index IfxStm_getIndex(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   352  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   353  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   354  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   355   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   357  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   358  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   361  /** \brief Returns the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   362   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   363   * \return the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   365  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   367  /** \brief Gets the TIM3 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   368   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   369   * \return TIM3 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   370   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   371  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   372  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   373  /** \brief Gets the TIM4 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   374   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   375   * \return TIM4 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   376   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   377  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   378  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   379  /** \brief Gets the TIM5 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   380   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   381   * \return TIM5 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   382   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   383  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   384  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   385  /** \brief Gets the TIM6 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   386   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   387   * \return TIM6 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   388   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   389  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   390  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   391  /** \brief Gets the TIM1 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   392   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   393   * \return TIM1 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   394   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   395  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   396  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   397  /** \brief Gets the TIM2 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   398   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   399   * \return TIM2 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   400   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   401  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   403  /** \brief Returns the timer value shifted right by offset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   404   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   405   * \param offset offset value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   406   * \return the lower system timer value shifted by offset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   407   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   408  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   410  /** \brief Wait for requested time.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   411   * The macro waits in while loop for the specified time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   413   * \param ticks ticks Wait time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   414   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   416  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   417  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   418  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   420  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   421   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   422  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   423  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   424  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   425  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   426  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   427  /** \brief Returns the updated compare register value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   428   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   429   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   430   * \return The compare value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   431   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   432  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   434  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   435   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   436   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   437   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   439  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   441  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   442   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   443   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   444   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   446  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   448  /** \brief Update the compare register value increased with given ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   449   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   450   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   451   * \param ticks count for next comparison from current timer count.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   452   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   454  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   456  /** \brief Update the compare register value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   457   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   458   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   459   * \param ticks count for next comparison.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   460   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   462  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   464  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   465  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   466  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   468  /** \brief Clear the compare interrupt flag.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   469   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   470   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   473  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   475  /** \brief Disables the compare interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   476   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   477   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   478   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   479   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   480  IFX_EXTERN void IfxStm_disableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   481  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   482  /** \brief Enables the compare interrupt .
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   483   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   484   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   485   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   486   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   487  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   488  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   489  /** \brief get the interrupt source pointer for the comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   490   * \param stm pointer to the STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   491   * \param comparator comparator selection comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   492   * \return pointer to the interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   494  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxStm_getSrcPointer(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   496  /** \brief Initialise stm compare register.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   497   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   498   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   499   * \return TRUE if Comparator successful otherwise FLASE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   501  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   503  /** \brief Initialise compare configuration with default values.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   504   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   505   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   507  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   509  /** \brief Indicates if the compare interrupt flag is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   510   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   511   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   512   * \return TRUE if the comparator flag is set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   513   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   514  IFX_EXTERN boolean IfxStm_isCompareFlagSet(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   515  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   516  /** \brief Set the compare behavior
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   517   * \param stm pointer to System timer module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   518   * \param comparator comparator selection comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   519   * \param offset Comparator start bit position
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   520   * \param size Size of compare value to compare with timer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   521   * \param interrupt Comparator Interrupt request source defined
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   522   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   523   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   524  IFX_EXTERN void IfxStm_setCompareControl(Ifx_STM *stm, IfxStm_Comparator comparator, IfxStm_ComparatorOffset offset, IfxStm_ComparatorSize size, IfxStm_ComparatorInterrupt interrupt);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   525  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   526  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   528  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   529  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   530  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   531  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   532  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   533   * \param stm pointer STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   534   * \param mode mode selection (enable/ disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   535   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   536   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   537  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   539  /** \brief Returns the STM counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   540   * \return Returns the STM counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   541   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   542  IFX_INLINE sint64 IfxStm_now(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   544  /** \brief Get the deadline value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   545   * \param timeout timeout value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   546   * \return Return the deadline
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   548  IFX_INLINE sint64 IfxStm_getDeadLine(sint64 timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   550  /** \brief Checked if deadline has occured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   551   * \param deadLine Deadline value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   552   * \return Return if deadline occured or not
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   553   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   554  IFX_INLINE boolean IfxStm_isDeadLine(sint64 deadLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   555  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   556  /** \brief Waits for a specific time
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   557   * \param timeout timeout value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   558   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   559   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   560  IFX_INLINE void IfxStm_wait(sint64 timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   561  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   562  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   563  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   564  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   566  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   567   * \param stm pointer to STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   568   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   570  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   572  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   573  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   574  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   576  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   577  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   578      uint64 result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   579  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   580      result  = stm->TIM0.U;
	fcall	.cocofun_3
.L51:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)      (inlined)
	jeq	d15,#0,.L3
.L101:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   759      return enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   760  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   761  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   762  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   763  IFX_INLINE void IfxCpu_enableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   764  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   765      __enable();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   766  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   768  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   769  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   770  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   771      uint32 cpu_pmaVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   772      uint16 checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   773      uint32 coreIndex   = IfxCpu_getCoreIndex();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   774      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   775  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   776      /*resolve the restrictions*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   777      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   778      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   779  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   780      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   781      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   782          segmentNumberMask |= checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   783      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   784  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   785      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   786  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   787      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   788  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   789      /*The CPU_PMA registers are ENDINIT protected*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   790      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   791      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   792      /*Write to PMA0 register for selecting the cacheability for data cache*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   793      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   794      __mtcr(CPU_PMA0, cpu_pmaVal);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   795      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   796      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   797  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   798  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   799  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   800  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   801  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   802      uint32 cpu_pmaVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   803      uint16 checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   804      uint32 coreIndex   = IfxCpu_getCoreIndex();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   805      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   806  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   807      /*resolve the restrictions*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   808      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   809      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   810  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   811      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   812      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   813          segmentNumberMask |= checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   814      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   815  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   816      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   817  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   818      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   819  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   820      /*The CPU_PMA registers are ENDINIT protected*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   821      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   822      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   823      /*Write to PMA1 register for selecting the cacheability for data cache*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   824      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   825      __mtcr(CPU_PMA1, cpu_pmaVal);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   826      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   827      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   828  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   829  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   830  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   831  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   832  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   833      __disable();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   834      __nop();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   835  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   836  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   837  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   838  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   839  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   840      Ifx_CPU *module;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   841  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   842      if (cpu < IfxCpu_ResourceCpu_none)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   843      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   844          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   845      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   846      else
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   847      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   848          module = NULL_PTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   849      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   850  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   851      return module;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   852  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   853  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   854  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   855  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   856  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   857      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   858  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   859  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   860  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   861  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   862  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   863      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   864  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   865  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   866  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   867  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   868  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   869      Ifx_CPU_CORE_ID reg;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   870      reg.U = __mfcr(CPU_CORE_ID);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   871      return (IfxCpu_Id)reg.B.CORE_ID;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   872  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   873  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   874  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   875  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   876  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   877      uint32 reg;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   878      reg = __mfcr(CPU_CORE_ID);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   879      return (IfxCpu_ResourceCpu)__minu(reg, 5);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   880  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   881  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   882  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   883  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   884  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   885      return IfxCpu_getPerformanceCounter(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   886  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   887  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   889  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   890  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   891      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   892  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   893  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   894  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   895  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   896  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   897      Ifx_CPU_CCNT ccnt;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   898  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   899      if (address == CPU_CCNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   900      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   901          ccnt.U = __mfcr(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   902      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   903      else if (address == CPU_ICNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   904      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   905          ccnt.U = __mfcr(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   906      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   907      else if (address == CPU_M1CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   908      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   909          ccnt.U = __mfcr(CPU_M1CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   910      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   911      else if (address == CPU_M2CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   912      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   913          ccnt.U = __mfcr(CPU_M2CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   914      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   915      else if (address == CPU_M3CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   916      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   917          ccnt.U = __mfcr(CPU_M3CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   918      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   919  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   920      return ccnt.B.COUNTVALUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   921  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   922  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   923  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   924  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   925  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   926      Ifx_CPU_CCNT ccnt;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   927  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   928      if (address == CPU_CCNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   929      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   930          ccnt.U = __mfcr(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   931      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   932      else if (address == CPU_ICNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   933      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   934          ccnt.U = __mfcr(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   935      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   936      else if (address == CPU_M1CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   937      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   938          ccnt.U = __mfcr(CPU_M1CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   939      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   940      else if (address == CPU_M2CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   941      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   942          ccnt.U = __mfcr(CPU_M2CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   943      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   944      else if (address == CPU_M3CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   945      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   946          ccnt.U = __mfcr(CPU_M3CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   947      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   948  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   949      return ccnt.B.SOVF;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   950  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   951  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   952  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   953  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   954  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   955      uint32  k;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   956      uint32  nxt_cxi_val = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   957      uint32 *prvCsa      = 0U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   958      uint32 *nxtCsa      = csaBegin;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   959      uint32  numOfCsa    = (((uint32)csaEnd - (uint32)csaBegin) / 64U);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   960  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   961      for (k = 0; k < numOfCsa; k++)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   962      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   963          nxt_cxi_val = ((uint32)nxtCsa & (0XFU << 28)) >> 12 | ((uint32)nxtCsa & (0XFFFFU << 6)) >> 6;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   964  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   965          if (k == 0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   966          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   967              __mtcr(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   968          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   969          else
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   970          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   971              *prvCsa = nxt_cxi_val;  /* Store null pointer in last CSA (= very first time!) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   972          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   973  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   974          if (k == (numOfCsa - 3U))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   975          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   976              __mtcr(CPU_LCX, nxt_cxi_val);   /* Last but 2 context save area is pointed in LCX to know if there is CSA depletion */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   977          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   978  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   979          prvCsa  = (uint32 *)nxtCsa;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   980          nxtCsa += 16;           /* next CSA */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   981      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   982  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   983      *prvCsa = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   984  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   985  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   986  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   987  IFX_INLINE void IfxCpu_invalidateProgramCache(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   988  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   989      uint16 cpuWdtPassword = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   990      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   991          IfxScuWdt_clearCpuEndinit(cpuWdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   992          Ifx_CPU_PCON1 pcon1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   993          pcon1.U       = __mfcr(CPU_PCON1);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   994          pcon1.B.PCINV = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   995          __mtcr(CPU_PCON1, pcon1.U);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   996          IfxScuWdt_setCpuEndinit(cpuWdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   997      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   998  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   999  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1000  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1001  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1002  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1003      uint8 segment = (uint32)address >> 24;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1004      return ((segment == IFXCPU_CACHABLE_FLASH_SEGMENT) || (segment == IFXCPU_CACHABLE_LMU_SEGMENT)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1005  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1006  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1007  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1008  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1009  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1010      Ifx_CPU_CCTRL cctrl;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1011      cctrl.U    = __mfcr(CPU_CCTRL);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1012      /*Disable the counters */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1013      cctrl.B.CE = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1014      __mtcr(CPU_CCTRL, cctrl.U);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1015  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1016      /* reset the counters */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1017      __mtcr(CPU_CCNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1018      __mtcr(CPU_ICNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1019      __mtcr(CPU_M1CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1020      __mtcr(CPU_M2CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1021      __mtcr(CPU_M3CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1022  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1023      /*Enable the counters, set the counter mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1024      cctrl.B.CE = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1025      cctrl.B.CM = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1026      __mtcr(CPU_CCTRL, cctrl.U);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1027  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1028  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1029  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1030  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1031  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1033      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1034          __enable();
	enable

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)      (inlined)
.L3:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    96  {
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    97      sint32 seconds = dt->seconds - ((sint32)(now() / TimeConst_1s));
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    98  
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    99      seconds          = seconds + (3600 * dt->hours);
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	   100      seconds          = seconds + (60 * dt->minutes);
	ld.w	d8,[a4]4
.L102:
	mov	d9,#60
	ld.w	d10,[a4]
.L103:
	mov	d11,#3600
	ld.w	d15,[a4]8
.L104:
	movh.a	a15,#@his(TimeConst)
	lea	a15,[a15]@los(TimeConst)
	ld.d	e6,[a15]64
.L105:
	call	__ll_div64
.L91:
	sub	d15,d2
.L106:
	madd	d15,d15,d10,d11
.L107:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	   101      g_DateTimeOffset = seconds;
	madd	d15,d15,d8,d9
	st.w	g_DateTimeOffset,d15
.L108:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	   102  }
	ret
.L33:
	
__DateTime_set_function_end:
	.size	DateTime_set,__DateTime_set_function_end-DateTime_set
.L18:
	; End of function
	
	.sdecl	'.bss.Ifx_DateTime.TimeConst',data,cluster('TimeConst')
	.sect	'.bss.Ifx_DateTime.TimeConst'
	.align	4
TimeConst:	.type	object
	.size	TimeConst,88
	.space	88
	.sdecl	'.zbss.Ifx_DateTime.g_DateTimeOffset',data,cluster('g_DateTimeOffset')
	.sect	'.zbss.Ifx_DateTime.g_DateTimeOffset'
	.global	g_DateTimeOffset
	.align	2
g_DateTimeOffset:	.type	object
	.size	g_DateTimeOffset,4
	.space	4
	.calls	'DateTime_get','__ll_div64'
	.calls	'DateTime_set','__ll_div64'
	.calls	'DateTime_get','.cocofun_3'
	.calls	'DateTime_set','.cocofun_3'
	.calls	'DateTime_get','',0
	.calls	'.cocofun_3','',0
	.extern	__ll_div64
	.calls	'DateTime_set','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L11:
	.word	113208
	.half	3
	.word	.L12
	.byte	4
.L10:
	.byte	1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L13
	.byte	2,1,1,3
	.word	165
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,58,17,1,1,5
	.byte	'fun',0,1,58,43
	.word	168
	.byte	6,0,7
	.byte	'__fract',0,4,128,1,7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,149,2,18
	.word	213
	.byte	1,1,5
	.byte	'a',0,1,149,2,44
	.word	225
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,169,2,17,1,1,6,0
.L55:
	.byte	7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	337
	.byte	8
	.byte	'__ld64',0,3,2,132,1,19
	.word	311
	.byte	1,1,5
	.byte	'addr',0,2,132,1,32
	.word	343
	.byte	6,0,4
	.byte	'__st64',0,3,2,140,1,17,1,1,5
	.byte	'addr',0,2,140,1,30
	.word	343
	.byte	5
	.byte	'value',0,2,140,1,43
	.word	311
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,4,238,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	452
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	452
	.byte	16,0,2,35,0,0,12,4,189,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	468
	.byte	4,2,35,0,0,7
	.byte	'unsigned char',0,1,8,7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,4,247,9,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	604
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	621
	.byte	16,0,2,35,2,0,12,4,197,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	643
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,4,135,10,16,4,11
	.byte	'AE',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	604
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	621
	.byte	16,0,2,35,2,0,12,4,205,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	909
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,4,136,17,25,12,13
	.byte	'CON0',0
	.word	564
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	869
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1100
	.byte	4,2,35,8,0,14
	.word	1140
	.byte	3
	.word	1203
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,3,164,4,17,1,1,5
	.byte	'watchdog',0,3,164,4,65
	.word	1208
	.byte	5
	.byte	'password',0,3,164,4,82
	.word	621
	.byte	6,0,4
	.byte	'IfxScuWdt_clearSafetyEndinitInline',0,3,3,197,4,17,1,1,5
	.byte	'password',0,3,197,4,59
	.word	621
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,3,144,5,17,1,1,5
	.byte	'watchdog',0,3,144,5,63
	.word	1208
	.byte	5
	.byte	'password',0,3,144,5,80
	.word	621
	.byte	6,0,4
	.byte	'IfxScuWdt_setSafetyEndinitInline',0,3,3,177,5,17,1,1,5
	.byte	'password',0,3,177,5,57
	.word	621
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,3,220,4,19
	.word	621
	.byte	1,1,5
	.byte	'watchdog',0,3,220,4,74
	.word	1208
	.byte	6,0,8
	.byte	'IfxScuWdt_getSafetyWatchdogPasswordInline',0,3,3,129,5,19
	.word	621
	.byte	1,1,6,0,10
	.byte	'_Ifx_P_OUT_Bits',0,6,145,3,16,4,11
	.byte	'P0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	621
	.byte	16,0,2,35,2,0,12,6,171,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1618
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,6,171,2,16,4,11
	.byte	'PS0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	604
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	604
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	604
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	604
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	604
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	604
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	604
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	604
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	604
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	604
	.byte	1,0,2,35,3,0,12,6,251,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1934
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,6,133,1,16,4,11
	.byte	'MODREV',0,1
	.word	604
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	604
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	621
	.byte	16,0,2,35,2,0,12,6,155,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2505
	.byte	4,2,35,0,0,15,4
	.word	604
	.byte	16,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,6,163,1,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	604
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	604
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	604
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	604
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	604
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	604
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	604
	.byte	5,0,2,35,3,0,12,6,171,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2634
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,6,189,1,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	604
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	604
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	604
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	604
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	604
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	604
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	604
	.byte	5,0,2,35,3,0,12,6,187,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2849
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,6,202,1,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	604
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	604
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	604
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	604
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	604
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	604
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	604
	.byte	5,0,2,35,3,0,12,6,195,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3064
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,6,176,1,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	604
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	604
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	604
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	604
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	604
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	604
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	604
	.byte	5,0,2,35,3,0,12,6,179,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3281
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,6,141,1,16,4,11
	.byte	'P0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	621
	.byte	16,0,2,35,2,0,12,6,163,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3501
	.byte	4,2,35,0,0,15,24
	.word	604
	.byte	16,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,6,212,3,16,4,11
	.byte	'PD0',0,1
	.word	604
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	604
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	604
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	604
	.byte	2,0,2,35,0,11
	.byte	'PD2',0,1
	.word	604
	.byte	2,6,2,35,1,11
	.byte	'PL2',0,1
	.word	604
	.byte	2,4,2,35,1,11
	.byte	'PD3',0,1
	.word	604
	.byte	2,2,2,35,1,11
	.byte	'PL3',0,1
	.word	604
	.byte	2,0,2,35,1,11
	.byte	'PD4',0,1
	.word	604
	.byte	2,6,2,35,2,11
	.byte	'PL4',0,1
	.word	604
	.byte	2,4,2,35,2,11
	.byte	'PD5',0,1
	.word	604
	.byte	2,2,2,35,2,11
	.byte	'PL5',0,1
	.word	604
	.byte	2,0,2,35,2,11
	.byte	'PD6',0,1
	.word	604
	.byte	2,6,2,35,3,11
	.byte	'PL6',0,1
	.word	604
	.byte	2,4,2,35,3,11
	.byte	'PD7',0,1
	.word	604
	.byte	2,2,2,35,3,11
	.byte	'PL7',0,1
	.word	604
	.byte	2,0,2,35,3,0,12,6,195,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3825
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,6,233,3,16,4,11
	.byte	'PD8',0,1
	.word	604
	.byte	2,6,2,35,0,11
	.byte	'PL8',0,1
	.word	604
	.byte	2,4,2,35,0,11
	.byte	'PD9',0,1
	.word	604
	.byte	2,2,2,35,0,11
	.byte	'PL9',0,1
	.word	604
	.byte	2,0,2,35,0,11
	.byte	'PD10',0,1
	.word	604
	.byte	2,6,2,35,1,11
	.byte	'PL10',0,1
	.word	604
	.byte	2,4,2,35,1,11
	.byte	'PD11',0,1
	.word	604
	.byte	2,2,2,35,1,11
	.byte	'PL11',0,1
	.word	604
	.byte	2,0,2,35,1,11
	.byte	'PD12',0,1
	.word	604
	.byte	2,6,2,35,2,11
	.byte	'PL12',0,1
	.word	604
	.byte	2,4,2,35,2,11
	.byte	'PD13',0,1
	.word	604
	.byte	2,2,2,35,2,11
	.byte	'PL13',0,1
	.word	604
	.byte	2,0,2,35,2,11
	.byte	'PD14',0,1
	.word	604
	.byte	2,6,2,35,3,11
	.byte	'PL14',0,1
	.word	604
	.byte	2,4,2,35,3,11
	.byte	'PD15',0,1
	.word	604
	.byte	2,2,2,35,3,11
	.byte	'PL15',0,1
	.word	604
	.byte	2,0,2,35,3,0,12,6,203,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4129
	.byte	4,2,35,0,0,15,8
	.word	604
	.byte	16,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,6,111,16,4,11
	.byte	'EN0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	621
	.byte	16,0,2,35,2,0,12,6,147,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4454
	.byte	4,2,35,0,0,15,12
	.word	604
	.byte	16,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,6,190,3,16,4,11
	.byte	'PDIS0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	621
	.byte	16,0,2,35,2,0,12,6,187,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4794
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,6,167,3,16,4,11
	.byte	'SEL0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'SEL8',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'SEL9',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'SEL12',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'SEL13',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'SEL14',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'SEL15',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	621
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	604
	.byte	1,0,2,35,3,0,12,6,179,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5160
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,6,230,2,16,4,11
	.byte	'PS0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	429
	.byte	28,0,2,35,0,0,12,6,139,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5524
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,6,251,2,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	429
	.byte	24,0,2,35,0,0,12,6,155,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5671
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,6,134,3,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	429
	.byte	20,0,2,35,0,0,12,6,163,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5840
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,6,240,2,16,4,11
	.byte	'reserved_0',0,2
	.word	621
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	621
	.byte	16,0,2,35,2,0,12,6,147,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6012
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,6,128,2,16,4,11
	.byte	'reserved_0',0,2
	.word	621
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	621
	.byte	12,0,2,35,2,0,12,6,219,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6187
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,6,149,2,16,4,11
	.byte	'reserved_0',0,4
	.word	429
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	604
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	604
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	604
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	604
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	604
	.byte	8,0,2,35,3,0,12,6,235,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6361
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,6,160,2,16,4,11
	.byte	'reserved_0',0,4
	.word	429
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	604
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	604
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	604
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	604
	.byte	4,0,2,35,3,0,12,6,243,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6535
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,6,139,2,16,4,11
	.byte	'reserved_0',0,4
	.word	429
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	604
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	604
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	604
	.byte	1,0,2,35,3,0,12,6,227,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6711
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,6,208,2,16,4,11
	.byte	'PS0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	621
	.byte	16,0,2,35,2,0,12,6,131,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6867
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,6,234,1,16,4,11
	.byte	'reserved_0',0,2
	.word	621
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	604
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	604
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	604
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	604
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	604
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	604
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	604
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	604
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	604
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	604
	.byte	1,0,2,35,3,0,12,6,211,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7200
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR_Bits',0,6,215,1,16,4,11
	.byte	'REN_CTRL',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'RX_EN',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	604
	.byte	3,2,2,35,0,11
	.byte	'LVDSM',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'PS',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'TEN_CTRL',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'TX_EN',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'VDIFFADJ',0,1
	.word	604
	.byte	2,4,2,35,1,11
	.byte	'VOSDYN',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'VOSEXT',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	621
	.byte	16,0,2,35,2,0,12,6,203,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7548
	.byte	4,2,35,0,0,15,32
	.word	7828
	.byte	16,7,0,15,56
	.word	604
	.byte	16,55,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,6,105,16,4,11
	.byte	'reserved_0',0,4
	.word	429
	.byte	32,0,2,35,0,0,12,6,139,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7886
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,6,68,16,4,11
	.byte	'EN0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	604
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	604
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	604
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	604
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	604
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	604
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	604
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	604
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	604
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	604
	.byte	1,0,2,35,3,0,12,6,131,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7973
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,6,220,5,25,128,2,13
	.byte	'OUT',0
	.word	1894
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	2465
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	2585
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2625
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	2809
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	3024
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3241
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	3461
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	2625
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	3776
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	3816
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	4089
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4405
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	4445
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	4745
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	4785
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5120
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5484
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	4445
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	5631
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	5800
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	5972
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	6147
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6321
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6495
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	6671
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	6827
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	7160
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	7508
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	4445
	.byte	8,3,35,152,1,13
	.byte	'LPCR',0
	.word	7868
	.byte	32,3,35,160,1,13
	.byte	'reserved_C0',0
	.word	7877
	.byte	56,3,35,192,1,13
	.byte	'ACCEN1',0
	.word	7933
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	8500
	.byte	4,3,35,252,1,0,14
	.word	8540
	.byte	3
	.word	9110
	.byte	17,5,187,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,5,169,5,17,1,1,5
	.byte	'port',0,5,169,5,44
	.word	9115
	.byte	5
	.byte	'pinIndex',0,5,169,5,56
	.word	604
	.byte	5
	.byte	'action',0,5,169,5,80
	.word	9120
	.byte	6,0,4
	.byte	'IfxScuCcu_wait',0,3,7,157,14,17,1,1,5
	.byte	'timeSec',0,7,157,14,40
	.word	225
	.byte	19,6,0,0,8
	.byte	'IfxScuCcu_getStmFrequency',0,3,7,188,13,20
	.word	225
	.byte	1,1,6,0,17,9,161,1,9,1,18
	.byte	'IfxCpu_ResourceCpu_0',0,0,18
	.byte	'IfxCpu_ResourceCpu_1',0,1,18
	.byte	'IfxCpu_ResourceCpu_2',0,2,18
	.byte	'IfxCpu_ResourceCpu_3',0,3,18
	.byte	'IfxCpu_ResourceCpu_4',0,4,18
	.byte	'IfxCpu_ResourceCpu_5',0,5,18
	.byte	'IfxCpu_ResourceCpu_none',0,6,0,8
	.byte	'IfxCpu_getCoreIndex',0,3,8,235,6,31
	.word	9385
	.byte	1,1,6,0
.L45:
	.byte	8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,8,233,5,20
	.word	604
	.byte	1,1
.L47:
	.byte	6,0
.L43:
	.byte	8
	.byte	'IfxCpu_disableInterrupts',0,3,8,241,5,20
	.word	604
	.byte	1,1
.L44:
	.byte	19,6,0,0,4
	.byte	'IfxCpu_enableInterrupts',0,3,8,251,5,17,1,1,6,0,4
	.byte	'IfxCpu_forceDisableInterrupts',0,3,8,191,6,17,1,1,6,0
.L61:
	.byte	4
	.byte	'IfxCpu_restoreInterrupts',0,3,8,134,8,17,1,1
.L62:
	.byte	5
	.byte	'enabled',0,8,134,8,50
	.word	604
.L64:
	.byte	6,0,7
	.byte	'unsigned long int',0,4,7,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,8,255,6,19
	.word	9799
	.byte	1,1,5
	.byte	'address',0,8,255,6,55
	.word	621
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,8,156,7,20
	.word	604
	.byte	1,1,5
	.byte	'address',0,8,156,7,70
	.word	621
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,8,138,9,17,1,1,5
	.byte	'address',0,8,138,9,56
	.word	9799
	.byte	5
	.byte	'count',0,8,138,9,72
	.word	9799
	.byte	19,6,0,0,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,11,68,16,4,11
	.byte	'SRPN',0,1
	.word	604
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	604
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	604
	.byte	3,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	604
	.byte	2,0,2,35,1,11
	.byte	'ECC',0,1
	.word	604
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	604
	.byte	3,0,2,35,2,11
	.byte	'SRR',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	604
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	604
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	604
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	604
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	604
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	604
	.byte	1,0,2,35,3,0,12,11,93,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10030
	.byte	4,2,35,0,0,14
	.word	10320
	.byte	3
	.word	10359
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,10,247,1,17,1,1,5
	.byte	'src',0,10,247,1,60
	.word	10364
	.byte	6,0,10
	.byte	'_Ifx_STM_CLC_Bits',0,13,123,16,4,11
	.byte	'DISR',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	429
	.byte	28,0,2,35,0,0,12,13,173,2,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10412
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ID_Bits',0,13,165,1,16,4,11
	.byte	'MODREV',0,1
	.word	604
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	604
	.byte	8,0,2,35,1,11
	.byte	'MODNUM',0,2
	.word	621
	.byte	16,0,2,35,2,0,12,13,205,2,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10568
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM0_Bits',0,13,216,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	429
	.byte	32,0,2,35,0,0,12,13,253,2,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10687
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM1_Bits',0,13,228,1,16,4,11
	.byte	'STM_35_4',0,4
	.word	429
	.byte	32,0,2,35,0,0,12,13,141,3,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10773
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM2_Bits',0,13,234,1,16,4,11
	.byte	'STM_39_8',0,4
	.word	429
	.byte	32,0,2,35,0,0,12,13,149,3,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10859
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM3_Bits',0,13,240,1,16,4,11
	.byte	'STM_43_12',0,4
	.word	429
	.byte	32,0,2,35,0,0,12,13,157,3,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10945
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM4_Bits',0,13,246,1,16,4,11
	.byte	'STM_47_16',0,4
	.word	429
	.byte	32,0,2,35,0,0,12,13,165,3,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11032
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM5_Bits',0,13,252,1,16,4,11
	.byte	'STM_51_20',0,4
	.word	429
	.byte	32,0,2,35,0,0,12,13,173,3,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11119
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM6_Bits',0,13,130,2,16,4,11
	.byte	'STM_63_32',0,4
	.word	429
	.byte	32,0,2,35,0,0,12,13,181,3,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11206
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_CAP_Bits',0,13,111,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	429
	.byte	32,0,2,35,0,0,12,13,157,2,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11293
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_CMP_Bits',0,13,146,1,16,4,11
	.byte	'CMPVAL',0,4
	.word	429
	.byte	32,0,2,35,0,0,12,13,189,2,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11381
	.byte	4,2,35,0,0,15,8
	.word	11424
	.byte	16,1,0,10
	.byte	'_Ifx_STM_CMCON_Bits',0,13,133,1,16,4,11
	.byte	'MSIZE0',0,1
	.word	604
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	604
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	604
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	604
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	604
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	604
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	604
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	604
	.byte	3,0,2,35,3,0,12,13,181,2,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11473
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ICR_Bits',0,13,152,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	429
	.byte	25,0,2,35,0,0,12,13,197,2,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11705
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ISCR_Bits',0,13,173,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	429
	.byte	28,0,2,35,0,0,12,13,213,2,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11922
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,13,222,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	429
	.byte	32,0,2,35,0,0,12,13,133,3,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12086
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_CAPSV_Bits',0,13,117,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	429
	.byte	32,0,2,35,0,0,12,13,165,2,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12174
	.byte	4,2,35,0,0,15,144,1
	.word	604
	.byte	16,143,1,0,10
	.byte	'_Ifx_STM_OCS_Bits',0,13,205,1,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	429
	.byte	21,8,2,35,0,11
	.byte	'SUS',0,1
	.word	604
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	604
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	604
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	604
	.byte	2,0,2,35,3,0,12,13,245,2,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12275
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,13,198,1,16,4,11
	.byte	'CLR',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	429
	.byte	31,0,2,35,0,0,12,13,237,2,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12457
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_KRST1_Bits',0,13,191,1,16,4,11
	.byte	'RST',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	429
	.byte	31,0,2,35,0,0,12,13,229,2,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12563
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_KRST0_Bits',0,13,183,1,16,4,11
	.byte	'RST',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	429
	.byte	30,0,2,35,0,0,12,13,221,2,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12667
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,13,105,16,4,11
	.byte	'reserved_0',0,4
	.word	429
	.byte	32,0,2,35,0,0,12,13,149,2,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12790
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,13,68,16,4,11
	.byte	'EN0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	604
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	604
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	604
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	604
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	604
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	604
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	604
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	604
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	604
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	604
	.byte	1,0,2,35,3,0,12,13,141,2,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12879
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM',0,13,198,3,25,128,2,13
	.byte	'CLC',0
	.word	10528
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	2625
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	10647
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2625
	.byte	4,2,35,12,13
	.byte	'TIM0',0
	.word	10733
	.byte	4,2,35,16,13
	.byte	'TIM1',0
	.word	10819
	.byte	4,2,35,20,13
	.byte	'TIM2',0
	.word	10905
	.byte	4,2,35,24,13
	.byte	'TIM3',0
	.word	10992
	.byte	4,2,35,28,13
	.byte	'TIM4',0
	.word	11079
	.byte	4,2,35,32,13
	.byte	'TIM5',0
	.word	11166
	.byte	4,2,35,36,13
	.byte	'TIM6',0
	.word	11253
	.byte	4,2,35,40,13
	.byte	'CAP',0
	.word	11341
	.byte	4,2,35,44,13
	.byte	'CMP',0
	.word	11464
	.byte	8,2,35,48,13
	.byte	'CMCON',0
	.word	11665
	.byte	4,2,35,56,13
	.byte	'ICR',0
	.word	11882
	.byte	4,2,35,60,13
	.byte	'ISCR',0
	.word	12046
	.byte	4,2,35,64,13
	.byte	'reserved_44',0
	.word	4785
	.byte	12,2,35,68,13
	.byte	'TIM0SV',0
	.word	12134
	.byte	4,2,35,80,13
	.byte	'CAPSV',0
	.word	12224
	.byte	4,2,35,84,13
	.byte	'reserved_58',0
	.word	12264
	.byte	144,1,2,35,88,13
	.byte	'OCS',0
	.word	12417
	.byte	4,3,35,232,1,13
	.byte	'KRSTCLR',0
	.word	12523
	.byte	4,3,35,236,1,13
	.byte	'KRST1',0
	.word	12627
	.byte	4,3,35,240,1,13
	.byte	'KRST0',0
	.word	12750
	.byte	4,3,35,244,1,13
	.byte	'ACCEN1',0
	.word	12839
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	13408
	.byte	4,3,35,252,1,0,14
	.word	13448
	.byte	3
	.word	13868
.L50:
	.byte	8
	.byte	'IfxStm_get',0,3,12,192,4,19
	.word	311
	.byte	1,1
.L52:
	.byte	5
	.byte	'stm',0,12,192,4,39
	.word	13873
.L54:
	.byte	6,0,8
	.byte	'IfxStm_getFrequency',0,3,12,209,4,20
	.word	225
	.byte	1,1,5
	.byte	'stm',0,12,209,4,49
	.word	13873
	.byte	19,6,6,0,0,8
	.byte	'IfxStm_getLower',0,3,12,220,4,19
	.word	9799
	.byte	1,1,5
	.byte	'stm',0,12,220,4,44
	.word	13873
	.byte	6,0
.L38:
	.byte	7
	.byte	'long long int',0,8,5,8
	.byte	'IfxStm_now',0,3,12,221,5,19
	.word	14009
	.byte	1,1,19,6,6,6,0,0,8
	.byte	'IfxStm_getDeadLine',0,3,12,234,5,19
	.word	14009
	.byte	1,1,5
	.byte	'timeout',0,12,234,5,45
	.word	14009
	.byte	19,6,0,0,8
	.byte	'IfxStm_isDeadLine',0,3,12,251,5,20
	.word	604
	.byte	1,1,5
	.byte	'deadLine',0,12,251,5,45
	.word	14009
	.byte	19,6,0,0
.L40:
	.byte	8
	.byte	'disableInterrupts',0,3,14,105,20
	.word	604
	.byte	1,1
.L42:
	.byte	19,6,0,0
.L57:
	.byte	4
	.byte	'restoreInterrupts',0,3,14,139,1,17,1,1
.L58:
	.byte	5
	.byte	'enabled',0,14,139,1,43
	.word	604
.L60:
	.byte	19,6,0,0,8
	.byte	'getDeadLine',0,3,14,131,2,25
	.word	14009
	.byte	1,1,5
	.byte	'timeout',0,14,131,2,50
	.word	14009
	.byte	19,6,0,0,8
	.byte	'isDeadLine',0,3,14,178,2,20
	.word	604
	.byte	1,1,5
	.byte	'deadLine',0,14,178,2,44
	.word	14009
	.byte	19,6,0,0
.L36:
	.byte	8
	.byte	'now',0,3,14,188,1,25
	.word	14009
	.byte	1,1
.L37:
	.byte	19,6,6,6,0,0,8
	.byte	'nowWithoutCriticalSection',0,3,14,207,1,25
	.word	14009
	.byte	1,1,19,6,0,0,20
	.word	445
	.byte	21
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,22
	.word	14393
	.byte	0,14
	.word	429
	.byte	3
	.word	429
	.byte	23
	.byte	'__cmpswapw',0
	.word	14435
	.byte	1,1,1,1,24
	.byte	'p',0
	.word	14440
	.byte	24
	.byte	'value',0
	.word	429
	.byte	24
	.byte	'compare',0
	.word	429
	.byte	0,14
	.word	445
	.byte	23
	.byte	'__mfcr',0
	.word	14497
	.byte	1,1,1,1,22
	.word	445
	.byte	0,25
	.byte	'__nop',0,1,1,1,1,25
	.byte	'__disable',0,1,1,1,1,25
	.byte	'__enable',0,1,1,1,1
.L67:
	.byte	7
	.byte	'long int',0,4,5,26,15,49,9,12,13
	.byte	'hours',0
	.word	14564
	.byte	4,2,35,0,13
	.byte	'minutes',0
	.word	14564
	.byte	4,2,35,4,13
	.byte	'seconds',0
	.word	14564
	.byte	4,2,35,8,0
.L34:
	.byte	3
	.word	14576
	.byte	10
	.byte	'_Ifx_CPU_ICR_Bits',0,16,143,5,16,4,11
	.byte	'CCPN',0,4
	.word	452
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	452
	.byte	7,17,2,35,0,11
	.byte	'IE',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	452
	.byte	8,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	452
	.byte	8,0,2,35,0,0
.L48:
	.byte	12,16,204,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14636
	.byte	4,2,35,0,0,27
	.word	173
	.byte	28
	.word	199
	.byte	6,0,27
	.word	234
	.byte	28
	.word	266
	.byte	6,0,27
	.word	279
	.byte	6,0,27
	.word	348
	.byte	28
	.word	367
	.byte	6,0,27
	.word	383
	.byte	28
	.word	398
	.byte	28
	.word	412
	.byte	6,0,27
	.word	1213
	.byte	28
	.word	1253
	.byte	28
	.word	1271
	.byte	6,0,27
	.word	1291
	.byte	28
	.word	1334
	.byte	6,0,27
	.word	1354
	.byte	28
	.word	1392
	.byte	28
	.word	1410
	.byte	6,0,27
	.word	1430
	.byte	28
	.word	1471
	.byte	6,0,27
	.word	1491
	.byte	28
	.word	1542
	.byte	6,0,27
	.word	1562
	.byte	6,0,27
	.word	9223
	.byte	28
	.word	9251
	.byte	28
	.word	9265
	.byte	28
	.word	9283
	.byte	6,0,27
	.word	9301
	.byte	28
	.word	9324
	.byte	19,29
	.word	9345
	.byte	30
	.word	9383
	.byte	0,6,0,0,27
	.word	9345
	.byte	6,0,27
	.word	9556
	.byte	6,0,27
	.word	9590
	.byte	6,0,27
	.word	9632
	.byte	19,29
	.word	9590
	.byte	30
	.word	9630
	.byte	0,6,0,0,27
	.word	9673
	.byte	6,0,27
	.word	9707
	.byte	6,0,27
	.word	9747
	.byte	28
	.word	9780
	.byte	6,0,27
	.word	9820
	.byte	28
	.word	9861
	.byte	6,0,27
	.word	9880
	.byte	28
	.word	9935
	.byte	6,0,27
	.word	9954
	.byte	28
	.word	9994
	.byte	28
	.word	10011
	.byte	19,6,0,0,27
	.word	10369
	.byte	28
	.word	10397
	.byte	6,0,27
	.word	13878
	.byte	28
	.word	13901
	.byte	6,0,27
	.word	13916
	.byte	28
	.word	13948
	.byte	19,19,29
	.word	9345
	.byte	30
	.word	9383
	.byte	0,0,6,0,0,27
	.word	13966
	.byte	28
	.word	13994
	.byte	6,0,27
	.word	14026
	.byte	19,29
	.word	9747
	.byte	28
	.word	9780
	.byte	30
	.word	9797
	.byte	0,6,29
	.word	9632
	.byte	31
	.word	9669
	.byte	29
	.word	9590
	.byte	30
	.word	9630
	.byte	0,30
	.word	9670
	.byte	0,0,6,29
	.word	13878
	.byte	28
	.word	13901
	.byte	30
	.word	13914
	.byte	0,6,0,0,27
	.word	14055
	.byte	28
	.word	14086
	.byte	19,29
	.word	14026
	.byte	31
	.word	14049
	.byte	29
	.word	9747
	.byte	28
	.word	9780
	.byte	30
	.word	9797
	.byte	0,30
	.word	14050
	.byte	29
	.word	9632
	.byte	31
	.word	9669
	.byte	29
	.word	9590
	.byte	30
	.word	9630
	.byte	0,30
	.word	9670
	.byte	0,0,30
	.word	14051
	.byte	29
	.word	13878
	.byte	28
	.word	13901
	.byte	30
	.word	13914
	.byte	0,30
	.word	14052
	.byte	0,0,6,0,0,27
	.word	14107
	.byte	28
	.word	14137
	.byte	19,29
	.word	14026
	.byte	31
	.word	14049
	.byte	29
	.word	9747
	.byte	28
	.word	9780
	.byte	30
	.word	9797
	.byte	0,30
	.word	14050
	.byte	29
	.word	9632
	.byte	31
	.word	9669
	.byte	29
	.word	9590
	.byte	30
	.word	9630
	.byte	0,30
	.word	9670
	.byte	0,0,30
	.word	14051
	.byte	29
	.word	13878
	.byte	28
	.word	13901
	.byte	30
	.word	13914
	.byte	0,30
	.word	14052
	.byte	0,0,6,0,0,27
	.word	14159
	.byte	19,29
	.word	9632
	.byte	31
	.word	9669
	.byte	29
	.word	9590
	.byte	30
	.word	9630
	.byte	0,30
	.word	9670
	.byte	0,0,6,0,0,27
	.word	14192
	.byte	28
	.word	14218
	.byte	19,29
	.word	9747
	.byte	28
	.word	9780
	.byte	30
	.word	9797
	.byte	0,6,0,0,27
	.word	14239
	.byte	28
	.word	14263
	.byte	19,29
	.word	14329
	.byte	31
	.word	14345
	.byte	29
	.word	14159
	.byte	31
	.word	14188
	.byte	29
	.word	9632
	.byte	31
	.word	9669
	.byte	29
	.word	9590
	.byte	30
	.word	9630
	.byte	0,30
	.word	9670
	.byte	0,0,30
	.word	14189
	.byte	0,0,30
	.word	14346
	.byte	29
	.word	14192
	.byte	28
	.word	14218
	.byte	31
	.word	14235
	.byte	29
	.word	9747
	.byte	28
	.word	9780
	.byte	30
	.word	9797
	.byte	0,30
	.word	14236
	.byte	0,0,30
	.word	14347
	.byte	29
	.word	13878
	.byte	28
	.word	13901
	.byte	30
	.word	13914
	.byte	0,30
	.word	14348
	.byte	0,0,6,0,0,27
	.word	14284
	.byte	28
	.word	14307
	.byte	19,29
	.word	14329
	.byte	31
	.word	14345
	.byte	29
	.word	14159
	.byte	31
	.word	14188
	.byte	29
	.word	9632
	.byte	31
	.word	9669
	.byte	29
	.word	9590
	.byte	30
	.word	9630
	.byte	0,30
	.word	9670
	.byte	0,0,30
	.word	14189
	.byte	0,0,30
	.word	14346
	.byte	29
	.word	14192
	.byte	28
	.word	14218
	.byte	31
	.word	14235
	.byte	29
	.word	9747
	.byte	28
	.word	9780
	.byte	30
	.word	9797
	.byte	0,30
	.word	14236
	.byte	0,0,30
	.word	14347
	.byte	29
	.word	13878
	.byte	28
	.word	13901
	.byte	30
	.word	13914
	.byte	0,30
	.word	14348
	.byte	0,0,6,0,0,27
	.word	14329
	.byte	19,29
	.word	14159
	.byte	31
	.word	14188
	.byte	29
	.word	9632
	.byte	31
	.word	9669
	.byte	29
	.word	9590
	.byte	30
	.word	9630
	.byte	0,30
	.word	9670
	.byte	0,0,30
	.word	14189
	.byte	0,0,6,29
	.word	14192
	.byte	28
	.word	14218
	.byte	31
	.word	14235
	.byte	29
	.word	9747
	.byte	28
	.word	9780
	.byte	30
	.word	9797
	.byte	0,30
	.word	14236
	.byte	0,0,6,29
	.word	13878
	.byte	28
	.word	13901
	.byte	30
	.word	13914
	.byte	0,6,0,0,27
	.word	14351
	.byte	19,29
	.word	13878
	.byte	28
	.word	13901
	.byte	30
	.word	13914
	.byte	0,6,0,0,7
	.byte	'short int',0,2,5,32
	.byte	'__wchar_t',0,17,1,1
	.word	15904
	.byte	32
	.byte	'__size_t',0,17,1,1
	.word	429
	.byte	32
	.byte	'__ptrdiff_t',0,17,1,1
	.word	445
	.byte	33,1,3
	.word	15972
	.byte	32
	.byte	'__codeptr',0,17,1,1
	.word	15974
	.byte	32
	.byte	'boolean',0,18,104,29
	.word	604
	.byte	32
	.byte	'uint8',0,18,108,29
	.word	604
	.byte	32
	.byte	'uint16',0,18,112,29
	.word	621
	.byte	32
	.byte	'uint32',0,18,116,29
	.word	9799
	.byte	32
	.byte	'uint64',0,18,121,29
	.word	311
	.byte	32
	.byte	'sint16',0,18,129,1,29
	.word	15904
	.byte	32
	.byte	'sint32',0,18,134,1,29
	.word	14564
	.byte	32
	.byte	'sint64',0,18,141,1,29
	.word	14009
	.byte	32
	.byte	'float32',0,18,170,1,29
	.word	225
	.byte	32
	.byte	'pvoid',0,19,54,28
	.word	343
	.byte	32
	.byte	'Ifx_TickTime',0,19,76,28
	.word	14009
	.byte	32
	.byte	'Ifx_Priority',0,19,100,16
	.word	621
	.byte	17,19,127,9,1,18
	.byte	'Ifx_RxSel_a',0,0,18
	.byte	'Ifx_RxSel_b',0,1,18
	.byte	'Ifx_RxSel_c',0,2,18
	.byte	'Ifx_RxSel_d',0,3,18
	.byte	'Ifx_RxSel_e',0,4,18
	.byte	'Ifx_RxSel_f',0,5,18
	.byte	'Ifx_RxSel_g',0,6,18
	.byte	'Ifx_RxSel_h',0,7,0,32
	.byte	'Ifx_RxSel',0,19,137,1,3
	.word	16193
	.byte	32
	.byte	'Ifx_DateTime',0,15,54,3
	.word	14576
	.byte	32
	.byte	'Ifx_UReg_8Bit',0,20,96,24
	.word	604
	.byte	32
	.byte	'Ifx_UReg_32Bit',0,20,98,24
	.word	429
	.byte	32
	.byte	'Ifx_SReg_32Bit',0,20,101,24
	.word	445
	.byte	10
	.byte	'_Ifx_CPU_A_Bits',0,16,68,16,4,11
	.byte	'ADDR',0,4
	.word	452
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_A_Bits',0,16,71,3
	.word	16419
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,16,74,16,4,11
	.byte	'VSS',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	452
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BIV_Bits',0,16,78,3
	.word	16480
	.byte	10
	.byte	'_Ifx_CPU_BLK_OMASK_Bits',0,16,81,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	5,27,2,35,0,11
	.byte	'OMASK',0,4
	.word	452
	.byte	12,15,2,35,0,11
	.byte	'ONE',0,4
	.word	452
	.byte	11,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	452
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_OMASK_Bits',0,16,87,3
	.word	16559
	.byte	10
	.byte	'_Ifx_CPU_BLK_OTAR_Bits',0,16,90,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	5,27,2,35,0,11
	.byte	'TBASE',0,4
	.word	452
	.byte	23,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	452
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_OTAR_Bits',0,16,95,3
	.word	16697
	.byte	10
	.byte	'_Ifx_CPU_BLK_RABR_Bits',0,16,98,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	5,27,2,35,0,11
	.byte	'OBASE',0,4
	.word	452
	.byte	17,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	452
	.byte	2,8,2,35,0,11
	.byte	'OMEM',0,4
	.word	452
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	452
	.byte	3,1,2,35,0,11
	.byte	'OVEN',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_RABR_Bits',0,16,106,3
	.word	16818
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,16,109,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	452
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BTV_Bits',0,16,113,3
	.word	16994
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,16,116,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	452
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT_Bits',0,16,120,3
	.word	17080
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,16,123,16,4,11
	.byte	'CM',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	452
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	452
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	452
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	452
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL_Bits',0,16,131,1,3
	.word	17169
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,16,134,1,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	452
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT_Bits',0,16,140,1,3
	.word	17316
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,16,143,1,16,4,11
	.byte	'CORE_ID',0,4
	.word	452
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	452
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CORE_ID_Bits',0,16,147,1,3
	.word	17445
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,16,150,1,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	5,27,2,35,0,11
	.byte	'LOWBND',0,4
	.word	452
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L_Bits',0,16,154,1,3
	.word	17545
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,16,157,1,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	5,27,2,35,0,11
	.byte	'UPPBND',0,4
	.word	452
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U_Bits',0,16,161,1,3
	.word	17640
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,16,164,1,16,4,11
	.byte	'MOD_REV',0,4
	.word	452
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	452
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	452
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID_Bits',0,16,169,1,3
	.word	17735
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,16,172,1,16,4,11
	.byte	'XE_N',0,4
	.word	452
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	452
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE_Bits',0,16,176,1,3
	.word	17845
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,16,179,1,16,4,11
	.byte	'EVTA',0,4
	.word	452
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	452
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	452
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT_Bits',0,16,187,1,3
	.word	17937
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,16,190,1,16,4,11
	.byte	'CID',0,4
	.word	452
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	452
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID_Bits',0,16,194,1,3
	.word	18091
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,16,197,1,16,4,11
	.byte	'DATA',0,4
	.word	452
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_D_Bits',0,16,200,1,3
	.word	18185
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,16,203,1,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	452
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	452
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	452
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DATR_Bits',0,16,214,1,3
	.word	18248
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,16,217,1,16,4,11
	.byte	'DE',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	452
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	452
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	452
	.byte	19,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR_Bits',0,16,228,1,3
	.word	18474
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,16,231,1,16,4,11
	.byte	'DTA',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	452
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR_Bits',0,16,235,1,3
	.word	18689
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,16,238,1,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	452
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0_Bits',0,16,243,1,3
	.word	18783
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,16,246,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	452
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	452
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2_Bits',0,16,250,1,3
	.word	18899
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,16,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	6,26,2,35,0,11
	.byte	'DCXVALUE',0,4
	.word	452
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCX_Bits',0,16,129,2,3
	.word	19000
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,16,132,2,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	452
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD_Bits',0,16,135,2,3
	.word	19093
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,16,138,2,16,4,11
	.byte	'TA',0,4
	.word	452
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR_Bits',0,16,141,2,3
	.word	19173
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,16,144,2,16,4,11
	.byte	'IED',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	452
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'IE_DLMU',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	452
	.byte	15,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR_Bits',0,16,159,2,3
	.word	19242
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,16,162,2,16,4,11
	.byte	'EN0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,16,196,2,3
	.word	19526
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,16,199,2,16,4,11
	.byte	'EN0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,16,233,2,3
	.word	20117
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,16,236,2,16,4,11
	.byte	'EN32',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,16,142,3,3
	.word	20708
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,16,145,3,16,4,11
	.byte	'EN32',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,16,179,3,3
	.word	21309
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,16,182,3,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	452
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,16,186,3,3
	.word	21910
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,16,189,3,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	452
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,16,193,3,3
	.word	22025
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,16,196,3,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'DMSVALUE',0,4
	.word	452
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DMS_Bits',0,16,200,3,3
	.word	22140
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,16,203,3,16,4,11
	.byte	'RE_N',0,4
	.word	452
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	452
	.byte	14,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE_Bits',0,16,207,3,3
	.word	22233
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,16,210,3,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	452
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L_Bits',0,16,214,3,3
	.word	22325
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,16,217,3,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	452
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U_Bits',0,16,221,3,3
	.word	22420
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,16,224,3,16,4,11
	.byte	'WE_N',0,4
	.word	452
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	452
	.byte	14,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE_Bits',0,16,228,3,3
	.word	22515
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,16,231,3,16,4,11
	.byte	'SRE',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'DRE',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	452
	.byte	2,26,2,35,0,11
	.byte	'CRE',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	452
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	452
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	452
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR_Bits',0,16,250,3,3
	.word	22607
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,16,253,3,16,4,11
	.byte	'EVTA',0,4
	.word	452
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	452
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	452
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT_Bits',0,16,133,4,3
	.word	22946
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,16,136,4,16,4,11
	.byte	'FCXO',0,4
	.word	452
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	452
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	452
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FCX_Bits',0,16,141,4,3
	.word	23100
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON0_Bits',0,16,144,4,16,4,11
	.byte	'TAG1',0,4
	.word	452
	.byte	6,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	452
	.byte	2,24,2,35,0,11
	.byte	'TAG2',0,4
	.word	452
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	452
	.byte	2,16,2,35,0,11
	.byte	'TAG3',0,4
	.word	452
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	452
	.byte	2,8,2,35,0,11
	.byte	'TAG4',0,4
	.word	452
	.byte	6,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	452
	.byte	2,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON0_Bits',0,16,154,4,3
	.word	23206
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON1_Bits',0,16,157,4,16,4,11
	.byte	'STALL',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	452
	.byte	15,16,2,35,0,11
	.byte	'MASKUECC',0,4
	.word	452
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	452
	.byte	6,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	452
	.byte	2,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	452
	.byte	6,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON1_Bits',0,16,165,4,3
	.word	23424
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON2_Bits',0,16,168,4,16,4,11
	.byte	'RECDIS',0,4
	.word	452
	.byte	2,30,2,35,0,11
	.byte	'ECCCORDIS',0,4
	.word	452
	.byte	2,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	452
	.byte	4,24,2,35,0,11
	.byte	'HMARGIN',0,4
	.word	452
	.byte	2,22,2,35,0,11
	.byte	'MSEL',0,4
	.word	452
	.byte	2,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	452
	.byte	4,16,2,35,0,11
	.byte	'ECCSCLR',0,4
	.word	452
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	452
	.byte	6,8,2,35,0,11
	.byte	'SBABCLR',0,4
	.word	452
	.byte	2,6,2,35,0,11
	.byte	'DBABCLR',0,4
	.word	452
	.byte	2,4,2,35,0,11
	.byte	'MBABCLR',0,4
	.word	452
	.byte	2,2,2,35,0,11
	.byte	'ZBABCLR',0,4
	.word	452
	.byte	2,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON2_Bits',0,16,182,4,3
	.word	23615
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON3_Bits',0,16,185,4,16,4,11
	.byte	'ECCERRINJ',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'EDCERRINJ',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'SBABERRINJ',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'DBABERRINJ',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'MBABERRINJ',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'ZBABERRINJ',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'SBERERRINJ',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'DBERERRINJ',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'NVMCERRINJ',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'FLCONERRINJ',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	452
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON3_Bits',0,16,198,4,3
	.word	23915
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON4_Bits',0,16,201,4,16,4,11
	.byte	'DDIS',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	452
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON4_Bits',0,16,205,4,3
	.word	24220
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,16,208,4,16,4,11
	.byte	'TST',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	452
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	452
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	452
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	452
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,16,227,4,3
	.word	24321
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,16,230,4,16,4,11
	.byte	'OPC',0,4
	.word	452
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	452
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	452
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	452
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,16,237,4,3
	.word	24670
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,16,240,4,16,4,11
	.byte	'PC',0,4
	.word	452
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,16,243,4,3
	.word	24830
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,16,246,4,16,4,11
	.byte	'SRC1',0,4
	.word	452
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,16,249,4,3
	.word	24911
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,16,252,4,16,4,11
	.byte	'SRC2',0,4
	.word	452
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,16,255,4,3
	.word	24998
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,16,130,5,16,4,11
	.byte	'SRC3',0,4
	.word	452
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,16,133,5,3
	.word	25085
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,16,136,5,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	452
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT_Bits',0,16,140,5,3
	.word	25172
	.byte	32
	.byte	'Ifx_CPU_ICR_Bits',0,16,150,5,3
	.word	14636
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,16,153,5,16,4,11
	.byte	'ISP',0,4
	.word	452
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_ISP_Bits',0,16,156,5,3
	.word	25289
	.byte	10
	.byte	'_Ifx_CPU_KRST0_Bits',0,16,159,5,16,4,11
	.byte	'RST',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'RSTSTAT',0,4
	.word	452
	.byte	2,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	452
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_KRST0_Bits',0,16,164,5,3
	.word	25355
	.byte	10
	.byte	'_Ifx_CPU_KRST1_Bits',0,16,167,5,16,4,11
	.byte	'RST',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	452
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_KRST1_Bits',0,16,171,5,3
	.word	25466
	.byte	10
	.byte	'_Ifx_CPU_KRSTCLR_Bits',0,16,174,5,16,4,11
	.byte	'CLR',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	452
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_KRSTCLR_Bits',0,16,178,5,3
	.word	25558
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,16,181,5,16,4,11
	.byte	'LCXO',0,4
	.word	452
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	452
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	452
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_LCX_Bits',0,16,186,5,3
	.word	25654
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,16,189,5,16,4,11
	.byte	'EN0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,16,223,5,3
	.word	25760
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,16,226,5,16,4,11
	.byte	'EN32',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,16,132,6,3
	.word	26343
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,16,135,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	452
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT_Bits',0,16,139,6,3
	.word	26936
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,16,142,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	452
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT_Bits',0,16,146,6,3
	.word	27029
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,16,149,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	452
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT_Bits',0,16,153,6,3
	.word	27122
	.byte	10
	.byte	'_Ifx_CPU_OSEL_Bits',0,16,156,6,16,4,11
	.byte	'SHOVEN_X',0,4
	.word	452
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_OSEL_Bits',0,16,159,6,3
	.word	27215
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,16,162,6,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	452
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_PC_Bits',0,16,166,6,3
	.word	27288
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,16,169,6,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	452
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0_Bits',0,16,174,6,3
	.word	27373
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,16,177,6,16,4,11
	.byte	'PCINV',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	452
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1_Bits',0,16,182,6,3
	.word	27489
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,16,185,6,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	452
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	452
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2_Bits',0,16,189,6,3
	.word	27600
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,16,192,6,16,4,11
	.byte	'PCXO',0,4
	.word	452
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	452
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	452
	.byte	8,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	452
	.byte	2,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI_Bits',0,16,200,6,3
	.word	27701
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,16,203,6,16,4,11
	.byte	'TA',0,4
	.word	452
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR_Bits',0,16,206,6,3
	.word	27854
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,16,209,6,16,4,11
	.byte	'IED',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	452
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'IE_ADDR',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	452
	.byte	15,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR_Bits',0,16,224,6,3
	.word	27923
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,16,227,6,16,4,11
	.byte	'DAC',0,4
	.word	452
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	452
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0_Bits',0,16,231,6,3
	.word	28207
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,16,234,6,16,4,11
	.byte	'CAC',0,4
	.word	452
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	452
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1_Bits',0,16,238,6,3
	.word	28298
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,16,241,6,16,4,11
	.byte	'PSI',0,4
	.word	452
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	452
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2_Bits',0,16,245,6,3
	.word	28389
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,16,248,6,16,4,11
	.byte	'FRE',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	452
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	452
	.byte	17,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR_Bits',0,16,130,7,3
	.word	28480
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,16,133,7,16,4,11
	.byte	'CDC',0,4
	.word	452
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	452
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	452
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'PRS2',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	452
	.byte	8,8,2,35,0,11
	.byte	'USB',0,4
	.word	452
	.byte	8,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSW_Bits',0,16,145,7,3
	.word	28683
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENA_Bits',0,16,148,7,16,4,11
	.byte	'EN0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_ACCENA_Bits',0,16,182,7,3
	.word	28888
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENB_Bits',0,16,185,7,16,4,11
	.byte	'EN32',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_ACCENB_Bits',0,16,219,7,3
	.word	29455
	.byte	10
	.byte	'_Ifx_CPU_RGN_LA_Bits',0,16,222,7,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	452
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_LA_Bits',0,16,226,7,3
	.word	30032
	.byte	10
	.byte	'_Ifx_CPU_RGN_UA_Bits',0,16,229,7,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	452
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_UA_Bits',0,16,233,7,3
	.word	30127
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,16,236,7,16,4,11
	.byte	'ADFLIP',0,4
	.word	452
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	452
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	452
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN_Bits',0,16,242,7,3
	.word	30222
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,16,245,7,16,4,11
	.byte	'EN0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,16,151,8,3
	.word	30350
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,16,154,8,16,4,11
	.byte	'EN32',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,16,188,8,3
	.word	30933
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,16,191,8,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	24,8,2,35,0,11
	.byte	'IODT',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	452
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON_Bits',0,16,196,8,3
	.word	31526
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,16,199,8,16,4,11
	.byte	'EN0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,16,233,8,3
	.word	31644
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,16,236,8,16,4,11
	.byte	'EN32',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,16,142,9,3
	.word	32233
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,16,145,9,16,4,11
	.byte	'EVTA',0,4
	.word	452
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	452
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	452
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT_Bits',0,16,153,9,3
	.word	32832
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,16,156,9,16,4,11
	.byte	'FCDSF',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'TS',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	452
	.byte	3,24,2,35,0,11
	.byte	'ESDIS',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	452
	.byte	7,16,2,35,0,11
	.byte	'U1_IED',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'U1_IOS',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	452
	.byte	6,8,2,35,0,11
	.byte	'BHALT',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	452
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON_Bits',0,16,171,9,3
	.word	32986
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,16,174,9,16,4,11
	.byte	'ASI',0,4
	.word	452
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	452
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,16,178,9,3
	.word	33285
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,16,181,9,16,4,11
	.byte	'TEXP0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	452
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	452
	.byte	15,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON_Bits',0,16,189,9,3
	.word	33383
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,16,192,9,16,4,11
	.byte	'EXTIM_CLASS_EN',0,4
	.word	452
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	452
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,16,196,9,3
	.word	33555
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,16,199,9,16,4,11
	.byte	'ENTRY_CVAL',0,4
	.word	452
	.byte	12,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	452
	.byte	20,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,16,203,9,3
	.word	33684
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,16,206,9,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'ENTRY_LVAL',0,4
	.word	452
	.byte	8,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	452
	.byte	20,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,16,211,9,3
	.word	33814
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,16,214,9,16,4,11
	.byte	'EXIT_CVAL',0,4
	.word	452
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	452
	.byte	8,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,16,218,9,3
	.word	33966
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,16,221,9,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'EXIT_LVAL',0,4
	.word	452
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	452
	.byte	8,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,16,226,9,3
	.word	34093
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_FCX_Bits',0,16,229,9,16,4,11
	.byte	'EXIT_FCX',0,4
	.word	452
	.byte	20,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	452
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_FCX_Bits',0,16,233,9,3
	.word	34242
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_STAT_Bits',0,16,236,9,16,4,11
	.byte	'EXIT_TIN',0,4
	.word	452
	.byte	8,24,2,35,0,11
	.byte	'EXIT_CLASS',0,4
	.word	452
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	452
	.byte	4,17,2,35,0,11
	.byte	'EXIT_AT',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'ENTRY_TIN',0,4
	.word	452
	.byte	8,8,2,35,0,11
	.byte	'ENTRY_CLASS',0,4
	.word	452
	.byte	3,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	452
	.byte	4,1,2,35,0,11
	.byte	'ENTRY_AT',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_STAT_Bits',0,16,246,9,3
	.word	34356
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,16,249,9,16,4,11
	.byte	'TIMER',0,4
	.word	452
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,16,252,9,3
	.word	34600
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,16,255,9,16,4,11
	.byte	'T0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	452
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,16,138,10,3
	.word	34680
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,16,141,10,16,4,11
	.byte	'ADDR',0,4
	.word	452
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR_Bits',0,16,144,10,3
	.word	34875
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,16,147,10,16,4,11
	.byte	'EVTA',0,4
	.word	452
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	452
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	452
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	452
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	452
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	452
	.byte	3,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT_Bits',0,16,164,10,3
	.word	34948
	.byte	12,16,172,10,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16419
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_A',0,16,177,10,3
	.word	35266
	.byte	12,16,180,10,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16480
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BIV',0,16,185,10,3
	.word	35325
	.byte	12,16,188,10,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16559
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_OMASK',0,16,193,10,3
	.word	35386
	.byte	12,16,196,10,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16697
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_OTAR',0,16,201,10,3
	.word	35453
	.byte	12,16,204,10,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16818
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_RABR',0,16,209,10,3
	.word	35519
	.byte	12,16,212,10,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16994
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BTV',0,16,217,10,3
	.word	35585
	.byte	12,16,220,10,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17080
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT',0,16,225,10,3
	.word	35646
	.byte	12,16,228,10,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17169
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL',0,16,233,10,3
	.word	35708
	.byte	12,16,236,10,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17316
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT',0,16,241,10,3
	.word	35771
	.byte	12,16,244,10,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17445
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CORE_ID',0,16,249,10,3
	.word	35835
	.byte	12,16,252,10,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17545
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L',0,16,129,11,3
	.word	35900
	.byte	12,16,132,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17640
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U',0,16,137,11,3
	.word	35963
	.byte	12,16,140,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17735
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID',0,16,145,11,3
	.word	36026
	.byte	12,16,148,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17845
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE',0,16,153,11,3
	.word	36090
	.byte	12,16,156,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17937
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT',0,16,161,11,3
	.word	36152
	.byte	12,16,164,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18091
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID',0,16,169,11,3
	.word	36215
	.byte	12,16,172,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18185
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_D',0,16,177,11,3
	.word	36279
	.byte	12,16,180,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18248
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DATR',0,16,185,11,3
	.word	36338
	.byte	12,16,188,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18474
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR',0,16,193,11,3
	.word	36400
	.byte	12,16,196,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18689
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR',0,16,201,11,3
	.word	36463
	.byte	12,16,204,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18783
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0',0,16,209,11,3
	.word	36527
	.byte	12,16,212,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18899
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2',0,16,217,11,3
	.word	36590
	.byte	12,16,220,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19000
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCX',0,16,225,11,3
	.word	36653
	.byte	12,16,228,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19093
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD',0,16,233,11,3
	.word	36714
	.byte	12,16,236,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19173
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR',0,16,241,11,3
	.word	36777
	.byte	12,16,244,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19242
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR',0,16,249,11,3
	.word	36840
	.byte	12,16,252,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19526
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R',0,16,129,12,3
	.word	36903
	.byte	12,16,132,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20117
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W',0,16,137,12,3
	.word	36983
	.byte	12,16,140,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20708
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R',0,16,145,12,3
	.word	37063
	.byte	12,16,148,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21309
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W',0,16,153,12,3
	.word	37143
	.byte	12,16,156,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21910
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA',0,16,161,12,3
	.word	37223
	.byte	12,16,164,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22025
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA',0,16,169,12,3
	.word	37297
	.byte	12,16,172,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22140
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DMS',0,16,177,12,3
	.word	37371
	.byte	12,16,180,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22233
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE',0,16,185,12,3
	.word	37432
	.byte	12,16,188,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22325
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L',0,16,193,12,3
	.word	37494
	.byte	12,16,196,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22420
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U',0,16,201,12,3
	.word	37557
	.byte	12,16,204,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22515
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE',0,16,209,12,3
	.word	37620
	.byte	12,16,212,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22607
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR',0,16,217,12,3
	.word	37682
	.byte	12,16,220,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22946
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT',0,16,225,12,3
	.word	37744
	.byte	12,16,228,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23100
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FCX',0,16,233,12,3
	.word	37807
	.byte	12,16,236,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23206
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON0',0,16,241,12,3
	.word	37868
	.byte	12,16,244,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23424
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON1',0,16,249,12,3
	.word	37935
	.byte	12,16,252,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23615
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON2',0,16,129,13,3
	.word	38002
	.byte	12,16,132,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23915
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON3',0,16,137,13,3
	.word	38069
	.byte	12,16,140,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24220
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON4',0,16,145,13,3
	.word	38136
	.byte	12,16,148,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24321
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,16,153,13,3
	.word	38203
	.byte	12,16,156,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24670
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,16,161,13,3
	.word	38273
	.byte	12,16,164,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24830
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,16,169,13,3
	.word	38343
	.byte	12,16,172,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24911
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,16,177,13,3
	.word	38412
	.byte	12,16,180,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24998
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,16,185,13,3
	.word	38483
	.byte	12,16,188,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25085
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,16,193,13,3
	.word	38554
	.byte	12,16,196,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25172
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT',0,16,201,13,3
	.word	38625
	.byte	32
	.byte	'Ifx_CPU_ICR',0,16,209,13,3
	.word	14752
	.byte	12,16,212,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25289
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ISP',0,16,217,13,3
	.word	38708
	.byte	12,16,220,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25355
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_KRST0',0,16,225,13,3
	.word	38769
	.byte	12,16,228,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25466
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_KRST1',0,16,233,13,3
	.word	38832
	.byte	12,16,236,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25558
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_KRSTCLR',0,16,241,13,3
	.word	38895
	.byte	12,16,244,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25654
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_LCX',0,16,249,13,3
	.word	38960
	.byte	12,16,252,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25760
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R',0,16,129,14,3
	.word	39021
	.byte	12,16,132,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26343
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R',0,16,137,14,3
	.word	39097
	.byte	12,16,140,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26936
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT',0,16,145,14,3
	.word	39173
	.byte	12,16,148,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27029
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT',0,16,153,14,3
	.word	39236
	.byte	12,16,156,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27122
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT',0,16,161,14,3
	.word	39299
	.byte	12,16,164,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27215
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_OSEL',0,16,169,14,3
	.word	39362
	.byte	12,16,172,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27288
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PC',0,16,177,14,3
	.word	39424
	.byte	12,16,180,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27373
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0',0,16,185,14,3
	.word	39484
	.byte	12,16,188,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27489
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1',0,16,193,14,3
	.word	39547
	.byte	12,16,196,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27600
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2',0,16,201,14,3
	.word	39610
	.byte	12,16,204,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27701
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI',0,16,209,14,3
	.word	39673
	.byte	12,16,212,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27854
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR',0,16,217,14,3
	.word	39735
	.byte	12,16,220,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27923
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR',0,16,225,14,3
	.word	39798
	.byte	12,16,228,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28207
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0',0,16,233,14,3
	.word	39861
	.byte	12,16,236,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28298
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1',0,16,241,14,3
	.word	39923
	.byte	12,16,244,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28389
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2',0,16,249,14,3
	.word	39985
	.byte	12,16,252,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28480
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR',0,16,129,15,3
	.word	40047
	.byte	12,16,132,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28683
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSW',0,16,137,15,3
	.word	40109
	.byte	12,16,140,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28888
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_ACCENA',0,16,145,15,3
	.word	40170
	.byte	12,16,148,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29455
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_ACCENB',0,16,153,15,3
	.word	40238
	.byte	12,16,156,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30032
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_LA',0,16,161,15,3
	.word	40306
	.byte	12,16,164,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30127
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_UA',0,16,169,15,3
	.word	40370
	.byte	12,16,172,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30222
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN',0,16,177,15,3
	.word	40434
	.byte	12,16,180,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30350
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W',0,16,185,15,3
	.word	40497
	.byte	12,16,188,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30933
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W',0,16,193,15,3
	.word	40573
	.byte	12,16,196,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31526
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON',0,16,201,15,3
	.word	40649
	.byte	12,16,204,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31644
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R',0,16,209,15,3
	.word	40713
	.byte	12,16,212,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32233
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R',0,16,217,15,3
	.word	40792
	.byte	12,16,220,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32832
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT',0,16,225,15,3
	.word	40871
	.byte	12,16,228,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32986
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON',0,16,233,15,3
	.word	40934
	.byte	12,16,236,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33285
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI',0,16,241,15,3
	.word	40998
	.byte	12,16,244,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33383
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON',0,16,249,15,3
	.word	41064
	.byte	12,16,252,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33555
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN',0,16,129,16,3
	.word	41129
	.byte	12,16,132,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33684
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL',0,16,137,16,3
	.word	41205
	.byte	12,16,140,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33814
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL',0,16,145,16,3
	.word	41283
	.byte	12,16,148,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33966
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL',0,16,153,16,3
	.word	41361
	.byte	12,16,156,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34093
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL',0,16,161,16,3
	.word	41438
	.byte	12,16,164,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34242
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_FCX',0,16,169,16,3
	.word	41515
	.byte	12,16,172,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34356
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_STAT',0,16,177,16,3
	.word	41586
	.byte	12,16,180,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34600
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER',0,16,185,16,3
	.word	41658
	.byte	12,16,188,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34680
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC',0,16,193,16,3
	.word	41725
	.byte	12,16,196,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34875
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR',0,16,201,16,3
	.word	41791
	.byte	12,16,204,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34948
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT',0,16,209,16,3
	.word	41855
	.byte	10
	.byte	'_Ifx_CPU_RGN',0,16,221,16,25,16,13
	.byte	'LA',0
	.word	40306
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	40370
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	40170
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	40238
	.byte	4,2,35,12,0,14
	.word	41919
	.byte	32
	.byte	'Ifx_CPU_RGN',0,16,227,16,3
	.word	41995
	.byte	10
	.byte	'_Ifx_CPU_BLK',0,16,242,16,25,12,13
	.byte	'RABR',0
	.word	35519
	.byte	4,2,35,0,13
	.byte	'OTAR',0
	.word	35453
	.byte	4,2,35,4,13
	.byte	'OMASK',0
	.word	35386
	.byte	4,2,35,8,0,14
	.word	42021
	.byte	32
	.byte	'Ifx_CPU_BLK',0,16,247,16,3
	.word	42084
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP',0,16,134,17,25,28,13
	.byte	'CON',0
	.word	38203
	.byte	4,2,35,0,13
	.byte	'PC',0
	.word	38343
	.byte	4,2,35,4,13
	.byte	'OPC',0
	.word	38273
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2625
	.byte	4,2,35,12,13
	.byte	'SRC1',0
	.word	38412
	.byte	4,2,35,16,13
	.byte	'SRC2',0
	.word	38483
	.byte	4,2,35,20,13
	.byte	'SRC3',0
	.word	38554
	.byte	4,2,35,24,0,14
	.word	42110
	.byte	32
	.byte	'Ifx_CPU_FPU_TRAP',0,16,143,17,3
	.word	42235
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,16,158,17,25,8,13
	.byte	'L',0
	.word	37494
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	37557
	.byte	4,2,35,4,0,14
	.word	42266
	.byte	32
	.byte	'Ifx_CPU_DPR',0,16,162,17,3
	.word	42308
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,16,177,17,25,8,13
	.byte	'L',0
	.word	35900
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	35963
	.byte	4,2,35,4,0,14
	.word	42334
	.byte	32
	.byte	'Ifx_CPU_CPR',0,16,181,17,3
	.word	42376
	.byte	15,12
	.word	41658
	.byte	16,2,0,10
	.byte	'_Ifx_CPU_TPS',0,16,196,17,25,16,13
	.byte	'CON',0
	.word	41064
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	42402
	.byte	12,2,35,4,0,14
	.word	42411
	.byte	32
	.byte	'Ifx_CPU_TPS',0,16,200,17,3
	.word	42459
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM',0,16,215,17,25,28,13
	.byte	'ENTRY_LVAL',0
	.word	41283
	.byte	4,2,35,0,13
	.byte	'ENTRY_CVAL',0
	.word	41205
	.byte	4,2,35,4,13
	.byte	'EXIT_LVAL',0
	.word	41438
	.byte	4,2,35,8,13
	.byte	'EXIT_CVAL',0
	.word	41361
	.byte	4,2,35,12,13
	.byte	'CLASS_EN',0
	.word	41129
	.byte	4,2,35,16,13
	.byte	'STAT',0
	.word	41586
	.byte	4,2,35,20,13
	.byte	'FCX',0
	.word	41515
	.byte	4,2,35,24,0,14
	.word	42485
	.byte	32
	.byte	'Ifx_CPU_TPS_EXTIM',0,16,224,17,3
	.word	42634
	.byte	10
	.byte	'_Ifx_CPU_TR',0,16,239,17,25,8,13
	.byte	'EVT',0
	.word	41855
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	41791
	.byte	4,2,35,4,0,14
	.word	42666
	.byte	32
	.byte	'Ifx_CPU_TR',0,16,243,17,3
	.word	42711
	.byte	15,128,34
	.word	604
	.byte	16,255,33,0,15,236,253,2
	.word	604
	.byte	16,235,253,2,0,15,244,31
	.word	604
	.byte	16,243,31,0,15,128,1
	.word	41919
	.byte	16,7,0,14
	.word	42771
	.byte	15,232,1
	.word	604
	.byte	16,231,1,0,15,128,48
	.word	604
	.byte	16,255,47,0,15,128,3
	.word	42021
	.byte	16,31,0,14
	.word	42808
	.byte	15,160,39
	.word	604
	.byte	16,159,39,0,15,208,223,1
	.word	604
	.byte	16,207,223,1,0,15,248,1
	.word	604
	.byte	16,247,1,0,15,244,29
	.word	604
	.byte	16,243,29,0,15,188,3
	.word	604
	.byte	16,187,3,0,15,232,3
	.word	604
	.byte	16,231,3,0,15,252,23
	.word	604
	.byte	16,251,23,0,14
	.word	42110
	.byte	15,228,63
	.word	604
	.byte	16,227,63,0,15,144,1
	.word	42266
	.byte	16,17,0,14
	.word	42918
	.byte	15,240,30
	.word	604
	.byte	16,239,30,0,15,80
	.word	42334
	.byte	16,9,0,14
	.word	42944
	.byte	15,176,31
	.word	604
	.byte	16,175,31,0,15,16
	.word	604
	.byte	16,15,0,15,152,7
	.word	604
	.byte	16,151,7,0,14
	.word	42411
	.byte	15,48
	.word	604
	.byte	16,47,0,14
	.word	42485
	.byte	15,164,23
	.word	604
	.byte	16,163,23,0,15,64
	.word	42666
	.byte	16,7,0,14
	.word	43019
	.byte	15,192,23
	.word	604
	.byte	16,191,23,0,15,28
	.word	604
	.byte	16,27,0,15,180,1
	.word	604
	.byte	16,179,1,0,15,172,1
	.word	604
	.byte	16,171,1,0,15,64
	.word	36279
	.byte	16,15,0,15,64
	.word	604
	.byte	16,63,0,15,64
	.word	35266
	.byte	16,15,0,10
	.byte	'_Ifx_CPU',0,16,130,18,25,128,128,8,13
	.byte	'reserved_0',0
	.word	42736
	.byte	128,34,2,35,0,13
	.byte	'FLASHCON0',0
	.word	37868
	.byte	4,3,35,128,34,13
	.byte	'FLASHCON1',0
	.word	37935
	.byte	4,3,35,132,34,13
	.byte	'FLASHCON2',0
	.word	38002
	.byte	4,3,35,136,34,13
	.byte	'FLASHCON3',0
	.word	38069
	.byte	4,3,35,140,34,13
	.byte	'FLASHCON4',0
	.word	38136
	.byte	4,3,35,144,34,13
	.byte	'reserved_1114',0
	.word	42747
	.byte	236,253,2,3,35,148,34,13
	.byte	'KRST0',0
	.word	38769
	.byte	4,4,35,128,160,3,13
	.byte	'KRST1',0
	.word	38832
	.byte	4,4,35,132,160,3,13
	.byte	'KRSTCLR',0
	.word	38895
	.byte	4,4,35,136,160,3,13
	.byte	'reserved_D00C',0
	.word	42760
	.byte	244,31,4,35,140,160,3,13
	.byte	'RGN',0
	.word	42781
	.byte	128,1,4,35,128,192,3,13
	.byte	'reserved_E080',0
	.word	4445
	.byte	8,4,35,128,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R0',0
	.word	40713
	.byte	4,4,35,136,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R0',0
	.word	40792
	.byte	4,4,35,140,193,3,13
	.byte	'reserved_E090',0
	.word	4445
	.byte	8,4,35,144,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R1',0
	.word	40713
	.byte	4,4,35,152,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R1',0
	.word	40792
	.byte	4,4,35,156,193,3,13
	.byte	'reserved_E0A0',0
	.word	4445
	.byte	8,4,35,160,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R2',0
	.word	40713
	.byte	4,4,35,168,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R2',0
	.word	40792
	.byte	4,4,35,172,193,3,13
	.byte	'reserved_E0B0',0
	.word	4445
	.byte	8,4,35,176,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R3',0
	.word	40713
	.byte	4,4,35,184,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R3',0
	.word	40792
	.byte	4,4,35,188,193,3,13
	.byte	'reserved_E0C0',0
	.word	4445
	.byte	8,4,35,192,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R4',0
	.word	40713
	.byte	4,4,35,200,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R4',0
	.word	40792
	.byte	4,4,35,204,193,3,13
	.byte	'reserved_E0D0',0
	.word	4445
	.byte	8,4,35,208,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R5',0
	.word	40713
	.byte	4,4,35,216,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R5',0
	.word	40792
	.byte	4,4,35,220,193,3,13
	.byte	'reserved_E0E0',0
	.word	4445
	.byte	8,4,35,224,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R6',0
	.word	40713
	.byte	4,4,35,232,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R6',0
	.word	40792
	.byte	4,4,35,236,193,3,13
	.byte	'reserved_E0F0',0
	.word	4445
	.byte	8,4,35,240,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R7',0
	.word	40713
	.byte	4,4,35,248,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R7',0
	.word	40792
	.byte	4,4,35,252,193,3,13
	.byte	'SFR_SPROT_ACCENA_W',0
	.word	40497
	.byte	4,4,35,128,194,3,13
	.byte	'SFR_SPROT_ACCENB_W',0
	.word	40573
	.byte	4,4,35,132,194,3,13
	.byte	'reserved_E108',0
	.word	4445
	.byte	8,4,35,136,194,3,13
	.byte	'LPB_SPROT_ACCENA_R',0
	.word	39021
	.byte	4,4,35,144,194,3,13
	.byte	'LPB_SPROT_ACCENB_R',0
	.word	39097
	.byte	4,4,35,148,194,3,13
	.byte	'reserved_E118',0
	.word	42786
	.byte	232,1,4,35,152,194,3,13
	.byte	'DLMU_SPROT_RGNLA0',0
	.word	37223
	.byte	4,4,35,128,196,3,13
	.byte	'DLMU_SPROT_RGNUA0',0
	.word	37297
	.byte	4,4,35,132,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W0',0
	.word	36983
	.byte	4,4,35,136,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W0',0
	.word	37143
	.byte	4,4,35,140,196,3,13
	.byte	'DLMU_SPROT_RGNLA1',0
	.word	37223
	.byte	4,4,35,144,196,3,13
	.byte	'DLMU_SPROT_RGNUA1',0
	.word	37297
	.byte	4,4,35,148,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W1',0
	.word	36983
	.byte	4,4,35,152,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W1',0
	.word	37143
	.byte	4,4,35,156,196,3,13
	.byte	'DLMU_SPROT_RGNLA2',0
	.word	37223
	.byte	4,4,35,160,196,3,13
	.byte	'DLMU_SPROT_RGNUA2',0
	.word	37297
	.byte	4,4,35,164,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W2',0
	.word	36983
	.byte	4,4,35,168,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W2',0
	.word	37143
	.byte	4,4,35,172,196,3,13
	.byte	'DLMU_SPROT_RGNLA3',0
	.word	37223
	.byte	4,4,35,176,196,3,13
	.byte	'DLMU_SPROT_RGNUA3',0
	.word	37297
	.byte	4,4,35,180,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W3',0
	.word	36983
	.byte	4,4,35,184,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W3',0
	.word	37143
	.byte	4,4,35,188,196,3,13
	.byte	'DLMU_SPROT_RGNLA4',0
	.word	37223
	.byte	4,4,35,192,196,3,13
	.byte	'DLMU_SPROT_RGNUA4',0
	.word	37297
	.byte	4,4,35,196,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W4',0
	.word	36983
	.byte	4,4,35,200,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W4',0
	.word	37143
	.byte	4,4,35,204,196,3,13
	.byte	'DLMU_SPROT_RGNLA5',0
	.word	37223
	.byte	4,4,35,208,196,3,13
	.byte	'DLMU_SPROT_RGNUA5',0
	.word	37297
	.byte	4,4,35,212,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W5',0
	.word	36983
	.byte	4,4,35,216,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W5',0
	.word	37143
	.byte	4,4,35,220,196,3,13
	.byte	'DLMU_SPROT_RGNLA6',0
	.word	37223
	.byte	4,4,35,224,196,3,13
	.byte	'DLMU_SPROT_RGNUA6',0
	.word	37297
	.byte	4,4,35,228,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W6',0
	.word	36983
	.byte	4,4,35,232,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W6',0
	.word	37143
	.byte	4,4,35,236,196,3,13
	.byte	'DLMU_SPROT_RGNLA7',0
	.word	37223
	.byte	4,4,35,240,196,3,13
	.byte	'DLMU_SPROT_RGNUA7',0
	.word	37297
	.byte	4,4,35,244,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W7',0
	.word	36983
	.byte	4,4,35,248,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W7',0
	.word	37143
	.byte	4,4,35,252,196,3,13
	.byte	'reserved_E280',0
	.word	4445
	.byte	8,4,35,128,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R0',0
	.word	36903
	.byte	4,4,35,136,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R0',0
	.word	37063
	.byte	4,4,35,140,197,3,13
	.byte	'reserved_E290',0
	.word	4445
	.byte	8,4,35,144,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R1',0
	.word	36903
	.byte	4,4,35,152,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R1',0
	.word	37063
	.byte	4,4,35,156,197,3,13
	.byte	'reserved_E2A0',0
	.word	4445
	.byte	8,4,35,160,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R2',0
	.word	36903
	.byte	4,4,35,168,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R2',0
	.word	37063
	.byte	4,4,35,172,197,3,13
	.byte	'reserved_E2B0',0
	.word	4445
	.byte	8,4,35,176,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R3',0
	.word	36903
	.byte	4,4,35,184,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R3',0
	.word	37063
	.byte	4,4,35,188,197,3,13
	.byte	'reserved_E2C0',0
	.word	4445
	.byte	8,4,35,192,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R4',0
	.word	36903
	.byte	4,4,35,200,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R4',0
	.word	37063
	.byte	4,4,35,204,197,3,13
	.byte	'reserved_E2D0',0
	.word	4445
	.byte	8,4,35,208,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R5',0
	.word	36903
	.byte	4,4,35,216,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R5',0
	.word	37063
	.byte	4,4,35,220,197,3,13
	.byte	'reserved_E2E0',0
	.word	4445
	.byte	8,4,35,224,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R6',0
	.word	36903
	.byte	4,4,35,232,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R6',0
	.word	37063
	.byte	4,4,35,236,197,3,13
	.byte	'reserved_E2F0',0
	.word	4445
	.byte	8,4,35,240,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R7',0
	.word	36903
	.byte	4,4,35,248,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R7',0
	.word	37063
	.byte	4,4,35,252,197,3,13
	.byte	'reserved_E300',0
	.word	42797
	.byte	128,48,4,35,128,198,3,13
	.byte	'OSEL',0
	.word	39362
	.byte	4,4,35,128,246,3,13
	.byte	'reserved_FB04',0
	.word	4785
	.byte	12,4,35,132,246,3,13
	.byte	'BLK',0
	.word	42818
	.byte	128,3,4,35,144,246,3,13
	.byte	'reserved_FC90',0
	.word	42823
	.byte	160,39,4,35,144,249,3,13
	.byte	'SEGEN',0
	.word	40434
	.byte	4,4,35,176,160,4,13
	.byte	'reserved_11034',0
	.word	42834
	.byte	208,223,1,4,35,180,160,4,13
	.byte	'TASK_ASI',0
	.word	40998
	.byte	4,4,35,132,128,6,13
	.byte	'reserved_18008',0
	.word	42847
	.byte	248,1,4,35,136,128,6,13
	.byte	'PMA0',0
	.word	39861
	.byte	4,4,35,128,130,6,13
	.byte	'PMA1',0
	.word	39923
	.byte	4,4,35,132,130,6,13
	.byte	'PMA2',0
	.word	39985
	.byte	4,4,35,136,130,6,13
	.byte	'reserved_1810C',0
	.word	42858
	.byte	244,29,4,35,140,130,6,13
	.byte	'DCON2',0
	.word	36590
	.byte	4,4,35,128,160,6,13
	.byte	'reserved_19004',0
	.word	4445
	.byte	8,4,35,132,160,6,13
	.byte	'SMACON',0
	.word	40649
	.byte	4,4,35,140,160,6,13
	.byte	'DSTR',0
	.word	37682
	.byte	4,4,35,144,160,6,13
	.byte	'reserved_19014',0
	.word	2625
	.byte	4,4,35,148,160,6,13
	.byte	'DATR',0
	.word	36338
	.byte	4,4,35,152,160,6,13
	.byte	'DEADD',0
	.word	36714
	.byte	4,4,35,156,160,6,13
	.byte	'DIEAR',0
	.word	36777
	.byte	4,4,35,160,160,6,13
	.byte	'DIETR',0
	.word	36840
	.byte	4,4,35,164,160,6,13
	.byte	'reserved_19028',0
	.word	3816
	.byte	24,4,35,168,160,6,13
	.byte	'DCON0',0
	.word	36527
	.byte	4,4,35,192,160,6,13
	.byte	'reserved_19044',0
	.word	42869
	.byte	188,3,4,35,196,160,6,13
	.byte	'PSTR',0
	.word	40047
	.byte	4,4,35,128,164,6,13
	.byte	'PCON1',0
	.word	39547
	.byte	4,4,35,132,164,6,13
	.byte	'PCON2',0
	.word	39610
	.byte	4,4,35,136,164,6,13
	.byte	'PCON0',0
	.word	39484
	.byte	4,4,35,140,164,6,13
	.byte	'PIEAR',0
	.word	39735
	.byte	4,4,35,144,164,6,13
	.byte	'PIETR',0
	.word	39798
	.byte	4,4,35,148,164,6,13
	.byte	'reserved_19218',0
	.word	42880
	.byte	232,3,4,35,152,164,6,13
	.byte	'COMPAT',0
	.word	35771
	.byte	4,4,35,128,168,6,13
	.byte	'reserved_19404',0
	.word	42891
	.byte	252,23,4,35,132,168,6,13
	.byte	'FPU_TRAP',0
	.word	42902
	.byte	28,4,35,128,192,6,13
	.byte	'reserved_1A01C',0
	.word	42907
	.byte	228,63,4,35,156,192,6,13
	.byte	'DPR',0
	.word	42928
	.byte	144,1,4,35,128,128,7,13
	.byte	'reserved_1C090',0
	.word	42933
	.byte	240,30,4,35,144,129,7,13
	.byte	'CPR',0
	.word	42953
	.byte	80,4,35,128,160,7,13
	.byte	'reserved_1D050',0
	.word	42958
	.byte	176,31,4,35,208,160,7,13
	.byte	'CPXE_0',0
	.word	36090
	.byte	4,4,35,128,192,7,13
	.byte	'CPXE_1',0
	.word	36090
	.byte	4,4,35,132,192,7,13
	.byte	'CPXE_2',0
	.word	36090
	.byte	4,4,35,136,192,7,13
	.byte	'CPXE_3',0
	.word	36090
	.byte	4,4,35,140,192,7,13
	.byte	'DPRE_0',0
	.word	37432
	.byte	4,4,35,144,192,7,13
	.byte	'DPRE_1',0
	.word	37432
	.byte	4,4,35,148,192,7,13
	.byte	'DPRE_2',0
	.word	37432
	.byte	4,4,35,152,192,7,13
	.byte	'DPRE_3',0
	.word	37432
	.byte	4,4,35,156,192,7,13
	.byte	'DPWE_0',0
	.word	37620
	.byte	4,4,35,160,192,7,13
	.byte	'DPWE_1',0
	.word	37620
	.byte	4,4,35,164,192,7,13
	.byte	'DPWE_2',0
	.word	37620
	.byte	4,4,35,168,192,7,13
	.byte	'DPWE_3',0
	.word	37620
	.byte	4,4,35,172,192,7,13
	.byte	'reserved_1E030',0
	.word	42969
	.byte	16,4,35,176,192,7,13
	.byte	'CPXE_4',0
	.word	36090
	.byte	4,4,35,192,192,7,13
	.byte	'CPXE_5',0
	.word	36090
	.byte	4,4,35,196,192,7,13
	.byte	'reserved_1E048',0
	.word	4445
	.byte	8,4,35,200,192,7,13
	.byte	'DPRE_4',0
	.word	37432
	.byte	4,4,35,208,192,7,13
	.byte	'DPRE_5',0
	.word	37432
	.byte	4,4,35,212,192,7,13
	.byte	'reserved_1E058',0
	.word	4445
	.byte	8,4,35,216,192,7,13
	.byte	'DPWE_4',0
	.word	37620
	.byte	4,4,35,224,192,7,13
	.byte	'DPWE_5',0
	.word	37620
	.byte	4,4,35,228,192,7,13
	.byte	'reserved_1E068',0
	.word	42978
	.byte	152,7,4,35,232,192,7,13
	.byte	'TPS',0
	.word	42989
	.byte	16,4,35,128,200,7,13
	.byte	'reserved_1E410',0
	.word	42994
	.byte	48,4,35,144,200,7,13
	.byte	'TPS_EXTIM',0
	.word	43003
	.byte	28,4,35,192,200,7,13
	.byte	'reserved_1E45C',0
	.word	43008
	.byte	164,23,4,35,220,200,7,13
	.byte	'TR',0
	.word	43028
	.byte	64,4,35,128,224,7,13
	.byte	'reserved_1F040',0
	.word	43033
	.byte	192,23,4,35,192,224,7,13
	.byte	'CCTRL',0
	.word	35708
	.byte	4,4,35,128,248,7,13
	.byte	'CCNT',0
	.word	35646
	.byte	4,4,35,132,248,7,13
	.byte	'ICNT',0
	.word	38625
	.byte	4,4,35,136,248,7,13
	.byte	'M1CNT',0
	.word	39173
	.byte	4,4,35,140,248,7,13
	.byte	'M2CNT',0
	.word	39236
	.byte	4,4,35,144,248,7,13
	.byte	'M3CNT',0
	.word	39299
	.byte	4,4,35,148,248,7,13
	.byte	'reserved_1FC18',0
	.word	42786
	.byte	232,1,4,35,152,248,7,13
	.byte	'DBGSR',0
	.word	36400
	.byte	4,4,35,128,250,7,13
	.byte	'reserved_1FD04',0
	.word	2625
	.byte	4,4,35,132,250,7,13
	.byte	'EXEVT',0
	.word	37744
	.byte	4,4,35,136,250,7,13
	.byte	'CREVT',0
	.word	36152
	.byte	4,4,35,140,250,7,13
	.byte	'SWEVT',0
	.word	40871
	.byte	4,4,35,144,250,7,13
	.byte	'reserved_1FD14',0
	.word	43044
	.byte	28,4,35,148,250,7,13
	.byte	'TRIG_ACC',0
	.word	41725
	.byte	4,4,35,176,250,7,13
	.byte	'reserved_1FD34',0
	.word	4785
	.byte	12,4,35,180,250,7,13
	.byte	'DMS',0
	.word	37371
	.byte	4,4,35,192,250,7,13
	.byte	'DCX',0
	.word	36653
	.byte	4,4,35,196,250,7,13
	.byte	'DBGTCR',0
	.word	36463
	.byte	4,4,35,200,250,7,13
	.byte	'reserved_1FD4C',0
	.word	43053
	.byte	180,1,4,35,204,250,7,13
	.byte	'PCXI',0
	.word	39673
	.byte	4,4,35,128,252,7,13
	.byte	'PSW',0
	.word	40109
	.byte	4,4,35,132,252,7,13
	.byte	'PC',0
	.word	39424
	.byte	4,4,35,136,252,7,13
	.byte	'reserved_1FE0C',0
	.word	4445
	.byte	8,4,35,140,252,7,13
	.byte	'SYSCON',0
	.word	40934
	.byte	4,4,35,148,252,7,13
	.byte	'CPU_ID',0
	.word	36026
	.byte	4,4,35,152,252,7,13
	.byte	'CORE_ID',0
	.word	35835
	.byte	4,4,35,156,252,7,13
	.byte	'BIV',0
	.word	35325
	.byte	4,4,35,160,252,7,13
	.byte	'BTV',0
	.word	35585
	.byte	4,4,35,164,252,7,13
	.byte	'ISP',0
	.word	38708
	.byte	4,4,35,168,252,7,13
	.byte	'ICR',0
	.word	14752
	.byte	4,4,35,172,252,7,13
	.byte	'reserved_1FE30',0
	.word	4445
	.byte	8,4,35,176,252,7,13
	.byte	'FCX',0
	.word	37807
	.byte	4,4,35,184,252,7,13
	.byte	'LCX',0
	.word	38960
	.byte	4,4,35,188,252,7,13
	.byte	'reserved_1FE40',0
	.word	42969
	.byte	16,4,35,192,252,7,13
	.byte	'CUS_ID',0
	.word	36215
	.byte	4,4,35,208,252,7,13
	.byte	'reserved_1FE54',0
	.word	43064
	.byte	172,1,4,35,212,252,7,13
	.byte	'D',0
	.word	43075
	.byte	64,4,35,128,254,7,13
	.byte	'reserved_1FF40',0
	.word	43084
	.byte	64,4,35,192,254,7,13
	.byte	'A',0
	.word	43093
	.byte	64,4,35,128,255,7,13
	.byte	'reserved_1FFC0',0
	.word	43084
	.byte	64,4,35,192,255,7,0,14
	.word	43102
	.byte	32
	.byte	'Ifx_CPU',0,16,210,19,3
	.word	48200
	.byte	17,9,124,9,1,18
	.byte	'IfxCpu_Id_0',0,0,18
	.byte	'IfxCpu_Id_1',0,1,18
	.byte	'IfxCpu_Id_2',0,2,18
	.byte	'IfxCpu_Id_3',0,3,18
	.byte	'IfxCpu_Id_4',0,4,18
	.byte	'IfxCpu_Id_6',0,6,18
	.byte	'IfxCpu_Id_none',0,7,0,32
	.byte	'IfxCpu_Id',0,9,133,1,3
	.word	48222
	.byte	32
	.byte	'IfxCpu_ResourceCpu',0,9,170,1,3
	.word	9385
	.byte	32
	.byte	'Ifx_SRC_SRCR_Bits',0,11,85,3
	.word	10030
	.byte	32
	.byte	'Ifx_SRC_SRCR',0,11,98,3
	.word	10320
	.byte	10
	.byte	'_Ifx_SRC_CPU_CPU',0,11,110,25,4,13
	.byte	'SB',0
	.word	10320
	.byte	4,2,35,0,0,14
	.word	48423
	.byte	32
	.byte	'Ifx_SRC_CPU_CPU',0,11,113,3
	.word	48458
	.byte	15,24
	.word	48423
	.byte	16,5,0,14
	.word	48487
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,11,128,1,25,24,13
	.byte	'CPU',0
	.word	48496
	.byte	24,2,35,0,0,14
	.word	48501
	.byte	32
	.byte	'Ifx_SRC_CPU',0,11,131,1,3
	.word	48534
	.byte	10
	.byte	'_Ifx_SRC_AGBT_AGBT',0,11,146,1,25,4,13
	.byte	'SR',0
	.word	10320
	.byte	4,2,35,0,0,14
	.word	48560
	.byte	32
	.byte	'Ifx_SRC_AGBT_AGBT',0,11,149,1,3
	.word	48598
	.byte	15,4
	.word	48560
	.byte	16,0,0,14
	.word	48630
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,11,164,1,25,4,13
	.byte	'AGBT',0
	.word	48639
	.byte	4,2,35,0,0,14
	.word	48644
	.byte	32
	.byte	'Ifx_SRC_AGBT',0,11,167,1,3
	.word	48679
	.byte	10
	.byte	'_Ifx_SRC_XBAR_XBAR',0,11,182,1,25,4,13
	.byte	'SR',0
	.word	10320
	.byte	4,2,35,0,0,14
	.word	48706
	.byte	32
	.byte	'Ifx_SRC_XBAR_XBAR',0,11,185,1,3
	.word	48744
	.byte	15,12
	.word	48706
	.byte	16,2,0,14
	.word	48776
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,11,200,1,25,12,13
	.byte	'XBAR',0
	.word	48785
	.byte	12,2,35,0,0,14
	.word	48790
	.byte	32
	.byte	'Ifx_SRC_XBAR',0,11,203,1,3
	.word	48825
	.byte	15,8
	.word	10320
	.byte	16,1,0,10
	.byte	'_Ifx_SRC_CERBERUS_CERBERUS',0,11,218,1,25,8,13
	.byte	'SR',0
	.word	48852
	.byte	8,2,35,0,0,14
	.word	48861
	.byte	32
	.byte	'Ifx_SRC_CERBERUS_CERBERUS',0,11,221,1,3
	.word	48907
	.byte	14
	.word	48861
	.byte	10
	.byte	'_Ifx_SRC_CERBERUS',0,11,236,1,25,8,13
	.byte	'CERBERUS',0
	.word	48947
	.byte	8,2,35,0,0,14
	.word	48952
	.byte	32
	.byte	'Ifx_SRC_CERBERUS',0,11,239,1,3
	.word	48995
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN_ASCLIN',0,11,254,1,25,12,13
	.byte	'TX',0
	.word	10320
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10320
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10320
	.byte	4,2,35,8,0,14
	.word	49026
	.byte	32
	.byte	'Ifx_SRC_ASCLIN_ASCLIN',0,11,131,2,3
	.word	49093
	.byte	15,144,1
	.word	49026
	.byte	16,11,0,14
	.word	49129
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,11,146,2,25,144,1,13
	.byte	'ASCLIN',0
	.word	49139
	.byte	144,1,2,35,0,0,14
	.word	49144
	.byte	32
	.byte	'Ifx_SRC_ASCLIN',0,11,149,2,3
	.word	49185
	.byte	10
	.byte	'_Ifx_SRC_QSPI_QSPI',0,11,164,2,25,20,13
	.byte	'TX',0
	.word	10320
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10320
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10320
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	10320
	.byte	4,2,35,12,13
	.byte	'U',0
	.word	10320
	.byte	4,2,35,16,0,14
	.word	49214
	.byte	32
	.byte	'Ifx_SRC_QSPI_QSPI',0,11,171,2,3
	.word	49300
	.byte	15,120
	.word	49214
	.byte	16,5,0,14
	.word	49332
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,11,186,2,25,120,13
	.byte	'QSPI',0
	.word	49341
	.byte	120,2,35,0,0,14
	.word	49346
	.byte	32
	.byte	'Ifx_SRC_QSPI',0,11,189,2,3
	.word	49381
	.byte	10
	.byte	'_Ifx_SRC_HSCT_HSCT',0,11,204,2,25,4,13
	.byte	'SR',0
	.word	10320
	.byte	4,2,35,0,0,14
	.word	49408
	.byte	32
	.byte	'Ifx_SRC_HSCT_HSCT',0,11,207,2,3
	.word	49446
	.byte	15,8
	.word	49408
	.byte	16,1,0,14
	.word	49478
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,11,222,2,25,8,13
	.byte	'HSCT',0
	.word	49487
	.byte	8,2,35,0,0,14
	.word	49492
	.byte	32
	.byte	'Ifx_SRC_HSCT',0,11,225,2,3
	.word	49527
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL_CH',0,11,240,2,25,16,13
	.byte	'COK',0
	.word	10320
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	10320
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10320
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	10320
	.byte	4,2,35,12,0,14
	.word	49554
	.byte	32
	.byte	'Ifx_SRC_HSSL_HSSL_CH',0,11,246,2,3
	.word	49635
	.byte	15,64
	.word	49554
	.byte	16,3,0,14
	.word	49670
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL',0,11,133,3,25,68,13
	.byte	'CH',0
	.word	49679
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	10320
	.byte	4,2,35,64,0,14
	.word	49684
	.byte	32
	.byte	'Ifx_SRC_HSSL_HSSL',0,11,137,3,3
	.word	49735
	.byte	15,136,1
	.word	49684
	.byte	16,1,0,14
	.word	49767
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,11,152,3,25,136,1,13
	.byte	'HSSL',0
	.word	49777
	.byte	136,1,2,35,0,0,14
	.word	49782
	.byte	32
	.byte	'Ifx_SRC_HSSL',0,11,155,3,3
	.word	49819
	.byte	10
	.byte	'_Ifx_SRC_I2C_I2C',0,11,170,3,25,16,13
	.byte	'DTR',0
	.word	10320
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	10320
	.byte	4,2,35,4,13
	.byte	'P',0
	.word	10320
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2625
	.byte	4,2,35,12,0,14
	.word	49846
	.byte	32
	.byte	'Ifx_SRC_I2C_I2C',0,11,176,3,3
	.word	49927
	.byte	15,32
	.word	49846
	.byte	16,1,0,14
	.word	49957
	.byte	10
	.byte	'_Ifx_SRC_I2C',0,11,191,3,25,32,13
	.byte	'I2C',0
	.word	49966
	.byte	32,2,35,0,0,14
	.word	49971
	.byte	32
	.byte	'Ifx_SRC_I2C',0,11,194,3,3
	.word	50004
	.byte	10
	.byte	'_Ifx_SRC_SENT_SENT',0,11,209,3,25,4,13
	.byte	'SR',0
	.word	10320
	.byte	4,2,35,0,0,14
	.word	50030
	.byte	32
	.byte	'Ifx_SRC_SENT_SENT',0,11,212,3,3
	.word	50068
	.byte	15,40
	.word	50030
	.byte	16,9,0,14
	.word	50100
	.byte	10
	.byte	'_Ifx_SRC_SENT',0,11,227,3,25,40,13
	.byte	'SENT',0
	.word	50109
	.byte	40,2,35,0,0,14
	.word	50114
	.byte	32
	.byte	'Ifx_SRC_SENT',0,11,230,3,3
	.word	50149
	.byte	15,20
	.word	10320
	.byte	16,4,0,10
	.byte	'_Ifx_SRC_MSC_MSC',0,11,245,3,25,20,13
	.byte	'SR',0
	.word	50176
	.byte	20,2,35,0,0,14
	.word	50185
	.byte	32
	.byte	'Ifx_SRC_MSC_MSC',0,11,248,3,3
	.word	50221
	.byte	15,80
	.word	50185
	.byte	16,3,0,14
	.word	50251
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,11,135,4,25,80,13
	.byte	'MSC',0
	.word	50260
	.byte	80,2,35,0,0,14
	.word	50265
	.byte	32
	.byte	'Ifx_SRC_MSC',0,11,138,4,3
	.word	50298
	.byte	15,16
	.word	10320
	.byte	16,3,0,10
	.byte	'_Ifx_SRC_CCU6_CCU',0,11,153,4,25,16,13
	.byte	'SR',0
	.word	50324
	.byte	16,2,35,0,0,14
	.word	50333
	.byte	32
	.byte	'Ifx_SRC_CCU6_CCU',0,11,156,4,3
	.word	50370
	.byte	15,32
	.word	50333
	.byte	16,1,0,14
	.word	50401
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,11,171,4,25,32,13
	.byte	'CCU',0
	.word	50410
	.byte	32,2,35,0,0,14
	.word	50415
	.byte	32
	.byte	'Ifx_SRC_CCU6',0,11,174,4,3
	.word	50449
	.byte	10
	.byte	'_Ifx_SRC_GPT12_GPT12',0,11,189,4,25,24,13
	.byte	'CIRQ',0
	.word	10320
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	10320
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	10320
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	10320
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	10320
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	10320
	.byte	4,2,35,20,0,14
	.word	50476
	.byte	32
	.byte	'Ifx_SRC_GPT12_GPT12',0,11,197,4,3
	.word	50578
	.byte	15,24
	.word	50476
	.byte	16,0,0,14
	.word	50612
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,11,212,4,25,24,13
	.byte	'GPT12',0
	.word	50621
	.byte	24,2,35,0,0,14
	.word	50626
	.byte	32
	.byte	'Ifx_SRC_GPT12',0,11,215,4,3
	.word	50663
	.byte	10
	.byte	'_Ifx_SRC_STM_STM',0,11,230,4,25,8,13
	.byte	'SR',0
	.word	48852
	.byte	8,2,35,0,0,14
	.word	50691
	.byte	32
	.byte	'Ifx_SRC_STM_STM',0,11,233,4,3
	.word	50727
	.byte	15,48
	.word	50691
	.byte	16,5,0,14
	.word	50757
	.byte	10
	.byte	'_Ifx_SRC_STM',0,11,248,4,25,48,13
	.byte	'STM',0
	.word	50766
	.byte	48,2,35,0,0,14
	.word	50771
	.byte	32
	.byte	'Ifx_SRC_STM',0,11,251,4,3
	.word	50804
	.byte	10
	.byte	'_Ifx_SRC_FCE_FCE0',0,11,138,5,25,4,13
	.byte	'SR',0
	.word	10320
	.byte	4,2,35,0,0,14
	.word	50830
	.byte	32
	.byte	'Ifx_SRC_FCE_FCE0',0,11,141,5,3
	.word	50867
	.byte	14
	.word	50830
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,11,156,5,25,4,13
	.byte	'FCE0',0
	.word	50898
	.byte	4,2,35,0,0,14
	.word	50903
	.byte	32
	.byte	'Ifx_SRC_FCE',0,11,159,5,3
	.word	50937
	.byte	15,32
	.word	604
	.byte	16,31,0,15,128,4
	.word	10320
	.byte	16,127,0,10
	.byte	'_Ifx_SRC_DMA_DMA',0,11,174,5,25,176,4,13
	.byte	'ERR',0
	.word	50324
	.byte	16,2,35,0,13
	.byte	'reserved_10',0
	.word	50963
	.byte	32,2,35,16,13
	.byte	'CH',0
	.word	50972
	.byte	128,4,2,35,48,0,14
	.word	50982
	.byte	32
	.byte	'Ifx_SRC_DMA_DMA',0,11,179,5,3
	.word	51054
	.byte	15,176,4
	.word	50982
	.byte	16,0,0,14
	.word	51084
	.byte	10
	.byte	'_Ifx_SRC_DMA',0,11,194,5,25,176,4,13
	.byte	'DMA',0
	.word	51094
	.byte	176,4,2,35,0,0,14
	.word	51099
	.byte	32
	.byte	'Ifx_SRC_DMA',0,11,197,5,3
	.word	51134
	.byte	10
	.byte	'_Ifx_SRC_SDMMC_SDMMC',0,11,212,5,25,8,13
	.byte	'ERR',0
	.word	10320
	.byte	4,2,35,0,13
	.byte	'DMA',0
	.word	10320
	.byte	4,2,35,4,0,14
	.word	51160
	.byte	32
	.byte	'Ifx_SRC_SDMMC_SDMMC',0,11,216,5,3
	.word	51214
	.byte	15,8
	.word	51160
	.byte	16,0,0,14
	.word	51248
	.byte	10
	.byte	'_Ifx_SRC_SDMMC',0,11,231,5,25,8,13
	.byte	'SDMMC',0
	.word	51257
	.byte	8,2,35,0,0,14
	.word	51262
	.byte	32
	.byte	'Ifx_SRC_SDMMC',0,11,234,5,3
	.word	51299
	.byte	15,40
	.word	10320
	.byte	16,9,0,10
	.byte	'_Ifx_SRC_GETH_GETH',0,11,249,5,25,40,13
	.byte	'SR',0
	.word	51327
	.byte	40,2,35,0,0,14
	.word	51336
	.byte	32
	.byte	'Ifx_SRC_GETH_GETH',0,11,252,5,3
	.word	51374
	.byte	15,40
	.word	51336
	.byte	16,0,0,14
	.word	51406
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,11,139,6,25,40,13
	.byte	'GETH',0
	.word	51415
	.byte	40,2,35,0,0,14
	.word	51420
	.byte	32
	.byte	'Ifx_SRC_GETH',0,11,142,6,3
	.word	51455
	.byte	15,64
	.word	10320
	.byte	16,15,0,10
	.byte	'_Ifx_SRC_CAN_CAN',0,11,157,6,25,64,13
	.byte	'INT',0
	.word	51482
	.byte	64,2,35,0,0,14
	.word	51491
	.byte	32
	.byte	'Ifx_SRC_CAN_CAN',0,11,160,6,3
	.word	51528
	.byte	15,192,1
	.word	51491
	.byte	16,2,0,14
	.word	51558
	.byte	10
	.byte	'_Ifx_SRC_CAN',0,11,175,6,25,192,1,13
	.byte	'CAN',0
	.word	51568
	.byte	192,1,2,35,0,0,14
	.word	51573
	.byte	32
	.byte	'Ifx_SRC_CAN',0,11,178,6,3
	.word	51608
	.byte	10
	.byte	'_Ifx_SRC_VADC_G',0,11,193,6,25,16,13
	.byte	'SR0',0
	.word	10320
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10320
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10320
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10320
	.byte	4,2,35,12,0,14
	.word	51634
	.byte	32
	.byte	'Ifx_SRC_VADC_G',0,11,199,6,3
	.word	51709
	.byte	10
	.byte	'_Ifx_SRC_VADC_FC',0,11,214,6,25,4,13
	.byte	'SR0',0
	.word	10320
	.byte	4,2,35,0,0,14
	.word	51738
	.byte	32
	.byte	'Ifx_SRC_VADC_FC',0,11,217,6,3
	.word	51775
	.byte	15,192,1
	.word	51634
	.byte	16,11,0,14
	.word	51805
	.byte	15,32
	.word	51738
	.byte	16,7,0,14
	.word	51820
	.byte	15,32
	.word	51634
	.byte	16,1,0,14
	.word	51834
	.byte	10
	.byte	'_Ifx_SRC_VADC',0,11,233,6,25,128,2,13
	.byte	'G',0
	.word	51815
	.byte	192,1,2,35,0,13
	.byte	'FC',0
	.word	51829
	.byte	32,3,35,192,1,13
	.byte	'CG',0
	.word	51843
	.byte	32,3,35,224,1,0,14
	.word	51848
	.byte	32
	.byte	'Ifx_SRC_VADC',0,11,238,6,3
	.word	51908
	.byte	10
	.byte	'_Ifx_SRC_DSADC_DSADC',0,11,253,6,25,8,13
	.byte	'SRM',0
	.word	10320
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	10320
	.byte	4,2,35,4,0,14
	.word	51935
	.byte	32
	.byte	'Ifx_SRC_DSADC_DSADC',0,11,129,7,3
	.word	51989
	.byte	15,112
	.word	51935
	.byte	16,13,0,14
	.word	52023
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,11,144,7,25,112,13
	.byte	'DSADC',0
	.word	52032
	.byte	112,2,35,0,0,14
	.word	52037
	.byte	32
	.byte	'Ifx_SRC_DSADC',0,11,147,7,3
	.word	52074
	.byte	10
	.byte	'_Ifx_SRC_ERAY_ERAY',0,11,162,7,25,48,13
	.byte	'INT0',0
	.word	10320
	.byte	4,2,35,0,13
	.byte	'INT1',0
	.word	10320
	.byte	4,2,35,4,13
	.byte	'TINT0',0
	.word	10320
	.byte	4,2,35,8,13
	.byte	'TINT1',0
	.word	10320
	.byte	4,2,35,12,13
	.byte	'NDAT0',0
	.word	10320
	.byte	4,2,35,16,13
	.byte	'NDAT1',0
	.word	10320
	.byte	4,2,35,20,13
	.byte	'MBSC0',0
	.word	10320
	.byte	4,2,35,24,13
	.byte	'MBSC1',0
	.word	10320
	.byte	4,2,35,28,13
	.byte	'OBUSY',0
	.word	10320
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	10320
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4445
	.byte	8,2,35,40,0,14
	.word	52102
	.byte	32
	.byte	'Ifx_SRC_ERAY_ERAY',0,11,175,7,3
	.word	52297
	.byte	15,96
	.word	52102
	.byte	16,1,0,14
	.word	52329
	.byte	10
	.byte	'_Ifx_SRC_ERAY',0,11,190,7,25,96,13
	.byte	'ERAY',0
	.word	52338
	.byte	96,2,35,0,0,14
	.word	52343
	.byte	32
	.byte	'Ifx_SRC_ERAY',0,11,193,7,3
	.word	52378
	.byte	10
	.byte	'_Ifx_SRC_HSM_HSM',0,11,208,7,25,8,13
	.byte	'HSM',0
	.word	48852
	.byte	8,2,35,0,0,14
	.word	52405
	.byte	32
	.byte	'Ifx_SRC_HSM_HSM',0,11,211,7,3
	.word	52442
	.byte	15,8
	.word	52405
	.byte	16,0,0,14
	.word	52472
	.byte	10
	.byte	'_Ifx_SRC_HSM',0,11,226,7,25,8,13
	.byte	'HSM',0
	.word	52481
	.byte	8,2,35,0,0,14
	.word	52486
	.byte	32
	.byte	'Ifx_SRC_HSM',0,11,229,7,3
	.word	52519
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,11,244,7,25,16,13
	.byte	'SCUERU',0
	.word	50324
	.byte	16,2,35,0,0,14
	.word	52545
	.byte	32
	.byte	'Ifx_SRC_SCU',0,11,247,7,3
	.word	52581
	.byte	10
	.byte	'_Ifx_SRC_PMS_PMS',0,11,134,8,25,4,13
	.byte	'SR',0
	.word	10320
	.byte	4,2,35,0,0,14
	.word	52607
	.byte	32
	.byte	'Ifx_SRC_PMS_PMS',0,11,137,8,3
	.word	52643
	.byte	15,16
	.word	52607
	.byte	16,3,0,14
	.word	52673
	.byte	10
	.byte	'_Ifx_SRC_PMS',0,11,152,8,25,16,13
	.byte	'PMS',0
	.word	52682
	.byte	16,2,35,0,0,14
	.word	52687
	.byte	32
	.byte	'Ifx_SRC_PMS',0,11,155,8,3
	.word	52720
	.byte	15,12
	.word	10320
	.byte	16,2,0,10
	.byte	'_Ifx_SRC_SMU_SMU',0,11,170,8,25,12,13
	.byte	'SR',0
	.word	52746
	.byte	12,2,35,0,0,14
	.word	52755
	.byte	32
	.byte	'Ifx_SRC_SMU_SMU',0,11,173,8,3
	.word	52791
	.byte	15,12
	.word	52755
	.byte	16,0,0,14
	.word	52821
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,11,188,8,25,12,13
	.byte	'SMU',0
	.word	52830
	.byte	12,2,35,0,0,14
	.word	52835
	.byte	32
	.byte	'Ifx_SRC_SMU',0,11,191,8,3
	.word	52868
	.byte	15,32
	.word	10320
	.byte	16,7,0,10
	.byte	'_Ifx_SRC_PSI5_PSI5',0,11,206,8,25,32,13
	.byte	'SR',0
	.word	52894
	.byte	32,2,35,0,0,14
	.word	52903
	.byte	32
	.byte	'Ifx_SRC_PSI5_PSI5',0,11,209,8,3
	.word	52941
	.byte	15,32
	.word	52903
	.byte	16,0,0,14
	.word	52973
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,11,224,8,25,32,13
	.byte	'PSI5',0
	.word	52982
	.byte	32,2,35,0,0,14
	.word	52987
	.byte	32
	.byte	'Ifx_SRC_PSI5',0,11,227,8,3
	.word	53022
	.byte	10
	.byte	'_Ifx_SRC_HSPDM_HSPDM0',0,11,242,8,25,12,13
	.byte	'BFR',0
	.word	10320
	.byte	4,2,35,0,13
	.byte	'RAMP',0
	.word	10320
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10320
	.byte	4,2,35,8,0,14
	.word	53049
	.byte	32
	.byte	'Ifx_SRC_HSPDM_HSPDM0',0,11,247,8,3
	.word	53118
	.byte	14
	.word	53049
	.byte	10
	.byte	'_Ifx_SRC_HSPDM',0,11,134,9,25,12,13
	.byte	'HSPDM0',0
	.word	53153
	.byte	12,2,35,0,0,14
	.word	53158
	.byte	32
	.byte	'Ifx_SRC_HSPDM',0,11,137,9,3
	.word	53196
	.byte	10
	.byte	'_Ifx_SRC_DAM_DAM',0,11,152,9,25,24,13
	.byte	'LI0',0
	.word	10320
	.byte	4,2,35,0,13
	.byte	'RI0',0
	.word	10320
	.byte	4,2,35,4,13
	.byte	'LI1',0
	.word	10320
	.byte	4,2,35,8,13
	.byte	'RI1',0
	.word	10320
	.byte	4,2,35,12,13
	.byte	'DR',0
	.word	10320
	.byte	4,2,35,16,13
	.byte	'ERR',0
	.word	10320
	.byte	4,2,35,20,0,14
	.word	53224
	.byte	32
	.byte	'Ifx_SRC_DAM_DAM',0,11,160,9,3
	.word	53325
	.byte	15,48
	.word	53224
	.byte	16,1,0,14
	.word	53355
	.byte	10
	.byte	'_Ifx_SRC_DAM',0,11,175,9,25,48,13
	.byte	'DAM',0
	.word	53364
	.byte	48,2,35,0,0,14
	.word	53369
	.byte	32
	.byte	'Ifx_SRC_DAM',0,11,178,9,3
	.word	53402
	.byte	10
	.byte	'_Ifx_SRC_PSI5S_PSI5S',0,11,193,9,25,32,13
	.byte	'SR',0
	.word	52894
	.byte	32,2,35,0,0,14
	.word	53428
	.byte	32
	.byte	'Ifx_SRC_PSI5S_PSI5S',0,11,196,9,3
	.word	53468
	.byte	15,32
	.word	53428
	.byte	16,0,0,14
	.word	53502
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,11,211,9,25,32,13
	.byte	'PSI5S',0
	.word	53511
	.byte	32,2,35,0,0,14
	.word	53516
	.byte	32
	.byte	'Ifx_SRC_PSI5S',0,11,214,9,3
	.word	53553
	.byte	10
	.byte	'_Ifx_SRC_RIF_RIF',0,11,229,9,25,8,13
	.byte	'ERR',0
	.word	10320
	.byte	4,2,35,0,13
	.byte	'INT',0
	.word	10320
	.byte	4,2,35,4,0,14
	.word	53581
	.byte	32
	.byte	'Ifx_SRC_RIF_RIF',0,11,233,9,3
	.word	53631
	.byte	15,16
	.word	53581
	.byte	16,1,0,14
	.word	53661
	.byte	10
	.byte	'_Ifx_SRC_RIF',0,11,248,9,25,16,13
	.byte	'RIF',0
	.word	53670
	.byte	16,2,35,0,0,14
	.word	53675
	.byte	32
	.byte	'Ifx_SRC_RIF',0,11,251,9,3
	.word	53708
	.byte	10
	.byte	'_Ifx_SRC_SPU_SPU',0,11,138,10,25,8,13
	.byte	'INT',0
	.word	10320
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	10320
	.byte	4,2,35,4,0,14
	.word	53734
	.byte	32
	.byte	'Ifx_SRC_SPU_SPU',0,11,142,10,3
	.word	53784
	.byte	15,16
	.word	53734
	.byte	16,1,0,14
	.word	53814
	.byte	10
	.byte	'_Ifx_SRC_SPU',0,11,157,10,25,16,13
	.byte	'SPU',0
	.word	53823
	.byte	16,2,35,0,0,14
	.word	53828
	.byte	32
	.byte	'Ifx_SRC_SPU',0,11,160,10,3
	.word	53861
	.byte	10
	.byte	'_Ifx_SRC_GPSR_GPSR',0,11,175,10,25,32,13
	.byte	'SR',0
	.word	52894
	.byte	32,2,35,0,0,14
	.word	53887
	.byte	32
	.byte	'Ifx_SRC_GPSR_GPSR',0,11,178,10,3
	.word	53925
	.byte	15,192,1
	.word	53887
	.byte	16,5,0,14
	.word	53957
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,11,193,10,25,192,1,13
	.byte	'GPSR',0
	.word	53967
	.byte	192,1,2,35,0,0,14
	.word	53972
	.byte	32
	.byte	'Ifx_SRC_GPSR',0,11,196,10,3
	.word	54009
	.byte	10
	.byte	'_Ifx_SCU_ACCEN00_Bits',0,4,68,16,4,11
	.byte	'EN0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	604
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	604
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	604
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	604
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	604
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	604
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	604
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	604
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	604
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_ACCEN00_Bits',0,4,102,3
	.word	54036
	.byte	10
	.byte	'_Ifx_SCU_ACCEN01_Bits',0,4,105,16,4,11
	.byte	'reserved_0',0,4
	.word	429
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN01_Bits',0,4,108,3
	.word	54595
	.byte	10
	.byte	'_Ifx_SCU_ACCEN10_Bits',0,4,111,16,4,11
	.byte	'EN0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	604
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	604
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	604
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	604
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	604
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	604
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	604
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	604
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	604
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_ACCEN10_Bits',0,4,145,1,3
	.word	54674
	.byte	10
	.byte	'_Ifx_SCU_ACCEN11_Bits',0,4,148,1,16,4,11
	.byte	'reserved_0',0,4
	.word	429
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN11_Bits',0,4,151,1,3
	.word	55234
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,4,154,1,16,4,11
	.byte	'STM0DIS',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'STM3DIS',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'STM4DIS',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'STM5DIS',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	604
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	429
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,4,164,1,3
	.word	55315
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,4,167,1,16,4,11
	.byte	'STMDIV',0,1
	.word	604
	.byte	4,4,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	604
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	604
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	604
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	604
	.byte	4,4,2,35,2,11
	.byte	'BBBDIV',0,1
	.word	604
	.byte	4,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	604
	.byte	2,6,2,35,3,11
	.byte	'FSI2DIV',0,1
	.word	604
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	604
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON0_Bits',0,4,181,1,3
	.word	55532
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,4,184,1,16,4,11
	.byte	'MCANDIV',0,1
	.word	604
	.byte	4,4,2,35,0,11
	.byte	'CLKSELMCAN',0,1
	.word	604
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'PLL1DIVDIS',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'I2CDIV',0,1
	.word	604
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	604
	.byte	4,0,2,35,1,11
	.byte	'MSCDIV',0,1
	.word	604
	.byte	4,4,2,35,2,11
	.byte	'CLKSELMSC',0,1
	.word	604
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	604
	.byte	2,0,2,35,2,11
	.byte	'QSPIDIV',0,1
	.word	604
	.byte	4,4,2,35,3,11
	.byte	'CLKSELQSPI',0,1
	.word	604
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON1_Bits',0,4,199,1,3
	.word	55805
	.byte	10
	.byte	'_Ifx_SCU_CCUCON10_Bits',0,4,202,1,16,4,11
	.byte	'CPU4DIV',0,1
	.word	604
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	429
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON10_Bits',0,4,206,1,3
	.word	56131
	.byte	10
	.byte	'_Ifx_SCU_CCUCON11_Bits',0,4,209,1,16,4,11
	.byte	'CPU5DIV',0,1
	.word	604
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	429
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON11_Bits',0,4,213,1,3
	.word	56233
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,4,216,1,16,4,11
	.byte	'ASCLINFDIV',0,1
	.word	604
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	604
	.byte	4,0,2,35,0,11
	.byte	'ASCLINSDIV',0,1
	.word	604
	.byte	4,4,2,35,1,11
	.byte	'CLKSELASCLINS',0,1
	.word	604
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	429
	.byte	10,8,2,35,0,11
	.byte	'EBUPERON',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'ERAYPERON',0,1
	.word	604
	.byte	1,6,2,35,3,11
	.byte	'HSPDMPERON',0,1
	.word	604
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	604
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON2_Bits',0,4,228,1,3
	.word	56335
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,4,231,1,16,4,11
	.byte	'PLL0MONEN',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'PLL1MONEN',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'PLL2MONEN',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'SPBMONEN',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'BACKMONEN',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	604
	.byte	3,0,2,35,0,11
	.byte	'PLL0MONTST',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'PLL1MONTST',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'PLL2MONTST',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'SPBMONTST',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'BACKMONTST',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	429
	.byte	11,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	604
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON3_Bits',0,4,248,1,3
	.word	56609
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,4,251,1,16,4,11
	.byte	'LOTHR',0,2
	.word	621
	.byte	12,4,2,35,0,11
	.byte	'UPTHR',0,4
	.word	429
	.byte	12,8,2,35,0,11
	.byte	'MONEN',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'MONTST',0,1
	.word	604
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	604
	.byte	4,2,2,35,3,11
	.byte	'UP',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON4_Bits',0,4,132,2,3
	.word	56978
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,4,135,2,16,4,11
	.byte	'GETHDIV',0,1
	.word	604
	.byte	4,4,2,35,0,11
	.byte	'MCANHDIV',0,1
	.word	604
	.byte	4,0,2,35,0,11
	.byte	'ADASDIV',0,1
	.word	604
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	429
	.byte	18,2,2,35,0,11
	.byte	'UP',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON5_Bits',0,4,143,2,3
	.word	57158
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,4,146,2,16,4,11
	.byte	'CPU0DIV',0,1
	.word	604
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	429
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6_Bits',0,4,150,2,3
	.word	57327
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,4,153,2,16,4,11
	.byte	'CPU1DIV',0,1
	.word	604
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	429
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7_Bits',0,4,157,2,3
	.word	57427
	.byte	10
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,4,160,2,16,4,11
	.byte	'CPU2DIV',0,1
	.word	604
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	429
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON8_Bits',0,4,164,2,3
	.word	57527
	.byte	10
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,4,167,2,16,4,11
	.byte	'CPU3DIV',0,1
	.word	604
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	429
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON9_Bits',0,4,171,2,3
	.word	57627
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,4,174,2,16,4,11
	.byte	'CHREV',0,1
	.word	604
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	604
	.byte	2,0,2,35,0,11
	.byte	'CHPK',0,1
	.word	604
	.byte	4,4,2,35,1,11
	.byte	'CHID',0,1
	.word	604
	.byte	4,0,2,35,1,11
	.byte	'EEA',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	604
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	604
	.byte	4,4,2,35,3,11
	.byte	'VART',0,1
	.word	604
	.byte	3,1,2,35,3,11
	.byte	'SEC',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CHIPID_Bits',0,4,185,2,3
	.word	57727
	.byte	10
	.byte	'_Ifx_SCU_DTSCLIM_Bits',0,4,188,2,16,4,11
	.byte	'LOWER',0,2
	.word	621
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'BGPOK',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'EN',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'LLU',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	621
	.byte	12,4,2,35,2,11
	.byte	'INTEN',0,1
	.word	604
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	604
	.byte	1,2,2,35,3,11
	.byte	'INT',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_DTSCLIM_Bits',0,4,200,2,3
	.word	57930
	.byte	10
	.byte	'_Ifx_SCU_DTSCSTAT_Bits',0,4,203,2,16,4,11
	.byte	'RESULT',0,2
	.word	621
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	429
	.byte	20,0,2,35,0,0,32
	.byte	'Ifx_SCU_DTSCSTAT_Bits',0,4,207,2,3
	.word	58162
	.byte	10
	.byte	'_Ifx_SCU_EICON0_Bits',0,4,210,2,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	452
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	452
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SCU_EICON0_Bits',0,4,216,2,3
	.word	58264
	.byte	10
	.byte	'_Ifx_SCU_EICON1_Bits',0,4,219,2,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	429
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_EICON1_Bits',0,4,228,2,3
	.word	58392
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,4,231,2,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	604
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	604
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	429
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	604
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	604
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	604
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	604
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	604
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	604
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EICR_Bits',0,4,250,2,3
	.word	58581
	.byte	10
	.byte	'_Ifx_SCU_EIFILT_Bits',0,4,253,2,16,4,11
	.byte	'FILRQ0A',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'FILRQ5A',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'FILRQ2A',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'FILRQ3A',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'FILRQ0C',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'FILRQ1C',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'FILRQ3C',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'FILRQ2C',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'FILRQ4A',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'FILRQ6A',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'FILRQ1A',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'FILRQ7A',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'FILRQ6D',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'FILRQ4D',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'FILRQ2B',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'FILRQ3B',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'FILRQ7C',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	604
	.byte	7,0,2,35,2,11
	.byte	'FILTDIV',0,1
	.word	604
	.byte	4,4,2,35,3,11
	.byte	'DEPTH',0,1
	.word	604
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_EIFILT_Bits',0,4,147,3,3
	.word	58945
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,4,150,3,16,4,11
	.byte	'INTF0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	429
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR_Bits',0,4,161,3,3
	.word	59384
	.byte	10
	.byte	'_Ifx_SCU_EISR_Bits',0,4,164,3,16,4,11
	.byte	'AE',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	621
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	621
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_EISR_Bits',0,4,174,3,3
	.word	59595
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,4,177,3,16,4,11
	.byte	'POL',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	621
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	621
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_EMSR_Bits',0,4,187,3,3
	.word	59771
	.byte	10
	.byte	'_Ifx_SCU_EMSSW_Bits',0,4,190,3,16,4,11
	.byte	'reserved_0',0,4
	.word	429
	.byte	24,8,2,35,0,11
	.byte	'EMSFM',0,1
	.word	604
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	604
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	604
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_EMSSW_Bits',0,4,196,3,3
	.word	59965
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,4,199,3,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	621
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	429
	.byte	23,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,4,204,3,3
	.word	60100
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,4,207,3,16,4,11
	.byte	'ARI',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	429
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG_Bits',0,4,212,3,3
	.word	60236
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,4,215,3,16,4,11
	.byte	'EN0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	604
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	621
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	604
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	604
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	604
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_EXTCON_Bits',0,4,226,3,3
	.word	60347
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,4,229,3,16,4,11
	.byte	'STEP',0,2
	.word	621
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	604
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	604
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	621
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	604
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_FDR_Bits',0,4,237,3,3
	.word	60565
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,4,240,3,16,4,11
	.byte	'FS0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	604
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	604
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	604
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	604
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	604
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	604
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_FMR_Bits',0,4,132,4,3
	.word	60728
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,4,135,4,16,4,11
	.byte	'MODREV',0,1
	.word	604
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	604
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	621
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_ID_Bits',0,4,140,4,3
	.word	61064
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,4,143,4,16,4,11
	.byte	'IPEN00',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	604
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	604
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	604
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	604
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	604
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	604
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	604
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	604
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	604
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SCU_IGCR_Bits',0,4,167,4,3
	.word	61171
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,4,170,4,16,4,11
	.byte	'P0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	429
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_IN_Bits',0,4,175,4,3
	.word	61623
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,4,178,4,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	604
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	604
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	604
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	621
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_IOCR_Bits',0,4,185,4,3
	.word	61722
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,4,188,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'LBISTRES',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,4
	.word	429
	.byte	18,12,2,35,0,11
	.byte	'reserved_20',0,2
	.word	621
	.byte	8,4,2,35,2,11
	.byte	'LBISTDONE',0,1
	.word	604
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	604
	.byte	1,2,2,35,3,11
	.byte	'LBISTERRINJ',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'LBISTREQRED',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,4,198,4,3
	.word	61872
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,4,201,4,16,4,11
	.byte	'SEED',0,4
	.word	429
	.byte	19,13,2,35,0,11
	.byte	'reserved_19',0,1
	.word	604
	.byte	5,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	604
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	604
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	604
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,4,208,4,3
	.word	62110
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,4,211,4,16,4,11
	.byte	'LENGTH',0,2
	.word	621
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	429
	.byte	20,0,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,4,215,4,3
	.word	62271
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL3_Bits',0,4,218,4,16,4,11
	.byte	'SIGNATURE',0,4
	.word	429
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL3_Bits',0,4,221,4,3
	.word	62377
	.byte	10
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,4,224,4,16,4,11
	.byte	'LS2',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	621
	.byte	14,1,2,35,0,11
	.byte	'LSEN2',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'LS0',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	621
	.byte	14,1,2,35,2,11
	.byte	'LSEN0',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LCLCON0_Bits',0,4,232,4,3
	.word	62463
	.byte	10
	.byte	'_Ifx_SCU_LCLCON1_Bits',0,4,235,4,16,4,11
	.byte	'LS3',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	621
	.byte	14,1,2,35,0,11
	.byte	'LSEN3',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'LS1',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	621
	.byte	14,1,2,35,2,11
	.byte	'LSEN1',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LCLCON1_Bits',0,4,243,4,3
	.word	62631
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,4,246,4,16,4,11
	.byte	'LCLT0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'LCLT2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'LCLT3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'LCLT4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'LCLT5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	621
	.byte	10,0,2,35,0,11
	.byte	'PLCLT0',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'PLCLT1',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'PLCLT2',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'PLCLT3',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'PLCLT4',0,1
	.word	604
	.byte	1,3,2,35,2,11
	.byte	'PLCLT5',0,1
	.word	604
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	621
	.byte	10,0,2,35,2,0,32
	.byte	'Ifx_SCU_LCLTEST_Bits',0,4,134,5,3
	.word	62799
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,4,137,5,16,4,11
	.byte	'DEPT',0,1
	.word	604
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	621
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	621
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_MANID_Bits',0,4,142,5,3
	.word	63113
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,4,145,5,16,4,11
	.byte	'PS0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	621
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	621
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_OMR_Bits',0,4,153,5,3
	.word	63224
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,4,156,5,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	604
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	604
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'HYSEN',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'HYSCTL',0,1
	.word	604
	.byte	2,4,2,35,1,11
	.byte	'AMPCTL',0,1
	.word	604
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	604
	.byte	2,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	604
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	604
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	604
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	604
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	604
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	604
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	604
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_OSCCON_Bits',0,4,177,5,3
	.word	63382
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,4,180,5,16,4,11
	.byte	'P0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	429
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_OUT_Bits',0,4,185,5,3
	.word	63793
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,4,188,5,16,4,11
	.byte	'CSEL0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'CSEL3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'CSEL4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'CSEL5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	621
	.byte	10,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	604
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	604
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	604
	.byte	6,0,2,35,3,0,32
	.byte	'Ifx_SCU_OVCCON_Bits',0,4,204,5,3
	.word	63894
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,4,207,5,16,4,11
	.byte	'OVEN0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'OVEN3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'OVEN4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'OVEN5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	429
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,4,216,5,3
	.word	64212
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,4,219,5,16,4,11
	.byte	'PDIS0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	429
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC_Bits',0,4,224,5,3
	.word	64399
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,4,227,5,16,4,11
	.byte	'PD0',0,1
	.word	604
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	604
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	604
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	604
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	429
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDR_Bits',0,4,234,5,3
	.word	64510
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,4,237,5,16,4,11
	.byte	'PDR0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	429
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR_Bits',0,4,248,5,3
	.word	64643
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON0_Bits',0,4,251,5,16,4,11
	.byte	'DIVBY',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	621
	.byte	8,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	604
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	604
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	604
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	604
	.byte	5,0,2,35,3,0,32
	.byte	'Ifx_SCU_PERPLLCON0_Bits',0,4,134,6,3
	.word	64846
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON1_Bits',0,4,137,6,16,4,11
	.byte	'K2DIV',0,1
	.word	604
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	604
	.byte	5,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	604
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	429
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLCON1_Bits',0,4,143,6,3
	.word	65086
	.byte	10
	.byte	'_Ifx_SCU_PERPLLSTAT_Bits',0,4,146,6,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'K3RDY',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	429
	.byte	25,0,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLSTAT_Bits',0,4,156,6,3
	.word	65230
	.byte	10
	.byte	'_Ifx_SCU_PMCSR0_Bits',0,4,159,6,16,4,11
	.byte	'REQSLP',0,1
	.word	604
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	604
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	604
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	429
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR0_Bits',0,4,165,6,3
	.word	65452
	.byte	10
	.byte	'_Ifx_SCU_PMCSR1_Bits',0,4,168,6,16,4,11
	.byte	'REQSLP',0,1
	.word	604
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	604
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	604
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	429
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR1_Bits',0,4,174,6,3
	.word	65588
	.byte	10
	.byte	'_Ifx_SCU_PMCSR2_Bits',0,4,177,6,16,4,11
	.byte	'REQSLP',0,1
	.word	604
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	604
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	604
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	429
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR2_Bits',0,4,183,6,3
	.word	65724
	.byte	10
	.byte	'_Ifx_SCU_PMCSR3_Bits',0,4,186,6,16,4,11
	.byte	'REQSLP',0,1
	.word	604
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	604
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	604
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	429
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR3_Bits',0,4,192,6,3
	.word	65860
	.byte	10
	.byte	'_Ifx_SCU_PMCSR4_Bits',0,4,195,6,16,4,11
	.byte	'REQSLP',0,1
	.word	604
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	604
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	604
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	429
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR4_Bits',0,4,201,6,3
	.word	65996
	.byte	10
	.byte	'_Ifx_SCU_PMCSR5_Bits',0,4,204,6,16,4,11
	.byte	'REQSLP',0,1
	.word	604
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	604
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	604
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	429
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR5_Bits',0,4,210,6,3
	.word	66132
	.byte	10
	.byte	'_Ifx_SCU_PMSTAT0_Bits',0,4,213,6,16,4,11
	.byte	'CPU0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'CPU1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'CPU2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'CPU3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'CPU4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'CPU5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	621
	.byte	10,0,2,35,0,11
	.byte	'CPU0LS',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'CPU1LS',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'CPU2LS',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'CPU3LS',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	621
	.byte	12,0,2,35,2,0,32
	.byte	'Ifx_SCU_PMSTAT0_Bits',0,4,227,6,3
	.word	66268
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,4,230,6,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	8,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	604
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	429
	.byte	11,8,2,35,0,11
	.byte	'CPUSEL',0,1
	.word	604
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	604
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	604
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,4,241,6,3
	.word	66540
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR0_Bits',0,4,244,6,16,4,11
	.byte	'LJTEN',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'LJTOVEN',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'LJTOVIEN',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'LJTSTRT',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'LJTSTP',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'LJTCLR',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	621
	.byte	6,4,2,35,0,11
	.byte	'SDSTEP',0,1
	.word	604
	.byte	4,0,2,35,1,11
	.byte	'VDTEN',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'VDTOVEN',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'VDTOVIEN',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'VDTSTRT',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'VDTSTP',0,1
	.word	604
	.byte	1,3,2,35,2,11
	.byte	'VDTCLR',0,1
	.word	604
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	621
	.byte	7,3,2,35,2,11
	.byte	'LPSLPEN',0,1
	.word	604
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	604
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMTRCSR0_Bits',0,4,135,7,3
	.word	66785
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR1_Bits',0,4,138,7,16,4,11
	.byte	'LJTCV',0,2
	.word	621
	.byte	16,0,2,35,0,11
	.byte	'VDTCV',0,2
	.word	621
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	604
	.byte	6,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMTRCSR1_Bits',0,4,143,7,3
	.word	67173
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR2_Bits',0,4,146,7,16,4,11
	.byte	'LDJMPREQ',0,1
	.word	604
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	604
	.byte	2,4,2,35,0,11
	.byte	'LJTRUN',0,1
	.word	604
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	604
	.byte	2,0,2,35,0,11
	.byte	'LJTOV',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	604
	.byte	3,4,2,35,1,11
	.byte	'LJTOVCLR',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	604
	.byte	3,0,2,35,1,11
	.byte	'LJTCNT',0,2
	.word	621
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_PMTRCSR2_Bits',0,4,157,7,3
	.word	67291
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR3_Bits',0,4,160,7,16,4,11
	.byte	'VDROOPREQ',0,1
	.word	604
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	604
	.byte	2,4,2,35,0,11
	.byte	'VDTRUN',0,1
	.word	604
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	604
	.byte	2,0,2,35,0,11
	.byte	'VDTOV',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	604
	.byte	3,4,2,35,1,11
	.byte	'VDTOVCLR',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	604
	.byte	3,0,2,35,1,11
	.byte	'VDTCNT',0,2
	.word	621
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	604
	.byte	6,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMTRCSR3_Bits',0,4,172,7,3
	.word	67534
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,4,175,7,16,4,11
	.byte	'ESR0',0,1
	.word	604
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	604
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	604
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	604
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	604
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	604
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	604
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	604
	.byte	2,0,2,35,1,11
	.byte	'STM3',0,1
	.word	604
	.byte	2,6,2,35,2,11
	.byte	'STM4',0,1
	.word	604
	.byte	2,4,2,35,2,11
	.byte	'STM5',0,1
	.word	604
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	621
	.byte	10,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON_Bits',0,4,189,7,3
	.word	67801
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,4,192,7,16,4,11
	.byte	'FRTO',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'CSSX',0,2
	.word	621
	.byte	6,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	621
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON2_Bits',0,4,206,7,3
	.word	68060
	.byte	10
	.byte	'_Ifx_SCU_RSTCON3_Bits',0,4,209,7,16,4,11
	.byte	'reserved_0',0,4
	.word	429
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON3_Bits',0,4,212,7,3
	.word	68365
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,4,215,7,16,4,11
	.byte	'ESR0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'STM3',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'STM4',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'STM5',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	604
	.byte	5,0,2,35,1,11
	.byte	'PORST',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	604
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	604
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	604
	.byte	1,1,2,35,2,11
	.byte	'EVRC',0,1
	.word	604
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	604
	.byte	1,6,2,35,3,11
	.byte	'HSMS',0,1
	.word	604
	.byte	1,5,2,35,3,11
	.byte	'HSMA',0,1
	.word	604
	.byte	1,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	604
	.byte	1,3,2,35,3,11
	.byte	'LBPORST',0,1
	.word	604
	.byte	1,2,2,35,3,11
	.byte	'LBTERM',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,4,245,7,3
	.word	68446
	.byte	10
	.byte	'_Ifx_SCU_SEICON0_Bits',0,4,248,7,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	452
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	452
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SCU_SEICON0_Bits',0,4,254,7,3
	.word	68995
	.byte	10
	.byte	'_Ifx_SCU_SEICON1_Bits',0,4,129,8,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	429
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_SEICON1_Bits',0,4,138,8,3
	.word	69125
	.byte	10
	.byte	'_Ifx_SCU_SEISR_Bits',0,4,141,8,16,4,11
	.byte	'AE',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	621
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	621
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SEISR_Bits',0,4,151,8,3
	.word	69316
	.byte	10
	.byte	'_Ifx_SCU_STCON_Bits',0,4,154,8,16,4,11
	.byte	'reserved_0',0,2
	.word	621
	.byte	13,3,2,35,0,11
	.byte	'SFCBAE',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'CFCBAE',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'STP',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	621
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_STCON_Bits',0,4,161,8,3
	.word	69494
	.byte	10
	.byte	'_Ifx_SCU_STMEM1_Bits',0,4,164,8,16,4,11
	.byte	'MEM',0,4
	.word	429
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM1_Bits',0,4,167,8,3
	.word	69645
	.byte	10
	.byte	'_Ifx_SCU_STMEM2_Bits',0,4,170,8,16,4,11
	.byte	'MEM',0,4
	.word	429
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM2_Bits',0,4,173,8,3
	.word	69717
	.byte	10
	.byte	'_Ifx_SCU_STMEM3_Bits',0,4,176,8,16,4,11
	.byte	'MEM',0,4
	.word	429
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM3_Bits',0,4,179,8,3
	.word	69789
	.byte	10
	.byte	'_Ifx_SCU_STMEM4_Bits',0,4,182,8,16,4,11
	.byte	'MEM',0,4
	.word	429
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM4_Bits',0,4,185,8,3
	.word	69861
	.byte	10
	.byte	'_Ifx_SCU_STMEM5_Bits',0,4,188,8,16,4,11
	.byte	'MEM',0,4
	.word	429
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM5_Bits',0,4,191,8,3
	.word	69933
	.byte	10
	.byte	'_Ifx_SCU_STMEM6_Bits',0,4,194,8,16,4,11
	.byte	'MEM',0,4
	.word	429
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM6_Bits',0,4,197,8,3
	.word	70005
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,4,200,8,16,4,11
	.byte	'HWCFG',0,1
	.word	604
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	604
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	604
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	604
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	604
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	604
	.byte	1,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	604
	.byte	3,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	604
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_STSTAT_Bits',0,4,216,8,3
	.word	70077
	.byte	10
	.byte	'_Ifx_SCU_SWAPCTRL_Bits',0,4,219,8,16,4,11
	.byte	'ADDRCFG',0,1
	.word	604
	.byte	2,6,2,35,0,11
	.byte	'SPARE',0,2
	.word	621
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	621
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SWAPCTRL_Bits',0,4,224,8,3
	.word	70406
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,4,227,8,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	604
	.byte	6,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	604
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	621
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,4,234,8,3
	.word	70526
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,4,237,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	604
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'DDC',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	604
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	621
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SYSCON_Bits',0,4,249,8,3
	.word	70696
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON0_Bits',0,4,252,8,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	2,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	621
	.byte	6,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	604
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	604
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	604
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	604
	.byte	3,2,2,35,3,11
	.byte	'INSEL',0,1
	.word	604
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SCU_SYSPLLCON0_Bits',0,4,137,9,3
	.word	70959
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON1_Bits',0,4,140,9,16,4,11
	.byte	'K2DIV',0,1
	.word	604
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	429
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLCON1_Bits',0,4,144,9,3
	.word	71238
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON2_Bits',0,4,147,9,16,4,11
	.byte	'MODCFG',0,2
	.word	621
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	621
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SYSPLLCON2_Bits',0,4,151,9,3
	.word	71342
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLSTAT_Bits',0,4,154,9,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	604
	.byte	2,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	429
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLSTAT_Bits',0,4,164,9,3
	.word	71448
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,4,167,9,16,4,11
	.byte	'ESR0T',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	429
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,4,174,9,3
	.word	71671
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS0_Bits',0,4,177,9,16,4,11
	.byte	'CPU0ESR0T',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'CPU0ESR1T',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'CPU0TRAP2T',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'CPU0SMUT',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	604
	.byte	4,0,2,35,0,11
	.byte	'CPU1ESR0T',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'CPU1ESR1T',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'CPU1TRAP2T',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'CPU1SMUT',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	604
	.byte	4,0,2,35,1,11
	.byte	'CPU2ESR0T',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'CPU2ESR1T',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'CPU2TRAP2T',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'CPU2SMUT',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	604
	.byte	4,0,2,35,2,11
	.byte	'CPU3ESR0T',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'CPU3ESR1T',0,1
	.word	604
	.byte	1,6,2,35,3,11
	.byte	'CPU3TRAP2T',0,1
	.word	604
	.byte	1,5,2,35,3,11
	.byte	'CPU3SMUT',0,1
	.word	604
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	604
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_TRAPDIS0_Bits',0,4,199,9,3
	.word	71819
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS1_Bits',0,4,202,9,16,4,11
	.byte	'CPU4ESR0T',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'CPU4ESR1T',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'CPU4TRAP2T',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'CPU4SMUT',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	604
	.byte	4,0,2,35,0,11
	.byte	'CPU5ESR0T',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'CPU5ESR1T',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'CPU5TRAP2T',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'CPU5SMUT',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	604
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	621
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_TRAPDIS1_Bits',0,4,215,9,3
	.word	72307
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,4,218,9,16,4,11
	.byte	'ESR0T',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	429
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET_Bits',0,4,225,9,3
	.word	72604
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,4,228,9,16,4,11
	.byte	'ESR0T',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	429
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,4,235,9,3
	.word	72752
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,4,244,9,3
	.word	468
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,4,132,10,3
	.word	643
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,4,148,10,3
	.word	909
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,4,151,10,16,4,11
	.byte	'ENDINIT',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	452
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	452
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,4,157,10,3
	.word	73002
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,4,160,10,16,4,11
	.byte	'CLRIRF',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	604
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	621
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,4,173,10,3
	.word	73128
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,4,176,10,16,4,11
	.byte	'AE',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	604
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	621
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,4,189,10,3
	.word	73380
	.byte	12,4,197,10,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54036
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN00',0,4,202,10,3
	.word	73599
	.byte	12,4,205,10,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54595
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN01',0,4,210,10,3
	.word	73664
	.byte	12,4,213,10,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54674
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN10',0,4,218,10,3
	.word	73729
	.byte	12,4,221,10,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55234
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN11',0,4,226,10,3
	.word	73794
	.byte	12,4,229,10,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55315
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS',0,4,234,10,3
	.word	73859
	.byte	12,4,237,10,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55532
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON0',0,4,242,10,3
	.word	73924
	.byte	12,4,245,10,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55805
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON1',0,4,250,10,3
	.word	73989
	.byte	12,4,253,10,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56131
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON10',0,4,130,11,3
	.word	74054
	.byte	12,4,133,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56233
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON11',0,4,138,11,3
	.word	74120
	.byte	12,4,141,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56335
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON2',0,4,146,11,3
	.word	74186
	.byte	12,4,149,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56609
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON3',0,4,154,11,3
	.word	74251
	.byte	12,4,157,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56978
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON4',0,4,162,11,3
	.word	74316
	.byte	12,4,165,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57158
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON5',0,4,170,11,3
	.word	74381
	.byte	12,4,173,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57327
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6',0,4,178,11,3
	.word	74446
	.byte	12,4,181,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57427
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7',0,4,186,11,3
	.word	74511
	.byte	12,4,189,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57527
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON8',0,4,194,11,3
	.word	74576
	.byte	12,4,197,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57627
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON9',0,4,202,11,3
	.word	74641
	.byte	12,4,205,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57727
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CHIPID',0,4,210,11,3
	.word	74706
	.byte	12,4,213,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57930
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSCLIM',0,4,218,11,3
	.word	74770
	.byte	12,4,221,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58162
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSCSTAT',0,4,226,11,3
	.word	74835
	.byte	12,4,229,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58264
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EICON0',0,4,234,11,3
	.word	74901
	.byte	12,4,237,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58392
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EICON1',0,4,242,11,3
	.word	74965
	.byte	12,4,245,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58581
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EICR',0,4,250,11,3
	.word	75029
	.byte	12,4,253,11,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58945
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EIFILT',0,4,130,12,3
	.word	75091
	.byte	12,4,133,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59384
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR',0,4,138,12,3
	.word	75155
	.byte	12,4,141,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59595
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EISR',0,4,146,12,3
	.word	75217
	.byte	12,4,149,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59771
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EMSR',0,4,154,12,3
	.word	75279
	.byte	12,4,157,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59965
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EMSSW',0,4,162,12,3
	.word	75341
	.byte	12,4,165,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60100
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX',0,4,170,12,3
	.word	75404
	.byte	12,4,173,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60236
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG',0,4,178,12,3
	.word	75477
	.byte	12,4,181,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60347
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EXTCON',0,4,186,12,3
	.word	75542
	.byte	12,4,189,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60565
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FDR',0,4,194,12,3
	.word	75606
	.byte	12,4,197,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60728
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FMR',0,4,202,12,3
	.word	75667
	.byte	12,4,205,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61064
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ID',0,4,210,12,3
	.word	75728
	.byte	12,4,213,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61171
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IGCR',0,4,218,12,3
	.word	75788
	.byte	12,4,221,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61623
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IN',0,4,226,12,3
	.word	75850
	.byte	12,4,229,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61722
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IOCR',0,4,234,12,3
	.word	75910
	.byte	12,4,237,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61872
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL0',0,4,242,12,3
	.word	75972
	.byte	12,4,245,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62110
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL1',0,4,250,12,3
	.word	76040
	.byte	12,4,253,12,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62271
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL2',0,4,130,13,3
	.word	76108
	.byte	12,4,133,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62377
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL3',0,4,138,13,3
	.word	76176
	.byte	12,4,141,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62463
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLCON0',0,4,146,13,3
	.word	76244
	.byte	12,4,149,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62631
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLCON1',0,4,154,13,3
	.word	76309
	.byte	12,4,157,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62799
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLTEST',0,4,162,13,3
	.word	76374
	.byte	12,4,165,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63113
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_MANID',0,4,170,13,3
	.word	76439
	.byte	12,4,173,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63224
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OMR',0,4,178,13,3
	.word	76502
	.byte	12,4,181,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63382
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OSCCON',0,4,186,13,3
	.word	76563
	.byte	12,4,189,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63793
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OUT',0,4,194,13,3
	.word	76627
	.byte	12,4,197,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63894
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCCON',0,4,202,13,3
	.word	76688
	.byte	12,4,205,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64212
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE',0,4,210,13,3
	.word	76752
	.byte	12,4,213,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64399
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC',0,4,218,13,3
	.word	76819
	.byte	12,4,221,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64510
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDR',0,4,226,13,3
	.word	76882
	.byte	12,4,229,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64643
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR',0,4,234,13,3
	.word	76943
	.byte	12,4,237,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64846
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLCON0',0,4,242,13,3
	.word	77005
	.byte	12,4,245,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65086
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLCON1',0,4,250,13,3
	.word	77073
	.byte	12,4,253,13,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65230
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLSTAT',0,4,130,14,3
	.word	77141
	.byte	12,4,133,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65452
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR0',0,4,138,14,3
	.word	77209
	.byte	12,4,141,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65588
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR1',0,4,146,14,3
	.word	77273
	.byte	12,4,149,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65724
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR2',0,4,154,14,3
	.word	77337
	.byte	12,4,157,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65860
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR3',0,4,162,14,3
	.word	77401
	.byte	12,4,165,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65996
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR4',0,4,170,14,3
	.word	77465
	.byte	12,4,173,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66132
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR5',0,4,178,14,3
	.word	77529
	.byte	12,4,181,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66268
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSTAT0',0,4,186,14,3
	.word	77593
	.byte	12,4,189,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66540
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR1',0,4,194,14,3
	.word	77658
	.byte	12,4,197,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66785
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMTRCSR0',0,4,202,14,3
	.word	77723
	.byte	12,4,205,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67173
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMTRCSR1',0,4,210,14,3
	.word	77789
	.byte	12,4,213,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67291
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMTRCSR2',0,4,218,14,3
	.word	77855
	.byte	12,4,221,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67534
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMTRCSR3',0,4,226,14,3
	.word	77921
	.byte	12,4,229,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67801
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON',0,4,234,14,3
	.word	77987
	.byte	12,4,237,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68060
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON2',0,4,242,14,3
	.word	78051
	.byte	12,4,245,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68365
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON3',0,4,250,14,3
	.word	78116
	.byte	12,4,253,14,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68446
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTSTAT',0,4,130,15,3
	.word	78181
	.byte	12,4,133,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68995
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SEICON0',0,4,138,15,3
	.word	78246
	.byte	12,4,141,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69125
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SEICON1',0,4,146,15,3
	.word	78311
	.byte	12,4,149,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69316
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SEISR',0,4,154,15,3
	.word	78376
	.byte	12,4,157,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69494
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STCON',0,4,162,15,3
	.word	78439
	.byte	12,4,165,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69645
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM1',0,4,170,15,3
	.word	78502
	.byte	12,4,173,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69717
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM2',0,4,178,15,3
	.word	78566
	.byte	12,4,181,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69789
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM3',0,4,186,15,3
	.word	78630
	.byte	12,4,189,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69861
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM4',0,4,194,15,3
	.word	78694
	.byte	12,4,197,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69933
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM5',0,4,202,15,3
	.word	78758
	.byte	12,4,205,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70005
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM6',0,4,210,15,3
	.word	78822
	.byte	12,4,213,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70077
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STSTAT',0,4,218,15,3
	.word	78886
	.byte	12,4,221,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70406
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SWAPCTRL',0,4,226,15,3
	.word	78950
	.byte	12,4,229,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70526
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SWRSTCON',0,4,234,15,3
	.word	79016
	.byte	12,4,237,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70696
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSCON',0,4,242,15,3
	.word	79082
	.byte	12,4,245,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70959
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLCON0',0,4,250,15,3
	.word	79146
	.byte	12,4,253,15,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71238
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLCON1',0,4,130,16,3
	.word	79214
	.byte	12,4,133,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71342
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLCON2',0,4,138,16,3
	.word	79282
	.byte	12,4,141,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71448
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLSTAT',0,4,146,16,3
	.word	79350
	.byte	12,4,149,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71671
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR',0,4,154,16,3
	.word	79418
	.byte	12,4,157,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71819
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS0',0,4,162,16,3
	.word	79483
	.byte	12,4,165,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72307
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS1',0,4,170,16,3
	.word	79549
	.byte	12,4,173,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72604
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET',0,4,178,16,3
	.word	79615
	.byte	12,4,181,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72752
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT',0,4,186,16,3
	.word	79680
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0',0,4,194,16,3
	.word	564
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1',0,4,202,16,3
	.word	869
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR',0,4,210,16,3
	.word	1100
	.byte	12,4,213,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73002
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0',0,4,218,16,3
	.word	79831
	.byte	12,4,221,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73128
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON1',0,4,226,16,3
	.word	79898
	.byte	12,4,229,16,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73380
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_SR',0,4,234,16,3
	.word	79965
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX',0,4,246,16,25,4,13
	.byte	'ESRCFGX',0
	.word	75404
	.byte	4,2,35,0,0,14
	.word	80030
	.byte	32
	.byte	'Ifx_SCU_ESRCFGX',0,4,249,16,3
	.word	80071
	.byte	14
	.word	1140
	.byte	32
	.byte	'Ifx_SCU_WDTCPU',0,4,141,17,3
	.word	80101
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,4,156,17,25,12,13
	.byte	'CON0',0
	.word	79831
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	79898
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	79965
	.byte	4,2,35,8,0,14
	.word	80130
	.byte	32
	.byte	'Ifx_SCU_WDTS',0,4,161,17,3
	.word	80191
	.byte	15,8
	.word	80030
	.byte	16,1,0,14
	.word	80218
	.byte	15,20
	.word	604
	.byte	16,19,0,15,36
	.word	604
	.byte	16,35,0,15,16
	.word	75029
	.byte	16,3,0,15,16
	.word	75788
	.byte	16,3,0,15,72
	.word	1140
	.byte	16,5,0,14
	.word	80268
	.byte	14
	.word	80130
	.byte	15,176,2
	.word	604
	.byte	16,175,2,0,10
	.byte	'_Ifx_SCU',0,4,176,17,25,128,8,13
	.byte	'reserved_0',0
	.word	4445
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	75728
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2625
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	76563
	.byte	4,2,35,16,13
	.byte	'SYSPLLSTAT',0
	.word	79350
	.byte	4,2,35,20,13
	.byte	'SYSPLLCON0',0
	.word	79146
	.byte	4,2,35,24,13
	.byte	'SYSPLLCON1',0
	.word	79214
	.byte	4,2,35,28,13
	.byte	'SYSPLLCON2',0
	.word	79282
	.byte	4,2,35,32,13
	.byte	'PERPLLSTAT',0
	.word	77141
	.byte	4,2,35,36,13
	.byte	'PERPLLCON0',0
	.word	77005
	.byte	4,2,35,40,13
	.byte	'PERPLLCON1',0
	.word	77073
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	73924
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	73989
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	75606
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	75542
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	74186
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	74251
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	74316
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	74381
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	78181
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	2625
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	77987
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	73859
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	79016
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	78051
	.byte	4,2,35,100,13
	.byte	'RSTCON3',0
	.word	78116
	.byte	4,2,35,104,13
	.byte	'reserved_6C',0
	.word	2625
	.byte	4,2,35,108,13
	.byte	'ESRCFGX',0
	.word	80227
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	75477
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	79082
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	74446
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	74511
	.byte	4,3,35,132,1,13
	.byte	'CCUCON8',0
	.word	74576
	.byte	4,3,35,136,1,13
	.byte	'CCUCON9',0
	.word	74641
	.byte	4,3,35,140,1,13
	.byte	'CCUCON10',0
	.word	74054
	.byte	4,3,35,144,1,13
	.byte	'CCUCON11',0
	.word	74120
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	2625
	.byte	4,3,35,152,1,13
	.byte	'PDR',0
	.word	76882
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	75910
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	76627
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	76502
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	75850
	.byte	4,3,35,172,1,13
	.byte	'reserved_B0',0
	.word	42969
	.byte	16,3,35,176,1,13
	.byte	'STSTAT',0
	.word	78886
	.byte	4,3,35,192,1,13
	.byte	'STCON',0
	.word	78439
	.byte	4,3,35,196,1,13
	.byte	'PMCSR0',0
	.word	77209
	.byte	4,3,35,200,1,13
	.byte	'PMCSR1',0
	.word	77273
	.byte	4,3,35,204,1,13
	.byte	'PMCSR2',0
	.word	77337
	.byte	4,3,35,208,1,13
	.byte	'PMCSR3',0
	.word	77401
	.byte	4,3,35,212,1,13
	.byte	'PMCSR4',0
	.word	77465
	.byte	4,3,35,216,1,13
	.byte	'PMCSR5',0
	.word	77529
	.byte	4,3,35,220,1,13
	.byte	'reserved_E0',0
	.word	2625
	.byte	4,3,35,224,1,13
	.byte	'PMSTAT0',0
	.word	77593
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	77658
	.byte	4,3,35,232,1,13
	.byte	'reserved_EC',0
	.word	42969
	.byte	16,3,35,236,1,13
	.byte	'EMSR',0
	.word	75279
	.byte	4,3,35,252,1,13
	.byte	'EMSSW',0
	.word	75341
	.byte	4,3,35,128,2,13
	.byte	'DTSCSTAT',0
	.word	74835
	.byte	4,3,35,132,2,13
	.byte	'DTSCLIM',0
	.word	74770
	.byte	4,3,35,136,2,13
	.byte	'reserved_10C',0
	.word	80232
	.byte	20,3,35,140,2,13
	.byte	'TRAPDIS1',0
	.word	79549
	.byte	4,3,35,160,2,13
	.byte	'TRAPSTAT',0
	.word	79680
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	79615
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	79418
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS0',0
	.word	79483
	.byte	4,3,35,176,2,13
	.byte	'LCLCON0',0
	.word	76244
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	76309
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	76374
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	74706
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	76439
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	2625
	.byte	4,3,35,200,2,13
	.byte	'SWAPCTRL',0
	.word	78950
	.byte	4,3,35,204,2,13
	.byte	'reserved_150',0
	.word	80232
	.byte	20,3,35,208,2,13
	.byte	'LBISTCTRL0',0
	.word	75972
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	76040
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	76108
	.byte	4,3,35,236,2,13
	.byte	'LBISTCTRL3',0
	.word	76176
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	42969
	.byte	16,3,35,244,2,13
	.byte	'STMEM1',0
	.word	78502
	.byte	4,3,35,132,3,13
	.byte	'STMEM2',0
	.word	78566
	.byte	4,3,35,136,3,13
	.byte	'PDISC',0
	.word	76819
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	4445
	.byte	8,3,35,144,3,13
	.byte	'PMTRCSR0',0
	.word	77723
	.byte	4,3,35,152,3,13
	.byte	'PMTRCSR1',0
	.word	77789
	.byte	4,3,35,156,3,13
	.byte	'PMTRCSR2',0
	.word	77855
	.byte	4,3,35,160,3,13
	.byte	'PMTRCSR3',0
	.word	77921
	.byte	4,3,35,164,3,13
	.byte	'reserved_1A8',0
	.word	3816
	.byte	24,3,35,168,3,13
	.byte	'STMEM3',0
	.word	78630
	.byte	4,3,35,192,3,13
	.byte	'STMEM4',0
	.word	78694
	.byte	4,3,35,196,3,13
	.byte	'STMEM5',0
	.word	78758
	.byte	4,3,35,200,3,13
	.byte	'STMEM6',0
	.word	78822
	.byte	4,3,35,204,3,13
	.byte	'reserved_1D0',0
	.word	42969
	.byte	16,3,35,208,3,13
	.byte	'OVCENABLE',0
	.word	76752
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	76688
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	80241
	.byte	36,3,35,232,3,13
	.byte	'EIFILT',0
	.word	75091
	.byte	4,3,35,140,4,13
	.byte	'EICR',0
	.word	80250
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	75155
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	75667
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	76943
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	80259
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	42969
	.byte	16,3,35,188,4,13
	.byte	'WDTCPU',0
	.word	80277
	.byte	72,3,35,204,4,13
	.byte	'reserved_294',0
	.word	4445
	.byte	8,3,35,148,5,13
	.byte	'EICON0',0
	.word	74901
	.byte	4,3,35,156,5,13
	.byte	'EICON1',0
	.word	74965
	.byte	4,3,35,160,5,13
	.byte	'EISR',0
	.word	75217
	.byte	4,3,35,164,5,13
	.byte	'WDTS',0
	.word	80282
	.byte	12,3,35,168,5,13
	.byte	'SEICON0',0
	.word	78246
	.byte	4,3,35,180,5,13
	.byte	'SEICON1',0
	.word	78311
	.byte	4,3,35,184,5,13
	.byte	'SEISR',0
	.word	78376
	.byte	4,3,35,188,5,13
	.byte	'reserved_2C0',0
	.word	80287
	.byte	176,2,3,35,192,5,13
	.byte	'ACCEN11',0
	.word	73794
	.byte	4,3,35,240,7,13
	.byte	'ACCEN10',0
	.word	73729
	.byte	4,3,35,244,7,13
	.byte	'ACCEN01',0
	.word	73664
	.byte	4,3,35,248,7,13
	.byte	'ACCEN00',0
	.word	73599
	.byte	4,3,35,252,7,0,14
	.word	80298
	.byte	32
	.byte	'Ifx_SCU',0,4,166,18,3
	.word	82419
	.byte	32
	.byte	'Ifx_STM_ACCEN0_Bits',0,13,102,3
	.word	12879
	.byte	32
	.byte	'Ifx_STM_ACCEN1_Bits',0,13,108,3
	.word	12790
	.byte	32
	.byte	'Ifx_STM_CAP_Bits',0,13,114,3
	.word	11293
	.byte	32
	.byte	'Ifx_STM_CAPSV_Bits',0,13,120,3
	.word	12174
	.byte	32
	.byte	'Ifx_STM_CLC_Bits',0,13,130,1,3
	.word	10412
	.byte	32
	.byte	'Ifx_STM_CMCON_Bits',0,13,143,1,3
	.word	11473
	.byte	32
	.byte	'Ifx_STM_CMP_Bits',0,13,149,1,3
	.word	11381
	.byte	32
	.byte	'Ifx_STM_ICR_Bits',0,13,162,1,3
	.word	11705
	.byte	32
	.byte	'Ifx_STM_ID_Bits',0,13,170,1,3
	.word	10568
	.byte	32
	.byte	'Ifx_STM_ISCR_Bits',0,13,180,1,3
	.word	11922
	.byte	32
	.byte	'Ifx_STM_KRST0_Bits',0,13,188,1,3
	.word	12667
	.byte	32
	.byte	'Ifx_STM_KRST1_Bits',0,13,195,1,3
	.word	12563
	.byte	32
	.byte	'Ifx_STM_KRSTCLR_Bits',0,13,202,1,3
	.word	12457
	.byte	32
	.byte	'Ifx_STM_OCS_Bits',0,13,213,1,3
	.word	12275
	.byte	32
	.byte	'Ifx_STM_TIM0_Bits',0,13,219,1,3
	.word	10687
	.byte	32
	.byte	'Ifx_STM_TIM0SV_Bits',0,13,225,1,3
	.word	12086
	.byte	32
	.byte	'Ifx_STM_TIM1_Bits',0,13,231,1,3
	.word	10773
	.byte	32
	.byte	'Ifx_STM_TIM2_Bits',0,13,237,1,3
	.word	10859
	.byte	32
	.byte	'Ifx_STM_TIM3_Bits',0,13,243,1,3
	.word	10945
	.byte	32
	.byte	'Ifx_STM_TIM4_Bits',0,13,249,1,3
	.word	11032
	.byte	32
	.byte	'Ifx_STM_TIM5_Bits',0,13,255,1,3
	.word	11119
	.byte	32
	.byte	'Ifx_STM_TIM6_Bits',0,13,133,2,3
	.word	11206
	.byte	32
	.byte	'Ifx_STM_ACCEN0',0,13,146,2,3
	.word	13408
	.byte	32
	.byte	'Ifx_STM_ACCEN1',0,13,154,2,3
	.word	12839
	.byte	32
	.byte	'Ifx_STM_CAP',0,13,162,2,3
	.word	11341
	.byte	32
	.byte	'Ifx_STM_CAPSV',0,13,170,2,3
	.word	12224
	.byte	32
	.byte	'Ifx_STM_CLC',0,13,178,2,3
	.word	10528
	.byte	32
	.byte	'Ifx_STM_CMCON',0,13,186,2,3
	.word	11665
	.byte	32
	.byte	'Ifx_STM_CMP',0,13,194,2,3
	.word	11424
	.byte	32
	.byte	'Ifx_STM_ICR',0,13,202,2,3
	.word	11882
	.byte	32
	.byte	'Ifx_STM_ID',0,13,210,2,3
	.word	10647
	.byte	32
	.byte	'Ifx_STM_ISCR',0,13,218,2,3
	.word	12046
	.byte	32
	.byte	'Ifx_STM_KRST0',0,13,226,2,3
	.word	12750
	.byte	32
	.byte	'Ifx_STM_KRST1',0,13,234,2,3
	.word	12627
	.byte	32
	.byte	'Ifx_STM_KRSTCLR',0,13,242,2,3
	.word	12523
	.byte	32
	.byte	'Ifx_STM_OCS',0,13,250,2,3
	.word	12417
	.byte	32
	.byte	'Ifx_STM_TIM0',0,13,130,3,3
	.word	10733
	.byte	32
	.byte	'Ifx_STM_TIM0SV',0,13,138,3,3
	.word	12134
	.byte	32
	.byte	'Ifx_STM_TIM1',0,13,146,3,3
	.word	10819
	.byte	32
	.byte	'Ifx_STM_TIM2',0,13,154,3,3
	.word	10905
	.byte	32
	.byte	'Ifx_STM_TIM3',0,13,162,3,3
	.word	10992
	.byte	32
	.byte	'Ifx_STM_TIM4',0,13,170,3,3
	.word	11079
	.byte	32
	.byte	'Ifx_STM_TIM5',0,13,178,3,3
	.word	11166
	.byte	32
	.byte	'Ifx_STM_TIM6',0,13,186,3,3
	.word	11253
	.byte	14
	.word	13448
	.byte	32
	.byte	'Ifx_STM',0,13,226,3,3
	.word	83527
	.byte	17,21,162,11,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,32
	.byte	'IfxScu_WDTCON1_IR',0,21,167,11,3
	.word	83549
	.byte	32
	.byte	'Ifx_P_ACCEN0_Bits',0,6,102,3
	.word	7973
	.byte	32
	.byte	'Ifx_P_ACCEN1_Bits',0,6,108,3
	.word	7886
	.byte	32
	.byte	'Ifx_P_ESR_Bits',0,6,130,1,3
	.word	4454
	.byte	32
	.byte	'Ifx_P_ID_Bits',0,6,138,1,3
	.word	2505
	.byte	32
	.byte	'Ifx_P_IN_Bits',0,6,160,1,3
	.word	3501
	.byte	32
	.byte	'Ifx_P_IOCR0_Bits',0,6,173,1,3
	.word	2634
	.byte	32
	.byte	'Ifx_P_IOCR12_Bits',0,6,186,1,3
	.word	3281
	.byte	32
	.byte	'Ifx_P_IOCR4_Bits',0,6,199,1,3
	.word	2849
	.byte	32
	.byte	'Ifx_P_IOCR8_Bits',0,6,212,1,3
	.word	3064
	.byte	32
	.byte	'Ifx_P_LPCR_Bits',0,6,231,1,3
	.word	7548
	.byte	32
	.byte	'Ifx_P_OMCR_Bits',0,6,253,1,3
	.word	7200
	.byte	32
	.byte	'Ifx_P_OMCR0_Bits',0,6,136,2,3
	.word	6187
	.byte	32
	.byte	'Ifx_P_OMCR12_Bits',0,6,146,2,3
	.word	6711
	.byte	32
	.byte	'Ifx_P_OMCR4_Bits',0,6,157,2,3
	.word	6361
	.byte	32
	.byte	'Ifx_P_OMCR8_Bits',0,6,168,2,3
	.word	6535
	.byte	32
	.byte	'Ifx_P_OMR_Bits',0,6,205,2,3
	.word	1934
	.byte	32
	.byte	'Ifx_P_OMSR_Bits',0,6,227,2,3
	.word	6867
	.byte	32
	.byte	'Ifx_P_OMSR0_Bits',0,6,237,2,3
	.word	5524
	.byte	32
	.byte	'Ifx_P_OMSR12_Bits',0,6,248,2,3
	.word	6012
	.byte	32
	.byte	'Ifx_P_OMSR4_Bits',0,6,131,3,3
	.word	5671
	.byte	32
	.byte	'Ifx_P_OMSR8_Bits',0,6,142,3,3
	.word	5840
	.byte	32
	.byte	'Ifx_P_OUT_Bits',0,6,164,3,3
	.word	1618
	.byte	32
	.byte	'Ifx_P_PCSR_Bits',0,6,187,3,3
	.word	5160
	.byte	32
	.byte	'Ifx_P_PDISC_Bits',0,6,209,3,3
	.word	4794
	.byte	32
	.byte	'Ifx_P_PDR0_Bits',0,6,230,3,3
	.word	3825
	.byte	32
	.byte	'Ifx_P_PDR1_Bits',0,6,251,3,3
	.word	4129
	.byte	32
	.byte	'Ifx_P_ACCEN0',0,6,136,4,3
	.word	8500
	.byte	32
	.byte	'Ifx_P_ACCEN1',0,6,144,4,3
	.word	7933
	.byte	32
	.byte	'Ifx_P_ESR',0,6,152,4,3
	.word	4745
	.byte	32
	.byte	'Ifx_P_ID',0,6,160,4,3
	.word	2585
	.byte	32
	.byte	'Ifx_P_IN',0,6,168,4,3
	.word	3776
	.byte	32
	.byte	'Ifx_P_IOCR0',0,6,176,4,3
	.word	2809
	.byte	32
	.byte	'Ifx_P_IOCR12',0,6,184,4,3
	.word	3461
	.byte	32
	.byte	'Ifx_P_IOCR4',0,6,192,4,3
	.word	3024
	.byte	32
	.byte	'Ifx_P_IOCR8',0,6,200,4,3
	.word	3241
	.byte	32
	.byte	'Ifx_P_LPCR',0,6,208,4,3
	.word	7828
	.byte	32
	.byte	'Ifx_P_OMCR',0,6,216,4,3
	.word	7508
	.byte	32
	.byte	'Ifx_P_OMCR0',0,6,224,4,3
	.word	6321
	.byte	32
	.byte	'Ifx_P_OMCR12',0,6,232,4,3
	.word	6827
	.byte	32
	.byte	'Ifx_P_OMCR4',0,6,240,4,3
	.word	6495
	.byte	32
	.byte	'Ifx_P_OMCR8',0,6,248,4,3
	.word	6671
	.byte	32
	.byte	'Ifx_P_OMR',0,6,128,5,3
	.word	2465
	.byte	32
	.byte	'Ifx_P_OMSR',0,6,136,5,3
	.word	7160
	.byte	32
	.byte	'Ifx_P_OMSR0',0,6,144,5,3
	.word	5631
	.byte	32
	.byte	'Ifx_P_OMSR12',0,6,152,5,3
	.word	6147
	.byte	32
	.byte	'Ifx_P_OMSR4',0,6,160,5,3
	.word	5800
	.byte	32
	.byte	'Ifx_P_OMSR8',0,6,168,5,3
	.word	5972
	.byte	32
	.byte	'Ifx_P_OUT',0,6,176,5,3
	.word	1894
	.byte	32
	.byte	'Ifx_P_PCSR',0,6,184,5,3
	.word	5484
	.byte	32
	.byte	'Ifx_P_PDISC',0,6,192,5,3
	.word	5120
	.byte	32
	.byte	'Ifx_P_PDR0',0,6,200,5,3
	.word	4089
	.byte	32
	.byte	'Ifx_P_PDR1',0,6,208,5,3
	.word	4405
	.byte	14
	.word	8540
	.byte	32
	.byte	'Ifx_P',0,6,128,6,3
	.word	84865
	.byte	17,5,73,9,1,18
	.byte	'IfxPort_ControlledBy_port',0,0,18
	.byte	'IfxPort_ControlledBy_hsct',0,1,0,32
	.byte	'IfxPort_ControlledBy',0,5,77,3
	.word	84885
	.byte	17,5,81,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,32
	.byte	'IfxPort_InputMode',0,5,87,3
	.word	84976
	.byte	17,5,91,9,1,18
	.byte	'IfxPort_LvdsMode_high',0,0,18
	.byte	'IfxPort_LvdsMode_medium',0,1,0,32
	.byte	'IfxPort_LvdsMode',0,5,95,3
	.word	85127
	.byte	17,5,126,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,32
	.byte	'IfxPort_OutputIdx',0,5,136,1,3
	.word	85208
	.byte	17,5,140,1,9,1,18
	.byte	'IfxPort_OutputMode_none',0,0,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,32
	.byte	'IfxPort_OutputMode',0,5,145,1,3
	.word	85452
	.byte	17,5,151,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed1',0,12,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed2',0,13,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed3',0,14,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed4',0,15,0,32
	.byte	'IfxPort_PadDriver',0,5,165,1,3
	.word	85576
	.byte	17,5,169,1,9,1,18
	.byte	'IfxPort_PadSupply_3v',0,0,18
	.byte	'IfxPort_PadSupply_5v',0,1,0,32
	.byte	'IfxPort_PadSupply',0,5,173,1,3
	.word	86026
	.byte	17,5,177,1,9,1,18
	.byte	'IfxPort_PinFunctionMode_digital',0,0,18
	.byte	'IfxPort_PinFunctionMode_analog',0,1,0,32
	.byte	'IfxPort_PinFunctionMode',0,5,181,1,3
	.word	86106
	.byte	32
	.byte	'IfxPort_State',0,5,193,1,3
	.word	9120
	.byte	26,5,246,1,9,8,13
	.byte	'port',0
	.word	9115
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	604
	.byte	1,2,35,4,0,32
	.byte	'IfxPort_Pin',0,5,250,1,3
	.word	86236
	.byte	10
	.byte	'_Ifx_SMU_ACCEN0_Bits',0,22,68,16,4,11
	.byte	'EN0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	604
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	604
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	604
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	604
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	604
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	604
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	604
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	604
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	604
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SMU_ACCEN0_Bits',0,22,102,3
	.word	86296
	.byte	10
	.byte	'_Ifx_SMU_ACCEN1_Bits',0,22,105,16,4,11
	.byte	'reserved_0',0,4
	.word	429
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SMU_ACCEN1_Bits',0,22,108,3
	.word	86853
	.byte	10
	.byte	'_Ifx_SMU_AD_Bits',0,22,111,16,4,11
	.byte	'DF0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'DF1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'DF2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'DF3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'DF4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'DF5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'DF6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'DF7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'DF8',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'DF9',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'DF10',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'DF11',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'DF12',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'DF13',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'DF14',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'DF15',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'DF16',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'DF17',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'DF18',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'DF19',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'DF20',0,1
	.word	604
	.byte	1,3,2,35,2,11
	.byte	'DF21',0,1
	.word	604
	.byte	1,2,2,35,2,11
	.byte	'DF22',0,1
	.word	604
	.byte	1,1,2,35,2,11
	.byte	'DF23',0,1
	.word	604
	.byte	1,0,2,35,2,11
	.byte	'DF24',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'DF25',0,1
	.word	604
	.byte	1,6,2,35,3,11
	.byte	'DF26',0,1
	.word	604
	.byte	1,5,2,35,3,11
	.byte	'DF27',0,1
	.word	604
	.byte	1,4,2,35,3,11
	.byte	'DF28',0,1
	.word	604
	.byte	1,3,2,35,3,11
	.byte	'DF29',0,1
	.word	604
	.byte	1,2,2,35,3,11
	.byte	'DF30',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'DF31',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SMU_AD_Bits',0,22,145,1,3
	.word	86930
	.byte	10
	.byte	'_Ifx_SMU_AEX_Bits',0,22,148,1,16,4,11
	.byte	'IRQ0STS',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'IRQ1STS',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'IRQ2STS',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'RST0STS',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'RST1STS',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'RST2STS',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'RST3STS',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'RST4STS',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'RST5STS',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'NMISTS',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'EMSSTS',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	604
	.byte	4,0,2,35,1,11
	.byte	'IRQ0AEM',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'IRQ1AEM',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'IRQ2AEM',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'RST0AEM',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'RST1AEM',0,1
	.word	604
	.byte	1,3,2,35,2,11
	.byte	'RST2AEM',0,1
	.word	604
	.byte	1,2,2,35,2,11
	.byte	'RST3AEM',0,1
	.word	604
	.byte	1,1,2,35,2,11
	.byte	'RST4AEM',0,1
	.word	604
	.byte	1,0,2,35,2,11
	.byte	'RST5AEM',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'NMIAEM',0,1
	.word	604
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	604
	.byte	1,5,2,35,3,11
	.byte	'EMSAEM',0,1
	.word	604
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	604
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SMU_AEX_Bits',0,22,176,1,3
	.word	87480
	.byte	10
	.byte	'_Ifx_SMU_AEXCLR_Bits',0,22,179,1,16,4,11
	.byte	'IRQ0CLR',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'IRQ1CLR',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'IRQ2CLR',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'RST0CLR',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'RST1CLR',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'RST2CLR',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'RST3CLR',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'RST4CLR',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'RST5CLR',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'NMICLR',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'EMSCLR',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	452
	.byte	4,16,2,35,0,11
	.byte	'IRQ0AEMCLR',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'IRQ1AEMCLR',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'IRQ2AEMCLR',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'RST0AEMCLR',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'RST1AEMCLR',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'RST2AEMCLR',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'RST3AEMCLR',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'RST4AEMCLR',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'RST5AEMCLR',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'NMIAEMCLR',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'EMSAEMCLR',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	452
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_SMU_AEXCLR_Bits',0,22,207,1,3
	.word	88037
	.byte	10
	.byte	'_Ifx_SMU_AFCNT_Bits',0,22,210,1,16,4,11
	.byte	'FCNT',0,1
	.word	604
	.byte	4,4,2,35,0,11
	.byte	'ACNT',0,2
	.word	621
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	621
	.byte	14,2,2,35,2,11
	.byte	'FCO',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'ACO',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SMU_AFCNT_Bits',0,22,217,1,3
	.word	88633
	.byte	10
	.byte	'_Ifx_SMU_AG_Bits',0,22,220,1,16,4,11
	.byte	'SF0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'SF1',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'SF2',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'SF3',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'SF4',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'SF5',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'SF6',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'SF7',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'SF8',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'SF9',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'SF10',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'SF11',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'SF12',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'SF13',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'SF14',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'SF15',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'SF16',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'SF17',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'SF18',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'SF19',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'SF20',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'SF21',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'SF22',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'SF23',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'SF24',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'SF25',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'SF26',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'SF27',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'SF28',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'SF29',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'SF30',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'SF31',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_AG_Bits',0,22,254,1,3
	.word	88773
	.byte	10
	.byte	'_Ifx_SMU_AGC_Bits',0,22,129,2,16,4,11
	.byte	'IGCS0',0,4
	.word	452
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'IGCS1',0,4
	.word	452
	.byte	3,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'IGCS2',0,4
	.word	452
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	452
	.byte	5,16,2,35,0,11
	.byte	'RCS',0,4
	.word	452
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	452
	.byte	2,8,2,35,0,11
	.byte	'PES',0,4
	.word	452
	.byte	5,3,2,35,0,11
	.byte	'EFRST',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	452
	.byte	2,0,2,35,0,0,32
	.byte	'Ifx_SMU_AGC_Bits',0,22,142,2,3
	.word	89324
	.byte	10
	.byte	'_Ifx_SMU_AGCF_Bits',0,22,145,2,16,4,11
	.byte	'CF0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'CF1',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'CF2',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'CF3',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'CF4',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'CF5',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'CF6',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'CF7',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'CF8',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'CF9',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'CF10',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'CF11',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'CF12',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'CF13',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'CF14',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'CF15',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'CF16',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'CF17',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'CF18',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'CF19',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'CF20',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'CF21',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'CF22',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'CF23',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'CF24',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'CF25',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'CF26',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'CF27',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'CF28',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'CF29',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'CF30',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'CF31',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_AGCF_Bits',0,22,179,2,3
	.word	89586
	.byte	10
	.byte	'_Ifx_SMU_AGFSP_Bits',0,22,182,2,16,4,11
	.byte	'FE0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'FE1',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'FE2',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'FE3',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'FE4',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'FE5',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'FE6',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'FE7',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'FE8',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'FE9',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'FE10',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'FE11',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'FE12',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'FE13',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'FE14',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'FE15',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'FE16',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'FE17',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'FE18',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'FE19',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'FE20',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'FE21',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'FE22',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'FE23',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'FE24',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'FE25',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'FE26',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'FE27',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'FE28',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'FE29',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'FE30',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'FE31',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_AGFSP_Bits',0,22,216,2,3
	.word	90141
	.byte	10
	.byte	'_Ifx_SMU_CLC_Bits',0,22,219,2,16,4,11
	.byte	'DISR',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	429
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SMU_CLC_Bits',0,22,226,2,3
	.word	90698
	.byte	10
	.byte	'_Ifx_SMU_CMD_Bits',0,22,229,2,16,4,11
	.byte	'CMD',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	452
	.byte	4,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	452
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SMU_CMD_Bits',0,22,234,2,3
	.word	90841
	.byte	10
	.byte	'_Ifx_SMU_DBG_Bits',0,22,237,2,16,4,11
	.byte	'SSM',0,1
	.word	604
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	429
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SMU_DBG_Bits',0,22,241,2,3
	.word	90944
	.byte	10
	.byte	'_Ifx_SMU_FSP_Bits',0,22,244,2,16,4,11
	.byte	'PRE1',0,4
	.word	452
	.byte	3,29,2,35,0,11
	.byte	'PRE2',0,4
	.word	452
	.byte	2,27,2,35,0,11
	.byte	'MODE',0,4
	.word	452
	.byte	2,25,2,35,0,11
	.byte	'PES',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'TFSP_LOW',0,4
	.word	452
	.byte	14,10,2,35,0,11
	.byte	'TFSP_HIGH',0,4
	.word	452
	.byte	10,0,2,35,0,0,32
	.byte	'Ifx_SMU_FSP_Bits',0,22,252,2,3
	.word	91032
	.byte	10
	.byte	'_Ifx_SMU_ID_Bits',0,22,255,2,16,4,11
	.byte	'MOD_REV',0,1
	.word	604
	.byte	8,0,2,35,0,11
	.byte	'MOD_TYPE',0,1
	.word	604
	.byte	8,0,2,35,1,11
	.byte	'MOD_NUMBER',0,2
	.word	621
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SMU_ID_Bits',0,22,132,3,3
	.word	91187
	.byte	10
	.byte	'_Ifx_SMU_KEYS_Bits',0,22,135,3,16,4,11
	.byte	'CFGLCK',0,4
	.word	452
	.byte	8,24,2,35,0,11
	.byte	'PERLCK',0,4
	.word	452
	.byte	8,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	452
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SMU_KEYS_Bits',0,22,140,3,3
	.word	91297
	.byte	10
	.byte	'_Ifx_SMU_OCS_Bits',0,22,143,3,16,4,11
	.byte	'TGS',0,1
	.word	604
	.byte	2,6,2,35,0,11
	.byte	'TGB',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'TG_P',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	429
	.byte	20,8,2,35,0,11
	.byte	'SUS',0,1
	.word	604
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	604
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	604
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	604
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SMU_OCS_Bits',0,22,153,3,3
	.word	91409
	.byte	10
	.byte	'_Ifx_SMU_PCTL_Bits',0,22,156,3,16,4,11
	.byte	'HWDIR',0,4
	.word	452
	.byte	2,30,2,35,0,11
	.byte	'HWEN',0,4
	.word	452
	.byte	2,28,2,35,0,11
	.byte	'GFSCU_EN',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'GFSTS_EN',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'PCS',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	452
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	452
	.byte	9,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	452
	.byte	9,0,2,35,0,0,32
	.byte	'Ifx_SMU_PCTL_Bits',0,22,167,3,3
	.word	91601
	.byte	10
	.byte	'_Ifx_SMU_RMCTL_Bits',0,22,170,3,16,4,11
	.byte	'TE0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'TE1',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'TE2',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'TE3',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'TE4',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'TE5',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'TE6',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'TE7',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'TE8',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'TE9',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'TE10',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_RMCTL_Bits',0,22,204,3,3
	.word	91832
	.byte	10
	.byte	'_Ifx_SMU_RMEF_Bits',0,22,207,3,16,4,11
	.byte	'EF0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'EF1',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'EF2',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'EF3',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'EF4',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'EF5',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'EF6',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'EF7',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'EF8',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'EF9',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'EF10',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_RMEF_Bits',0,22,241,3,3
	.word	92536
	.byte	10
	.byte	'_Ifx_SMU_RMSTS_Bits',0,22,244,3,16,4,11
	.byte	'STS0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'STS1',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'STS2',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'STS3',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'STS4',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'STS5',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'STS6',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'STS7',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'STS8',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'STS9',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'STS10',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_RMSTS_Bits',0,22,150,4,3
	.word	93238
	.byte	10
	.byte	'_Ifx_SMU_RTAC00_Bits',0,22,153,4,16,4,11
	.byte	'GID0',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	452
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	452
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	452
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	452
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	452
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC00_Bits',0,22,161,4,3
	.word	93953
	.byte	10
	.byte	'_Ifx_SMU_RTAC01_Bits',0,22,164,4,16,4,11
	.byte	'GID2',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	452
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	452
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	452
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	452
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	452
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC01_Bits',0,22,172,4,3
	.word	94121
	.byte	10
	.byte	'_Ifx_SMU_RTAC10_Bits',0,22,175,4,16,4,11
	.byte	'GID0',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	452
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	452
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	452
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	452
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	452
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC10_Bits',0,22,183,4,3
	.word	94289
	.byte	10
	.byte	'_Ifx_SMU_RTAC11_Bits',0,22,186,4,16,4,11
	.byte	'GID2',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	452
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	452
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	452
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	452
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	452
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC11_Bits',0,22,194,4,3
	.word	94457
	.byte	10
	.byte	'_Ifx_SMU_RTC_Bits',0,22,197,4,16,4,11
	.byte	'RT0E',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'RT1E',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	452
	.byte	6,24,2,35,0,11
	.byte	'RTD',0,4
	.word	452
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTC_Bits',0,22,203,4,3
	.word	94625
	.byte	10
	.byte	'_Ifx_SMU_STS_Bits',0,22,206,4,16,4,11
	.byte	'CMD',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	452
	.byte	4,24,2,35,0,11
	.byte	'RES',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'ASCE',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'FSP',0,4
	.word	452
	.byte	2,20,2,35,0,11
	.byte	'FSTS',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	452
	.byte	3,16,2,35,0,11
	.byte	'RTS0',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'RTME0',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'RTS1',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'RTME1',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	452
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_SMU_STS_Bits',0,22,220,4,3
	.word	94745
	.byte	12,22,228,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86296
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_ACCEN0',0,22,233,4,3
	.word	95000
	.byte	12,22,236,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86853
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_ACCEN1',0,22,241,4,3
	.word	95064
	.byte	12,22,244,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86930
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AD',0,22,249,4,3
	.word	95128
	.byte	12,22,252,4,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87480
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AEX',0,22,129,5,3
	.word	95188
	.byte	12,22,132,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88037
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AEXCLR',0,22,137,5,3
	.word	95249
	.byte	12,22,140,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88633
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AFCNT',0,22,145,5,3
	.word	95313
	.byte	12,22,148,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88773
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AG',0,22,153,5,3
	.word	95376
	.byte	12,22,156,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89324
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AGC',0,22,161,5,3
	.word	95436
	.byte	12,22,164,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89586
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AGCF',0,22,169,5,3
	.word	95497
	.byte	12,22,172,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90141
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AGFSP',0,22,177,5,3
	.word	95559
	.byte	12,22,180,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90698
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_CLC',0,22,185,5,3
	.word	95622
	.byte	12,22,188,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90841
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_CMD',0,22,193,5,3
	.word	95683
	.byte	12,22,196,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90944
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_DBG',0,22,201,5,3
	.word	95744
	.byte	12,22,204,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91032
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_FSP',0,22,209,5,3
	.word	95805
	.byte	12,22,212,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91187
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_ID',0,22,217,5,3
	.word	95866
	.byte	12,22,220,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91297
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_KEYS',0,22,225,5,3
	.word	95926
	.byte	12,22,228,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91409
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_OCS',0,22,233,5,3
	.word	95988
	.byte	12,22,236,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91601
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_PCTL',0,22,241,5,3
	.word	96049
	.byte	12,22,244,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91832
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RMCTL',0,22,249,5,3
	.word	96111
	.byte	12,22,252,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92536
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RMEF',0,22,129,6,3
	.word	96174
	.byte	12,22,132,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	93238
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RMSTS',0,22,137,6,3
	.word	96236
	.byte	12,22,140,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	93953
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC00',0,22,145,6,3
	.word	96299
	.byte	12,22,148,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	94121
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC01',0,22,153,6,3
	.word	96363
	.byte	12,22,156,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	94289
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC10',0,22,161,6,3
	.word	96427
	.byte	12,22,164,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	94457
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC11',0,22,169,6,3
	.word	96491
	.byte	12,22,172,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	94625
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTC',0,22,177,6,3
	.word	96555
	.byte	12,22,180,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	94745
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_STS',0,22,185,6,3
	.word	96616
	.byte	17,7,210,2,9,1,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy30',0,1,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy60',0,2,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy120',0,3,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy240',0,4,0,32
	.byte	'IfxScuCcu_LowPowerDivRatio',0,7,216,2,3
	.word	96677
	.byte	17,7,220,2,9,1,18
	.byte	'IfxScuCcu_ModulationAmplitude_0p5',0,0,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p0',0,1,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p25',0,2,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p5',0,3,18
	.byte	'IfxScuCcu_ModulationAmplitude_2p0',0,4,18
	.byte	'IfxScuCcu_ModulationAmplitude_2p5',0,5,18
	.byte	'IfxScuCcu_ModulationAmplitude_count',0,6,0,32
	.byte	'IfxScuCcu_ModulationAmplitude',0,7,229,2,3
	.word	96870
	.byte	17,7,254,3,9,1,18
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc1',0,0,18
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc0',0,1,18
	.byte	'IfxScuCcu_PllInputClockSelection_fSysclk',0,2,0,32
	.byte	'IfxScuCcu_PllInputClockSelection',0,7,131,4,3
	.word	97171
	.byte	17,7,135,4,9,1,18
	.byte	'IfxScuCcu_Traprequest_esr0',0,0,18
	.byte	'IfxScuCcu_Traprequest_esr1',0,1,18
	.byte	'IfxScuCcu_Traprequest_trap2',0,2,18
	.byte	'IfxScuCcu_Traprequest_smu',0,3,0,32
	.byte	'IfxScuCcu_Traprequest',0,7,141,4,3
	.word	97345
	.byte	17,7,147,4,9,1,18
	.byte	'IfxScuCcu_ModEn_disabled',0,0,18
	.byte	'IfxScuCcu_ModEn_enabled',0,1,0,32
	.byte	'IfxScuCcu_ModEn',0,7,151,4,3
	.word	97499
	.byte	26,7,162,4,9,6,13
	.byte	'pDivider',0
	.word	604
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	604
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	604
	.byte	1,2,35,2,13
	.byte	'k3Divider',0
	.word	604
	.byte	1,2,35,3,13
	.byte	'k3DividerBypass',0
	.word	604
	.byte	1,2,35,4,0,32
	.byte	'IfxScuCcu_PerPllConfig',0,7,171,4,3
	.word	97584
	.byte	26,7,176,4,9,4,13
	.byte	'pDivider',0
	.word	604
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	604
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	604
	.byte	1,2,35,2,0,32
	.byte	'IfxScuCcu_SysPllConfig',0,7,181,4,3
	.word	97722
	.byte	26,7,189,4,9,8,13
	.byte	'value',0
	.word	9799
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	9799
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_CcuconRegConfig',0,7,193,4,3
	.word	97816
	.byte	26,7,197,4,9,6,13
	.byte	'k2Step',0
	.word	604
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	225
	.byte	4,2,35,2,0,32
	.byte	'IfxScuCcu_PllStepConfig',0,7,201,4,3
	.word	97887
	.byte	26,7,205,4,9,16,13
	.byte	'xtalFrequency',0
	.word	9799
	.byte	4,2,35,0,13
	.byte	'pllInputClockSelection',0
	.word	97171
	.byte	1,2,35,4,13
	.byte	'sysPllConfig',0
	.word	97722
	.byte	4,2,35,6,13
	.byte	'perPllConfig',0
	.word	97584
	.byte	6,2,35,10,0,32
	.byte	'IfxScuCcu_pllsParameterConfig',0,7,211,4,3
	.word	97961
	.byte	26,7,219,4,9,8,13
	.byte	'value',0
	.word	9799
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	9799
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,7,223,4,3
	.word	98106
	.byte	26,7,231,4,9,80,13
	.byte	'ccucon0',0
	.word	97816
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	97816
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	97816
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	97816
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	97816
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	97816
	.byte	8,2,35,40,13
	.byte	'ccucon8',0
	.word	97816
	.byte	8,2,35,48,13
	.byte	'ccucon9',0
	.word	97816
	.byte	8,2,35,56,13
	.byte	'ccucon10',0
	.word	97816
	.byte	8,2,35,64,13
	.byte	'ccucon11',0
	.word	97816
	.byte	8,2,35,72,0,32
	.byte	'IfxScuCcu_ClockDistributionConfig',0,7,243,4,3
	.word	98182
	.byte	26,7,247,4,9,20,13
	.byte	'pllsParameters',0
	.word	97961
	.byte	16,2,35,0,13
	.byte	'waitTime',0
	.word	225
	.byte	4,2,35,16,0,32
	.byte	'IfxScuCcu_InitialStepConfig',0,7,251,4,3
	.word	98404
	.byte	20
	.word	97887
	.byte	3
	.word	98490
	.byte	26,7,255,4,9,8,13
	.byte	'numOfSteps',0
	.word	604
	.byte	1,2,35,0,13
	.byte	'pllSteps',0
	.word	98495
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_PllThrottleConfig',0,7,131,5,3
	.word	98500
	.byte	26,7,137,5,9,2,13
	.byte	'Mod_Enable',0
	.word	97499
	.byte	1,2,35,0,13
	.byte	'Mod_Amp',0
	.word	96870
	.byte	1,2,35,1,0,32
	.byte	'IfxScuCcu_Mod_Config',0,7,141,5,3
	.word	98582
	.byte	17,8,141,1,9,1,18
	.byte	'IfxCpu_CounterMode_normal',0,0,18
	.byte	'IfxCpu_CounterMode_task',0,1,0,32
	.byte	'IfxCpu_CounterMode',0,8,145,1,3
	.word	98656
	.byte	26,8,198,1,9,6,13
	.byte	'counter',0
	.word	9799
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	604
	.byte	1,2,35,4,0,32
	.byte	'IfxCpu_Counter',0,8,202,1,3
	.word	98745
	.byte	26,8,210,1,9,32,13
	.byte	'instruction',0
	.word	98745
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	98745
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	98745
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	98745
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	98745
	.byte	6,2,35,24,0,32
	.byte	'IfxCpu_Perf',0,8,217,1,3
	.word	98811
	.byte	17,23,66,9,1,18
	.byte	'IfxSrc_Tos_cpu0',0,0,18
	.byte	'IfxSrc_Tos_dma',0,1,18
	.byte	'IfxSrc_Tos_cpu1',0,2,18
	.byte	'IfxSrc_Tos_cpu2',0,3,18
	.byte	'IfxSrc_Tos_cpu3',0,4,18
	.byte	'IfxSrc_Tos_cpu4',0,5,18
	.byte	'IfxSrc_Tos_cpu5',0,6,0,32
	.byte	'IfxSrc_Tos',0,23,75,3
	.word	98929
	.byte	10
	.byte	'_Ifx_CBS_ACCEN0_Bits',0,24,68,16,4,11
	.byte	'EN0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	604
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	604
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	604
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	604
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	604
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	604
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	604
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	604
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	604
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	604
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	604
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_CBS_ACCEN0_Bits',0,24,102,3
	.word	99079
	.byte	10
	.byte	'_Ifx_CBS_ACCEN1_Bits',0,24,105,16,4,11
	.byte	'reserved_0',0,4
	.word	429
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CBS_ACCEN1_Bits',0,24,108,3
	.word	99636
	.byte	10
	.byte	'_Ifx_CBS_COMDATA_Bits',0,24,111,16,4,11
	.byte	'DATA',0,4
	.word	452
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CBS_COMDATA_Bits',0,24,114,3
	.word	99713
	.byte	10
	.byte	'_Ifx_CBS_ICTSA_Bits',0,24,117,16,4,11
	.byte	'ADDR',0,4
	.word	452
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CBS_ICTSA_Bits',0,24,120,3
	.word	99786
	.byte	10
	.byte	'_Ifx_CBS_ICTTA_Bits',0,24,123,16,4,11
	.byte	'ADDR',0,4
	.word	452
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CBS_ICTTA_Bits',0,24,126,3
	.word	99855
	.byte	10
	.byte	'_Ifx_CBS_IFSA_Bits',0,24,129,1,16,4,11
	.byte	'ADDR',0,4
	.word	452
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CBS_IFSA_Bits',0,24,132,1,3
	.word	99924
	.byte	10
	.byte	'_Ifx_CBS_IFSC_Bits',0,24,135,1,16,4,11
	.byte	'GO',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'OTGS',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'MODE',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'PRIO',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	452
	.byte	4,24,2,35,0,11
	.byte	'RSREP',0,4
	.word	452
	.byte	4,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	452
	.byte	4,16,2,35,0,11
	.byte	'BM0',0,4
	.word	452
	.byte	2,14,2,35,0,11
	.byte	'BM1',0,4
	.word	452
	.byte	2,12,2,35,0,11
	.byte	'BM2',0,4
	.word	452
	.byte	2,10,2,35,0,11
	.byte	'BM3',0,4
	.word	452
	.byte	2,8,2,35,0,11
	.byte	'BM4',0,4
	.word	452
	.byte	2,6,2,35,0,11
	.byte	'BM5',0,4
	.word	452
	.byte	2,4,2,35,0,11
	.byte	'BM6',0,4
	.word	452
	.byte	2,2,2,35,0,11
	.byte	'BM7',0,4
	.word	452
	.byte	2,0,2,35,0,0,32
	.byte	'Ifx_CBS_IFSC_Bits',0,24,152,1,3
	.word	99993
	.byte	10
	.byte	'_Ifx_CBS_INTMOD_Bits',0,24,155,1,16,4,11
	.byte	'SET_CRS',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'SET_CWS',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'SET_CS',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'CLR_CS',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'CHANNEL_P',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'CHANNEL',0,4
	.word	452
	.byte	3,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	452
	.byte	8,16,2,35,0,11
	.byte	'SET_INT_MOD',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'SET_INT_TRC',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'CLR_INT_TRC',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'TRC_MOD_P',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'TRC_MOD',0,4
	.word	452
	.byte	2,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'INT_MOD',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'INT_TRC',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	452
	.byte	6,0,2,35,0,0,32
	.byte	'Ifx_CBS_INTMOD_Bits',0,24,174,1,3
	.word	100290
	.byte	10
	.byte	'_Ifx_CBS_IOSR_Bits',0,24,177,1,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'CRSYNC',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'CWSYNC',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'CW_ACK',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'COM_SYNC',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'HOSTED',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	452
	.byte	3,20,2,35,0,11
	.byte	'CHANNEL',0,4
	.word	452
	.byte	3,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	452
	.byte	17,0,2,35,0,0,32
	.byte	'Ifx_CBS_IOSR_Bits',0,24,188,1,3
	.word	100699
	.byte	10
	.byte	'_Ifx_CBS_JDPID_Bits',0,24,191,1,16,4,11
	.byte	'MOD_REV',0,1
	.word	604
	.byte	8,0,2,35,0,11
	.byte	'MOD_TYPE',0,1
	.word	604
	.byte	8,0,2,35,1,11
	.byte	'MOD_NUMBER',0,2
	.word	621
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_CBS_JDPID_Bits',0,24,196,1,3
	.word	100930
	.byte	10
	.byte	'_Ifx_CBS_JTAGID_Bits',0,24,199,1,16,4,11
	.byte	'JTAG_ID',0,4
	.word	452
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CBS_JTAGID_Bits',0,24,202,1,3
	.word	101046
	.byte	10
	.byte	'_Ifx_CBS_OCNTRL_Bits',0,24,205,1,16,4,11
	.byte	'OC0_P',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'OC0',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'OC1_P',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'OC1',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'OC2_P',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'OC2',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'OC3_P',0,4
	.word	452
	.byte	1,25,2,35,0,11
	.byte	'OC3',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'OC4_P',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'OC4',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'OC5_P',0,4
	.word	452
	.byte	1,21,2,35,0,11
	.byte	'OC5',0,4
	.word	452
	.byte	1,20,2,35,0,11
	.byte	'WDTSUS_P',0,4
	.word	452
	.byte	1,19,2,35,0,11
	.byte	'WDTSUS',0,4
	.word	452
	.byte	1,18,2,35,0,11
	.byte	'STABLE_P',0,4
	.word	452
	.byte	1,17,2,35,0,11
	.byte	'STABLE',0,4
	.word	452
	.byte	1,16,2,35,0,11
	.byte	'OJC0_P',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'OJC0',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'OJC1_P',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'OJC1',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'OJC2_P',0,4
	.word	452
	.byte	1,11,2,35,0,11
	.byte	'OJC2',0,4
	.word	452
	.byte	1,10,2,35,0,11
	.byte	'OJC3_P',0,4
	.word	452
	.byte	1,9,2,35,0,11
	.byte	'OJC3',0,4
	.word	452
	.byte	1,8,2,35,0,11
	.byte	'OJC4_P',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'OJC4',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'OJC5_P',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'OJC5',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'OJC6_P',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'OJC6',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'OJC7_P',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'OJC7',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CBS_OCNTRL_Bits',0,24,239,1,3
	.word	101122
	.byte	10
	.byte	'_Ifx_CBS_OEC_Bits',0,24,242,1,16,4,11
	.byte	'PAT',0,4
	.word	452
	.byte	8,24,2,35,0,11
	.byte	'DS',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'OCO',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	452
	.byte	6,16,2,35,0,11
	.byte	'IF_LCK_P',0,4
	.word	452
	.byte	1,15,2,35,0,11
	.byte	'IF_LCK',0,4
	.word	452
	.byte	1,14,2,35,0,11
	.byte	'AUT_OK_P',0,4
	.word	452
	.byte	1,13,2,35,0,11
	.byte	'AUT_OK',0,4
	.word	452
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	452
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CBS_OEC_Bits',0,24,253,1,3
	.word	101719
	.byte	10
	.byte	'_Ifx_CBS_OIFM_Bits',0,24,128,2,16,4,11
	.byte	'DAPMODE',0,4
	.word	452
	.byte	3,29,2,35,0,11
	.byte	'DAPRST',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	452
	.byte	4,24,2,35,0,11
	.byte	'F_JTAG',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'N_JTAG',0,4
	.word	452
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	452
	.byte	2,20,2,35,0,11
	.byte	'PADCTL',0,4
	.word	452
	.byte	2,18,2,35,0,11
	.byte	'PADCTLI',0,4
	.word	452
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	452
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CBS_OIFM_Bits',0,24,139,2,3
	.word	101936
	.byte	10
	.byte	'_Ifx_CBS_OSTATE_Bits',0,24,142,2,16,4,11
	.byte	'OEN',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'OC0',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'OC1',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'OC2',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'ENIDIS',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'EECTRC',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'EECDIS',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'WDTSUS',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'HARR',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'OJC1',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'OJC2',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'OJC3',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'RSTCL0',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'RSTCL1',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'OJC6',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'RSTCL3',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'IF_LCK',0,1
	.word	604
	.byte	1,7,2,35,2,11
	.byte	'AUT_OK',0,1
	.word	604
	.byte	1,6,2,35,2,11
	.byte	'STABLE',0,1
	.word	604
	.byte	1,5,2,35,2,11
	.byte	'OCO',0,1
	.word	604
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	621
	.byte	12,0,2,35,2,0,32
	.byte	'Ifx_CBS_OSTATE_Bits',0,24,165,2,3
	.word	102167
	.byte	10
	.byte	'_Ifx_CBS_TCCB_Bits',0,24,168,2,16,4,11
	.byte	'C0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'C1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'C2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'C3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'C4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'C5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	429
	.byte	25,1,2,35,0,11
	.byte	'HSM',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_CBS_TCCB_Bits',0,24,178,2,3
	.word	102582
	.byte	10
	.byte	'_Ifx_CBS_TCCH_Bits',0,24,181,2,16,4,11
	.byte	'C0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'C1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'C2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'C3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'C4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'C5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	429
	.byte	25,1,2,35,0,11
	.byte	'HSM',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_CBS_TCCH_Bits',0,24,191,2,3
	.word	102756
	.byte	10
	.byte	'_Ifx_CBS_TCIP_Bits',0,24,194,2,16,4,11
	.byte	'P0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	429
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CBS_TCIP_Bits',0,24,205,2,3
	.word	102930
	.byte	10
	.byte	'_Ifx_CBS_TCM_Bits',0,24,208,2,16,4,11
	.byte	'BRK',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'SUS',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	604
	.byte	6,0,2,35,0,11
	.byte	'T0',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'T1',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'T2',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'T3',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	429
	.byte	20,0,2,35,0,0,32
	.byte	'Ifx_CBS_TCM_Bits',0,24,218,2,3
	.word	103117
	.byte	10
	.byte	'_Ifx_CBS_TCTGB_Bits',0,24,221,2,16,4,11
	.byte	'OTGB0',0,2
	.word	621
	.byte	16,0,2,35,0,11
	.byte	'OTGB1',0,2
	.word	621
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_CBS_TCTGB_Bits',0,24,225,2,3
	.word	103299
	.byte	10
	.byte	'_Ifx_CBS_TCTL_Bits',0,24,228,2,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'TL1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'TL2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'TL3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'TL4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'TL5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'TL6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'TL7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	429
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CBS_TCTL_Bits',0,24,239,2,3
	.word	103388
	.byte	10
	.byte	'_Ifx_CBS_TIPR_Bits',0,24,242,2,16,4,11
	.byte	'PIN0',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'PIN1',0,4
	.word	452
	.byte	4,24,2,35,0,11
	.byte	'PIN2',0,4
	.word	452
	.byte	4,20,2,35,0,11
	.byte	'PIN3',0,4
	.word	452
	.byte	4,16,2,35,0,11
	.byte	'PIN4',0,4
	.word	452
	.byte	4,12,2,35,0,11
	.byte	'PIN5',0,4
	.word	452
	.byte	4,8,2,35,0,11
	.byte	'PIN6',0,4
	.word	452
	.byte	4,4,2,35,0,11
	.byte	'PIN7',0,4
	.word	452
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_CBS_TIPR_Bits',0,24,252,2,3
	.word	103590
	.byte	10
	.byte	'_Ifx_CBS_TL1ST_Bits',0,24,255,2,16,4,11
	.byte	'C0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'C1',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'C2',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'C3',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'C4',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'C5',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	452
	.byte	18,8,2,35,0,11
	.byte	'M0',0,4
	.word	452
	.byte	1,7,2,35,0,11
	.byte	'M1',0,4
	.word	452
	.byte	1,6,2,35,0,11
	.byte	'M2',0,4
	.word	452
	.byte	1,5,2,35,0,11
	.byte	'HSS1',0,4
	.word	452
	.byte	1,4,2,35,0,11
	.byte	'HSS0',0,4
	.word	452
	.byte	1,3,2,35,0,11
	.byte	'DMA',0,4
	.word	452
	.byte	1,2,2,35,0,11
	.byte	'DMA1',0,4
	.word	452
	.byte	1,1,2,35,0,11
	.byte	'HSM',0,4
	.word	452
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CBS_TL1ST_Bits',0,24,144,3,3
	.word	103771
	.byte	10
	.byte	'_Ifx_CBS_TLC_Bits',0,24,147,3,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'TLSP1',0,4
	.word	452
	.byte	4,24,2,35,0,11
	.byte	'TLSP2',0,4
	.word	452
	.byte	4,20,2,35,0,11
	.byte	'TLSP3',0,4
	.word	452
	.byte	4,16,2,35,0,11
	.byte	'TLSP4',0,4
	.word	452
	.byte	4,12,2,35,0,11
	.byte	'TLSP5',0,4
	.word	452
	.byte	4,8,2,35,0,11
	.byte	'TLSP6',0,4
	.word	452
	.byte	4,4,2,35,0,11
	.byte	'TLSP7',0,4
	.word	452
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_CBS_TLC_Bits',0,24,157,3,3
	.word	104052
	.byte	10
	.byte	'_Ifx_CBS_TLCC_Bits',0,24,160,3,16,4,11
	.byte	'TGL',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'LE',0,4
	.word	452
	.byte	3,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	452
	.byte	1,24,2,35,0,11
	.byte	'CLR',0,4
	.word	452
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	452
	.byte	2,20,2,35,0,11
	.byte	'STOP',0,4
	.word	452
	.byte	2,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	452
	.byte	18,0,2,35,0,0,32
	.byte	'Ifx_CBS_TLCC_Bits',0,24,169,3,3
	.word	104244
	.byte	10
	.byte	'_Ifx_CBS_TLCHE_Bits',0,24,172,3,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'TL1',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'TL2',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'TL3',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	452
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_CBS_TLCHE_Bits',0,24,179,3,3
	.word	104425
	.byte	10
	.byte	'_Ifx_CBS_TLCHS_Bits',0,24,182,3,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	1,31,2,35,0,11
	.byte	'TL1',0,4
	.word	452
	.byte	1,30,2,35,0,11
	.byte	'TL2',0,4
	.word	452
	.byte	1,29,2,35,0,11
	.byte	'TL3',0,4
	.word	452
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	452
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_CBS_TLCHS_Bits',0,24,189,3,3
	.word	104569
	.byte	10
	.byte	'_Ifx_CBS_TLCV_Bits',0,24,192,3,16,4,11
	.byte	'CV',0,4
	.word	429
	.byte	31,1,2,35,0,11
	.byte	'SO',0,1
	.word	604
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_CBS_TLCV_Bits',0,24,196,3,3
	.word	104713
	.byte	10
	.byte	'_Ifx_CBS_TLS_Bits',0,24,199,3,16,4,11
	.byte	'reserved_0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'TL1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'TL2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'TL3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'TL4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'TL5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'TL6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'TL7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	429
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CBS_TLS_Bits',0,24,210,3,3
	.word	104794
	.byte	10
	.byte	'_Ifx_CBS_TLT_Bits',0,24,213,3,16,4,11
	.byte	'TGL',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'VTZ',0,4
	.word	452
	.byte	1,27,2,35,0,11
	.byte	'RL',0,4
	.word	452
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	452
	.byte	10,16,2,35,0,11
	.byte	'TIM',0,4
	.word	452
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CBS_TLT_Bits',0,24,220,3,3
	.word	104994
	.byte	10
	.byte	'_Ifx_CBS_TLTTH_Bits',0,24,223,3,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	2,30,2,35,0,11
	.byte	'TL1',0,4
	.word	452
	.byte	2,28,2,35,0,11
	.byte	'TL2',0,4
	.word	452
	.byte	2,26,2,35,0,11
	.byte	'TL3',0,4
	.word	452
	.byte	2,24,2,35,0,11
	.byte	'TL4',0,4
	.word	452
	.byte	2,22,2,35,0,11
	.byte	'TL5',0,4
	.word	452
	.byte	2,20,2,35,0,11
	.byte	'TL6',0,4
	.word	452
	.byte	2,18,2,35,0,11
	.byte	'TL7',0,4
	.word	452
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	452
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CBS_TLTTH_Bits',0,24,234,3,3
	.word	105126
	.byte	10
	.byte	'_Ifx_CBS_TOPPS_Bits',0,24,237,3,16,4,11
	.byte	'PIN0',0,4
	.word	452
	.byte	2,30,2,35,0,11
	.byte	'PIN1',0,4
	.word	452
	.byte	2,28,2,35,0,11
	.byte	'PIN2',0,4
	.word	452
	.byte	2,26,2,35,0,11
	.byte	'PIN3',0,4
	.word	452
	.byte	2,24,2,35,0,11
	.byte	'PIN4',0,4
	.word	452
	.byte	2,22,2,35,0,11
	.byte	'PIN5',0,4
	.word	452
	.byte	2,20,2,35,0,11
	.byte	'PIN6',0,4
	.word	452
	.byte	2,18,2,35,0,11
	.byte	'PIN7',0,4
	.word	452
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	452
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CBS_TOPPS_Bits',0,24,248,3,3
	.word	105331
	.byte	10
	.byte	'_Ifx_CBS_TOPR_Bits',0,24,251,3,16,4,11
	.byte	'PIN0',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'PIN1',0,4
	.word	452
	.byte	4,24,2,35,0,11
	.byte	'PIN2',0,4
	.word	452
	.byte	4,20,2,35,0,11
	.byte	'PIN3',0,4
	.word	452
	.byte	4,16,2,35,0,11
	.byte	'PIN4',0,4
	.word	452
	.byte	4,12,2,35,0,11
	.byte	'PIN5',0,4
	.word	452
	.byte	4,8,2,35,0,11
	.byte	'PIN6',0,4
	.word	452
	.byte	4,4,2,35,0,11
	.byte	'PIN7',0,4
	.word	452
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_CBS_TOPR_Bits',0,24,133,4,3
	.word	105537
	.byte	10
	.byte	'_Ifx_CBS_TRC_Bits',0,24,136,4,16,4,11
	.byte	'HALT',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'BRKOUT',0,4
	.word	452
	.byte	4,24,2,35,0,11
	.byte	'BT1',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	452
	.byte	11,12,2,35,0,11
	.byte	'BRKIN',0,4
	.word	452
	.byte	4,8,2,35,0,11
	.byte	'SUSIN',0,4
	.word	452
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	452
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_CBS_TRC_Bits',0,24,145,4,3
	.word	105718
	.byte	10
	.byte	'_Ifx_CBS_TREC_Bits',0,24,148,4,16,4,11
	.byte	'TR0EV',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	452
	.byte	4,24,2,35,0,11
	.byte	'TR2EV',0,4
	.word	452
	.byte	4,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	452
	.byte	4,16,2,35,0,11
	.byte	'TR4EV',0,4
	.word	452
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	452
	.byte	4,8,2,35,0,11
	.byte	'TR6EV',0,4
	.word	452
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	452
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_CBS_TREC_Bits',0,24,158,4,3
	.word	105897
	.byte	10
	.byte	'_Ifx_CBS_TRHSM_Bits',0,24,161,4,16,4,11
	.byte	'HALT',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'BRKOUT',0,4
	.word	452
	.byte	4,24,2,35,0,11
	.byte	'BT1',0,4
	.word	452
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	452
	.byte	11,12,2,35,0,11
	.byte	'BRKIN',0,4
	.word	452
	.byte	4,8,2,35,0,11
	.byte	'SUSIN',0,4
	.word	452
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	452
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_CBS_TRHSM_Bits',0,24,170,4,3
	.word	106109
	.byte	10
	.byte	'_Ifx_CBS_TRIG_Bits',0,24,173,4,16,4,11
	.byte	'TRGX_0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'TRGX_1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'TRGX_2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'TRGX_3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'TRGX_4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'TRGX_5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'TRGX_6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'TRGX_7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'TRGX_8',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'TRGX_9',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'TRGX_10',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'TRGX_11',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'TRGX_12',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'TRGX_13',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'TRGX_14',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'TRGX_15',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	604
	.byte	8,0,2,35,2,11
	.byte	'X',0,1
	.word	604
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_CBS_TRIG_Bits',0,24,193,4,3
	.word	106292
	.byte	10
	.byte	'_Ifx_CBS_TRIGC_Bits',0,24,196,4,16,4,11
	.byte	'TRGX_0',0,1
	.word	604
	.byte	1,7,2,35,0,11
	.byte	'TRGX_1',0,1
	.word	604
	.byte	1,6,2,35,0,11
	.byte	'TRGX_2',0,1
	.word	604
	.byte	1,5,2,35,0,11
	.byte	'TRGX_3',0,1
	.word	604
	.byte	1,4,2,35,0,11
	.byte	'TRGX_4',0,1
	.word	604
	.byte	1,3,2,35,0,11
	.byte	'TRGX_5',0,1
	.word	604
	.byte	1,2,2,35,0,11
	.byte	'TRGX_6',0,1
	.word	604
	.byte	1,1,2,35,0,11
	.byte	'TRGX_7',0,1
	.word	604
	.byte	1,0,2,35,0,11
	.byte	'TRGX_8',0,1
	.word	604
	.byte	1,7,2,35,1,11
	.byte	'TRGX_9',0,1
	.word	604
	.byte	1,6,2,35,1,11
	.byte	'TRGX_10',0,1
	.word	604
	.byte	1,5,2,35,1,11
	.byte	'TRGX_11',0,1
	.word	604
	.byte	1,4,2,35,1,11
	.byte	'TRGX_12',0,1
	.word	604
	.byte	1,3,2,35,1,11
	.byte	'TRGX_13',0,1
	.word	604
	.byte	1,2,2,35,1,11
	.byte	'TRGX_14',0,1
	.word	604
	.byte	1,1,2,35,1,11
	.byte	'TRGX_15',0,1
	.word	604
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	604
	.byte	8,0,2,35,2,11
	.byte	'X',0,1
	.word	604
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_CBS_TRIGC_Bits',0,24,216,4,3
	.word	106675
	.byte	10
	.byte	'_Ifx_CBS_TRIGS_Bits',0,24,219,4,16,4,11
	.byte	'BITNUM',0,4
	.word	452
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	452
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CBS_TRIGS_Bits',0,24,223,4,3
	.word	107060
	.byte	10
	.byte	'_Ifx_CBS_TRMC_Bits',0,24,226,4,16,4,11
	.byte	'reserved_0',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'BRKOUT',0,4
	.word	452
	.byte	4,24,2,35,0,11
	.byte	'SUSOUT',0,4
	.word	452
	.byte	4,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	452
	.byte	4,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	452
	.byte	4,12,2,35,0,11
	.byte	'BRKIN',0,4
	.word	452
	.byte	4,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	452
	.byte	8,0,2,35,0,0,32
	.byte	'Ifx_CBS_TRMC_Bits',0,24,235,4,3
	.word	107155
	.byte	10
	.byte	'_Ifx_CBS_TRMT_Bits',0,24,238,4,16,4,11
	.byte	'TG0',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'TG1',0,4
	.word	452
	.byte	4,24,2,35,0,11
	.byte	'TG2',0,4
	.word	452
	.byte	4,20,2,35,0,11
	.byte	'TG3',0,4
	.word	452
	.byte	4,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	452
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CBS_TRMT_Bits',0,24,245,4,3
	.word	107352
	.byte	10
	.byte	'_Ifx_CBS_TRSS_Bits',0,24,248,4,16,4,11
	.byte	'TT',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'IFS',0,4
	.word	452
	.byte	4,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	452
	.byte	8,16,2,35,0,11
	.byte	'SRC0',0,4
	.word	452
	.byte	4,12,2,35,0,11
	.byte	'SRC1',0,4
	.word	452
	.byte	4,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	452
	.byte	8,0,2,35,0,0,32
	.byte	'Ifx_CBS_TRSS_Bits',0,24,128,5,3
	.word	107488
	.byte	10
	.byte	'_Ifx_CBS_TRTGB_H_Bits',0,24,131,5,16,4,11
	.byte	'TG8',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'TG9',0,4
	.word	452
	.byte	4,24,2,35,0,11
	.byte	'TG10',0,4
	.word	452
	.byte	4,20,2,35,0,11
	.byte	'TG11',0,4
	.word	452
	.byte	4,16,2,35,0,11
	.byte	'TG12',0,4
	.word	452
	.byte	4,12,2,35,0,11
	.byte	'TG13',0,4
	.word	452
	.byte	4,8,2,35,0,11
	.byte	'TG14',0,4
	.word	452
	.byte	4,4,2,35,0,11
	.byte	'TG15',0,4
	.word	452
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_CBS_TRTGB_H_Bits',0,24,141,5,3
	.word	107647
	.byte	10
	.byte	'_Ifx_CBS_TRTGB_L_Bits',0,24,144,5,16,4,11
	.byte	'TG0',0,4
	.word	452
	.byte	4,28,2,35,0,11
	.byte	'TG1',0,4
	.word	452
	.byte	4,24,2,35,0,11
	.byte	'TG2',0,4
	.word	452
	.byte	4,20,2,35,0,11
	.byte	'TG3',0,4
	.word	452
	.byte	4,16,2,35,0,11
	.byte	'TG4',0,4
	.word	452
	.byte	4,12,2,35,0,11
	.byte	'TG5',0,4
	.word	452
	.byte	4,8,2,35,0,11
	.byte	'TG6',0,4
	.word	452
	.byte	4,4,2,35,0,11
	.byte	'TG7',0,4
	.word	452
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_CBS_TRTGB_L_Bits',0,24,154,5,3
	.word	107832
	.byte	12,24,162,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99079
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_ACCEN0',0,24,167,5,3
	.word	108011
	.byte	12,24,170,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99636
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_ACCEN1',0,24,175,5,3
	.word	108075
	.byte	12,24,178,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99713
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_COMDATA',0,24,183,5,3
	.word	108139
	.byte	12,24,186,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99786
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_ICTSA',0,24,191,5,3
	.word	108204
	.byte	12,24,194,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99855
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_ICTTA',0,24,199,5,3
	.word	108267
	.byte	12,24,202,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99924
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_IFSA',0,24,207,5,3
	.word	108330
	.byte	12,24,210,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99993
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_IFSC',0,24,215,5,3
	.word	108392
	.byte	12,24,218,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100290
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_INTMOD',0,24,223,5,3
	.word	108454
	.byte	12,24,226,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100699
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_IOSR',0,24,231,5,3
	.word	108518
	.byte	12,24,234,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100930
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_JDPID',0,24,239,5,3
	.word	108580
	.byte	12,24,242,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101046
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_JTAGID',0,24,247,5,3
	.word	108643
	.byte	12,24,250,5,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101122
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_OCNTRL',0,24,255,5,3
	.word	108707
	.byte	12,24,130,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101719
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_OEC',0,24,135,6,3
	.word	108771
	.byte	12,24,138,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101936
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_OIFM',0,24,143,6,3
	.word	108832
	.byte	12,24,146,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102167
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_OSTATE',0,24,151,6,3
	.word	108894
	.byte	12,24,154,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102582
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TCCB',0,24,159,6,3
	.word	108958
	.byte	12,24,162,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102756
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TCCH',0,24,167,6,3
	.word	109020
	.byte	12,24,170,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102930
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TCIP',0,24,175,6,3
	.word	109082
	.byte	12,24,178,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103117
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TCM',0,24,183,6,3
	.word	109144
	.byte	12,24,186,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103299
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TCTGB',0,24,191,6,3
	.word	109205
	.byte	12,24,194,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103388
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TCTL',0,24,199,6,3
	.word	109268
	.byte	12,24,202,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103590
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TIPR',0,24,207,6,3
	.word	109330
	.byte	12,24,210,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103771
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TL1ST',0,24,215,6,3
	.word	109392
	.byte	12,24,218,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104052
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TLC',0,24,223,6,3
	.word	109455
	.byte	12,24,226,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104244
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TLCC',0,24,231,6,3
	.word	109516
	.byte	12,24,234,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104425
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TLCHE',0,24,239,6,3
	.word	109578
	.byte	12,24,242,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104569
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TLCHS',0,24,247,6,3
	.word	109641
	.byte	12,24,250,6,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104713
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TLCV',0,24,255,6,3
	.word	109704
	.byte	12,24,130,7,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104794
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TLS',0,24,135,7,3
	.word	109766
	.byte	12,24,138,7,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104994
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TLT',0,24,143,7,3
	.word	109827
	.byte	12,24,146,7,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105126
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TLTTH',0,24,151,7,3
	.word	109888
	.byte	12,24,154,7,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105331
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TOPPS',0,24,159,7,3
	.word	109951
	.byte	12,24,162,7,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105537
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TOPR',0,24,167,7,3
	.word	110014
	.byte	12,24,170,7,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105718
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TRC',0,24,175,7,3
	.word	110076
	.byte	12,24,178,7,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105897
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TREC',0,24,183,7,3
	.word	110137
	.byte	12,24,186,7,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106109
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TRHSM',0,24,191,7,3
	.word	110199
	.byte	12,24,194,7,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106292
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TRIG',0,24,199,7,3
	.word	110262
	.byte	12,24,202,7,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106675
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TRIGC',0,24,207,7,3
	.word	110324
	.byte	12,24,210,7,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107060
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TRIGS',0,24,215,7,3
	.word	110387
	.byte	12,24,218,7,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107155
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TRMC',0,24,223,7,3
	.word	110450
	.byte	12,24,226,7,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107352
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TRMT',0,24,231,7,3
	.word	110512
	.byte	12,24,234,7,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107488
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TRSS',0,24,239,7,3
	.word	110574
	.byte	12,24,242,7,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107647
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TRTGB_H',0,24,247,7,3
	.word	110636
	.byte	12,24,250,7,9,4,13
	.byte	'U',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107832
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CBS_TRTGB_L',0,24,255,7,3
	.word	110701
	.byte	10
	.byte	'_Ifx_CBS_TRTGB',0,24,139,8,25,8,13
	.byte	'L',0
	.word	110701
	.byte	4,2,35,0,13
	.byte	'H',0
	.word	110636
	.byte	4,2,35,4,0,14
	.word	110766
	.byte	32
	.byte	'Ifx_CBS_TRTGB',0,24,143,8,3
	.word	110810
	.byte	17,12,157,1,9,1,18
	.byte	'IfxStm_Comparator_0',0,0,18
	.byte	'IfxStm_Comparator_1',0,1,0,32
	.byte	'IfxStm_Comparator',0,12,161,1,3
	.word	110838
	.byte	17,12,165,1,9,1,18
	.byte	'IfxStm_ComparatorInterrupt_ir0',0,0,18
	.byte	'IfxStm_ComparatorInterrupt_ir1',0,1,0,32
	.byte	'IfxStm_ComparatorInterrupt',0,12,169,1,3
	.word	110916
	.byte	17,12,173,1,9,1,18
	.byte	'IfxStm_ComparatorOffset_0',0,0,18
	.byte	'IfxStm_ComparatorOffset_1',0,1,18
	.byte	'IfxStm_ComparatorOffset_2',0,2,18
	.byte	'IfxStm_ComparatorOffset_3',0,3,18
	.byte	'IfxStm_ComparatorOffset_4',0,4,18
	.byte	'IfxStm_ComparatorOffset_5',0,5,18
	.byte	'IfxStm_ComparatorOffset_6',0,6,18
	.byte	'IfxStm_ComparatorOffset_7',0,7,18
	.byte	'IfxStm_ComparatorOffset_8',0,8,18
	.byte	'IfxStm_ComparatorOffset_9',0,9,18
	.byte	'IfxStm_ComparatorOffset_10',0,10,18
	.byte	'IfxStm_ComparatorOffset_11',0,11,18
	.byte	'IfxStm_ComparatorOffset_12',0,12,18
	.byte	'IfxStm_ComparatorOffset_13',0,13,18
	.byte	'IfxStm_ComparatorOffset_14',0,14,18
	.byte	'IfxStm_ComparatorOffset_15',0,15,18
	.byte	'IfxStm_ComparatorOffset_16',0,16,18
	.byte	'IfxStm_ComparatorOffset_17',0,17,18
	.byte	'IfxStm_ComparatorOffset_18',0,18,18
	.byte	'IfxStm_ComparatorOffset_19',0,19,18
	.byte	'IfxStm_ComparatorOffset_20',0,20,18
	.byte	'IfxStm_ComparatorOffset_21',0,21,18
	.byte	'IfxStm_ComparatorOffset_22',0,22,18
	.byte	'IfxStm_ComparatorOffset_23',0,23,18
	.byte	'IfxStm_ComparatorOffset_24',0,24,18
	.byte	'IfxStm_ComparatorOffset_25',0,25,18
	.byte	'IfxStm_ComparatorOffset_26',0,26,18
	.byte	'IfxStm_ComparatorOffset_27',0,27,18
	.byte	'IfxStm_ComparatorOffset_28',0,28,18
	.byte	'IfxStm_ComparatorOffset_29',0,29,18
	.byte	'IfxStm_ComparatorOffset_30',0,30,18
	.byte	'IfxStm_ComparatorOffset_31',0,31,0,32
	.byte	'IfxStm_ComparatorOffset',0,12,207,1,3
	.word	111025
	.byte	17,12,211,1,9,1,18
	.byte	'IfxStm_ComparatorSize_1Bit',0,0,18
	.byte	'IfxStm_ComparatorSize_2Bits',0,1,18
	.byte	'IfxStm_ComparatorSize_3Bits',0,2,18
	.byte	'IfxStm_ComparatorSize_4Bits',0,3,18
	.byte	'IfxStm_ComparatorSize_5Bits',0,4,18
	.byte	'IfxStm_ComparatorSize_6Bits',0,5,18
	.byte	'IfxStm_ComparatorSize_7Bits',0,6,18
	.byte	'IfxStm_ComparatorSize_8Bits',0,7,18
	.byte	'IfxStm_ComparatorSize_9Bits',0,8,18
	.byte	'IfxStm_ComparatorSize_10Bits',0,9,18
	.byte	'IfxStm_ComparatorSize_11Bits',0,10,18
	.byte	'IfxStm_ComparatorSize_12Bits',0,11,18
	.byte	'IfxStm_ComparatorSize_13Bits',0,12,18
	.byte	'IfxStm_ComparatorSize_14Bits',0,13,18
	.byte	'IfxStm_ComparatorSize_15Bits',0,14,18
	.byte	'IfxStm_ComparatorSize_16Bits',0,15,18
	.byte	'IfxStm_ComparatorSize_17Bits',0,16,18
	.byte	'IfxStm_ComparatorSize_18Bits',0,17,18
	.byte	'IfxStm_ComparatorSize_19Bits',0,18,18
	.byte	'IfxStm_ComparatorSize_20Bits',0,19,18
	.byte	'IfxStm_ComparatorSize_21Bits',0,20,18
	.byte	'IfxStm_ComparatorSize_22Bits',0,21,18
	.byte	'IfxStm_ComparatorSize_23Bits',0,22,18
	.byte	'IfxStm_ComparatorSize_24Bits',0,23,18
	.byte	'IfxStm_ComparatorSize_25Bits',0,24,18
	.byte	'IfxStm_ComparatorSize_26Bits',0,25,18
	.byte	'IfxStm_ComparatorSize_27Bits',0,26,18
	.byte	'IfxStm_ComparatorSize_28Bits',0,27,18
	.byte	'IfxStm_ComparatorSize_29Bits',0,28,18
	.byte	'IfxStm_ComparatorSize_30Bits',0,29,18
	.byte	'IfxStm_ComparatorSize_31Bits',0,30,18
	.byte	'IfxStm_ComparatorSize_32Bits',0,31,0,32
	.byte	'IfxStm_ComparatorSize',0,12,245,1,3
	.word	111983
	.byte	17,12,250,1,9,1,18
	.byte	'IfxStm_SleepMode_enable',0,0,18
	.byte	'IfxStm_SleepMode_disable',0,1,0,32
	.byte	'IfxStm_SleepMode',0,12,254,1,3
	.word	113003
	.byte	17,12,130,2,9,1,18
	.byte	'IfxStm_SuspendMode_none',0,0,18
	.byte	'IfxStm_SuspendMode_hard',0,1,18
	.byte	'IfxStm_SuspendMode_soft',0,2,0,32
	.byte	'IfxStm_SuspendMode',0,12,135,2,3
	.word	113089
.L80:
	.byte	15,88
	.word	14009
	.byte	16,10,0,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L12:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,11,1,0,0,20,38,0,73,19,0,0,21,46,1,3,8,54,15,39,12,63,12,60
	.byte	12,0,0,22,5,0,73,19,0,0,23,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,24,5,0,3,8,73,19,0,0,25,46,0,3,8
	.byte	54,15,39,12,63,12,60,12,0,0,26,19,1,58,15,59,15,57,15,11,15,0,0,27,46,1,49,19,0,0,28,5,0,49,19,0,0,29
	.byte	29,1,49,19,0,0,30,11,0,49,19,0,0,31,11,1,49,19,0,0,32,22,0,3,8,58,15,59,15,57,15,73,19,0,0,33,21,0,54
	.byte	15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L13:
	.word	.L93-.L92
.L92:
	.half	3
	.word	.L95-.L94
.L94:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxScuWdt.h',0,2,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxPort.h',0,4,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,2,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,5,0,0
	.byte	'IfxSrc.h',0,6,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxStm.h',0,7,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'Bsp.h',0,8,0,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.h',0,0,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'Ifx_TypesReg.h',0,3,0,0
	.byte	'IfxScu_cfg.h',0,5,0,0
	.byte	'IfxSmu_regdef.h',0,3,0,0
	.byte	'IfxSrc_cfg.h',0,5,0,0
	.byte	'IfxCbs_regdef.h',0,3,0,0,0
.L95:
.L93:
	.sdecl	'.debug_info',debug,cluster('DateTime_set')
	.sect	'.debug_info'
.L14:
	.word	508
	.half	3
	.word	.L15
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L17,.L16
	.byte	2
	.word	.L10
	.byte	3
	.byte	'DateTime_set',0,1,95,6,1,1,1
	.word	.L9,.L33,.L8
	.byte	4
	.byte	'dt',0,1,95,33
	.word	.L34,.L35
	.byte	5
	.word	.L9,.L33
	.byte	6
	.word	.L36,.L9,.L3
	.byte	7
	.word	.L37,.L9,.L3
	.byte	8
	.byte	'stmNow',0,2,190,1,18
	.word	.L38,.L39
	.byte	6
	.word	.L40,.L9,.L41
	.byte	7
	.word	.L42,.L9,.L41
	.byte	6
	.word	.L43,.L9,.L41
	.byte	7
	.word	.L44,.L9,.L41
	.byte	6
	.word	.L45,.L9,.L46
	.byte	7
	.word	.L47,.L9,.L46
	.byte	8
	.byte	'reg',0,3,235,5,17
	.word	.L48,.L49
	.byte	0,0,0,0,0,0,6
	.word	.L50,.L41,.L51
	.byte	9
	.word	.L52,.L53
	.byte	7
	.word	.L54,.L41,.L51
	.byte	8
	.byte	'result',0,4,194,4,12
	.word	.L55,.L56
	.byte	0,0,6
	.word	.L57,.L51,.L3
	.byte	9
	.word	.L58,.L59
	.byte	7
	.word	.L60,.L51,.L3
	.byte	6
	.word	.L61,.L51,.L3
	.byte	9
	.word	.L62,.L63
	.byte	10
	.word	.L64,.L51,.L3
	.byte	0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DateTime_set')
	.sect	'.debug_abbrev'
.L15:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,11,1,49,16,17,1,18,1,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,9,5,0,49,16,2,6
	.byte	0,0,10,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('DateTime_set')
	.sect	'.debug_line'
.L16:
	.word	.L97-.L96
.L96:
	.half	3
	.word	.L99-.L98
.L98:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std',0,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c',0,0,0,0
	.byte	'Bsp.h',0,1,0,0
	.byte	'IfxCpu.h',0,2,0,0
	.byte	'IfxStm.h',0,3,0,0,0
.L99:
	.byte	4,3,5,19,7,0,5,2
	.word	.L9
	.byte	3,235,5,1,5,17,9
	.half	.L89-.L9
	.byte	3,1,1,5,21,9
	.half	.L90-.L89
	.byte	1,5,14,9
	.half	.L46-.L90
	.byte	3,8,1,5,10,9
	.half	.L100-.L46
	.byte	3,1,1,4,4,5,24,9
	.half	.L41-.L100
	.byte	3,206,126,1,4,3,5,5,9
	.half	.L51-.L41
	.byte	3,196,3,1,5,17,7,9
	.half	.L101-.L51
	.byte	3,2,1,4,1,5,42,9
	.half	.L3-.L101
	.byte	3,218,120,1,5,35,9
	.half	.L102-.L3
	.byte	1,5,44,3,127,1,5,35,9
	.half	.L103-.L102
	.byte	1,5,24,3,126,1,5,54,9
	.half	.L104-.L103
	.byte	1,5,52,9
	.half	.L105-.L104
	.byte	1,5,34,9
	.half	.L91-.L105
	.byte	1,5,32,9
	.half	.L106-.L91
	.byte	3,2,1,9
	.half	.L107-.L106
	.byte	3,1,1,5,22,3,1,1,5,1,9
	.half	.L108-.L107
	.byte	3,1,1,7,9
	.half	.L18-.L108
	.byte	0,1,1
.L97:
	.sdecl	'.debug_ranges',debug,cluster('DateTime_set')
	.sect	'.debug_ranges'
.L17:
	.word	-1,.L9,0,.L18-.L9,0,0
	.sdecl	'.debug_info',debug,cluster('DateTime_get')
	.sect	'.debug_info'
.L19:
	.word	524
	.half	3
	.word	.L20
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L22,.L21
	.byte	2
	.word	.L10
	.byte	3
	.byte	'DateTime_get',0,1,82,6,1,1,1
	.word	.L5,.L65,.L4
	.byte	4
	.byte	'dt',0,1,82,33
	.word	.L34,.L66
	.byte	5
	.word	.L5,.L65
	.byte	6
	.byte	'seconds',0,1,84,12
	.word	.L67,.L68
	.byte	7
	.word	.L36,.L69,.L2
	.byte	8
	.word	.L37,.L69,.L2
	.byte	6
	.byte	'stmNow',0,2,190,1,18
	.word	.L38,.L70
	.byte	7
	.word	.L40,.L69,.L71
	.byte	8
	.word	.L42,.L69,.L71
	.byte	7
	.word	.L43,.L69,.L71
	.byte	8
	.word	.L44,.L69,.L71
	.byte	7
	.word	.L45,.L69,.L72
	.byte	8
	.word	.L47,.L69,.L72
	.byte	6
	.byte	'reg',0,3,235,5,17
	.word	.L48,.L73
	.byte	0,0,0,0,0,0,7
	.word	.L50,.L71,.L74
	.byte	9
	.word	.L52,.L75
	.byte	10
	.word	.L54,.L76
	.byte	6
	.byte	'result',0,4,194,4,12
	.word	.L55,.L77
	.byte	0,0,7
	.word	.L57,.L74,.L2
	.byte	9
	.word	.L58,.L78
	.byte	8
	.word	.L60,.L74,.L2
	.byte	7
	.word	.L61,.L74,.L2
	.byte	9
	.word	.L62,.L79
	.byte	11
	.word	.L64,.L74,.L2
	.byte	0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DateTime_get')
	.sect	'.debug_abbrev'
.L20:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,17,1,18,1,0,0,9,5,0,49,16,2
	.byte	6,0,0,10,11,1,49,16,85,6,0,0,11,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('DateTime_get')
	.sect	'.debug_line'
.L21:
	.word	.L110-.L109
.L109:
	.half	3
	.word	.L112-.L111
.L111:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std',0,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c',0,0,0,0
	.byte	'Bsp.h',0,1,0,0
	.byte	'IfxCpu.h',0,2,0,0
	.byte	'IfxStm.h',0,3,0,0,0
.L112:
	.byte	5,6,7,0,5,2
	.word	.L5
	.byte	3,209,0,1,4,3,5,19,9
	.half	.L69-.L5
	.byte	3,154,5,1,5,17,9
	.half	.L81-.L69
	.byte	3,1,1,5,21,9
	.half	.L82-.L81
	.byte	1,5,14,9
	.half	.L72-.L82
	.byte	3,8,1,5,10,9
	.half	.L113-.L72
	.byte	3,1,1,4,4,5,24,9
	.half	.L71-.L113
	.byte	3,206,126,1,4,3,5,5,9
	.half	.L74-.L71
	.byte	3,196,3,1,5,17,7,9
	.half	.L84-.L74
	.byte	3,2,1,4,1,5,39,9
	.half	.L2-.L84
	.byte	3,202,120,1,5,37,9
	.half	.L114-.L2
	.byte	1,5,29,9
	.half	.L85-.L114
	.byte	3,2,1,5,27,9
	.half	.L87-.L85
	.byte	1,5,29,9
	.half	.L115-.L87
	.byte	3,1,1,5,27,9
	.half	.L116-.L115
	.byte	1,5,17,1,5,29,9
	.half	.L117-.L116
	.byte	3,1,1,5,27,9
	.half	.L118-.L117
	.byte	1,5,31,9
	.half	.L119-.L118
	.byte	3,1,1,5,17,1,9
	.half	.L88-.L119
	.byte	3,1,1,5,1,9
	.half	.L120-.L88
	.byte	3,1,1,7,9
	.half	.L23-.L120
	.byte	0,1,1
.L110:
	.sdecl	'.debug_ranges',debug,cluster('DateTime_get')
	.sect	'.debug_ranges'
.L22:
	.word	-1,.L5,0,.L23-.L5,0,0
.L76:
	.word	-1,.L5,.L71-.L5,.L74-.L5,-1,.L7,0,.L28-.L7,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_3')
	.sect	'.debug_info'
.L24:
	.word	199
	.half	3
	.word	.L25
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L27,.L26
	.byte	2
	.word	.L10
	.byte	3
	.byte	'.cocofun_3',0,1,82,6,1
	.word	.L7,.L28,.L6
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_3')
	.sect	'.debug_abbrev'
.L25:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_3')
	.sect	'.debug_line'
.L26:
	.word	.L122-.L121
.L121:
	.half	3
	.word	.L124-.L123
.L123:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp',0,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c',0,0,0,0
	.byte	'IfxStm.h',0,1,0,0
	.byte	'Bsp.h',0,2,0,0,0
.L124:
	.byte	4,2,5,24,7,0,5,2
	.word	.L7
	.byte	3,195,4,1,4,3,5,68,9
	.half	.L125-.L7
	.byte	3,254,124,1,4,2,5,32,9
	.half	.L126-.L125
	.byte	3,131,3,1,4,3,5,66,9
	.half	.L83-.L126
	.byte	3,253,124,1,9
	.half	.L28-.L83
	.byte	0,1,1,4,2,5,24,0,5,2
	.word	.L7
	.byte	3,195,4,1,4,3,5,68,9
	.half	.L125-.L7
	.byte	3,254,124,1,4,2,5,32,9
	.half	.L126-.L125
	.byte	3,131,3,1,4,3,5,66,9
	.half	.L83-.L126
	.byte	3,253,124,1,9
	.half	.L28-.L83
	.byte	0,1,1
.L122:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_3')
	.sect	'.debug_ranges'
.L27:
	.word	-1,.L7,0,.L28-.L7,0,0
	.sdecl	'.debug_info',debug,cluster('TimeConst')
	.sect	'.debug_info'
.L29:
	.word	187
	.half	3
	.word	.L30
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1,2
	.word	.L10
	.byte	3
	.byte	'TimeConst',0,17,75,25
	.word	.L80
	.byte	5,3
	.word	TimeConst
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('TimeConst')
	.sect	'.debug_abbrev'
.L30:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('g_DateTimeOffset')
	.sect	'.debug_info'
.L31:
	.word	195
	.half	3
	.word	.L32
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1,2
	.word	.L10
	.byte	3
	.byte	'g_DateTimeOffset',0,17,78,8
	.word	.L67
	.byte	1,5,3
	.word	g_DateTimeOffset
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('g_DateTimeOffset')
	.sect	'.debug_abbrev'
.L32:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_3')
	.sect	'.debug_loc'
.L6:
	.word	-1,.L7,0,.L28-.L7
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DateTime_get')
	.sect	'.debug_loc'
.L4:
	.word	-1,.L5,0,.L65-.L5
	.half	2
	.byte	138,0
	.word	0,0
.L66:
	.word	-1,.L5,0,.L74-.L5
	.half	1
	.byte	100
	.word	.L69-.L5,.L74-.L5
	.half	1
	.byte	111
	.word	.L7-.L5,.L28-.L5
	.half	1
	.byte	111
	.word	.L7-.L5,.L28-.L5
	.half	1
	.byte	100
	.word	.L84-.L5,.L65-.L5
	.half	1
	.byte	111
	.word	.L84-.L5,.L85-.L5
	.half	1
	.byte	100
	.word	0,0
.L78:
	.word	0,0
.L79:
	.word	0,0
.L73:
	.word	-1,.L5,.L81-.L5,.L82-.L5
	.half	1
	.byte	95
	.word	0,0
.L77:
	.word	-1,.L5,.L83-.L5,.L28-.L5
	.half	2
	.byte	144,32
	.word	.L84-.L5,.L85-.L5
	.half	2
	.byte	144,32
	.word	0,0
.L68:
	.word	-1,.L5,.L87-.L5,.L88-.L5
	.half	1
	.byte	82
	.word	0,0
.L75:
	.word	0,0
.L70:
	.word	-1,.L5,.L86-.L5,.L28-.L5
	.half	2
	.byte	144,34
	.word	.L84-.L5,.L85-.L5
	.half	2
	.byte	144,34
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DateTime_set')
	.sect	'.debug_loc'
.L8:
	.word	-1,.L9,0,.L33-.L9
	.half	2
	.byte	138,0
	.word	0,0
.L35:
	.word	-1,.L9,.L7-.L9,.L28-.L9
	.half	1
	.byte	100
	.word	0,.L91-.L9
	.half	1
	.byte	100
	.word	0,0
.L59:
	.word	0,0
.L63:
	.word	0,0
.L49:
	.word	-1,.L9,.L89-.L9,.L90-.L9
	.half	1
	.byte	95
	.word	0,0
.L56:
	.word	-1,.L9,.L83-.L9,.L28-.L9
	.half	2
	.byte	144,32
	.word	.L51-.L9,.L91-.L9
	.half	2
	.byte	144,32
	.word	0,0
.L53:
	.word	0,0
.L39:
	.word	-1,.L9,.L86-.L9,.L28-.L9
	.half	2
	.byte	144,34
	.word	.L51-.L9,.L91-.L9
	.half	2
	.byte	144,34
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L127:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('DateTime_get')
	.sect	'.debug_frame'
	.word	12
	.word	.L127,.L5,.L65-.L5
	.sdecl	'.debug_frame',debug,cluster('DateTime_set')
	.sect	'.debug_frame'
	.word	12
	.word	.L127,.L9,.L33-.L9
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L128:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_3')
	.sect	'.debug_frame'
	.word	24
	.word	.L128,.L7,.L28-.L7
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
